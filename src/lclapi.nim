#[ 
   The code is automatically generated by the genBind tool. 
   Author: ying32
   https://github.com/ying32  
]#

{.deadCodeElim: on.}

# DLL
when defined(windows):
  {.push, callconv: stdcall.}
else:
  {.push, callconv: cdecl.}

when defined(windows):
  const dllname = "liblcl.dll"
elif defined(macosx):
  const dllname = "liblcl.dylib"
else:
  const dllname = "liblcl.so"    

import types


proc DLibStringEncoding*(): TStringEncoding {.importc: "DLibStringEncoding", dynlib: dllname.}
proc DLibVersion*(): uint32 {.importc: "DLibVersion", dynlib: dllname.}
proc DSysLocale*(AInfo: var TSysLocale) {.importc: "DSysLocale", dynlib: dllname.}
proc Application_Instance*(): pointer {.importc: "Application_Instance", dynlib: dllname.}
proc Mouse_Instance*(): pointer {.importc: "Mouse_Instance", dynlib: dllname.}
proc Screen_Instance*(): pointer {.importc: "Screen_Instance", dynlib: dllname.}
proc DTextToShortCut*(AText: cstring): TShortCut {.importc: "DTextToShortCut", dynlib: dllname.}
proc DShortCutToText*(AVal: TShortCut): cstring {.importc: "DShortCutToText", dynlib: dllname.}
proc Clipboard_Instance*(): pointer {.importc: "Clipboard_Instance", dynlib: dllname.}
proc DSetClipboard*(ANewClipboard: pointer): pointer {.importc: "DSetClipboard", dynlib: dllname.}
when not defined(windows):
  proc DSendMessage*(hWd: HWND, msg: uint32, wParam: WPARAM, lParam: LPARAM): LRESULT {.importc: "DSendMessage", dynlib: dllname.}
when not defined(windows):
  proc DPostMessage*(hWd: HWND, msg: uint32, wParam: WPARAM, lParam: LPARAM): bool {.importc: "DPostMessage", dynlib: dllname.}
when not defined(windows):
  proc DIsIconic*(hWnd: HWND): bool {.importc: "DIsIconic", dynlib: dllname.}
when not defined(windows):
  proc DIsWindow*(hWnd: HWND): bool {.importc: "DIsWindow", dynlib: dllname.}
when not defined(windows):
  proc DIsZoomed*(hWnd: HWND): bool {.importc: "DIsZoomed", dynlib: dllname.}
when not defined(windows):
  proc DIsWindowVisible*(hWnd: HWND): bool {.importc: "DIsWindowVisible", dynlib: dllname.}
when not defined(windows):
  proc DGetDC*(hWnd: HWND): HDC {.importc: "DGetDC", dynlib: dllname.}
when not defined(windows):
  proc DReleaseDC*(hWnd: HWND, dc: HDC): int32 {.importc: "DReleaseDC", dynlib: dllname.}
when not defined(windows):
  proc DSetForegroundWindow*(hWnd: HWND): bool {.importc: "DSetForegroundWindow", dynlib: dllname.}
when not defined(windows):
  proc DRegisterClipboardFormat*(AFormat: cstring): TClipboardFormat {.importc: "DRegisterClipboardFormat", dynlib: dllname.}
when not defined(windows):
  proc DWindowFromPoint*(point: var TPoint): HWND {.importc: "DWindowFromPoint", dynlib: dllname.}
proc SetEventCallback*(APtr: pointer) {.importc: "SetEventCallback", dynlib: dllname.}
proc SetMessageCallback*(APtr: pointer) {.importc: "SetMessageCallback", dynlib: dllname.}
proc SetThreadSyncCallback*(APtr: pointer) {.importc: "SetThreadSyncCallback", dynlib: dllname.}
proc SetExceptionHandlerCallback*(APtr: pointer) {.importc: "SetExceptionHandlerCallback", dynlib: dllname.}
proc DGetStringArrOf*(P: pointer, AIndex: int): cstring {.importc: "DGetStringArrOf", dynlib: dllname.}
proc DStrLen*(p: cstring): int {.importc: "DStrLen", dynlib: dllname.}
proc DMove*(Src: pointer, Dest: pointer, Len: int) {.importc: "DMove", dynlib: dllname.}
proc DShowMessage*(AMsg: cstring) {.importc: "DShowMessage", dynlib: dllname.}
proc DGetMainInstance*(): HINST {.importc: "DGetMainInstance", dynlib: dllname.}
proc DMessageDlg*(Msg: cstring, DlgType: TMsgDlgType, Buttons: TMsgDlgButtons, HelpCtx: int32): int32 {.importc: "DMessageDlg", dynlib: dllname.}
proc DSynchronize*(AUseMsg: bool) {.importc: "DSynchronize", dynlib: dllname.}
proc DMainThreadId*(): TThreadID {.importc: "DMainThreadId", dynlib: dllname.}
proc DCurrentThreadId*(): TThreadID {.importc: "DCurrentThreadId", dynlib: dllname.}
proc DSysOpen*(FileName: cstring) {.importc: "DSysOpen", dynlib: dllname.}
proc DExtractFilePath*(AFileName: cstring): cstring {.importc: "DExtractFilePath", dynlib: dllname.}
proc DFileExists*(AFileName: cstring): bool {.importc: "DFileExists", dynlib: dllname.}
proc DSelectDirectory1*(Directory: var cstring, Options: TSelectDirOpts, HelpCtx: int32): bool {.importc: "DSelectDirectory1", dynlib: dllname.}
proc DSelectDirectory2*(Caption: cstring, Root: cstring, AShowHidden: bool, Directory: var cstring): bool {.importc: "DSelectDirectory2", dynlib: dllname.}
proc DInputBox*(ACaption: cstring, APrompt: cstring, ADefault: cstring): cstring {.importc: "DInputBox", dynlib: dllname.}
proc DInputQuery*(ACaption: cstring, APrompt: cstring, Value: cstring, AOut: var cstring): bool {.importc: "DInputQuery", dynlib: dllname.}
proc DPasswordBox*(ACaption: cstring, APrompt: cstring): cstring {.importc: "DPasswordBox", dynlib: dllname.}
proc DInputCombo*(ACaption: cstring, APrompt: cstring, AList: pointer): int32 {.importc: "DInputCombo", dynlib: dllname.}
proc DInputComboEx*(ACaption: cstring, APrompt: cstring, AList: pointer, AllowCustomText: bool): cstring {.importc: "DInputComboEx", dynlib: dllname.}
when defined(windows):
  proc DCreateURLShortCut*(ADestPath: cstring, AShortCutName: cstring, AURL: cstring) {.importc: "DCreateURLShortCut", dynlib: dllname.}
when defined(windows):
  proc DCreateShortCut*(ADestPath: cstring, AShortCutName: cstring, ASrcFileName: cstring, AIconFileName: cstring, ADescription: cstring, ACmdArgs: cstring): bool {.importc: "DCreateShortCut", dynlib: dllname.}
proc DSetPropertyValue*(Instance: pointer, PropName: cstring, Value: cstring) {.importc: "DSetPropertyValue", dynlib: dllname.}
proc DSetPropertySecValue*(Instance: pointer, PropName: cstring, SecPropName: cstring, Value: cstring) {.importc: "DSetPropertySecValue", dynlib: dllname.}
proc DGUIDToString*(AGUID: var TGUID): cstring {.importc: "DGUIDToString", dynlib: dllname.}
proc DStringToGUID*(AGUIDStr: cstring, AGUID: var TGUID) {.importc: "DStringToGUID", dynlib: dllname.}
proc DCreateGUID*(AGUID: var TGUID) {.importc: "DCreateGUID", dynlib: dllname.}
proc Printer_Instance*(): pointer {.importc: "Printer_Instance", dynlib: dllname.}
proc DLibAbout*(): cstring {.importc: "DLibAbout", dynlib: dllname.}
proc DGetLibResourceCount*(): int32 {.importc: "DGetLibResourceCount", dynlib: dllname.}
proc DGetLibResourceItem*(AIndex: int32, AResult: var TResItem) {.importc: "DGetLibResourceItem", dynlib: dllname.}
proc DModifyLibResource*(APtr: pointer, AValue: cstring) {.importc: "DModifyLibResource", dynlib: dllname.}
proc DGetLibType*(): TLibType {.importc: "DGetLibType", dynlib: dllname.}
proc DInitGoDll*(AMainThreadId: TThreadID) {.importc: "DInitGoDll", dynlib: dllname.}
proc DFindControl*(AHandle: HWND): pointer {.importc: "DFindControl", dynlib: dllname.}
proc DFindLCLControl*(AScreenPos: var TPoint): pointer {.importc: "DFindLCLControl", dynlib: dllname.}
proc DFindOwnerControl*(Handle: HWND): pointer {.importc: "DFindOwnerControl", dynlib: dllname.}
proc DFindControlAtPosition*(APosition: var TPoint, AllowDisabled: bool): pointer {.importc: "DFindControlAtPosition", dynlib: dllname.}
proc DFindLCLWindow*(AScreenPos: var TPoint, AllowDisabled: bool): pointer {.importc: "DFindLCLWindow", dynlib: dllname.}
proc DFindDragTarget*(APosition: var TPoint, AllowDisabled: bool): pointer {.importc: "DFindDragTarget", dynlib: dllname.}
when defined(linux):
  proc GtkWidget_GetGtkFixed*(Ah: HWND): PGtkFixed {.importc: "GtkWidget_GetGtkFixed", dynlib: dllname.}
when defined(linux):
  proc GdkWindow_FromForm*(AForm: pointer): PGdkWindow {.importc: "GdkWindow_FromForm", dynlib: dllname.}
when defined(linux):
  proc GdkWindow_GetXId*(AW: PGdkWindow, AXId: var TXId) {.importc: "GdkWindow_GetXId", dynlib: dllname.}
when defined(linux):
  proc GtkWidget_Window*(Ah: HWND): PGdkWindow {.importc: "GtkWidget_Window", dynlib: dllname.}
when defined(macosx):
  proc NSWindow_FromForm*(AForm: pointer): MyNSWindow {.importc: "NSWindow_FromForm", dynlib: dllname.}
proc ResFormLoadFromResourceName*(AInstance: uint, AResName: cstring, ARoot: pointer) {.importc: "ResFormLoadFromResourceName", dynlib: dllname.}
proc ResFormLoadFromFile*(AFileName: cstring, ARoot: pointer) {.importc: "ResFormLoadFromFile", dynlib: dllname.}
proc ResFormLoadFromStream*(AStream: pointer, ARoot: pointer) {.importc: "ResFormLoadFromStream", dynlib: dllname.}


# ----------------- TObject ----------------------
proc Object_Create*(): pointer {.importc: "Object_Create", dynlib: dllname.}
proc Object_Free*(AObj: pointer) {.importc: "Object_Free", dynlib: dllname.}
proc Object_ClassType*(AObj: pointer): TClass {.importc: "Object_ClassType", dynlib: dllname.}
proc Object_ClassName*(AObj: pointer): cstring {.importc: "Object_ClassName", dynlib: dllname.}
proc Object_InstanceSize*(AObj: pointer): int32 {.importc: "Object_InstanceSize", dynlib: dllname.}
proc Object_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Object_InheritsFrom", dynlib: dllname.}
proc Object_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Object_Equals", dynlib: dllname.}
proc Object_GetHashCode*(AObj: pointer): int32 {.importc: "Object_GetHashCode", dynlib: dllname.}
proc Object_ToString*(AObj: pointer): cstring {.importc: "Object_ToString", dynlib: dllname.}
proc Object_StaticClassType*(): TClass {.importc: "Object_StaticClassType", dynlib: dllname.}
# ----------------- TComponent ----------------------
proc Component_Create*(AOwner: pointer): pointer {.importc: "Component_Create", dynlib: dllname.}
proc Component_Free*(AObj: pointer) {.importc: "Component_Free", dynlib: dllname.}
proc Component_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Component_FindComponent", dynlib: dllname.}
proc Component_GetNamePath*(AObj: pointer): cstring {.importc: "Component_GetNamePath", dynlib: dllname.}
proc Component_HasParent*(AObj: pointer): bool {.importc: "Component_HasParent", dynlib: dllname.}
proc Component_Assign*(AObj: pointer, Source: pointer) {.importc: "Component_Assign", dynlib: dllname.}
proc Component_ClassType*(AObj: pointer): TClass {.importc: "Component_ClassType", dynlib: dllname.}
proc Component_ClassName*(AObj: pointer): cstring {.importc: "Component_ClassName", dynlib: dllname.}
proc Component_InstanceSize*(AObj: pointer): int32 {.importc: "Component_InstanceSize", dynlib: dllname.}
proc Component_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Component_InheritsFrom", dynlib: dllname.}
proc Component_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Component_Equals", dynlib: dllname.}
proc Component_GetHashCode*(AObj: pointer): int32 {.importc: "Component_GetHashCode", dynlib: dllname.}
proc Component_ToString*(AObj: pointer): cstring {.importc: "Component_ToString", dynlib: dllname.}
proc Component_GetComponentCount*(AObj: pointer): int32 {.importc: "Component_GetComponentCount", dynlib: dllname.}
proc Component_GetComponentIndex*(AObj: pointer): int32 {.importc: "Component_GetComponentIndex", dynlib: dllname.}
proc Component_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Component_SetComponentIndex", dynlib: dllname.}
proc Component_GetOwner*(AObj: pointer): pointer {.importc: "Component_GetOwner", dynlib: dllname.}
proc Component_GetName*(AObj: pointer): cstring {.importc: "Component_GetName", dynlib: dllname.}
proc Component_SetName*(AObj: pointer, AValue: cstring) {.importc: "Component_SetName", dynlib: dllname.}
proc Component_GetTag*(AObj: pointer): int {.importc: "Component_GetTag", dynlib: dllname.}
proc Component_SetTag*(AObj: pointer, AValue: int) {.importc: "Component_SetTag", dynlib: dllname.}
proc Component_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Component_GetComponents", dynlib: dllname.}
proc Component_StaticClassType*(): TClass {.importc: "Component_StaticClassType", dynlib: dllname.}
# ----------------- TControl ----------------------
proc Control_Create*(AOwner: pointer): pointer {.importc: "Control_Create", dynlib: dllname.}
proc Control_Free*(AObj: pointer) {.importc: "Control_Free", dynlib: dllname.}
proc Control_BringToFront*(AObj: pointer) {.importc: "Control_BringToFront", dynlib: dllname.}
proc Control_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Control_ClientToScreen", dynlib: dllname.}
proc Control_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Control_ClientToParent", dynlib: dllname.}
proc Control_Dragging*(AObj: pointer): bool {.importc: "Control_Dragging", dynlib: dllname.}
proc Control_HasParent*(AObj: pointer): bool {.importc: "Control_HasParent", dynlib: dllname.}
proc Control_Hide*(AObj: pointer) {.importc: "Control_Hide", dynlib: dllname.}
proc Control_Invalidate*(AObj: pointer) {.importc: "Control_Invalidate", dynlib: dllname.}
proc Control_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Control_Perform", dynlib: dllname.}
proc Control_Refresh*(AObj: pointer) {.importc: "Control_Refresh", dynlib: dllname.}
proc Control_Repaint*(AObj: pointer) {.importc: "Control_Repaint", dynlib: dllname.}
proc Control_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Control_ScreenToClient", dynlib: dllname.}
proc Control_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Control_ParentToClient", dynlib: dllname.}
proc Control_SendToBack*(AObj: pointer) {.importc: "Control_SendToBack", dynlib: dllname.}
proc Control_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Control_SetBounds", dynlib: dllname.}
proc Control_Show*(AObj: pointer) {.importc: "Control_Show", dynlib: dllname.}
proc Control_Update*(AObj: pointer) {.importc: "Control_Update", dynlib: dllname.}
proc Control_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Control_GetTextBuf", dynlib: dllname.}
proc Control_GetTextLen*(AObj: pointer): int32 {.importc: "Control_GetTextLen", dynlib: dllname.}
proc Control_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Control_SetTextBuf", dynlib: dllname.}
proc Control_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Control_FindComponent", dynlib: dllname.}
proc Control_GetNamePath*(AObj: pointer): cstring {.importc: "Control_GetNamePath", dynlib: dllname.}
proc Control_Assign*(AObj: pointer, Source: pointer) {.importc: "Control_Assign", dynlib: dllname.}
proc Control_ClassType*(AObj: pointer): TClass {.importc: "Control_ClassType", dynlib: dllname.}
proc Control_ClassName*(AObj: pointer): cstring {.importc: "Control_ClassName", dynlib: dllname.}
proc Control_InstanceSize*(AObj: pointer): int32 {.importc: "Control_InstanceSize", dynlib: dllname.}
proc Control_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Control_InheritsFrom", dynlib: dllname.}
proc Control_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Control_Equals", dynlib: dllname.}
proc Control_GetHashCode*(AObj: pointer): int32 {.importc: "Control_GetHashCode", dynlib: dllname.}
proc Control_ToString*(AObj: pointer): cstring {.importc: "Control_ToString", dynlib: dllname.}
proc Control_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Control_AnchorToNeighbour", dynlib: dllname.}
proc Control_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Control_AnchorParallel", dynlib: dllname.}
proc Control_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Control_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Control_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Control_AnchorVerticalCenterTo", dynlib: dllname.}
proc Control_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Control_AnchorSame", dynlib: dllname.}
proc Control_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Control_AnchorAsAlign", dynlib: dllname.}
proc Control_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Control_AnchorClient", dynlib: dllname.}
proc Control_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Control_ScaleDesignToForm", dynlib: dllname.}
proc Control_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Control_ScaleFormToDesign", dynlib: dllname.}
proc Control_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Control_Scale96ToForm", dynlib: dllname.}
proc Control_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Control_ScaleFormTo96", dynlib: dllname.}
proc Control_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Control_Scale96ToFont", dynlib: dllname.}
proc Control_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Control_ScaleFontTo96", dynlib: dllname.}
proc Control_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Control_ScaleScreenToFont", dynlib: dllname.}
proc Control_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Control_ScaleFontToScreen", dynlib: dllname.}
proc Control_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Control_Scale96ToScreen", dynlib: dllname.}
proc Control_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Control_ScaleScreenTo96", dynlib: dllname.}
proc Control_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Control_AutoAdjustLayout", dynlib: dllname.}
proc Control_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Control_FixDesignFontsPPI", dynlib: dllname.}
proc Control_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Control_ScaleFontsPPI", dynlib: dllname.}
proc Control_GetEnabled*(AObj: pointer): bool {.importc: "Control_GetEnabled", dynlib: dllname.}
proc Control_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Control_SetEnabled", dynlib: dllname.}
proc Control_GetAction*(AObj: pointer): pointer {.importc: "Control_GetAction", dynlib: dllname.}
proc Control_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Control_SetAction", dynlib: dllname.}
proc Control_GetAlign*(AObj: pointer): TAlign {.importc: "Control_GetAlign", dynlib: dllname.}
proc Control_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Control_SetAlign", dynlib: dllname.}
proc Control_GetAnchors*(AObj: pointer): TAnchors {.importc: "Control_GetAnchors", dynlib: dllname.}
proc Control_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Control_SetAnchors", dynlib: dllname.}
proc Control_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Control_GetBiDiMode", dynlib: dllname.}
proc Control_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Control_SetBiDiMode", dynlib: dllname.}
proc Control_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Control_GetBoundsRect", dynlib: dllname.}
proc Control_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Control_SetBoundsRect", dynlib: dllname.}
proc Control_GetClientHeight*(AObj: pointer): int32 {.importc: "Control_GetClientHeight", dynlib: dllname.}
proc Control_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Control_SetClientHeight", dynlib: dllname.}
proc Control_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Control_GetClientOrigin", dynlib: dllname.}
proc Control_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Control_GetClientRect", dynlib: dllname.}
proc Control_GetClientWidth*(AObj: pointer): int32 {.importc: "Control_GetClientWidth", dynlib: dllname.}
proc Control_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Control_SetClientWidth", dynlib: dllname.}
proc Control_GetConstraints*(AObj: pointer): pointer {.importc: "Control_GetConstraints", dynlib: dllname.}
proc Control_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Control_SetConstraints", dynlib: dllname.}
proc Control_GetControlState*(AObj: pointer): TControlState {.importc: "Control_GetControlState", dynlib: dllname.}
proc Control_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Control_SetControlState", dynlib: dllname.}
proc Control_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Control_GetControlStyle", dynlib: dllname.}
proc Control_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Control_SetControlStyle", dynlib: dllname.}
proc Control_GetFloating*(AObj: pointer): bool {.importc: "Control_GetFloating", dynlib: dllname.}
proc Control_GetShowHint*(AObj: pointer): bool {.importc: "Control_GetShowHint", dynlib: dllname.}
proc Control_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Control_SetShowHint", dynlib: dllname.}
proc Control_GetVisible*(AObj: pointer): bool {.importc: "Control_GetVisible", dynlib: dllname.}
proc Control_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Control_SetVisible", dynlib: dllname.}
proc Control_GetParent*(AObj: pointer): pointer {.importc: "Control_GetParent", dynlib: dllname.}
proc Control_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Control_SetParent", dynlib: dllname.}
proc Control_GetLeft*(AObj: pointer): int32 {.importc: "Control_GetLeft", dynlib: dllname.}
proc Control_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Control_SetLeft", dynlib: dllname.}
proc Control_GetTop*(AObj: pointer): int32 {.importc: "Control_GetTop", dynlib: dllname.}
proc Control_SetTop*(AObj: pointer, AValue: int32) {.importc: "Control_SetTop", dynlib: dllname.}
proc Control_GetWidth*(AObj: pointer): int32 {.importc: "Control_GetWidth", dynlib: dllname.}
proc Control_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Control_SetWidth", dynlib: dllname.}
proc Control_GetHeight*(AObj: pointer): int32 {.importc: "Control_GetHeight", dynlib: dllname.}
proc Control_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Control_SetHeight", dynlib: dllname.}
proc Control_GetCursor*(AObj: pointer): TCursor {.importc: "Control_GetCursor", dynlib: dllname.}
proc Control_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Control_SetCursor", dynlib: dllname.}
proc Control_GetHint*(AObj: pointer): cstring {.importc: "Control_GetHint", dynlib: dllname.}
proc Control_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Control_SetHint", dynlib: dllname.}
proc Control_GetComponentCount*(AObj: pointer): int32 {.importc: "Control_GetComponentCount", dynlib: dllname.}
proc Control_GetComponentIndex*(AObj: pointer): int32 {.importc: "Control_GetComponentIndex", dynlib: dllname.}
proc Control_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Control_SetComponentIndex", dynlib: dllname.}
proc Control_GetOwner*(AObj: pointer): pointer {.importc: "Control_GetOwner", dynlib: dllname.}
proc Control_GetName*(AObj: pointer): cstring {.importc: "Control_GetName", dynlib: dllname.}
proc Control_SetName*(AObj: pointer, AValue: cstring) {.importc: "Control_SetName", dynlib: dllname.}
proc Control_GetTag*(AObj: pointer): int {.importc: "Control_GetTag", dynlib: dllname.}
proc Control_SetTag*(AObj: pointer, AValue: int) {.importc: "Control_SetTag", dynlib: dllname.}
proc Control_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Control_GetAnchorSideLeft", dynlib: dllname.}
proc Control_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Control_SetAnchorSideLeft", dynlib: dllname.}
proc Control_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Control_GetAnchorSideTop", dynlib: dllname.}
proc Control_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Control_SetAnchorSideTop", dynlib: dllname.}
proc Control_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Control_GetAnchorSideRight", dynlib: dllname.}
proc Control_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Control_SetAnchorSideRight", dynlib: dllname.}
proc Control_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Control_GetAnchorSideBottom", dynlib: dllname.}
proc Control_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Control_SetAnchorSideBottom", dynlib: dllname.}
proc Control_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Control_GetBorderSpacing", dynlib: dllname.}
proc Control_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Control_SetBorderSpacing", dynlib: dllname.}
proc Control_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Control_GetComponents", dynlib: dllname.}
proc Control_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Control_GetAnchorSide", dynlib: dllname.}
proc Control_StaticClassType*(): TClass {.importc: "Control_StaticClassType", dynlib: dllname.}
# ----------------- TWinControl ----------------------
proc WinControl_Create*(AOwner: pointer): pointer {.importc: "WinControl_Create", dynlib: dllname.}
proc WinControl_Free*(AObj: pointer) {.importc: "WinControl_Free", dynlib: dllname.}
proc WinControl_CanFocus*(AObj: pointer): bool {.importc: "WinControl_CanFocus", dynlib: dllname.}
proc WinControl_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "WinControl_ContainsControl", dynlib: dllname.}
proc WinControl_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "WinControl_ControlAtPos", dynlib: dllname.}
proc WinControl_DisableAlign*(AObj: pointer) {.importc: "WinControl_DisableAlign", dynlib: dllname.}
proc WinControl_EnableAlign*(AObj: pointer) {.importc: "WinControl_EnableAlign", dynlib: dllname.}
proc WinControl_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "WinControl_FindChildControl", dynlib: dllname.}
proc WinControl_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "WinControl_FlipChildren", dynlib: dllname.}
proc WinControl_Focused*(AObj: pointer): bool {.importc: "WinControl_Focused", dynlib: dllname.}
proc WinControl_HandleAllocated*(AObj: pointer): bool {.importc: "WinControl_HandleAllocated", dynlib: dllname.}
proc WinControl_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "WinControl_InsertControl", dynlib: dllname.}
proc WinControl_Invalidate*(AObj: pointer) {.importc: "WinControl_Invalidate", dynlib: dllname.}
proc WinControl_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "WinControl_PaintTo", dynlib: dllname.}
proc WinControl_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "WinControl_RemoveControl", dynlib: dllname.}
proc WinControl_Realign*(AObj: pointer) {.importc: "WinControl_Realign", dynlib: dllname.}
proc WinControl_Repaint*(AObj: pointer) {.importc: "WinControl_Repaint", dynlib: dllname.}
proc WinControl_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "WinControl_ScaleBy", dynlib: dllname.}
proc WinControl_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "WinControl_ScrollBy", dynlib: dllname.}
proc WinControl_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "WinControl_SetBounds", dynlib: dllname.}
proc WinControl_SetFocus*(AObj: pointer) {.importc: "WinControl_SetFocus", dynlib: dllname.}
proc WinControl_Update*(AObj: pointer) {.importc: "WinControl_Update", dynlib: dllname.}
proc WinControl_BringToFront*(AObj: pointer) {.importc: "WinControl_BringToFront", dynlib: dllname.}
proc WinControl_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "WinControl_ClientToScreen", dynlib: dllname.}
proc WinControl_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "WinControl_ClientToParent", dynlib: dllname.}
proc WinControl_Dragging*(AObj: pointer): bool {.importc: "WinControl_Dragging", dynlib: dllname.}
proc WinControl_HasParent*(AObj: pointer): bool {.importc: "WinControl_HasParent", dynlib: dllname.}
proc WinControl_Hide*(AObj: pointer) {.importc: "WinControl_Hide", dynlib: dllname.}
proc WinControl_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "WinControl_Perform", dynlib: dllname.}
proc WinControl_Refresh*(AObj: pointer) {.importc: "WinControl_Refresh", dynlib: dllname.}
proc WinControl_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "WinControl_ScreenToClient", dynlib: dllname.}
proc WinControl_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "WinControl_ParentToClient", dynlib: dllname.}
proc WinControl_SendToBack*(AObj: pointer) {.importc: "WinControl_SendToBack", dynlib: dllname.}
proc WinControl_Show*(AObj: pointer) {.importc: "WinControl_Show", dynlib: dllname.}
proc WinControl_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "WinControl_GetTextBuf", dynlib: dllname.}
proc WinControl_GetTextLen*(AObj: pointer): int32 {.importc: "WinControl_GetTextLen", dynlib: dllname.}
proc WinControl_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "WinControl_SetTextBuf", dynlib: dllname.}
proc WinControl_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "WinControl_FindComponent", dynlib: dllname.}
proc WinControl_GetNamePath*(AObj: pointer): cstring {.importc: "WinControl_GetNamePath", dynlib: dllname.}
proc WinControl_Assign*(AObj: pointer, Source: pointer) {.importc: "WinControl_Assign", dynlib: dllname.}
proc WinControl_ClassType*(AObj: pointer): TClass {.importc: "WinControl_ClassType", dynlib: dllname.}
proc WinControl_ClassName*(AObj: pointer): cstring {.importc: "WinControl_ClassName", dynlib: dllname.}
proc WinControl_InstanceSize*(AObj: pointer): int32 {.importc: "WinControl_InstanceSize", dynlib: dllname.}
proc WinControl_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "WinControl_InheritsFrom", dynlib: dllname.}
proc WinControl_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "WinControl_Equals", dynlib: dllname.}
proc WinControl_GetHashCode*(AObj: pointer): int32 {.importc: "WinControl_GetHashCode", dynlib: dllname.}
proc WinControl_ToString*(AObj: pointer): cstring {.importc: "WinControl_ToString", dynlib: dllname.}
proc WinControl_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "WinControl_AnchorToNeighbour", dynlib: dllname.}
proc WinControl_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "WinControl_AnchorParallel", dynlib: dllname.}
proc WinControl_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "WinControl_AnchorHorizontalCenterTo", dynlib: dllname.}
proc WinControl_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "WinControl_AnchorVerticalCenterTo", dynlib: dllname.}
proc WinControl_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "WinControl_AnchorSame", dynlib: dllname.}
proc WinControl_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "WinControl_AnchorAsAlign", dynlib: dllname.}
proc WinControl_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "WinControl_AnchorClient", dynlib: dllname.}
proc WinControl_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_ScaleDesignToForm", dynlib: dllname.}
proc WinControl_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_ScaleFormToDesign", dynlib: dllname.}
proc WinControl_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_Scale96ToForm", dynlib: dllname.}
proc WinControl_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_ScaleFormTo96", dynlib: dllname.}
proc WinControl_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_Scale96ToFont", dynlib: dllname.}
proc WinControl_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_ScaleFontTo96", dynlib: dllname.}
proc WinControl_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_ScaleScreenToFont", dynlib: dllname.}
proc WinControl_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_ScaleFontToScreen", dynlib: dllname.}
proc WinControl_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_Scale96ToScreen", dynlib: dllname.}
proc WinControl_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "WinControl_ScaleScreenTo96", dynlib: dllname.}
proc WinControl_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "WinControl_AutoAdjustLayout", dynlib: dllname.}
proc WinControl_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "WinControl_FixDesignFontsPPI", dynlib: dllname.}
proc WinControl_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "WinControl_ScaleFontsPPI", dynlib: dllname.}
proc WinControl_GetDockClientCount*(AObj: pointer): int32 {.importc: "WinControl_GetDockClientCount", dynlib: dllname.}
proc WinControl_GetDockSite*(AObj: pointer): bool {.importc: "WinControl_GetDockSite", dynlib: dllname.}
proc WinControl_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetDockSite", dynlib: dllname.}
proc WinControl_GetDoubleBuffered*(AObj: pointer): bool {.importc: "WinControl_GetDoubleBuffered", dynlib: dllname.}
proc WinControl_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetDoubleBuffered", dynlib: dllname.}
proc WinControl_GetMouseInClient*(AObj: pointer): bool {.importc: "WinControl_GetMouseInClient", dynlib: dllname.}
proc WinControl_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "WinControl_GetVisibleDockClientCount", dynlib: dllname.}
proc WinControl_GetBrush*(AObj: pointer): pointer {.importc: "WinControl_GetBrush", dynlib: dllname.}
proc WinControl_GetControlCount*(AObj: pointer): int32 {.importc: "WinControl_GetControlCount", dynlib: dllname.}
proc WinControl_GetHandle*(AObj: pointer): HWND {.importc: "WinControl_GetHandle", dynlib: dllname.}
proc WinControl_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "WinControl_GetParentDoubleBuffered", dynlib: dllname.}
proc WinControl_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetParentDoubleBuffered", dynlib: dllname.}
proc WinControl_GetParentWindow*(AObj: pointer): HWND {.importc: "WinControl_GetParentWindow", dynlib: dllname.}
proc WinControl_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "WinControl_SetParentWindow", dynlib: dllname.}
proc WinControl_GetShowing*(AObj: pointer): bool {.importc: "WinControl_GetShowing", dynlib: dllname.}
proc WinControl_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "WinControl_GetTabOrder", dynlib: dllname.}
proc WinControl_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "WinControl_SetTabOrder", dynlib: dllname.}
proc WinControl_GetTabStop*(AObj: pointer): bool {.importc: "WinControl_GetTabStop", dynlib: dllname.}
proc WinControl_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetTabStop", dynlib: dllname.}
proc WinControl_GetUseDockManager*(AObj: pointer): bool {.importc: "WinControl_GetUseDockManager", dynlib: dllname.}
proc WinControl_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetUseDockManager", dynlib: dllname.}
proc WinControl_GetEnabled*(AObj: pointer): bool {.importc: "WinControl_GetEnabled", dynlib: dllname.}
proc WinControl_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetEnabled", dynlib: dllname.}
proc WinControl_GetAction*(AObj: pointer): pointer {.importc: "WinControl_GetAction", dynlib: dllname.}
proc WinControl_SetAction*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetAction", dynlib: dllname.}
proc WinControl_GetAlign*(AObj: pointer): TAlign {.importc: "WinControl_GetAlign", dynlib: dllname.}
proc WinControl_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "WinControl_SetAlign", dynlib: dllname.}
proc WinControl_GetAnchors*(AObj: pointer): TAnchors {.importc: "WinControl_GetAnchors", dynlib: dllname.}
proc WinControl_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "WinControl_SetAnchors", dynlib: dllname.}
proc WinControl_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "WinControl_GetBiDiMode", dynlib: dllname.}
proc WinControl_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "WinControl_SetBiDiMode", dynlib: dllname.}
proc WinControl_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "WinControl_GetBoundsRect", dynlib: dllname.}
proc WinControl_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "WinControl_SetBoundsRect", dynlib: dllname.}
proc WinControl_GetClientHeight*(AObj: pointer): int32 {.importc: "WinControl_GetClientHeight", dynlib: dllname.}
proc WinControl_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "WinControl_SetClientHeight", dynlib: dllname.}
proc WinControl_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "WinControl_GetClientOrigin", dynlib: dllname.}
proc WinControl_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "WinControl_GetClientRect", dynlib: dllname.}
proc WinControl_GetClientWidth*(AObj: pointer): int32 {.importc: "WinControl_GetClientWidth", dynlib: dllname.}
proc WinControl_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "WinControl_SetClientWidth", dynlib: dllname.}
proc WinControl_GetConstraints*(AObj: pointer): pointer {.importc: "WinControl_GetConstraints", dynlib: dllname.}
proc WinControl_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetConstraints", dynlib: dllname.}
proc WinControl_GetControlState*(AObj: pointer): TControlState {.importc: "WinControl_GetControlState", dynlib: dllname.}
proc WinControl_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "WinControl_SetControlState", dynlib: dllname.}
proc WinControl_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "WinControl_GetControlStyle", dynlib: dllname.}
proc WinControl_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "WinControl_SetControlStyle", dynlib: dllname.}
proc WinControl_GetFloating*(AObj: pointer): bool {.importc: "WinControl_GetFloating", dynlib: dllname.}
proc WinControl_GetShowHint*(AObj: pointer): bool {.importc: "WinControl_GetShowHint", dynlib: dllname.}
proc WinControl_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetShowHint", dynlib: dllname.}
proc WinControl_GetVisible*(AObj: pointer): bool {.importc: "WinControl_GetVisible", dynlib: dllname.}
proc WinControl_SetVisible*(AObj: pointer, AValue: bool) {.importc: "WinControl_SetVisible", dynlib: dllname.}
proc WinControl_GetParent*(AObj: pointer): pointer {.importc: "WinControl_GetParent", dynlib: dllname.}
proc WinControl_SetParent*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetParent", dynlib: dllname.}
proc WinControl_GetLeft*(AObj: pointer): int32 {.importc: "WinControl_GetLeft", dynlib: dllname.}
proc WinControl_SetLeft*(AObj: pointer, AValue: int32) {.importc: "WinControl_SetLeft", dynlib: dllname.}
proc WinControl_GetTop*(AObj: pointer): int32 {.importc: "WinControl_GetTop", dynlib: dllname.}
proc WinControl_SetTop*(AObj: pointer, AValue: int32) {.importc: "WinControl_SetTop", dynlib: dllname.}
proc WinControl_GetWidth*(AObj: pointer): int32 {.importc: "WinControl_GetWidth", dynlib: dllname.}
proc WinControl_SetWidth*(AObj: pointer, AValue: int32) {.importc: "WinControl_SetWidth", dynlib: dllname.}
proc WinControl_GetHeight*(AObj: pointer): int32 {.importc: "WinControl_GetHeight", dynlib: dllname.}
proc WinControl_SetHeight*(AObj: pointer, AValue: int32) {.importc: "WinControl_SetHeight", dynlib: dllname.}
proc WinControl_GetCursor*(AObj: pointer): TCursor {.importc: "WinControl_GetCursor", dynlib: dllname.}
proc WinControl_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "WinControl_SetCursor", dynlib: dllname.}
proc WinControl_GetHint*(AObj: pointer): cstring {.importc: "WinControl_GetHint", dynlib: dllname.}
proc WinControl_SetHint*(AObj: pointer, AValue: cstring) {.importc: "WinControl_SetHint", dynlib: dllname.}
proc WinControl_GetComponentCount*(AObj: pointer): int32 {.importc: "WinControl_GetComponentCount", dynlib: dllname.}
proc WinControl_GetComponentIndex*(AObj: pointer): int32 {.importc: "WinControl_GetComponentIndex", dynlib: dllname.}
proc WinControl_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "WinControl_SetComponentIndex", dynlib: dllname.}
proc WinControl_GetOwner*(AObj: pointer): pointer {.importc: "WinControl_GetOwner", dynlib: dllname.}
proc WinControl_GetName*(AObj: pointer): cstring {.importc: "WinControl_GetName", dynlib: dllname.}
proc WinControl_SetName*(AObj: pointer, AValue: cstring) {.importc: "WinControl_SetName", dynlib: dllname.}
proc WinControl_GetTag*(AObj: pointer): int {.importc: "WinControl_GetTag", dynlib: dllname.}
proc WinControl_SetTag*(AObj: pointer, AValue: int) {.importc: "WinControl_SetTag", dynlib: dllname.}
proc WinControl_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "WinControl_GetAnchorSideLeft", dynlib: dllname.}
proc WinControl_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetAnchorSideLeft", dynlib: dllname.}
proc WinControl_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "WinControl_GetAnchorSideTop", dynlib: dllname.}
proc WinControl_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetAnchorSideTop", dynlib: dllname.}
proc WinControl_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "WinControl_GetAnchorSideRight", dynlib: dllname.}
proc WinControl_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetAnchorSideRight", dynlib: dllname.}
proc WinControl_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "WinControl_GetAnchorSideBottom", dynlib: dllname.}
proc WinControl_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetAnchorSideBottom", dynlib: dllname.}
proc WinControl_GetChildSizing*(AObj: pointer): pointer {.importc: "WinControl_GetChildSizing", dynlib: dllname.}
proc WinControl_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetChildSizing", dynlib: dllname.}
proc WinControl_GetBorderSpacing*(AObj: pointer): pointer {.importc: "WinControl_GetBorderSpacing", dynlib: dllname.}
proc WinControl_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "WinControl_SetBorderSpacing", dynlib: dllname.}
proc WinControl_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "WinControl_GetDockClients", dynlib: dllname.}
proc WinControl_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "WinControl_GetControls", dynlib: dllname.}
proc WinControl_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "WinControl_GetComponents", dynlib: dllname.}
proc WinControl_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "WinControl_GetAnchorSide", dynlib: dllname.}
proc WinControl_StaticClassType*(): TClass {.importc: "WinControl_StaticClassType", dynlib: dllname.}
# ----------------- TGraphic ----------------------
proc Graphic_Create*(): pointer {.importc: "Graphic_Create", dynlib: dllname.}
proc Graphic_Free*(AObj: pointer) {.importc: "Graphic_Free", dynlib: dllname.}
proc Graphic_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Graphic_Equals", dynlib: dllname.}
proc Graphic_LoadFromFile*(AObj: pointer, Filename: cstring) {.importc: "Graphic_LoadFromFile", dynlib: dllname.}
proc Graphic_SaveToFile*(AObj: pointer, Filename: cstring) {.importc: "Graphic_SaveToFile", dynlib: dllname.}
proc Graphic_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "Graphic_LoadFromStream", dynlib: dllname.}
proc Graphic_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "Graphic_SaveToStream", dynlib: dllname.}
proc Graphic_Assign*(AObj: pointer, Source: pointer) {.importc: "Graphic_Assign", dynlib: dllname.}
proc Graphic_GetNamePath*(AObj: pointer): cstring {.importc: "Graphic_GetNamePath", dynlib: dllname.}
proc Graphic_ClassType*(AObj: pointer): TClass {.importc: "Graphic_ClassType", dynlib: dllname.}
proc Graphic_ClassName*(AObj: pointer): cstring {.importc: "Graphic_ClassName", dynlib: dllname.}
proc Graphic_InstanceSize*(AObj: pointer): int32 {.importc: "Graphic_InstanceSize", dynlib: dllname.}
proc Graphic_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Graphic_InheritsFrom", dynlib: dllname.}
proc Graphic_GetHashCode*(AObj: pointer): int32 {.importc: "Graphic_GetHashCode", dynlib: dllname.}
proc Graphic_ToString*(AObj: pointer): cstring {.importc: "Graphic_ToString", dynlib: dllname.}
proc Graphic_GetEmpty*(AObj: pointer): bool {.importc: "Graphic_GetEmpty", dynlib: dllname.}
proc Graphic_GetHeight*(AObj: pointer): int32 {.importc: "Graphic_GetHeight", dynlib: dllname.}
proc Graphic_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Graphic_SetHeight", dynlib: dllname.}
proc Graphic_GetModified*(AObj: pointer): bool {.importc: "Graphic_GetModified", dynlib: dllname.}
proc Graphic_SetModified*(AObj: pointer, AValue: bool) {.importc: "Graphic_SetModified", dynlib: dllname.}
proc Graphic_GetPalette*(AObj: pointer): HPALETTE {.importc: "Graphic_GetPalette", dynlib: dllname.}
proc Graphic_SetPalette*(AObj: pointer, AValue: HPALETTE) {.importc: "Graphic_SetPalette", dynlib: dllname.}
proc Graphic_GetPaletteModified*(AObj: pointer): bool {.importc: "Graphic_GetPaletteModified", dynlib: dllname.}
proc Graphic_SetPaletteModified*(AObj: pointer, AValue: bool) {.importc: "Graphic_SetPaletteModified", dynlib: dllname.}
proc Graphic_GetTransparent*(AObj: pointer): bool {.importc: "Graphic_GetTransparent", dynlib: dllname.}
proc Graphic_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "Graphic_SetTransparent", dynlib: dllname.}
proc Graphic_GetWidth*(AObj: pointer): int32 {.importc: "Graphic_GetWidth", dynlib: dllname.}
proc Graphic_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Graphic_SetWidth", dynlib: dllname.}
proc Graphic_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Graphic_SetOnChange", dynlib: dllname.}
proc Graphic_StaticClassType*(): TClass {.importc: "Graphic_StaticClassType", dynlib: dllname.}
# ----------------- TStrings ----------------------
proc Strings_Create*(): pointer {.importc: "Strings_Create", dynlib: dllname.}
proc Strings_Free*(AObj: pointer) {.importc: "Strings_Free", dynlib: dllname.}
proc Strings_Add*(AObj: pointer, S: cstring): int32 {.importc: "Strings_Add", dynlib: dllname.}
proc Strings_AddObject*(AObj: pointer, S: cstring, AObject: pointer): int32 {.importc: "Strings_AddObject", dynlib: dllname.}
proc Strings_Append*(AObj: pointer, S: cstring) {.importc: "Strings_Append", dynlib: dllname.}
proc Strings_Assign*(AObj: pointer, Source: pointer) {.importc: "Strings_Assign", dynlib: dllname.}
proc Strings_BeginUpdate*(AObj: pointer) {.importc: "Strings_BeginUpdate", dynlib: dllname.}
proc Strings_Clear*(AObj: pointer) {.importc: "Strings_Clear", dynlib: dllname.}
proc Strings_Delete*(AObj: pointer, Index: int32) {.importc: "Strings_Delete", dynlib: dllname.}
proc Strings_EndUpdate*(AObj: pointer) {.importc: "Strings_EndUpdate", dynlib: dllname.}
proc Strings_Equals*(AObj: pointer, Strings: pointer): bool {.importc: "Strings_Equals", dynlib: dllname.}
proc Strings_IndexOf*(AObj: pointer, S: cstring): int32 {.importc: "Strings_IndexOf", dynlib: dllname.}
proc Strings_IndexOfName*(AObj: pointer, Name: cstring): int32 {.importc: "Strings_IndexOfName", dynlib: dllname.}
proc Strings_IndexOfObject*(AObj: pointer, AObject: pointer): int32 {.importc: "Strings_IndexOfObject", dynlib: dllname.}
proc Strings_Insert*(AObj: pointer, Index: int32, S: cstring) {.importc: "Strings_Insert", dynlib: dllname.}
proc Strings_InsertObject*(AObj: pointer, Index: int32, S: cstring, AObject: pointer) {.importc: "Strings_InsertObject", dynlib: dllname.}
proc Strings_LoadFromFile*(AObj: pointer, FileName: cstring) {.importc: "Strings_LoadFromFile", dynlib: dllname.}
proc Strings_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "Strings_LoadFromStream", dynlib: dllname.}
proc Strings_Move*(AObj: pointer, CurIndex: int32, NewIndex: int32) {.importc: "Strings_Move", dynlib: dllname.}
proc Strings_SaveToFile*(AObj: pointer, FileName: cstring) {.importc: "Strings_SaveToFile", dynlib: dllname.}
proc Strings_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "Strings_SaveToStream", dynlib: dllname.}
proc Strings_GetNamePath*(AObj: pointer): cstring {.importc: "Strings_GetNamePath", dynlib: dllname.}
proc Strings_ClassType*(AObj: pointer): TClass {.importc: "Strings_ClassType", dynlib: dllname.}
proc Strings_ClassName*(AObj: pointer): cstring {.importc: "Strings_ClassName", dynlib: dllname.}
proc Strings_InstanceSize*(AObj: pointer): int32 {.importc: "Strings_InstanceSize", dynlib: dllname.}
proc Strings_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Strings_InheritsFrom", dynlib: dllname.}
proc Strings_GetHashCode*(AObj: pointer): int32 {.importc: "Strings_GetHashCode", dynlib: dllname.}
proc Strings_ToString*(AObj: pointer): cstring {.importc: "Strings_ToString", dynlib: dllname.}
proc Strings_GetCapacity*(AObj: pointer): int32 {.importc: "Strings_GetCapacity", dynlib: dllname.}
proc Strings_SetCapacity*(AObj: pointer, AValue: int32) {.importc: "Strings_SetCapacity", dynlib: dllname.}
proc Strings_GetCommaText*(AObj: pointer): cstring {.importc: "Strings_GetCommaText", dynlib: dllname.}
proc Strings_SetCommaText*(AObj: pointer, AValue: cstring) {.importc: "Strings_SetCommaText", dynlib: dllname.}
proc Strings_GetCount*(AObj: pointer): int32 {.importc: "Strings_GetCount", dynlib: dllname.}
proc Strings_GetDelimiter*(AObj: pointer): Char {.importc: "Strings_GetDelimiter", dynlib: dllname.}
proc Strings_SetDelimiter*(AObj: pointer, AValue: Char) {.importc: "Strings_SetDelimiter", dynlib: dllname.}
proc Strings_GetNameValueSeparator*(AObj: pointer): Char {.importc: "Strings_GetNameValueSeparator", dynlib: dllname.}
proc Strings_SetNameValueSeparator*(AObj: pointer, AValue: Char) {.importc: "Strings_SetNameValueSeparator", dynlib: dllname.}
proc Strings_GetText*(AObj: pointer): cstring {.importc: "Strings_GetText", dynlib: dllname.}
proc Strings_SetText*(AObj: pointer, AValue: cstring) {.importc: "Strings_SetText", dynlib: dllname.}
proc Strings_GetObjects*(AObj: pointer, Index: int32): pointer {.importc: "Strings_GetObjects", dynlib: dllname.}
proc Strings_SetObjects*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "Strings_SetObjects", dynlib: dllname.}
proc Strings_GetValues*(AObj: pointer, Name: cstring): cstring {.importc: "Strings_GetValues", dynlib: dllname.}
proc Strings_SetValues*(AObj: pointer, Name: cstring, AValue: cstring) {.importc: "Strings_SetValues", dynlib: dllname.}
proc Strings_GetValueFromIndex*(AObj: pointer, Index: int32): cstring {.importc: "Strings_GetValueFromIndex", dynlib: dllname.}
proc Strings_SetValueFromIndex*(AObj: pointer, Index: int32, AValue: cstring) {.importc: "Strings_SetValueFromIndex", dynlib: dllname.}
proc Strings_GetStrings*(AObj: pointer, Index: int32): cstring {.importc: "Strings_GetStrings", dynlib: dllname.}
proc Strings_SetStrings*(AObj: pointer, Index: int32, AValue: cstring) {.importc: "Strings_SetStrings", dynlib: dllname.}
proc Strings_StaticClassType*(): TClass {.importc: "Strings_StaticClassType", dynlib: dllname.}
# ----------------- TStream ----------------------
# ----------------- TCheckBox ----------------------
proc CheckBox_Create*(AOwner: pointer): pointer {.importc: "CheckBox_Create", dynlib: dllname.}
proc CheckBox_Free*(AObj: pointer) {.importc: "CheckBox_Free", dynlib: dllname.}
proc CheckBox_CanFocus*(AObj: pointer): bool {.importc: "CheckBox_CanFocus", dynlib: dllname.}
proc CheckBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "CheckBox_ContainsControl", dynlib: dllname.}
proc CheckBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "CheckBox_ControlAtPos", dynlib: dllname.}
proc CheckBox_DisableAlign*(AObj: pointer) {.importc: "CheckBox_DisableAlign", dynlib: dllname.}
proc CheckBox_EnableAlign*(AObj: pointer) {.importc: "CheckBox_EnableAlign", dynlib: dllname.}
proc CheckBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "CheckBox_FindChildControl", dynlib: dllname.}
proc CheckBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "CheckBox_FlipChildren", dynlib: dllname.}
proc CheckBox_Focused*(AObj: pointer): bool {.importc: "CheckBox_Focused", dynlib: dllname.}
proc CheckBox_HandleAllocated*(AObj: pointer): bool {.importc: "CheckBox_HandleAllocated", dynlib: dllname.}
proc CheckBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "CheckBox_InsertControl", dynlib: dllname.}
proc CheckBox_Invalidate*(AObj: pointer) {.importc: "CheckBox_Invalidate", dynlib: dllname.}
proc CheckBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "CheckBox_PaintTo", dynlib: dllname.}
proc CheckBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "CheckBox_RemoveControl", dynlib: dllname.}
proc CheckBox_Realign*(AObj: pointer) {.importc: "CheckBox_Realign", dynlib: dllname.}
proc CheckBox_Repaint*(AObj: pointer) {.importc: "CheckBox_Repaint", dynlib: dllname.}
proc CheckBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "CheckBox_ScaleBy", dynlib: dllname.}
proc CheckBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "CheckBox_ScrollBy", dynlib: dllname.}
proc CheckBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "CheckBox_SetBounds", dynlib: dllname.}
proc CheckBox_SetFocus*(AObj: pointer) {.importc: "CheckBox_SetFocus", dynlib: dllname.}
proc CheckBox_Update*(AObj: pointer) {.importc: "CheckBox_Update", dynlib: dllname.}
proc CheckBox_BringToFront*(AObj: pointer) {.importc: "CheckBox_BringToFront", dynlib: dllname.}
proc CheckBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CheckBox_ClientToScreen", dynlib: dllname.}
proc CheckBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CheckBox_ClientToParent", dynlib: dllname.}
proc CheckBox_Dragging*(AObj: pointer): bool {.importc: "CheckBox_Dragging", dynlib: dllname.}
proc CheckBox_HasParent*(AObj: pointer): bool {.importc: "CheckBox_HasParent", dynlib: dllname.}
proc CheckBox_Hide*(AObj: pointer) {.importc: "CheckBox_Hide", dynlib: dllname.}
proc CheckBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "CheckBox_Perform", dynlib: dllname.}
proc CheckBox_Refresh*(AObj: pointer) {.importc: "CheckBox_Refresh", dynlib: dllname.}
proc CheckBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CheckBox_ScreenToClient", dynlib: dllname.}
proc CheckBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CheckBox_ParentToClient", dynlib: dllname.}
proc CheckBox_SendToBack*(AObj: pointer) {.importc: "CheckBox_SendToBack", dynlib: dllname.}
proc CheckBox_Show*(AObj: pointer) {.importc: "CheckBox_Show", dynlib: dllname.}
proc CheckBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "CheckBox_GetTextBuf", dynlib: dllname.}
proc CheckBox_GetTextLen*(AObj: pointer): int32 {.importc: "CheckBox_GetTextLen", dynlib: dllname.}
proc CheckBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "CheckBox_SetTextBuf", dynlib: dllname.}
proc CheckBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "CheckBox_FindComponent", dynlib: dllname.}
proc CheckBox_GetNamePath*(AObj: pointer): cstring {.importc: "CheckBox_GetNamePath", dynlib: dllname.}
proc CheckBox_Assign*(AObj: pointer, Source: pointer) {.importc: "CheckBox_Assign", dynlib: dllname.}
proc CheckBox_ClassType*(AObj: pointer): TClass {.importc: "CheckBox_ClassType", dynlib: dllname.}
proc CheckBox_ClassName*(AObj: pointer): cstring {.importc: "CheckBox_ClassName", dynlib: dllname.}
proc CheckBox_InstanceSize*(AObj: pointer): int32 {.importc: "CheckBox_InstanceSize", dynlib: dllname.}
proc CheckBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "CheckBox_InheritsFrom", dynlib: dllname.}
proc CheckBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "CheckBox_Equals", dynlib: dllname.}
proc CheckBox_GetHashCode*(AObj: pointer): int32 {.importc: "CheckBox_GetHashCode", dynlib: dllname.}
proc CheckBox_ToString*(AObj: pointer): cstring {.importc: "CheckBox_ToString", dynlib: dllname.}
proc CheckBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CheckBox_AnchorToNeighbour", dynlib: dllname.}
proc CheckBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CheckBox_AnchorParallel", dynlib: dllname.}
proc CheckBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CheckBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc CheckBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CheckBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc CheckBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "CheckBox_AnchorSame", dynlib: dllname.}
proc CheckBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "CheckBox_AnchorAsAlign", dynlib: dllname.}
proc CheckBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "CheckBox_AnchorClient", dynlib: dllname.}
proc CheckBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_ScaleDesignToForm", dynlib: dllname.}
proc CheckBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_ScaleFormToDesign", dynlib: dllname.}
proc CheckBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_Scale96ToForm", dynlib: dllname.}
proc CheckBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_ScaleFormTo96", dynlib: dllname.}
proc CheckBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_Scale96ToFont", dynlib: dllname.}
proc CheckBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_ScaleFontTo96", dynlib: dllname.}
proc CheckBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_ScaleScreenToFont", dynlib: dllname.}
proc CheckBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_ScaleFontToScreen", dynlib: dllname.}
proc CheckBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_Scale96ToScreen", dynlib: dllname.}
proc CheckBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckBox_ScaleScreenTo96", dynlib: dllname.}
proc CheckBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "CheckBox_AutoAdjustLayout", dynlib: dllname.}
proc CheckBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "CheckBox_FixDesignFontsPPI", dynlib: dllname.}
proc CheckBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "CheckBox_ScaleFontsPPI", dynlib: dllname.}
proc CheckBox_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckBox_SetOnChange", dynlib: dllname.}
proc CheckBox_GetAction*(AObj: pointer): pointer {.importc: "CheckBox_GetAction", dynlib: dllname.}
proc CheckBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetAction", dynlib: dllname.}
proc CheckBox_GetAlign*(AObj: pointer): TAlign {.importc: "CheckBox_GetAlign", dynlib: dllname.}
proc CheckBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "CheckBox_SetAlign", dynlib: dllname.}
proc CheckBox_GetAlignment*(AObj: pointer): TLeftRight {.importc: "CheckBox_GetAlignment", dynlib: dllname.}
proc CheckBox_SetAlignment*(AObj: pointer, AValue: TLeftRight) {.importc: "CheckBox_SetAlignment", dynlib: dllname.}
proc CheckBox_GetAllowGrayed*(AObj: pointer): bool {.importc: "CheckBox_GetAllowGrayed", dynlib: dllname.}
proc CheckBox_SetAllowGrayed*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetAllowGrayed", dynlib: dllname.}
proc CheckBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "CheckBox_GetAnchors", dynlib: dllname.}
proc CheckBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "CheckBox_SetAnchors", dynlib: dllname.}
proc CheckBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "CheckBox_GetBiDiMode", dynlib: dllname.}
proc CheckBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "CheckBox_SetBiDiMode", dynlib: dllname.}
proc CheckBox_GetCaption*(AObj: pointer): cstring {.importc: "CheckBox_GetCaption", dynlib: dllname.}
proc CheckBox_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "CheckBox_SetCaption", dynlib: dllname.}
proc CheckBox_GetChecked*(AObj: pointer): bool {.importc: "CheckBox_GetChecked", dynlib: dllname.}
proc CheckBox_SetChecked*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetChecked", dynlib: dllname.}
proc CheckBox_GetColor*(AObj: pointer): TColor {.importc: "CheckBox_GetColor", dynlib: dllname.}
proc CheckBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "CheckBox_SetColor", dynlib: dllname.}
proc CheckBox_GetConstraints*(AObj: pointer): pointer {.importc: "CheckBox_GetConstraints", dynlib: dllname.}
proc CheckBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetConstraints", dynlib: dllname.}
proc CheckBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "CheckBox_GetDoubleBuffered", dynlib: dllname.}
proc CheckBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetDoubleBuffered", dynlib: dllname.}
proc CheckBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "CheckBox_GetDragCursor", dynlib: dllname.}
proc CheckBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "CheckBox_SetDragCursor", dynlib: dllname.}
proc CheckBox_GetDragKind*(AObj: pointer): TDragKind {.importc: "CheckBox_GetDragKind", dynlib: dllname.}
proc CheckBox_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "CheckBox_SetDragKind", dynlib: dllname.}
proc CheckBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "CheckBox_GetDragMode", dynlib: dllname.}
proc CheckBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "CheckBox_SetDragMode", dynlib: dllname.}
proc CheckBox_GetEnabled*(AObj: pointer): bool {.importc: "CheckBox_GetEnabled", dynlib: dllname.}
proc CheckBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetEnabled", dynlib: dllname.}
proc CheckBox_GetFont*(AObj: pointer): pointer {.importc: "CheckBox_GetFont", dynlib: dllname.}
proc CheckBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetFont", dynlib: dllname.}
proc CheckBox_GetParentColor*(AObj: pointer): bool {.importc: "CheckBox_GetParentColor", dynlib: dllname.}
proc CheckBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetParentColor", dynlib: dllname.}
proc CheckBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "CheckBox_GetParentDoubleBuffered", dynlib: dllname.}
proc CheckBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetParentDoubleBuffered", dynlib: dllname.}
proc CheckBox_GetParentFont*(AObj: pointer): bool {.importc: "CheckBox_GetParentFont", dynlib: dllname.}
proc CheckBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetParentFont", dynlib: dllname.}
proc CheckBox_GetParentShowHint*(AObj: pointer): bool {.importc: "CheckBox_GetParentShowHint", dynlib: dllname.}
proc CheckBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetParentShowHint", dynlib: dllname.}
proc CheckBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "CheckBox_GetPopupMenu", dynlib: dllname.}
proc CheckBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetPopupMenu", dynlib: dllname.}
proc CheckBox_GetShowHint*(AObj: pointer): bool {.importc: "CheckBox_GetShowHint", dynlib: dllname.}
proc CheckBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetShowHint", dynlib: dllname.}
proc CheckBox_GetState*(AObj: pointer): TCheckBoxState {.importc: "CheckBox_GetState", dynlib: dllname.}
proc CheckBox_SetState*(AObj: pointer, AValue: TCheckBoxState) {.importc: "CheckBox_SetState", dynlib: dllname.}
proc CheckBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "CheckBox_GetTabOrder", dynlib: dllname.}
proc CheckBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "CheckBox_SetTabOrder", dynlib: dllname.}
proc CheckBox_GetTabStop*(AObj: pointer): bool {.importc: "CheckBox_GetTabStop", dynlib: dllname.}
proc CheckBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetTabStop", dynlib: dllname.}
proc CheckBox_GetVisible*(AObj: pointer): bool {.importc: "CheckBox_GetVisible", dynlib: dllname.}
proc CheckBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetVisible", dynlib: dllname.}
proc CheckBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckBox_SetOnClick", dynlib: dllname.}
proc CheckBox_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "CheckBox_SetOnContextPopup", dynlib: dllname.}
proc CheckBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "CheckBox_SetOnDragDrop", dynlib: dllname.}
proc CheckBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "CheckBox_SetOnDragOver", dynlib: dllname.}
proc CheckBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "CheckBox_SetOnEndDrag", dynlib: dllname.}
proc CheckBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckBox_SetOnEnter", dynlib: dllname.}
proc CheckBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckBox_SetOnExit", dynlib: dllname.}
proc CheckBox_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "CheckBox_SetOnKeyDown", dynlib: dllname.}
proc CheckBox_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "CheckBox_SetOnKeyPress", dynlib: dllname.}
proc CheckBox_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "CheckBox_SetOnKeyUp", dynlib: dllname.}
proc CheckBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CheckBox_SetOnMouseDown", dynlib: dllname.}
proc CheckBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckBox_SetOnMouseEnter", dynlib: dllname.}
proc CheckBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckBox_SetOnMouseLeave", dynlib: dllname.}
proc CheckBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "CheckBox_SetOnMouseMove", dynlib: dllname.}
proc CheckBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CheckBox_SetOnMouseUp", dynlib: dllname.}
proc CheckBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "CheckBox_GetDockClientCount", dynlib: dllname.}
proc CheckBox_GetDockSite*(AObj: pointer): bool {.importc: "CheckBox_GetDockSite", dynlib: dllname.}
proc CheckBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetDockSite", dynlib: dllname.}
proc CheckBox_GetMouseInClient*(AObj: pointer): bool {.importc: "CheckBox_GetMouseInClient", dynlib: dllname.}
proc CheckBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "CheckBox_GetVisibleDockClientCount", dynlib: dllname.}
proc CheckBox_GetBrush*(AObj: pointer): pointer {.importc: "CheckBox_GetBrush", dynlib: dllname.}
proc CheckBox_GetControlCount*(AObj: pointer): int32 {.importc: "CheckBox_GetControlCount", dynlib: dllname.}
proc CheckBox_GetHandle*(AObj: pointer): HWND {.importc: "CheckBox_GetHandle", dynlib: dllname.}
proc CheckBox_GetParentWindow*(AObj: pointer): HWND {.importc: "CheckBox_GetParentWindow", dynlib: dllname.}
proc CheckBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "CheckBox_SetParentWindow", dynlib: dllname.}
proc CheckBox_GetShowing*(AObj: pointer): bool {.importc: "CheckBox_GetShowing", dynlib: dllname.}
proc CheckBox_GetUseDockManager*(AObj: pointer): bool {.importc: "CheckBox_GetUseDockManager", dynlib: dllname.}
proc CheckBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "CheckBox_SetUseDockManager", dynlib: dllname.}
proc CheckBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "CheckBox_GetBoundsRect", dynlib: dllname.}
proc CheckBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "CheckBox_SetBoundsRect", dynlib: dllname.}
proc CheckBox_GetClientHeight*(AObj: pointer): int32 {.importc: "CheckBox_GetClientHeight", dynlib: dllname.}
proc CheckBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "CheckBox_SetClientHeight", dynlib: dllname.}
proc CheckBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "CheckBox_GetClientOrigin", dynlib: dllname.}
proc CheckBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "CheckBox_GetClientRect", dynlib: dllname.}
proc CheckBox_GetClientWidth*(AObj: pointer): int32 {.importc: "CheckBox_GetClientWidth", dynlib: dllname.}
proc CheckBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "CheckBox_SetClientWidth", dynlib: dllname.}
proc CheckBox_GetControlState*(AObj: pointer): TControlState {.importc: "CheckBox_GetControlState", dynlib: dllname.}
proc CheckBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "CheckBox_SetControlState", dynlib: dllname.}
proc CheckBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "CheckBox_GetControlStyle", dynlib: dllname.}
proc CheckBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "CheckBox_SetControlStyle", dynlib: dllname.}
proc CheckBox_GetFloating*(AObj: pointer): bool {.importc: "CheckBox_GetFloating", dynlib: dllname.}
proc CheckBox_GetParent*(AObj: pointer): pointer {.importc: "CheckBox_GetParent", dynlib: dllname.}
proc CheckBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetParent", dynlib: dllname.}
proc CheckBox_GetLeft*(AObj: pointer): int32 {.importc: "CheckBox_GetLeft", dynlib: dllname.}
proc CheckBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "CheckBox_SetLeft", dynlib: dllname.}
proc CheckBox_GetTop*(AObj: pointer): int32 {.importc: "CheckBox_GetTop", dynlib: dllname.}
proc CheckBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "CheckBox_SetTop", dynlib: dllname.}
proc CheckBox_GetWidth*(AObj: pointer): int32 {.importc: "CheckBox_GetWidth", dynlib: dllname.}
proc CheckBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "CheckBox_SetWidth", dynlib: dllname.}
proc CheckBox_GetHeight*(AObj: pointer): int32 {.importc: "CheckBox_GetHeight", dynlib: dllname.}
proc CheckBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "CheckBox_SetHeight", dynlib: dllname.}
proc CheckBox_GetCursor*(AObj: pointer): TCursor {.importc: "CheckBox_GetCursor", dynlib: dllname.}
proc CheckBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "CheckBox_SetCursor", dynlib: dllname.}
proc CheckBox_GetHint*(AObj: pointer): cstring {.importc: "CheckBox_GetHint", dynlib: dllname.}
proc CheckBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "CheckBox_SetHint", dynlib: dllname.}
proc CheckBox_GetComponentCount*(AObj: pointer): int32 {.importc: "CheckBox_GetComponentCount", dynlib: dllname.}
proc CheckBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "CheckBox_GetComponentIndex", dynlib: dllname.}
proc CheckBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "CheckBox_SetComponentIndex", dynlib: dllname.}
proc CheckBox_GetOwner*(AObj: pointer): pointer {.importc: "CheckBox_GetOwner", dynlib: dllname.}
proc CheckBox_GetName*(AObj: pointer): cstring {.importc: "CheckBox_GetName", dynlib: dllname.}
proc CheckBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "CheckBox_SetName", dynlib: dllname.}
proc CheckBox_GetTag*(AObj: pointer): int {.importc: "CheckBox_GetTag", dynlib: dllname.}
proc CheckBox_SetTag*(AObj: pointer, AValue: int) {.importc: "CheckBox_SetTag", dynlib: dllname.}
proc CheckBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "CheckBox_GetAnchorSideLeft", dynlib: dllname.}
proc CheckBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetAnchorSideLeft", dynlib: dllname.}
proc CheckBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "CheckBox_GetAnchorSideTop", dynlib: dllname.}
proc CheckBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetAnchorSideTop", dynlib: dllname.}
proc CheckBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "CheckBox_GetAnchorSideRight", dynlib: dllname.}
proc CheckBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetAnchorSideRight", dynlib: dllname.}
proc CheckBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "CheckBox_GetAnchorSideBottom", dynlib: dllname.}
proc CheckBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetAnchorSideBottom", dynlib: dllname.}
proc CheckBox_GetChildSizing*(AObj: pointer): pointer {.importc: "CheckBox_GetChildSizing", dynlib: dllname.}
proc CheckBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetChildSizing", dynlib: dllname.}
proc CheckBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "CheckBox_GetBorderSpacing", dynlib: dllname.}
proc CheckBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "CheckBox_SetBorderSpacing", dynlib: dllname.}
proc CheckBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "CheckBox_GetDockClients", dynlib: dllname.}
proc CheckBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "CheckBox_GetControls", dynlib: dllname.}
proc CheckBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "CheckBox_GetComponents", dynlib: dllname.}
proc CheckBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "CheckBox_GetAnchorSide", dynlib: dllname.}
proc CheckBox_StaticClassType*(): TClass {.importc: "CheckBox_StaticClassType", dynlib: dllname.}
# ----------------- TRadioButton ----------------------
proc RadioButton_Create*(AOwner: pointer): pointer {.importc: "RadioButton_Create", dynlib: dllname.}
proc RadioButton_Free*(AObj: pointer) {.importc: "RadioButton_Free", dynlib: dllname.}
proc RadioButton_CanFocus*(AObj: pointer): bool {.importc: "RadioButton_CanFocus", dynlib: dllname.}
proc RadioButton_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "RadioButton_ContainsControl", dynlib: dllname.}
proc RadioButton_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "RadioButton_ControlAtPos", dynlib: dllname.}
proc RadioButton_DisableAlign*(AObj: pointer) {.importc: "RadioButton_DisableAlign", dynlib: dllname.}
proc RadioButton_EnableAlign*(AObj: pointer) {.importc: "RadioButton_EnableAlign", dynlib: dllname.}
proc RadioButton_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "RadioButton_FindChildControl", dynlib: dllname.}
proc RadioButton_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "RadioButton_FlipChildren", dynlib: dllname.}
proc RadioButton_Focused*(AObj: pointer): bool {.importc: "RadioButton_Focused", dynlib: dllname.}
proc RadioButton_HandleAllocated*(AObj: pointer): bool {.importc: "RadioButton_HandleAllocated", dynlib: dllname.}
proc RadioButton_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "RadioButton_InsertControl", dynlib: dllname.}
proc RadioButton_Invalidate*(AObj: pointer) {.importc: "RadioButton_Invalidate", dynlib: dllname.}
proc RadioButton_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "RadioButton_PaintTo", dynlib: dllname.}
proc RadioButton_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "RadioButton_RemoveControl", dynlib: dllname.}
proc RadioButton_Realign*(AObj: pointer) {.importc: "RadioButton_Realign", dynlib: dllname.}
proc RadioButton_Repaint*(AObj: pointer) {.importc: "RadioButton_Repaint", dynlib: dllname.}
proc RadioButton_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "RadioButton_ScaleBy", dynlib: dllname.}
proc RadioButton_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "RadioButton_ScrollBy", dynlib: dllname.}
proc RadioButton_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "RadioButton_SetBounds", dynlib: dllname.}
proc RadioButton_SetFocus*(AObj: pointer) {.importc: "RadioButton_SetFocus", dynlib: dllname.}
proc RadioButton_Update*(AObj: pointer) {.importc: "RadioButton_Update", dynlib: dllname.}
proc RadioButton_BringToFront*(AObj: pointer) {.importc: "RadioButton_BringToFront", dynlib: dllname.}
proc RadioButton_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "RadioButton_ClientToScreen", dynlib: dllname.}
proc RadioButton_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "RadioButton_ClientToParent", dynlib: dllname.}
proc RadioButton_Dragging*(AObj: pointer): bool {.importc: "RadioButton_Dragging", dynlib: dllname.}
proc RadioButton_HasParent*(AObj: pointer): bool {.importc: "RadioButton_HasParent", dynlib: dllname.}
proc RadioButton_Hide*(AObj: pointer) {.importc: "RadioButton_Hide", dynlib: dllname.}
proc RadioButton_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "RadioButton_Perform", dynlib: dllname.}
proc RadioButton_Refresh*(AObj: pointer) {.importc: "RadioButton_Refresh", dynlib: dllname.}
proc RadioButton_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "RadioButton_ScreenToClient", dynlib: dllname.}
proc RadioButton_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "RadioButton_ParentToClient", dynlib: dllname.}
proc RadioButton_SendToBack*(AObj: pointer) {.importc: "RadioButton_SendToBack", dynlib: dllname.}
proc RadioButton_Show*(AObj: pointer) {.importc: "RadioButton_Show", dynlib: dllname.}
proc RadioButton_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "RadioButton_GetTextBuf", dynlib: dllname.}
proc RadioButton_GetTextLen*(AObj: pointer): int32 {.importc: "RadioButton_GetTextLen", dynlib: dllname.}
proc RadioButton_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "RadioButton_SetTextBuf", dynlib: dllname.}
proc RadioButton_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "RadioButton_FindComponent", dynlib: dllname.}
proc RadioButton_GetNamePath*(AObj: pointer): cstring {.importc: "RadioButton_GetNamePath", dynlib: dllname.}
proc RadioButton_Assign*(AObj: pointer, Source: pointer) {.importc: "RadioButton_Assign", dynlib: dllname.}
proc RadioButton_ClassType*(AObj: pointer): TClass {.importc: "RadioButton_ClassType", dynlib: dllname.}
proc RadioButton_ClassName*(AObj: pointer): cstring {.importc: "RadioButton_ClassName", dynlib: dllname.}
proc RadioButton_InstanceSize*(AObj: pointer): int32 {.importc: "RadioButton_InstanceSize", dynlib: dllname.}
proc RadioButton_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "RadioButton_InheritsFrom", dynlib: dllname.}
proc RadioButton_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "RadioButton_Equals", dynlib: dllname.}
proc RadioButton_GetHashCode*(AObj: pointer): int32 {.importc: "RadioButton_GetHashCode", dynlib: dllname.}
proc RadioButton_ToString*(AObj: pointer): cstring {.importc: "RadioButton_ToString", dynlib: dllname.}
proc RadioButton_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "RadioButton_AnchorToNeighbour", dynlib: dllname.}
proc RadioButton_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "RadioButton_AnchorParallel", dynlib: dllname.}
proc RadioButton_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "RadioButton_AnchorHorizontalCenterTo", dynlib: dllname.}
proc RadioButton_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "RadioButton_AnchorVerticalCenterTo", dynlib: dllname.}
proc RadioButton_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "RadioButton_AnchorSame", dynlib: dllname.}
proc RadioButton_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "RadioButton_AnchorAsAlign", dynlib: dllname.}
proc RadioButton_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "RadioButton_AnchorClient", dynlib: dllname.}
proc RadioButton_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_ScaleDesignToForm", dynlib: dllname.}
proc RadioButton_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_ScaleFormToDesign", dynlib: dllname.}
proc RadioButton_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_Scale96ToForm", dynlib: dllname.}
proc RadioButton_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_ScaleFormTo96", dynlib: dllname.}
proc RadioButton_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_Scale96ToFont", dynlib: dllname.}
proc RadioButton_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_ScaleFontTo96", dynlib: dllname.}
proc RadioButton_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_ScaleScreenToFont", dynlib: dllname.}
proc RadioButton_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_ScaleFontToScreen", dynlib: dllname.}
proc RadioButton_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_Scale96ToScreen", dynlib: dllname.}
proc RadioButton_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RadioButton_ScaleScreenTo96", dynlib: dllname.}
proc RadioButton_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "RadioButton_AutoAdjustLayout", dynlib: dllname.}
proc RadioButton_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "RadioButton_FixDesignFontsPPI", dynlib: dllname.}
proc RadioButton_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "RadioButton_ScaleFontsPPI", dynlib: dllname.}
proc RadioButton_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioButton_SetOnChange", dynlib: dllname.}
proc RadioButton_GetAction*(AObj: pointer): pointer {.importc: "RadioButton_GetAction", dynlib: dllname.}
proc RadioButton_SetAction*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetAction", dynlib: dllname.}
proc RadioButton_GetAlign*(AObj: pointer): TAlign {.importc: "RadioButton_GetAlign", dynlib: dllname.}
proc RadioButton_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "RadioButton_SetAlign", dynlib: dllname.}
proc RadioButton_GetAlignment*(AObj: pointer): TLeftRight {.importc: "RadioButton_GetAlignment", dynlib: dllname.}
proc RadioButton_SetAlignment*(AObj: pointer, AValue: TLeftRight) {.importc: "RadioButton_SetAlignment", dynlib: dllname.}
proc RadioButton_GetAnchors*(AObj: pointer): TAnchors {.importc: "RadioButton_GetAnchors", dynlib: dllname.}
proc RadioButton_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "RadioButton_SetAnchors", dynlib: dllname.}
proc RadioButton_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "RadioButton_GetBiDiMode", dynlib: dllname.}
proc RadioButton_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "RadioButton_SetBiDiMode", dynlib: dllname.}
proc RadioButton_GetCaption*(AObj: pointer): cstring {.importc: "RadioButton_GetCaption", dynlib: dllname.}
proc RadioButton_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "RadioButton_SetCaption", dynlib: dllname.}
proc RadioButton_GetChecked*(AObj: pointer): bool {.importc: "RadioButton_GetChecked", dynlib: dllname.}
proc RadioButton_SetChecked*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetChecked", dynlib: dllname.}
proc RadioButton_GetColor*(AObj: pointer): TColor {.importc: "RadioButton_GetColor", dynlib: dllname.}
proc RadioButton_SetColor*(AObj: pointer, AValue: TColor) {.importc: "RadioButton_SetColor", dynlib: dllname.}
proc RadioButton_GetConstraints*(AObj: pointer): pointer {.importc: "RadioButton_GetConstraints", dynlib: dllname.}
proc RadioButton_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetConstraints", dynlib: dllname.}
proc RadioButton_GetDoubleBuffered*(AObj: pointer): bool {.importc: "RadioButton_GetDoubleBuffered", dynlib: dllname.}
proc RadioButton_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetDoubleBuffered", dynlib: dllname.}
proc RadioButton_GetDragCursor*(AObj: pointer): TCursor {.importc: "RadioButton_GetDragCursor", dynlib: dllname.}
proc RadioButton_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "RadioButton_SetDragCursor", dynlib: dllname.}
proc RadioButton_GetDragKind*(AObj: pointer): TDragKind {.importc: "RadioButton_GetDragKind", dynlib: dllname.}
proc RadioButton_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "RadioButton_SetDragKind", dynlib: dllname.}
proc RadioButton_GetDragMode*(AObj: pointer): TDragMode {.importc: "RadioButton_GetDragMode", dynlib: dllname.}
proc RadioButton_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "RadioButton_SetDragMode", dynlib: dllname.}
proc RadioButton_GetEnabled*(AObj: pointer): bool {.importc: "RadioButton_GetEnabled", dynlib: dllname.}
proc RadioButton_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetEnabled", dynlib: dllname.}
proc RadioButton_GetFont*(AObj: pointer): pointer {.importc: "RadioButton_GetFont", dynlib: dllname.}
proc RadioButton_SetFont*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetFont", dynlib: dllname.}
proc RadioButton_GetParentColor*(AObj: pointer): bool {.importc: "RadioButton_GetParentColor", dynlib: dllname.}
proc RadioButton_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetParentColor", dynlib: dllname.}
proc RadioButton_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "RadioButton_GetParentDoubleBuffered", dynlib: dllname.}
proc RadioButton_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetParentDoubleBuffered", dynlib: dllname.}
proc RadioButton_GetParentFont*(AObj: pointer): bool {.importc: "RadioButton_GetParentFont", dynlib: dllname.}
proc RadioButton_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetParentFont", dynlib: dllname.}
proc RadioButton_GetParentShowHint*(AObj: pointer): bool {.importc: "RadioButton_GetParentShowHint", dynlib: dllname.}
proc RadioButton_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetParentShowHint", dynlib: dllname.}
proc RadioButton_GetPopupMenu*(AObj: pointer): pointer {.importc: "RadioButton_GetPopupMenu", dynlib: dllname.}
proc RadioButton_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetPopupMenu", dynlib: dllname.}
proc RadioButton_GetShowHint*(AObj: pointer): bool {.importc: "RadioButton_GetShowHint", dynlib: dllname.}
proc RadioButton_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetShowHint", dynlib: dllname.}
proc RadioButton_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "RadioButton_GetTabOrder", dynlib: dllname.}
proc RadioButton_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "RadioButton_SetTabOrder", dynlib: dllname.}
proc RadioButton_GetTabStop*(AObj: pointer): bool {.importc: "RadioButton_GetTabStop", dynlib: dllname.}
proc RadioButton_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetTabStop", dynlib: dllname.}
proc RadioButton_GetVisible*(AObj: pointer): bool {.importc: "RadioButton_GetVisible", dynlib: dllname.}
proc RadioButton_SetVisible*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetVisible", dynlib: dllname.}
proc RadioButton_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioButton_SetOnClick", dynlib: dllname.}
proc RadioButton_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "RadioButton_SetOnContextPopup", dynlib: dllname.}
proc RadioButton_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "RadioButton_SetOnDragDrop", dynlib: dllname.}
proc RadioButton_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "RadioButton_SetOnDragOver", dynlib: dllname.}
proc RadioButton_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "RadioButton_SetOnEndDrag", dynlib: dllname.}
proc RadioButton_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioButton_SetOnEnter", dynlib: dllname.}
proc RadioButton_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioButton_SetOnExit", dynlib: dllname.}
proc RadioButton_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "RadioButton_SetOnKeyDown", dynlib: dllname.}
proc RadioButton_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "RadioButton_SetOnKeyPress", dynlib: dllname.}
proc RadioButton_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "RadioButton_SetOnKeyUp", dynlib: dllname.}
proc RadioButton_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "RadioButton_SetOnMouseDown", dynlib: dllname.}
proc RadioButton_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioButton_SetOnMouseEnter", dynlib: dllname.}
proc RadioButton_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioButton_SetOnMouseLeave", dynlib: dllname.}
proc RadioButton_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "RadioButton_SetOnMouseMove", dynlib: dllname.}
proc RadioButton_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "RadioButton_SetOnMouseUp", dynlib: dllname.}
proc RadioButton_GetDockClientCount*(AObj: pointer): int32 {.importc: "RadioButton_GetDockClientCount", dynlib: dllname.}
proc RadioButton_GetDockSite*(AObj: pointer): bool {.importc: "RadioButton_GetDockSite", dynlib: dllname.}
proc RadioButton_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetDockSite", dynlib: dllname.}
proc RadioButton_GetMouseInClient*(AObj: pointer): bool {.importc: "RadioButton_GetMouseInClient", dynlib: dllname.}
proc RadioButton_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "RadioButton_GetVisibleDockClientCount", dynlib: dllname.}
proc RadioButton_GetBrush*(AObj: pointer): pointer {.importc: "RadioButton_GetBrush", dynlib: dllname.}
proc RadioButton_GetControlCount*(AObj: pointer): int32 {.importc: "RadioButton_GetControlCount", dynlib: dllname.}
proc RadioButton_GetHandle*(AObj: pointer): HWND {.importc: "RadioButton_GetHandle", dynlib: dllname.}
proc RadioButton_GetParentWindow*(AObj: pointer): HWND {.importc: "RadioButton_GetParentWindow", dynlib: dllname.}
proc RadioButton_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "RadioButton_SetParentWindow", dynlib: dllname.}
proc RadioButton_GetShowing*(AObj: pointer): bool {.importc: "RadioButton_GetShowing", dynlib: dllname.}
proc RadioButton_GetUseDockManager*(AObj: pointer): bool {.importc: "RadioButton_GetUseDockManager", dynlib: dllname.}
proc RadioButton_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "RadioButton_SetUseDockManager", dynlib: dllname.}
proc RadioButton_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "RadioButton_GetBoundsRect", dynlib: dllname.}
proc RadioButton_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "RadioButton_SetBoundsRect", dynlib: dllname.}
proc RadioButton_GetClientHeight*(AObj: pointer): int32 {.importc: "RadioButton_GetClientHeight", dynlib: dllname.}
proc RadioButton_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "RadioButton_SetClientHeight", dynlib: dllname.}
proc RadioButton_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "RadioButton_GetClientOrigin", dynlib: dllname.}
proc RadioButton_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "RadioButton_GetClientRect", dynlib: dllname.}
proc RadioButton_GetClientWidth*(AObj: pointer): int32 {.importc: "RadioButton_GetClientWidth", dynlib: dllname.}
proc RadioButton_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "RadioButton_SetClientWidth", dynlib: dllname.}
proc RadioButton_GetControlState*(AObj: pointer): TControlState {.importc: "RadioButton_GetControlState", dynlib: dllname.}
proc RadioButton_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "RadioButton_SetControlState", dynlib: dllname.}
proc RadioButton_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "RadioButton_GetControlStyle", dynlib: dllname.}
proc RadioButton_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "RadioButton_SetControlStyle", dynlib: dllname.}
proc RadioButton_GetFloating*(AObj: pointer): bool {.importc: "RadioButton_GetFloating", dynlib: dllname.}
proc RadioButton_GetParent*(AObj: pointer): pointer {.importc: "RadioButton_GetParent", dynlib: dllname.}
proc RadioButton_SetParent*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetParent", dynlib: dllname.}
proc RadioButton_GetLeft*(AObj: pointer): int32 {.importc: "RadioButton_GetLeft", dynlib: dllname.}
proc RadioButton_SetLeft*(AObj: pointer, AValue: int32) {.importc: "RadioButton_SetLeft", dynlib: dllname.}
proc RadioButton_GetTop*(AObj: pointer): int32 {.importc: "RadioButton_GetTop", dynlib: dllname.}
proc RadioButton_SetTop*(AObj: pointer, AValue: int32) {.importc: "RadioButton_SetTop", dynlib: dllname.}
proc RadioButton_GetWidth*(AObj: pointer): int32 {.importc: "RadioButton_GetWidth", dynlib: dllname.}
proc RadioButton_SetWidth*(AObj: pointer, AValue: int32) {.importc: "RadioButton_SetWidth", dynlib: dllname.}
proc RadioButton_GetHeight*(AObj: pointer): int32 {.importc: "RadioButton_GetHeight", dynlib: dllname.}
proc RadioButton_SetHeight*(AObj: pointer, AValue: int32) {.importc: "RadioButton_SetHeight", dynlib: dllname.}
proc RadioButton_GetCursor*(AObj: pointer): TCursor {.importc: "RadioButton_GetCursor", dynlib: dllname.}
proc RadioButton_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "RadioButton_SetCursor", dynlib: dllname.}
proc RadioButton_GetHint*(AObj: pointer): cstring {.importc: "RadioButton_GetHint", dynlib: dllname.}
proc RadioButton_SetHint*(AObj: pointer, AValue: cstring) {.importc: "RadioButton_SetHint", dynlib: dllname.}
proc RadioButton_GetComponentCount*(AObj: pointer): int32 {.importc: "RadioButton_GetComponentCount", dynlib: dllname.}
proc RadioButton_GetComponentIndex*(AObj: pointer): int32 {.importc: "RadioButton_GetComponentIndex", dynlib: dllname.}
proc RadioButton_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "RadioButton_SetComponentIndex", dynlib: dllname.}
proc RadioButton_GetOwner*(AObj: pointer): pointer {.importc: "RadioButton_GetOwner", dynlib: dllname.}
proc RadioButton_GetName*(AObj: pointer): cstring {.importc: "RadioButton_GetName", dynlib: dllname.}
proc RadioButton_SetName*(AObj: pointer, AValue: cstring) {.importc: "RadioButton_SetName", dynlib: dllname.}
proc RadioButton_GetTag*(AObj: pointer): int {.importc: "RadioButton_GetTag", dynlib: dllname.}
proc RadioButton_SetTag*(AObj: pointer, AValue: int) {.importc: "RadioButton_SetTag", dynlib: dllname.}
proc RadioButton_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "RadioButton_GetAnchorSideLeft", dynlib: dllname.}
proc RadioButton_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetAnchorSideLeft", dynlib: dllname.}
proc RadioButton_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "RadioButton_GetAnchorSideTop", dynlib: dllname.}
proc RadioButton_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetAnchorSideTop", dynlib: dllname.}
proc RadioButton_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "RadioButton_GetAnchorSideRight", dynlib: dllname.}
proc RadioButton_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetAnchorSideRight", dynlib: dllname.}
proc RadioButton_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "RadioButton_GetAnchorSideBottom", dynlib: dllname.}
proc RadioButton_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetAnchorSideBottom", dynlib: dllname.}
proc RadioButton_GetChildSizing*(AObj: pointer): pointer {.importc: "RadioButton_GetChildSizing", dynlib: dllname.}
proc RadioButton_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetChildSizing", dynlib: dllname.}
proc RadioButton_GetBorderSpacing*(AObj: pointer): pointer {.importc: "RadioButton_GetBorderSpacing", dynlib: dllname.}
proc RadioButton_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "RadioButton_SetBorderSpacing", dynlib: dllname.}
proc RadioButton_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "RadioButton_GetDockClients", dynlib: dllname.}
proc RadioButton_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "RadioButton_GetControls", dynlib: dllname.}
proc RadioButton_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "RadioButton_GetComponents", dynlib: dllname.}
proc RadioButton_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "RadioButton_GetAnchorSide", dynlib: dllname.}
proc RadioButton_StaticClassType*(): TClass {.importc: "RadioButton_StaticClassType", dynlib: dllname.}
# ----------------- TGroupBox ----------------------
proc GroupBox_Create*(AOwner: pointer): pointer {.importc: "GroupBox_Create", dynlib: dllname.}
proc GroupBox_Free*(AObj: pointer) {.importc: "GroupBox_Free", dynlib: dllname.}
proc GroupBox_CanFocus*(AObj: pointer): bool {.importc: "GroupBox_CanFocus", dynlib: dllname.}
proc GroupBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "GroupBox_ContainsControl", dynlib: dllname.}
proc GroupBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "GroupBox_ControlAtPos", dynlib: dllname.}
proc GroupBox_DisableAlign*(AObj: pointer) {.importc: "GroupBox_DisableAlign", dynlib: dllname.}
proc GroupBox_EnableAlign*(AObj: pointer) {.importc: "GroupBox_EnableAlign", dynlib: dllname.}
proc GroupBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "GroupBox_FindChildControl", dynlib: dllname.}
proc GroupBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "GroupBox_FlipChildren", dynlib: dllname.}
proc GroupBox_Focused*(AObj: pointer): bool {.importc: "GroupBox_Focused", dynlib: dllname.}
proc GroupBox_HandleAllocated*(AObj: pointer): bool {.importc: "GroupBox_HandleAllocated", dynlib: dllname.}
proc GroupBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "GroupBox_InsertControl", dynlib: dllname.}
proc GroupBox_Invalidate*(AObj: pointer) {.importc: "GroupBox_Invalidate", dynlib: dllname.}
proc GroupBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "GroupBox_PaintTo", dynlib: dllname.}
proc GroupBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "GroupBox_RemoveControl", dynlib: dllname.}
proc GroupBox_Realign*(AObj: pointer) {.importc: "GroupBox_Realign", dynlib: dllname.}
proc GroupBox_Repaint*(AObj: pointer) {.importc: "GroupBox_Repaint", dynlib: dllname.}
proc GroupBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "GroupBox_ScaleBy", dynlib: dllname.}
proc GroupBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "GroupBox_ScrollBy", dynlib: dllname.}
proc GroupBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "GroupBox_SetBounds", dynlib: dllname.}
proc GroupBox_SetFocus*(AObj: pointer) {.importc: "GroupBox_SetFocus", dynlib: dllname.}
proc GroupBox_Update*(AObj: pointer) {.importc: "GroupBox_Update", dynlib: dllname.}
proc GroupBox_BringToFront*(AObj: pointer) {.importc: "GroupBox_BringToFront", dynlib: dllname.}
proc GroupBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "GroupBox_ClientToScreen", dynlib: dllname.}
proc GroupBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "GroupBox_ClientToParent", dynlib: dllname.}
proc GroupBox_Dragging*(AObj: pointer): bool {.importc: "GroupBox_Dragging", dynlib: dllname.}
proc GroupBox_HasParent*(AObj: pointer): bool {.importc: "GroupBox_HasParent", dynlib: dllname.}
proc GroupBox_Hide*(AObj: pointer) {.importc: "GroupBox_Hide", dynlib: dllname.}
proc GroupBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "GroupBox_Perform", dynlib: dllname.}
proc GroupBox_Refresh*(AObj: pointer) {.importc: "GroupBox_Refresh", dynlib: dllname.}
proc GroupBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "GroupBox_ScreenToClient", dynlib: dllname.}
proc GroupBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "GroupBox_ParentToClient", dynlib: dllname.}
proc GroupBox_SendToBack*(AObj: pointer) {.importc: "GroupBox_SendToBack", dynlib: dllname.}
proc GroupBox_Show*(AObj: pointer) {.importc: "GroupBox_Show", dynlib: dllname.}
proc GroupBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "GroupBox_GetTextBuf", dynlib: dllname.}
proc GroupBox_GetTextLen*(AObj: pointer): int32 {.importc: "GroupBox_GetTextLen", dynlib: dllname.}
proc GroupBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "GroupBox_SetTextBuf", dynlib: dllname.}
proc GroupBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "GroupBox_FindComponent", dynlib: dllname.}
proc GroupBox_GetNamePath*(AObj: pointer): cstring {.importc: "GroupBox_GetNamePath", dynlib: dllname.}
proc GroupBox_Assign*(AObj: pointer, Source: pointer) {.importc: "GroupBox_Assign", dynlib: dllname.}
proc GroupBox_ClassType*(AObj: pointer): TClass {.importc: "GroupBox_ClassType", dynlib: dllname.}
proc GroupBox_ClassName*(AObj: pointer): cstring {.importc: "GroupBox_ClassName", dynlib: dllname.}
proc GroupBox_InstanceSize*(AObj: pointer): int32 {.importc: "GroupBox_InstanceSize", dynlib: dllname.}
proc GroupBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "GroupBox_InheritsFrom", dynlib: dllname.}
proc GroupBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "GroupBox_Equals", dynlib: dllname.}
proc GroupBox_GetHashCode*(AObj: pointer): int32 {.importc: "GroupBox_GetHashCode", dynlib: dllname.}
proc GroupBox_ToString*(AObj: pointer): cstring {.importc: "GroupBox_ToString", dynlib: dllname.}
proc GroupBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "GroupBox_AnchorToNeighbour", dynlib: dllname.}
proc GroupBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "GroupBox_AnchorParallel", dynlib: dllname.}
proc GroupBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "GroupBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc GroupBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "GroupBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc GroupBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "GroupBox_AnchorSame", dynlib: dllname.}
proc GroupBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "GroupBox_AnchorAsAlign", dynlib: dllname.}
proc GroupBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "GroupBox_AnchorClient", dynlib: dllname.}
proc GroupBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_ScaleDesignToForm", dynlib: dllname.}
proc GroupBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_ScaleFormToDesign", dynlib: dllname.}
proc GroupBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_Scale96ToForm", dynlib: dllname.}
proc GroupBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_ScaleFormTo96", dynlib: dllname.}
proc GroupBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_Scale96ToFont", dynlib: dllname.}
proc GroupBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_ScaleFontTo96", dynlib: dllname.}
proc GroupBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_ScaleScreenToFont", dynlib: dllname.}
proc GroupBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_ScaleFontToScreen", dynlib: dllname.}
proc GroupBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_Scale96ToScreen", dynlib: dllname.}
proc GroupBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "GroupBox_ScaleScreenTo96", dynlib: dllname.}
proc GroupBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "GroupBox_AutoAdjustLayout", dynlib: dllname.}
proc GroupBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "GroupBox_FixDesignFontsPPI", dynlib: dllname.}
proc GroupBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "GroupBox_ScaleFontsPPI", dynlib: dllname.}
proc GroupBox_GetAlign*(AObj: pointer): TAlign {.importc: "GroupBox_GetAlign", dynlib: dllname.}
proc GroupBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "GroupBox_SetAlign", dynlib: dllname.}
proc GroupBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "GroupBox_GetAnchors", dynlib: dllname.}
proc GroupBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "GroupBox_SetAnchors", dynlib: dllname.}
proc GroupBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "GroupBox_GetBiDiMode", dynlib: dllname.}
proc GroupBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "GroupBox_SetBiDiMode", dynlib: dllname.}
proc GroupBox_GetCaption*(AObj: pointer): cstring {.importc: "GroupBox_GetCaption", dynlib: dllname.}
proc GroupBox_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "GroupBox_SetCaption", dynlib: dllname.}
proc GroupBox_GetColor*(AObj: pointer): TColor {.importc: "GroupBox_GetColor", dynlib: dllname.}
proc GroupBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "GroupBox_SetColor", dynlib: dllname.}
proc GroupBox_GetConstraints*(AObj: pointer): pointer {.importc: "GroupBox_GetConstraints", dynlib: dllname.}
proc GroupBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetConstraints", dynlib: dllname.}
proc GroupBox_GetDockSite*(AObj: pointer): bool {.importc: "GroupBox_GetDockSite", dynlib: dllname.}
proc GroupBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetDockSite", dynlib: dllname.}
proc GroupBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "GroupBox_GetDoubleBuffered", dynlib: dllname.}
proc GroupBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetDoubleBuffered", dynlib: dllname.}
proc GroupBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "GroupBox_GetDragCursor", dynlib: dllname.}
proc GroupBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "GroupBox_SetDragCursor", dynlib: dllname.}
proc GroupBox_GetDragKind*(AObj: pointer): TDragKind {.importc: "GroupBox_GetDragKind", dynlib: dllname.}
proc GroupBox_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "GroupBox_SetDragKind", dynlib: dllname.}
proc GroupBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "GroupBox_GetDragMode", dynlib: dllname.}
proc GroupBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "GroupBox_SetDragMode", dynlib: dllname.}
proc GroupBox_GetEnabled*(AObj: pointer): bool {.importc: "GroupBox_GetEnabled", dynlib: dllname.}
proc GroupBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetEnabled", dynlib: dllname.}
proc GroupBox_GetFont*(AObj: pointer): pointer {.importc: "GroupBox_GetFont", dynlib: dllname.}
proc GroupBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetFont", dynlib: dllname.}
proc GroupBox_GetParentColor*(AObj: pointer): bool {.importc: "GroupBox_GetParentColor", dynlib: dllname.}
proc GroupBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetParentColor", dynlib: dllname.}
proc GroupBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "GroupBox_GetParentDoubleBuffered", dynlib: dllname.}
proc GroupBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetParentDoubleBuffered", dynlib: dllname.}
proc GroupBox_GetParentFont*(AObj: pointer): bool {.importc: "GroupBox_GetParentFont", dynlib: dllname.}
proc GroupBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetParentFont", dynlib: dllname.}
proc GroupBox_GetParentShowHint*(AObj: pointer): bool {.importc: "GroupBox_GetParentShowHint", dynlib: dllname.}
proc GroupBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetParentShowHint", dynlib: dllname.}
proc GroupBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "GroupBox_GetPopupMenu", dynlib: dllname.}
proc GroupBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetPopupMenu", dynlib: dllname.}
proc GroupBox_GetShowHint*(AObj: pointer): bool {.importc: "GroupBox_GetShowHint", dynlib: dllname.}
proc GroupBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetShowHint", dynlib: dllname.}
proc GroupBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "GroupBox_GetTabOrder", dynlib: dllname.}
proc GroupBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "GroupBox_SetTabOrder", dynlib: dllname.}
proc GroupBox_GetTabStop*(AObj: pointer): bool {.importc: "GroupBox_GetTabStop", dynlib: dllname.}
proc GroupBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetTabStop", dynlib: dllname.}
proc GroupBox_GetVisible*(AObj: pointer): bool {.importc: "GroupBox_GetVisible", dynlib: dllname.}
proc GroupBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetVisible", dynlib: dllname.}
proc GroupBox_SetOnAlignPosition*(AObj: pointer, AEventId: TAlignPositionEvent) {.importc: "GroupBox_SetOnAlignPosition", dynlib: dllname.}
proc GroupBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "GroupBox_SetOnClick", dynlib: dllname.}
proc GroupBox_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "GroupBox_SetOnContextPopup", dynlib: dllname.}
proc GroupBox_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "GroupBox_SetOnDblClick", dynlib: dllname.}
proc GroupBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "GroupBox_SetOnDragDrop", dynlib: dllname.}
proc GroupBox_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "GroupBox_SetOnDockDrop", dynlib: dllname.}
proc GroupBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "GroupBox_SetOnDragOver", dynlib: dllname.}
proc GroupBox_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "GroupBox_SetOnEndDock", dynlib: dllname.}
proc GroupBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "GroupBox_SetOnEndDrag", dynlib: dllname.}
proc GroupBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "GroupBox_SetOnEnter", dynlib: dllname.}
proc GroupBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "GroupBox_SetOnExit", dynlib: dllname.}
proc GroupBox_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "GroupBox_SetOnGetSiteInfo", dynlib: dllname.}
proc GroupBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "GroupBox_SetOnMouseDown", dynlib: dllname.}
proc GroupBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "GroupBox_SetOnMouseEnter", dynlib: dllname.}
proc GroupBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "GroupBox_SetOnMouseLeave", dynlib: dllname.}
proc GroupBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "GroupBox_SetOnMouseMove", dynlib: dllname.}
proc GroupBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "GroupBox_SetOnMouseUp", dynlib: dllname.}
proc GroupBox_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "GroupBox_SetOnStartDock", dynlib: dllname.}
proc GroupBox_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "GroupBox_SetOnUnDock", dynlib: dllname.}
proc GroupBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "GroupBox_GetDockClientCount", dynlib: dllname.}
proc GroupBox_GetMouseInClient*(AObj: pointer): bool {.importc: "GroupBox_GetMouseInClient", dynlib: dllname.}
proc GroupBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "GroupBox_GetVisibleDockClientCount", dynlib: dllname.}
proc GroupBox_GetBrush*(AObj: pointer): pointer {.importc: "GroupBox_GetBrush", dynlib: dllname.}
proc GroupBox_GetControlCount*(AObj: pointer): int32 {.importc: "GroupBox_GetControlCount", dynlib: dllname.}
proc GroupBox_GetHandle*(AObj: pointer): HWND {.importc: "GroupBox_GetHandle", dynlib: dllname.}
proc GroupBox_GetParentWindow*(AObj: pointer): HWND {.importc: "GroupBox_GetParentWindow", dynlib: dllname.}
proc GroupBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "GroupBox_SetParentWindow", dynlib: dllname.}
proc GroupBox_GetShowing*(AObj: pointer): bool {.importc: "GroupBox_GetShowing", dynlib: dllname.}
proc GroupBox_GetUseDockManager*(AObj: pointer): bool {.importc: "GroupBox_GetUseDockManager", dynlib: dllname.}
proc GroupBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "GroupBox_SetUseDockManager", dynlib: dllname.}
proc GroupBox_GetAction*(AObj: pointer): pointer {.importc: "GroupBox_GetAction", dynlib: dllname.}
proc GroupBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetAction", dynlib: dllname.}
proc GroupBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "GroupBox_GetBoundsRect", dynlib: dllname.}
proc GroupBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "GroupBox_SetBoundsRect", dynlib: dllname.}
proc GroupBox_GetClientHeight*(AObj: pointer): int32 {.importc: "GroupBox_GetClientHeight", dynlib: dllname.}
proc GroupBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "GroupBox_SetClientHeight", dynlib: dllname.}
proc GroupBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "GroupBox_GetClientOrigin", dynlib: dllname.}
proc GroupBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "GroupBox_GetClientRect", dynlib: dllname.}
proc GroupBox_GetClientWidth*(AObj: pointer): int32 {.importc: "GroupBox_GetClientWidth", dynlib: dllname.}
proc GroupBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "GroupBox_SetClientWidth", dynlib: dllname.}
proc GroupBox_GetControlState*(AObj: pointer): TControlState {.importc: "GroupBox_GetControlState", dynlib: dllname.}
proc GroupBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "GroupBox_SetControlState", dynlib: dllname.}
proc GroupBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "GroupBox_GetControlStyle", dynlib: dllname.}
proc GroupBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "GroupBox_SetControlStyle", dynlib: dllname.}
proc GroupBox_GetFloating*(AObj: pointer): bool {.importc: "GroupBox_GetFloating", dynlib: dllname.}
proc GroupBox_GetParent*(AObj: pointer): pointer {.importc: "GroupBox_GetParent", dynlib: dllname.}
proc GroupBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetParent", dynlib: dllname.}
proc GroupBox_GetLeft*(AObj: pointer): int32 {.importc: "GroupBox_GetLeft", dynlib: dllname.}
proc GroupBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "GroupBox_SetLeft", dynlib: dllname.}
proc GroupBox_GetTop*(AObj: pointer): int32 {.importc: "GroupBox_GetTop", dynlib: dllname.}
proc GroupBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "GroupBox_SetTop", dynlib: dllname.}
proc GroupBox_GetWidth*(AObj: pointer): int32 {.importc: "GroupBox_GetWidth", dynlib: dllname.}
proc GroupBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "GroupBox_SetWidth", dynlib: dllname.}
proc GroupBox_GetHeight*(AObj: pointer): int32 {.importc: "GroupBox_GetHeight", dynlib: dllname.}
proc GroupBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "GroupBox_SetHeight", dynlib: dllname.}
proc GroupBox_GetCursor*(AObj: pointer): TCursor {.importc: "GroupBox_GetCursor", dynlib: dllname.}
proc GroupBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "GroupBox_SetCursor", dynlib: dllname.}
proc GroupBox_GetHint*(AObj: pointer): cstring {.importc: "GroupBox_GetHint", dynlib: dllname.}
proc GroupBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "GroupBox_SetHint", dynlib: dllname.}
proc GroupBox_GetComponentCount*(AObj: pointer): int32 {.importc: "GroupBox_GetComponentCount", dynlib: dllname.}
proc GroupBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "GroupBox_GetComponentIndex", dynlib: dllname.}
proc GroupBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "GroupBox_SetComponentIndex", dynlib: dllname.}
proc GroupBox_GetOwner*(AObj: pointer): pointer {.importc: "GroupBox_GetOwner", dynlib: dllname.}
proc GroupBox_GetName*(AObj: pointer): cstring {.importc: "GroupBox_GetName", dynlib: dllname.}
proc GroupBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "GroupBox_SetName", dynlib: dllname.}
proc GroupBox_GetTag*(AObj: pointer): int {.importc: "GroupBox_GetTag", dynlib: dllname.}
proc GroupBox_SetTag*(AObj: pointer, AValue: int) {.importc: "GroupBox_SetTag", dynlib: dllname.}
proc GroupBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "GroupBox_GetAnchorSideLeft", dynlib: dllname.}
proc GroupBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetAnchorSideLeft", dynlib: dllname.}
proc GroupBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "GroupBox_GetAnchorSideTop", dynlib: dllname.}
proc GroupBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetAnchorSideTop", dynlib: dllname.}
proc GroupBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "GroupBox_GetAnchorSideRight", dynlib: dllname.}
proc GroupBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetAnchorSideRight", dynlib: dllname.}
proc GroupBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "GroupBox_GetAnchorSideBottom", dynlib: dllname.}
proc GroupBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetAnchorSideBottom", dynlib: dllname.}
proc GroupBox_GetChildSizing*(AObj: pointer): pointer {.importc: "GroupBox_GetChildSizing", dynlib: dllname.}
proc GroupBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetChildSizing", dynlib: dllname.}
proc GroupBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "GroupBox_GetBorderSpacing", dynlib: dllname.}
proc GroupBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "GroupBox_SetBorderSpacing", dynlib: dllname.}
proc GroupBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "GroupBox_GetDockClients", dynlib: dllname.}
proc GroupBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "GroupBox_GetControls", dynlib: dllname.}
proc GroupBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "GroupBox_GetComponents", dynlib: dllname.}
proc GroupBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "GroupBox_GetAnchorSide", dynlib: dllname.}
proc GroupBox_StaticClassType*(): TClass {.importc: "GroupBox_StaticClassType", dynlib: dllname.}
# ----------------- TLabel ----------------------
proc Label_Create*(AOwner: pointer): pointer {.importc: "Label_Create", dynlib: dllname.}
proc Label_Free*(AObj: pointer) {.importc: "Label_Free", dynlib: dllname.}
proc Label_BringToFront*(AObj: pointer) {.importc: "Label_BringToFront", dynlib: dllname.}
proc Label_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Label_ClientToScreen", dynlib: dllname.}
proc Label_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Label_ClientToParent", dynlib: dllname.}
proc Label_Dragging*(AObj: pointer): bool {.importc: "Label_Dragging", dynlib: dllname.}
proc Label_HasParent*(AObj: pointer): bool {.importc: "Label_HasParent", dynlib: dllname.}
proc Label_Hide*(AObj: pointer) {.importc: "Label_Hide", dynlib: dllname.}
proc Label_Invalidate*(AObj: pointer) {.importc: "Label_Invalidate", dynlib: dllname.}
proc Label_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Label_Perform", dynlib: dllname.}
proc Label_Refresh*(AObj: pointer) {.importc: "Label_Refresh", dynlib: dllname.}
proc Label_Repaint*(AObj: pointer) {.importc: "Label_Repaint", dynlib: dllname.}
proc Label_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Label_ScreenToClient", dynlib: dllname.}
proc Label_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Label_ParentToClient", dynlib: dllname.}
proc Label_SendToBack*(AObj: pointer) {.importc: "Label_SendToBack", dynlib: dllname.}
proc Label_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Label_SetBounds", dynlib: dllname.}
proc Label_Show*(AObj: pointer) {.importc: "Label_Show", dynlib: dllname.}
proc Label_Update*(AObj: pointer) {.importc: "Label_Update", dynlib: dllname.}
proc Label_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Label_GetTextBuf", dynlib: dllname.}
proc Label_GetTextLen*(AObj: pointer): int32 {.importc: "Label_GetTextLen", dynlib: dllname.}
proc Label_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Label_SetTextBuf", dynlib: dllname.}
proc Label_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Label_FindComponent", dynlib: dllname.}
proc Label_GetNamePath*(AObj: pointer): cstring {.importc: "Label_GetNamePath", dynlib: dllname.}
proc Label_Assign*(AObj: pointer, Source: pointer) {.importc: "Label_Assign", dynlib: dllname.}
proc Label_ClassType*(AObj: pointer): TClass {.importc: "Label_ClassType", dynlib: dllname.}
proc Label_ClassName*(AObj: pointer): cstring {.importc: "Label_ClassName", dynlib: dllname.}
proc Label_InstanceSize*(AObj: pointer): int32 {.importc: "Label_InstanceSize", dynlib: dllname.}
proc Label_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Label_InheritsFrom", dynlib: dllname.}
proc Label_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Label_Equals", dynlib: dllname.}
proc Label_GetHashCode*(AObj: pointer): int32 {.importc: "Label_GetHashCode", dynlib: dllname.}
proc Label_ToString*(AObj: pointer): cstring {.importc: "Label_ToString", dynlib: dllname.}
proc Label_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Label_AnchorToNeighbour", dynlib: dllname.}
proc Label_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Label_AnchorParallel", dynlib: dllname.}
proc Label_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Label_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Label_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Label_AnchorVerticalCenterTo", dynlib: dllname.}
proc Label_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Label_AnchorSame", dynlib: dllname.}
proc Label_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Label_AnchorAsAlign", dynlib: dllname.}
proc Label_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Label_AnchorClient", dynlib: dllname.}
proc Label_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Label_ScaleDesignToForm", dynlib: dllname.}
proc Label_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Label_ScaleFormToDesign", dynlib: dllname.}
proc Label_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Label_Scale96ToForm", dynlib: dllname.}
proc Label_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Label_ScaleFormTo96", dynlib: dllname.}
proc Label_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Label_Scale96ToFont", dynlib: dllname.}
proc Label_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Label_ScaleFontTo96", dynlib: dllname.}
proc Label_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Label_ScaleScreenToFont", dynlib: dllname.}
proc Label_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Label_ScaleFontToScreen", dynlib: dllname.}
proc Label_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Label_Scale96ToScreen", dynlib: dllname.}
proc Label_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Label_ScaleScreenTo96", dynlib: dllname.}
proc Label_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Label_AutoAdjustLayout", dynlib: dllname.}
proc Label_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Label_FixDesignFontsPPI", dynlib: dllname.}
proc Label_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Label_ScaleFontsPPI", dynlib: dllname.}
proc Label_GetOptimalFill*(AObj: pointer): bool {.importc: "Label_GetOptimalFill", dynlib: dllname.}
proc Label_SetOptimalFill*(AObj: pointer, AValue: bool) {.importc: "Label_SetOptimalFill", dynlib: dllname.}
proc Label_GetAlign*(AObj: pointer): TAlign {.importc: "Label_GetAlign", dynlib: dllname.}
proc Label_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Label_SetAlign", dynlib: dllname.}
proc Label_GetAlignment*(AObj: pointer): TAlignment {.importc: "Label_GetAlignment", dynlib: dllname.}
proc Label_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "Label_SetAlignment", dynlib: dllname.}
proc Label_GetAnchors*(AObj: pointer): TAnchors {.importc: "Label_GetAnchors", dynlib: dllname.}
proc Label_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Label_SetAnchors", dynlib: dllname.}
proc Label_GetAutoSize*(AObj: pointer): bool {.importc: "Label_GetAutoSize", dynlib: dllname.}
proc Label_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "Label_SetAutoSize", dynlib: dllname.}
proc Label_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Label_GetBiDiMode", dynlib: dllname.}
proc Label_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Label_SetBiDiMode", dynlib: dllname.}
proc Label_GetCaption*(AObj: pointer): cstring {.importc: "Label_GetCaption", dynlib: dllname.}
proc Label_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "Label_SetCaption", dynlib: dllname.}
proc Label_GetColor*(AObj: pointer): TColor {.importc: "Label_GetColor", dynlib: dllname.}
proc Label_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Label_SetColor", dynlib: dllname.}
proc Label_GetConstraints*(AObj: pointer): pointer {.importc: "Label_GetConstraints", dynlib: dllname.}
proc Label_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Label_SetConstraints", dynlib: dllname.}
proc Label_GetDragCursor*(AObj: pointer): TCursor {.importc: "Label_GetDragCursor", dynlib: dllname.}
proc Label_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Label_SetDragCursor", dynlib: dllname.}
proc Label_GetDragKind*(AObj: pointer): TDragKind {.importc: "Label_GetDragKind", dynlib: dllname.}
proc Label_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Label_SetDragKind", dynlib: dllname.}
proc Label_GetDragMode*(AObj: pointer): TDragMode {.importc: "Label_GetDragMode", dynlib: dllname.}
proc Label_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Label_SetDragMode", dynlib: dllname.}
proc Label_GetEnabled*(AObj: pointer): bool {.importc: "Label_GetEnabled", dynlib: dllname.}
proc Label_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Label_SetEnabled", dynlib: dllname.}
proc Label_GetFocusControl*(AObj: pointer): pointer {.importc: "Label_GetFocusControl", dynlib: dllname.}
proc Label_SetFocusControl*(AObj: pointer, AValue: pointer) {.importc: "Label_SetFocusControl", dynlib: dllname.}
proc Label_GetFont*(AObj: pointer): pointer {.importc: "Label_GetFont", dynlib: dllname.}
proc Label_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Label_SetFont", dynlib: dllname.}
proc Label_GetParentColor*(AObj: pointer): bool {.importc: "Label_GetParentColor", dynlib: dllname.}
proc Label_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "Label_SetParentColor", dynlib: dllname.}
proc Label_GetParentFont*(AObj: pointer): bool {.importc: "Label_GetParentFont", dynlib: dllname.}
proc Label_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Label_SetParentFont", dynlib: dllname.}
proc Label_GetParentShowHint*(AObj: pointer): bool {.importc: "Label_GetParentShowHint", dynlib: dllname.}
proc Label_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Label_SetParentShowHint", dynlib: dllname.}
proc Label_GetPopupMenu*(AObj: pointer): pointer {.importc: "Label_GetPopupMenu", dynlib: dllname.}
proc Label_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Label_SetPopupMenu", dynlib: dllname.}
proc Label_GetShowAccelChar*(AObj: pointer): bool {.importc: "Label_GetShowAccelChar", dynlib: dllname.}
proc Label_SetShowAccelChar*(AObj: pointer, AValue: bool) {.importc: "Label_SetShowAccelChar", dynlib: dllname.}
proc Label_GetShowHint*(AObj: pointer): bool {.importc: "Label_GetShowHint", dynlib: dllname.}
proc Label_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Label_SetShowHint", dynlib: dllname.}
proc Label_GetTransparent*(AObj: pointer): bool {.importc: "Label_GetTransparent", dynlib: dllname.}
proc Label_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "Label_SetTransparent", dynlib: dllname.}
proc Label_GetLayout*(AObj: pointer): TTextLayout {.importc: "Label_GetLayout", dynlib: dllname.}
proc Label_SetLayout*(AObj: pointer, AValue: TTextLayout) {.importc: "Label_SetLayout", dynlib: dllname.}
proc Label_GetVisible*(AObj: pointer): bool {.importc: "Label_GetVisible", dynlib: dllname.}
proc Label_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Label_SetVisible", dynlib: dllname.}
proc Label_GetWordWrap*(AObj: pointer): bool {.importc: "Label_GetWordWrap", dynlib: dllname.}
proc Label_SetWordWrap*(AObj: pointer, AValue: bool) {.importc: "Label_SetWordWrap", dynlib: dllname.}
proc Label_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Label_SetOnClick", dynlib: dllname.}
proc Label_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "Label_SetOnContextPopup", dynlib: dllname.}
proc Label_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Label_SetOnDblClick", dynlib: dllname.}
proc Label_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Label_SetOnDragDrop", dynlib: dllname.}
proc Label_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Label_SetOnDragOver", dynlib: dllname.}
proc Label_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Label_SetOnEndDrag", dynlib: dllname.}
proc Label_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Label_SetOnMouseDown", dynlib: dllname.}
proc Label_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Label_SetOnMouseMove", dynlib: dllname.}
proc Label_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Label_SetOnMouseUp", dynlib: dllname.}
proc Label_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Label_SetOnMouseEnter", dynlib: dllname.}
proc Label_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Label_SetOnMouseLeave", dynlib: dllname.}
proc Label_GetCanvas*(AObj: pointer): pointer {.importc: "Label_GetCanvas", dynlib: dllname.}
proc Label_GetAction*(AObj: pointer): pointer {.importc: "Label_GetAction", dynlib: dllname.}
proc Label_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Label_SetAction", dynlib: dllname.}
proc Label_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Label_GetBoundsRect", dynlib: dllname.}
proc Label_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Label_SetBoundsRect", dynlib: dllname.}
proc Label_GetClientHeight*(AObj: pointer): int32 {.importc: "Label_GetClientHeight", dynlib: dllname.}
proc Label_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Label_SetClientHeight", dynlib: dllname.}
proc Label_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Label_GetClientOrigin", dynlib: dllname.}
proc Label_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Label_GetClientRect", dynlib: dllname.}
proc Label_GetClientWidth*(AObj: pointer): int32 {.importc: "Label_GetClientWidth", dynlib: dllname.}
proc Label_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Label_SetClientWidth", dynlib: dllname.}
proc Label_GetControlState*(AObj: pointer): TControlState {.importc: "Label_GetControlState", dynlib: dllname.}
proc Label_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Label_SetControlState", dynlib: dllname.}
proc Label_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Label_GetControlStyle", dynlib: dllname.}
proc Label_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Label_SetControlStyle", dynlib: dllname.}
proc Label_GetFloating*(AObj: pointer): bool {.importc: "Label_GetFloating", dynlib: dllname.}
proc Label_GetParent*(AObj: pointer): pointer {.importc: "Label_GetParent", dynlib: dllname.}
proc Label_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Label_SetParent", dynlib: dllname.}
proc Label_GetLeft*(AObj: pointer): int32 {.importc: "Label_GetLeft", dynlib: dllname.}
proc Label_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Label_SetLeft", dynlib: dllname.}
proc Label_GetTop*(AObj: pointer): int32 {.importc: "Label_GetTop", dynlib: dllname.}
proc Label_SetTop*(AObj: pointer, AValue: int32) {.importc: "Label_SetTop", dynlib: dllname.}
proc Label_GetWidth*(AObj: pointer): int32 {.importc: "Label_GetWidth", dynlib: dllname.}
proc Label_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Label_SetWidth", dynlib: dllname.}
proc Label_GetHeight*(AObj: pointer): int32 {.importc: "Label_GetHeight", dynlib: dllname.}
proc Label_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Label_SetHeight", dynlib: dllname.}
proc Label_GetCursor*(AObj: pointer): TCursor {.importc: "Label_GetCursor", dynlib: dllname.}
proc Label_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Label_SetCursor", dynlib: dllname.}
proc Label_GetHint*(AObj: pointer): cstring {.importc: "Label_GetHint", dynlib: dllname.}
proc Label_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Label_SetHint", dynlib: dllname.}
proc Label_GetComponentCount*(AObj: pointer): int32 {.importc: "Label_GetComponentCount", dynlib: dllname.}
proc Label_GetComponentIndex*(AObj: pointer): int32 {.importc: "Label_GetComponentIndex", dynlib: dllname.}
proc Label_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Label_SetComponentIndex", dynlib: dllname.}
proc Label_GetOwner*(AObj: pointer): pointer {.importc: "Label_GetOwner", dynlib: dllname.}
proc Label_GetName*(AObj: pointer): cstring {.importc: "Label_GetName", dynlib: dllname.}
proc Label_SetName*(AObj: pointer, AValue: cstring) {.importc: "Label_SetName", dynlib: dllname.}
proc Label_GetTag*(AObj: pointer): int {.importc: "Label_GetTag", dynlib: dllname.}
proc Label_SetTag*(AObj: pointer, AValue: int) {.importc: "Label_SetTag", dynlib: dllname.}
proc Label_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Label_GetAnchorSideLeft", dynlib: dllname.}
proc Label_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Label_SetAnchorSideLeft", dynlib: dllname.}
proc Label_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Label_GetAnchorSideTop", dynlib: dllname.}
proc Label_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Label_SetAnchorSideTop", dynlib: dllname.}
proc Label_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Label_GetAnchorSideRight", dynlib: dllname.}
proc Label_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Label_SetAnchorSideRight", dynlib: dllname.}
proc Label_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Label_GetAnchorSideBottom", dynlib: dllname.}
proc Label_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Label_SetAnchorSideBottom", dynlib: dllname.}
proc Label_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Label_GetBorderSpacing", dynlib: dllname.}
proc Label_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Label_SetBorderSpacing", dynlib: dllname.}
proc Label_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Label_GetComponents", dynlib: dllname.}
proc Label_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Label_GetAnchorSide", dynlib: dllname.}
proc Label_StaticClassType*(): TClass {.importc: "Label_StaticClassType", dynlib: dllname.}
# ----------------- TListBox ----------------------
proc ListBox_Create*(AOwner: pointer): pointer {.importc: "ListBox_Create", dynlib: dllname.}
proc ListBox_Free*(AObj: pointer) {.importc: "ListBox_Free", dynlib: dllname.}
proc ListBox_AddItem*(AObj: pointer, Item: cstring, AObject: pointer) {.importc: "ListBox_AddItem", dynlib: dllname.}
proc ListBox_Clear*(AObj: pointer) {.importc: "ListBox_Clear", dynlib: dllname.}
proc ListBox_ClearSelection*(AObj: pointer) {.importc: "ListBox_ClearSelection", dynlib: dllname.}
proc ListBox_DeleteSelected*(AObj: pointer) {.importc: "ListBox_DeleteSelected", dynlib: dllname.}
proc ListBox_ItemAtPos*(AObj: pointer, Pos: var TPoint, Existing: bool): int32 {.importc: "ListBox_ItemAtPos", dynlib: dllname.}
proc ListBox_ItemRect*(AObj: pointer, Index: int32, Result: var TRect) {.importc: "ListBox_ItemRect", dynlib: dllname.}
proc ListBox_SelectAll*(AObj: pointer) {.importc: "ListBox_SelectAll", dynlib: dllname.}
proc ListBox_CanFocus*(AObj: pointer): bool {.importc: "ListBox_CanFocus", dynlib: dllname.}
proc ListBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ListBox_ContainsControl", dynlib: dllname.}
proc ListBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ListBox_ControlAtPos", dynlib: dllname.}
proc ListBox_DisableAlign*(AObj: pointer) {.importc: "ListBox_DisableAlign", dynlib: dllname.}
proc ListBox_EnableAlign*(AObj: pointer) {.importc: "ListBox_EnableAlign", dynlib: dllname.}
proc ListBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ListBox_FindChildControl", dynlib: dllname.}
proc ListBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ListBox_FlipChildren", dynlib: dllname.}
proc ListBox_Focused*(AObj: pointer): bool {.importc: "ListBox_Focused", dynlib: dllname.}
proc ListBox_HandleAllocated*(AObj: pointer): bool {.importc: "ListBox_HandleAllocated", dynlib: dllname.}
proc ListBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ListBox_InsertControl", dynlib: dllname.}
proc ListBox_Invalidate*(AObj: pointer) {.importc: "ListBox_Invalidate", dynlib: dllname.}
proc ListBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ListBox_PaintTo", dynlib: dllname.}
proc ListBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ListBox_RemoveControl", dynlib: dllname.}
proc ListBox_Realign*(AObj: pointer) {.importc: "ListBox_Realign", dynlib: dllname.}
proc ListBox_Repaint*(AObj: pointer) {.importc: "ListBox_Repaint", dynlib: dllname.}
proc ListBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ListBox_ScaleBy", dynlib: dllname.}
proc ListBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ListBox_ScrollBy", dynlib: dllname.}
proc ListBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ListBox_SetBounds", dynlib: dllname.}
proc ListBox_SetFocus*(AObj: pointer) {.importc: "ListBox_SetFocus", dynlib: dllname.}
proc ListBox_Update*(AObj: pointer) {.importc: "ListBox_Update", dynlib: dllname.}
proc ListBox_BringToFront*(AObj: pointer) {.importc: "ListBox_BringToFront", dynlib: dllname.}
proc ListBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ListBox_ClientToScreen", dynlib: dllname.}
proc ListBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ListBox_ClientToParent", dynlib: dllname.}
proc ListBox_Dragging*(AObj: pointer): bool {.importc: "ListBox_Dragging", dynlib: dllname.}
proc ListBox_HasParent*(AObj: pointer): bool {.importc: "ListBox_HasParent", dynlib: dllname.}
proc ListBox_Hide*(AObj: pointer) {.importc: "ListBox_Hide", dynlib: dllname.}
proc ListBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ListBox_Perform", dynlib: dllname.}
proc ListBox_Refresh*(AObj: pointer) {.importc: "ListBox_Refresh", dynlib: dllname.}
proc ListBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ListBox_ScreenToClient", dynlib: dllname.}
proc ListBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ListBox_ParentToClient", dynlib: dllname.}
proc ListBox_SendToBack*(AObj: pointer) {.importc: "ListBox_SendToBack", dynlib: dllname.}
proc ListBox_Show*(AObj: pointer) {.importc: "ListBox_Show", dynlib: dllname.}
proc ListBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ListBox_GetTextBuf", dynlib: dllname.}
proc ListBox_GetTextLen*(AObj: pointer): int32 {.importc: "ListBox_GetTextLen", dynlib: dllname.}
proc ListBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ListBox_SetTextBuf", dynlib: dllname.}
proc ListBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ListBox_FindComponent", dynlib: dllname.}
proc ListBox_GetNamePath*(AObj: pointer): cstring {.importc: "ListBox_GetNamePath", dynlib: dllname.}
proc ListBox_Assign*(AObj: pointer, Source: pointer) {.importc: "ListBox_Assign", dynlib: dllname.}
proc ListBox_ClassType*(AObj: pointer): TClass {.importc: "ListBox_ClassType", dynlib: dllname.}
proc ListBox_ClassName*(AObj: pointer): cstring {.importc: "ListBox_ClassName", dynlib: dllname.}
proc ListBox_InstanceSize*(AObj: pointer): int32 {.importc: "ListBox_InstanceSize", dynlib: dllname.}
proc ListBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ListBox_InheritsFrom", dynlib: dllname.}
proc ListBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ListBox_Equals", dynlib: dllname.}
proc ListBox_GetHashCode*(AObj: pointer): int32 {.importc: "ListBox_GetHashCode", dynlib: dllname.}
proc ListBox_ToString*(AObj: pointer): cstring {.importc: "ListBox_ToString", dynlib: dllname.}
proc ListBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ListBox_AnchorToNeighbour", dynlib: dllname.}
proc ListBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ListBox_AnchorParallel", dynlib: dllname.}
proc ListBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ListBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ListBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ListBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc ListBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ListBox_AnchorSame", dynlib: dllname.}
proc ListBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ListBox_AnchorAsAlign", dynlib: dllname.}
proc ListBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ListBox_AnchorClient", dynlib: dllname.}
proc ListBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_ScaleDesignToForm", dynlib: dllname.}
proc ListBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_ScaleFormToDesign", dynlib: dllname.}
proc ListBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_Scale96ToForm", dynlib: dllname.}
proc ListBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_ScaleFormTo96", dynlib: dllname.}
proc ListBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_Scale96ToFont", dynlib: dllname.}
proc ListBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_ScaleFontTo96", dynlib: dllname.}
proc ListBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_ScaleScreenToFont", dynlib: dllname.}
proc ListBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_ScaleFontToScreen", dynlib: dllname.}
proc ListBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_Scale96ToScreen", dynlib: dllname.}
proc ListBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ListBox_ScaleScreenTo96", dynlib: dllname.}
proc ListBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ListBox_AutoAdjustLayout", dynlib: dllname.}
proc ListBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ListBox_FixDesignFontsPPI", dynlib: dllname.}
proc ListBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ListBox_ScaleFontsPPI", dynlib: dllname.}
proc ListBox_GetClickOnSelChange*(AObj: pointer): bool {.importc: "ListBox_GetClickOnSelChange", dynlib: dllname.}
proc ListBox_SetClickOnSelChange*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetClickOnSelChange", dynlib: dllname.}
proc ListBox_GetOptions*(AObj: pointer): TListBoxOptions {.importc: "ListBox_GetOptions", dynlib: dllname.}
proc ListBox_SetOptions*(AObj: pointer, AValue: TListBoxOptions) {.importc: "ListBox_SetOptions", dynlib: dllname.}
proc ListBox_GetTopIndex*(AObj: pointer): int32 {.importc: "ListBox_GetTopIndex", dynlib: dllname.}
proc ListBox_SetTopIndex*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetTopIndex", dynlib: dllname.}
proc ListBox_GetStyle*(AObj: pointer): TListBoxStyle {.importc: "ListBox_GetStyle", dynlib: dllname.}
proc ListBox_SetStyle*(AObj: pointer, AValue: TListBoxStyle) {.importc: "ListBox_SetStyle", dynlib: dllname.}
proc ListBox_GetAlign*(AObj: pointer): TAlign {.importc: "ListBox_GetAlign", dynlib: dllname.}
proc ListBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ListBox_SetAlign", dynlib: dllname.}
proc ListBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "ListBox_GetAnchors", dynlib: dllname.}
proc ListBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ListBox_SetAnchors", dynlib: dllname.}
proc ListBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ListBox_GetBiDiMode", dynlib: dllname.}
proc ListBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ListBox_SetBiDiMode", dynlib: dllname.}
proc ListBox_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "ListBox_GetBorderStyle", dynlib: dllname.}
proc ListBox_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "ListBox_SetBorderStyle", dynlib: dllname.}
proc ListBox_GetColor*(AObj: pointer): TColor {.importc: "ListBox_GetColor", dynlib: dllname.}
proc ListBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ListBox_SetColor", dynlib: dllname.}
proc ListBox_GetColumns*(AObj: pointer): int32 {.importc: "ListBox_GetColumns", dynlib: dllname.}
proc ListBox_SetColumns*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetColumns", dynlib: dllname.}
proc ListBox_GetConstraints*(AObj: pointer): pointer {.importc: "ListBox_GetConstraints", dynlib: dllname.}
proc ListBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetConstraints", dynlib: dllname.}
proc ListBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ListBox_GetDoubleBuffered", dynlib: dllname.}
proc ListBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetDoubleBuffered", dynlib: dllname.}
proc ListBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "ListBox_GetDragCursor", dynlib: dllname.}
proc ListBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ListBox_SetDragCursor", dynlib: dllname.}
proc ListBox_GetDragKind*(AObj: pointer): TDragKind {.importc: "ListBox_GetDragKind", dynlib: dllname.}
proc ListBox_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ListBox_SetDragKind", dynlib: dllname.}
proc ListBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "ListBox_GetDragMode", dynlib: dllname.}
proc ListBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ListBox_SetDragMode", dynlib: dllname.}
proc ListBox_GetEnabled*(AObj: pointer): bool {.importc: "ListBox_GetEnabled", dynlib: dllname.}
proc ListBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetEnabled", dynlib: dllname.}
proc ListBox_GetExtendedSelect*(AObj: pointer): bool {.importc: "ListBox_GetExtendedSelect", dynlib: dllname.}
proc ListBox_SetExtendedSelect*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetExtendedSelect", dynlib: dllname.}
proc ListBox_GetFont*(AObj: pointer): pointer {.importc: "ListBox_GetFont", dynlib: dllname.}
proc ListBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetFont", dynlib: dllname.}
proc ListBox_GetItemHeight*(AObj: pointer): int32 {.importc: "ListBox_GetItemHeight", dynlib: dllname.}
proc ListBox_SetItemHeight*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetItemHeight", dynlib: dllname.}
proc ListBox_GetItems*(AObj: pointer): pointer {.importc: "ListBox_GetItems", dynlib: dllname.}
proc ListBox_SetItems*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetItems", dynlib: dllname.}
proc ListBox_GetMultiSelect*(AObj: pointer): bool {.importc: "ListBox_GetMultiSelect", dynlib: dllname.}
proc ListBox_SetMultiSelect*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetMultiSelect", dynlib: dllname.}
proc ListBox_GetParentColor*(AObj: pointer): bool {.importc: "ListBox_GetParentColor", dynlib: dllname.}
proc ListBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetParentColor", dynlib: dllname.}
proc ListBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ListBox_GetParentDoubleBuffered", dynlib: dllname.}
proc ListBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetParentDoubleBuffered", dynlib: dllname.}
proc ListBox_GetParentFont*(AObj: pointer): bool {.importc: "ListBox_GetParentFont", dynlib: dllname.}
proc ListBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetParentFont", dynlib: dllname.}
proc ListBox_GetParentShowHint*(AObj: pointer): bool {.importc: "ListBox_GetParentShowHint", dynlib: dllname.}
proc ListBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetParentShowHint", dynlib: dllname.}
proc ListBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "ListBox_GetPopupMenu", dynlib: dllname.}
proc ListBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetPopupMenu", dynlib: dllname.}
proc ListBox_GetShowHint*(AObj: pointer): bool {.importc: "ListBox_GetShowHint", dynlib: dllname.}
proc ListBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetShowHint", dynlib: dllname.}
proc ListBox_GetSorted*(AObj: pointer): bool {.importc: "ListBox_GetSorted", dynlib: dllname.}
proc ListBox_SetSorted*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetSorted", dynlib: dllname.}
proc ListBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ListBox_GetTabOrder", dynlib: dllname.}
proc ListBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ListBox_SetTabOrder", dynlib: dllname.}
proc ListBox_GetTabStop*(AObj: pointer): bool {.importc: "ListBox_GetTabStop", dynlib: dllname.}
proc ListBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetTabStop", dynlib: dllname.}
proc ListBox_GetVisible*(AObj: pointer): bool {.importc: "ListBox_GetVisible", dynlib: dllname.}
proc ListBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetVisible", dynlib: dllname.}
proc ListBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListBox_SetOnClick", dynlib: dllname.}
proc ListBox_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ListBox_SetOnContextPopup", dynlib: dllname.}
proc ListBox_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListBox_SetOnDblClick", dynlib: dllname.}
proc ListBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ListBox_SetOnDragDrop", dynlib: dllname.}
proc ListBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ListBox_SetOnDragOver", dynlib: dllname.}
proc ListBox_SetOnDrawItem*(AObj: pointer, AEventId: TDrawItemEvent) {.importc: "ListBox_SetOnDrawItem", dynlib: dllname.}
proc ListBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ListBox_SetOnEndDrag", dynlib: dllname.}
proc ListBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListBox_SetOnEnter", dynlib: dllname.}
proc ListBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListBox_SetOnExit", dynlib: dllname.}
proc ListBox_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ListBox_SetOnKeyDown", dynlib: dllname.}
proc ListBox_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ListBox_SetOnKeyPress", dynlib: dllname.}
proc ListBox_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ListBox_SetOnKeyUp", dynlib: dllname.}
proc ListBox_SetOnMeasureItem*(AObj: pointer, AEventId: TMeasureItemEvent) {.importc: "ListBox_SetOnMeasureItem", dynlib: dllname.}
proc ListBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ListBox_SetOnMouseDown", dynlib: dllname.}
proc ListBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListBox_SetOnMouseEnter", dynlib: dllname.}
proc ListBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListBox_SetOnMouseLeave", dynlib: dllname.}
proc ListBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ListBox_SetOnMouseMove", dynlib: dllname.}
proc ListBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ListBox_SetOnMouseUp", dynlib: dllname.}
proc ListBox_GetCanvas*(AObj: pointer): pointer {.importc: "ListBox_GetCanvas", dynlib: dllname.}
proc ListBox_GetCount*(AObj: pointer): int32 {.importc: "ListBox_GetCount", dynlib: dllname.}
proc ListBox_GetSelCount*(AObj: pointer): int32 {.importc: "ListBox_GetSelCount", dynlib: dllname.}
proc ListBox_GetItemIndex*(AObj: pointer): int32 {.importc: "ListBox_GetItemIndex", dynlib: dllname.}
proc ListBox_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetItemIndex", dynlib: dllname.}
proc ListBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "ListBox_GetDockClientCount", dynlib: dllname.}
proc ListBox_GetDockSite*(AObj: pointer): bool {.importc: "ListBox_GetDockSite", dynlib: dllname.}
proc ListBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetDockSite", dynlib: dllname.}
proc ListBox_GetMouseInClient*(AObj: pointer): bool {.importc: "ListBox_GetMouseInClient", dynlib: dllname.}
proc ListBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ListBox_GetVisibleDockClientCount", dynlib: dllname.}
proc ListBox_GetBrush*(AObj: pointer): pointer {.importc: "ListBox_GetBrush", dynlib: dllname.}
proc ListBox_GetControlCount*(AObj: pointer): int32 {.importc: "ListBox_GetControlCount", dynlib: dllname.}
proc ListBox_GetHandle*(AObj: pointer): HWND {.importc: "ListBox_GetHandle", dynlib: dllname.}
proc ListBox_GetParentWindow*(AObj: pointer): HWND {.importc: "ListBox_GetParentWindow", dynlib: dllname.}
proc ListBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ListBox_SetParentWindow", dynlib: dllname.}
proc ListBox_GetShowing*(AObj: pointer): bool {.importc: "ListBox_GetShowing", dynlib: dllname.}
proc ListBox_GetUseDockManager*(AObj: pointer): bool {.importc: "ListBox_GetUseDockManager", dynlib: dllname.}
proc ListBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ListBox_SetUseDockManager", dynlib: dllname.}
proc ListBox_GetAction*(AObj: pointer): pointer {.importc: "ListBox_GetAction", dynlib: dllname.}
proc ListBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetAction", dynlib: dllname.}
proc ListBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ListBox_GetBoundsRect", dynlib: dllname.}
proc ListBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ListBox_SetBoundsRect", dynlib: dllname.}
proc ListBox_GetClientHeight*(AObj: pointer): int32 {.importc: "ListBox_GetClientHeight", dynlib: dllname.}
proc ListBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetClientHeight", dynlib: dllname.}
proc ListBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ListBox_GetClientOrigin", dynlib: dllname.}
proc ListBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ListBox_GetClientRect", dynlib: dllname.}
proc ListBox_GetClientWidth*(AObj: pointer): int32 {.importc: "ListBox_GetClientWidth", dynlib: dllname.}
proc ListBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetClientWidth", dynlib: dllname.}
proc ListBox_GetControlState*(AObj: pointer): TControlState {.importc: "ListBox_GetControlState", dynlib: dllname.}
proc ListBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ListBox_SetControlState", dynlib: dllname.}
proc ListBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ListBox_GetControlStyle", dynlib: dllname.}
proc ListBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ListBox_SetControlStyle", dynlib: dllname.}
proc ListBox_GetFloating*(AObj: pointer): bool {.importc: "ListBox_GetFloating", dynlib: dllname.}
proc ListBox_GetParent*(AObj: pointer): pointer {.importc: "ListBox_GetParent", dynlib: dllname.}
proc ListBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetParent", dynlib: dllname.}
proc ListBox_GetLeft*(AObj: pointer): int32 {.importc: "ListBox_GetLeft", dynlib: dllname.}
proc ListBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetLeft", dynlib: dllname.}
proc ListBox_GetTop*(AObj: pointer): int32 {.importc: "ListBox_GetTop", dynlib: dllname.}
proc ListBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetTop", dynlib: dllname.}
proc ListBox_GetWidth*(AObj: pointer): int32 {.importc: "ListBox_GetWidth", dynlib: dllname.}
proc ListBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetWidth", dynlib: dllname.}
proc ListBox_GetHeight*(AObj: pointer): int32 {.importc: "ListBox_GetHeight", dynlib: dllname.}
proc ListBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetHeight", dynlib: dllname.}
proc ListBox_GetCursor*(AObj: pointer): TCursor {.importc: "ListBox_GetCursor", dynlib: dllname.}
proc ListBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ListBox_SetCursor", dynlib: dllname.}
proc ListBox_GetHint*(AObj: pointer): cstring {.importc: "ListBox_GetHint", dynlib: dllname.}
proc ListBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ListBox_SetHint", dynlib: dllname.}
proc ListBox_GetComponentCount*(AObj: pointer): int32 {.importc: "ListBox_GetComponentCount", dynlib: dllname.}
proc ListBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "ListBox_GetComponentIndex", dynlib: dllname.}
proc ListBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ListBox_SetComponentIndex", dynlib: dllname.}
proc ListBox_GetOwner*(AObj: pointer): pointer {.importc: "ListBox_GetOwner", dynlib: dllname.}
proc ListBox_GetName*(AObj: pointer): cstring {.importc: "ListBox_GetName", dynlib: dllname.}
proc ListBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "ListBox_SetName", dynlib: dllname.}
proc ListBox_GetTag*(AObj: pointer): int {.importc: "ListBox_GetTag", dynlib: dllname.}
proc ListBox_SetTag*(AObj: pointer, AValue: int) {.importc: "ListBox_SetTag", dynlib: dllname.}
proc ListBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ListBox_GetAnchorSideLeft", dynlib: dllname.}
proc ListBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetAnchorSideLeft", dynlib: dllname.}
proc ListBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ListBox_GetAnchorSideTop", dynlib: dllname.}
proc ListBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetAnchorSideTop", dynlib: dllname.}
proc ListBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ListBox_GetAnchorSideRight", dynlib: dllname.}
proc ListBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetAnchorSideRight", dynlib: dllname.}
proc ListBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ListBox_GetAnchorSideBottom", dynlib: dllname.}
proc ListBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetAnchorSideBottom", dynlib: dllname.}
proc ListBox_GetChildSizing*(AObj: pointer): pointer {.importc: "ListBox_GetChildSizing", dynlib: dllname.}
proc ListBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetChildSizing", dynlib: dllname.}
proc ListBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ListBox_GetBorderSpacing", dynlib: dllname.}
proc ListBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ListBox_SetBorderSpacing", dynlib: dllname.}
proc ListBox_GetSelected*(AObj: pointer, Index: int32): bool {.importc: "ListBox_GetSelected", dynlib: dllname.}
proc ListBox_SetSelected*(AObj: pointer, Index: int32, AValue: bool) {.importc: "ListBox_SetSelected", dynlib: dllname.}
proc ListBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ListBox_GetDockClients", dynlib: dllname.}
proc ListBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ListBox_GetControls", dynlib: dllname.}
proc ListBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ListBox_GetComponents", dynlib: dllname.}
proc ListBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ListBox_GetAnchorSide", dynlib: dllname.}
proc ListBox_StaticClassType*(): TClass {.importc: "ListBox_StaticClassType", dynlib: dllname.}
# ----------------- TComboBox ----------------------
proc ComboBox_Create*(AOwner: pointer): pointer {.importc: "ComboBox_Create", dynlib: dllname.}
proc ComboBox_Free*(AObj: pointer) {.importc: "ComboBox_Free", dynlib: dllname.}
proc ComboBox_AddItem*(AObj: pointer, Item: cstring, AObject: pointer) {.importc: "ComboBox_AddItem", dynlib: dllname.}
proc ComboBox_Clear*(AObj: pointer) {.importc: "ComboBox_Clear", dynlib: dllname.}
proc ComboBox_ClearSelection*(AObj: pointer) {.importc: "ComboBox_ClearSelection", dynlib: dllname.}
proc ComboBox_DeleteSelected*(AObj: pointer) {.importc: "ComboBox_DeleteSelected", dynlib: dllname.}
proc ComboBox_Focused*(AObj: pointer): bool {.importc: "ComboBox_Focused", dynlib: dllname.}
proc ComboBox_SelectAll*(AObj: pointer) {.importc: "ComboBox_SelectAll", dynlib: dllname.}
proc ComboBox_CanFocus*(AObj: pointer): bool {.importc: "ComboBox_CanFocus", dynlib: dllname.}
proc ComboBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ComboBox_ContainsControl", dynlib: dllname.}
proc ComboBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ComboBox_ControlAtPos", dynlib: dllname.}
proc ComboBox_DisableAlign*(AObj: pointer) {.importc: "ComboBox_DisableAlign", dynlib: dllname.}
proc ComboBox_EnableAlign*(AObj: pointer) {.importc: "ComboBox_EnableAlign", dynlib: dllname.}
proc ComboBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ComboBox_FindChildControl", dynlib: dllname.}
proc ComboBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ComboBox_FlipChildren", dynlib: dllname.}
proc ComboBox_HandleAllocated*(AObj: pointer): bool {.importc: "ComboBox_HandleAllocated", dynlib: dllname.}
proc ComboBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ComboBox_InsertControl", dynlib: dllname.}
proc ComboBox_Invalidate*(AObj: pointer) {.importc: "ComboBox_Invalidate", dynlib: dllname.}
proc ComboBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ComboBox_PaintTo", dynlib: dllname.}
proc ComboBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ComboBox_RemoveControl", dynlib: dllname.}
proc ComboBox_Realign*(AObj: pointer) {.importc: "ComboBox_Realign", dynlib: dllname.}
proc ComboBox_Repaint*(AObj: pointer) {.importc: "ComboBox_Repaint", dynlib: dllname.}
proc ComboBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ComboBox_ScaleBy", dynlib: dllname.}
proc ComboBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ComboBox_ScrollBy", dynlib: dllname.}
proc ComboBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ComboBox_SetBounds", dynlib: dllname.}
proc ComboBox_SetFocus*(AObj: pointer) {.importc: "ComboBox_SetFocus", dynlib: dllname.}
proc ComboBox_Update*(AObj: pointer) {.importc: "ComboBox_Update", dynlib: dllname.}
proc ComboBox_BringToFront*(AObj: pointer) {.importc: "ComboBox_BringToFront", dynlib: dllname.}
proc ComboBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ComboBox_ClientToScreen", dynlib: dllname.}
proc ComboBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ComboBox_ClientToParent", dynlib: dllname.}
proc ComboBox_Dragging*(AObj: pointer): bool {.importc: "ComboBox_Dragging", dynlib: dllname.}
proc ComboBox_HasParent*(AObj: pointer): bool {.importc: "ComboBox_HasParent", dynlib: dllname.}
proc ComboBox_Hide*(AObj: pointer) {.importc: "ComboBox_Hide", dynlib: dllname.}
proc ComboBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ComboBox_Perform", dynlib: dllname.}
proc ComboBox_Refresh*(AObj: pointer) {.importc: "ComboBox_Refresh", dynlib: dllname.}
proc ComboBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ComboBox_ScreenToClient", dynlib: dllname.}
proc ComboBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ComboBox_ParentToClient", dynlib: dllname.}
proc ComboBox_SendToBack*(AObj: pointer) {.importc: "ComboBox_SendToBack", dynlib: dllname.}
proc ComboBox_Show*(AObj: pointer) {.importc: "ComboBox_Show", dynlib: dllname.}
proc ComboBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ComboBox_GetTextBuf", dynlib: dllname.}
proc ComboBox_GetTextLen*(AObj: pointer): int32 {.importc: "ComboBox_GetTextLen", dynlib: dllname.}
proc ComboBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ComboBox_SetTextBuf", dynlib: dllname.}
proc ComboBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ComboBox_FindComponent", dynlib: dllname.}
proc ComboBox_GetNamePath*(AObj: pointer): cstring {.importc: "ComboBox_GetNamePath", dynlib: dllname.}
proc ComboBox_Assign*(AObj: pointer, Source: pointer) {.importc: "ComboBox_Assign", dynlib: dllname.}
proc ComboBox_ClassType*(AObj: pointer): TClass {.importc: "ComboBox_ClassType", dynlib: dllname.}
proc ComboBox_ClassName*(AObj: pointer): cstring {.importc: "ComboBox_ClassName", dynlib: dllname.}
proc ComboBox_InstanceSize*(AObj: pointer): int32 {.importc: "ComboBox_InstanceSize", dynlib: dllname.}
proc ComboBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ComboBox_InheritsFrom", dynlib: dllname.}
proc ComboBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ComboBox_Equals", dynlib: dllname.}
proc ComboBox_GetHashCode*(AObj: pointer): int32 {.importc: "ComboBox_GetHashCode", dynlib: dllname.}
proc ComboBox_ToString*(AObj: pointer): cstring {.importc: "ComboBox_ToString", dynlib: dllname.}
proc ComboBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ComboBox_AnchorToNeighbour", dynlib: dllname.}
proc ComboBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ComboBox_AnchorParallel", dynlib: dllname.}
proc ComboBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ComboBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ComboBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ComboBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc ComboBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ComboBox_AnchorSame", dynlib: dllname.}
proc ComboBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ComboBox_AnchorAsAlign", dynlib: dllname.}
proc ComboBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ComboBox_AnchorClient", dynlib: dllname.}
proc ComboBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_ScaleDesignToForm", dynlib: dllname.}
proc ComboBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_ScaleFormToDesign", dynlib: dllname.}
proc ComboBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_Scale96ToForm", dynlib: dllname.}
proc ComboBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_ScaleFormTo96", dynlib: dllname.}
proc ComboBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_Scale96ToFont", dynlib: dllname.}
proc ComboBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_ScaleFontTo96", dynlib: dllname.}
proc ComboBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_ScaleScreenToFont", dynlib: dllname.}
proc ComboBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_ScaleFontToScreen", dynlib: dllname.}
proc ComboBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_Scale96ToScreen", dynlib: dllname.}
proc ComboBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBox_ScaleScreenTo96", dynlib: dllname.}
proc ComboBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ComboBox_AutoAdjustLayout", dynlib: dllname.}
proc ComboBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ComboBox_FixDesignFontsPPI", dynlib: dllname.}
proc ComboBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ComboBox_ScaleFontsPPI", dynlib: dllname.}
proc ComboBox_GetAlign*(AObj: pointer): TAlign {.importc: "ComboBox_GetAlign", dynlib: dllname.}
proc ComboBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ComboBox_SetAlign", dynlib: dllname.}
proc ComboBox_GetAutoComplete*(AObj: pointer): bool {.importc: "ComboBox_GetAutoComplete", dynlib: dllname.}
proc ComboBox_SetAutoComplete*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetAutoComplete", dynlib: dllname.}
proc ComboBox_GetAutoDropDown*(AObj: pointer): bool {.importc: "ComboBox_GetAutoDropDown", dynlib: dllname.}
proc ComboBox_SetAutoDropDown*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetAutoDropDown", dynlib: dllname.}
proc ComboBox_GetStyle*(AObj: pointer): TComboBoxStyle {.importc: "ComboBox_GetStyle", dynlib: dllname.}
proc ComboBox_SetStyle*(AObj: pointer, AValue: TComboBoxStyle) {.importc: "ComboBox_SetStyle", dynlib: dllname.}
proc ComboBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "ComboBox_GetAnchors", dynlib: dllname.}
proc ComboBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ComboBox_SetAnchors", dynlib: dllname.}
proc ComboBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ComboBox_GetBiDiMode", dynlib: dllname.}
proc ComboBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ComboBox_SetBiDiMode", dynlib: dllname.}
proc ComboBox_GetCharCase*(AObj: pointer): TEditCharCase {.importc: "ComboBox_GetCharCase", dynlib: dllname.}
proc ComboBox_SetCharCase*(AObj: pointer, AValue: TEditCharCase) {.importc: "ComboBox_SetCharCase", dynlib: dllname.}
proc ComboBox_GetColor*(AObj: pointer): TColor {.importc: "ComboBox_GetColor", dynlib: dllname.}
proc ComboBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ComboBox_SetColor", dynlib: dllname.}
proc ComboBox_GetConstraints*(AObj: pointer): pointer {.importc: "ComboBox_GetConstraints", dynlib: dllname.}
proc ComboBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetConstraints", dynlib: dllname.}
proc ComboBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ComboBox_GetDoubleBuffered", dynlib: dllname.}
proc ComboBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetDoubleBuffered", dynlib: dllname.}
proc ComboBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "ComboBox_GetDragCursor", dynlib: dllname.}
proc ComboBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ComboBox_SetDragCursor", dynlib: dllname.}
proc ComboBox_GetDragKind*(AObj: pointer): TDragKind {.importc: "ComboBox_GetDragKind", dynlib: dllname.}
proc ComboBox_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ComboBox_SetDragKind", dynlib: dllname.}
proc ComboBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "ComboBox_GetDragMode", dynlib: dllname.}
proc ComboBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ComboBox_SetDragMode", dynlib: dllname.}
proc ComboBox_GetDropDownCount*(AObj: pointer): int32 {.importc: "ComboBox_GetDropDownCount", dynlib: dllname.}
proc ComboBox_SetDropDownCount*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetDropDownCount", dynlib: dllname.}
proc ComboBox_GetEnabled*(AObj: pointer): bool {.importc: "ComboBox_GetEnabled", dynlib: dllname.}
proc ComboBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetEnabled", dynlib: dllname.}
proc ComboBox_GetFont*(AObj: pointer): pointer {.importc: "ComboBox_GetFont", dynlib: dllname.}
proc ComboBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetFont", dynlib: dllname.}
proc ComboBox_GetItemHeight*(AObj: pointer): int32 {.importc: "ComboBox_GetItemHeight", dynlib: dllname.}
proc ComboBox_SetItemHeight*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetItemHeight", dynlib: dllname.}
proc ComboBox_GetItemIndex*(AObj: pointer): int32 {.importc: "ComboBox_GetItemIndex", dynlib: dllname.}
proc ComboBox_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetItemIndex", dynlib: dllname.}
proc ComboBox_GetMaxLength*(AObj: pointer): int32 {.importc: "ComboBox_GetMaxLength", dynlib: dllname.}
proc ComboBox_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetMaxLength", dynlib: dllname.}
proc ComboBox_GetParentColor*(AObj: pointer): bool {.importc: "ComboBox_GetParentColor", dynlib: dllname.}
proc ComboBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetParentColor", dynlib: dllname.}
proc ComboBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ComboBox_GetParentDoubleBuffered", dynlib: dllname.}
proc ComboBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetParentDoubleBuffered", dynlib: dllname.}
proc ComboBox_GetParentFont*(AObj: pointer): bool {.importc: "ComboBox_GetParentFont", dynlib: dllname.}
proc ComboBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetParentFont", dynlib: dllname.}
proc ComboBox_GetParentShowHint*(AObj: pointer): bool {.importc: "ComboBox_GetParentShowHint", dynlib: dllname.}
proc ComboBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetParentShowHint", dynlib: dllname.}
proc ComboBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "ComboBox_GetPopupMenu", dynlib: dllname.}
proc ComboBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetPopupMenu", dynlib: dllname.}
proc ComboBox_GetShowHint*(AObj: pointer): bool {.importc: "ComboBox_GetShowHint", dynlib: dllname.}
proc ComboBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetShowHint", dynlib: dllname.}
proc ComboBox_GetSorted*(AObj: pointer): bool {.importc: "ComboBox_GetSorted", dynlib: dllname.}
proc ComboBox_SetSorted*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetSorted", dynlib: dllname.}
proc ComboBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ComboBox_GetTabOrder", dynlib: dllname.}
proc ComboBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ComboBox_SetTabOrder", dynlib: dllname.}
proc ComboBox_GetTabStop*(AObj: pointer): bool {.importc: "ComboBox_GetTabStop", dynlib: dllname.}
proc ComboBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetTabStop", dynlib: dllname.}
proc ComboBox_GetText*(AObj: pointer): cstring {.importc: "ComboBox_GetText", dynlib: dllname.}
proc ComboBox_SetText*(AObj: pointer, AValue: cstring) {.importc: "ComboBox_SetText", dynlib: dllname.}
proc ComboBox_GetVisible*(AObj: pointer): bool {.importc: "ComboBox_GetVisible", dynlib: dllname.}
proc ComboBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetVisible", dynlib: dllname.}
proc ComboBox_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnChange", dynlib: dllname.}
proc ComboBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnClick", dynlib: dllname.}
proc ComboBox_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ComboBox_SetOnContextPopup", dynlib: dllname.}
proc ComboBox_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnDblClick", dynlib: dllname.}
proc ComboBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ComboBox_SetOnDragDrop", dynlib: dllname.}
proc ComboBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ComboBox_SetOnDragOver", dynlib: dllname.}
proc ComboBox_SetOnDrawItem*(AObj: pointer, AEventId: TDrawItemEvent) {.importc: "ComboBox_SetOnDrawItem", dynlib: dllname.}
proc ComboBox_SetOnDropDown*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnDropDown", dynlib: dllname.}
proc ComboBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ComboBox_SetOnEndDrag", dynlib: dllname.}
proc ComboBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnEnter", dynlib: dllname.}
proc ComboBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnExit", dynlib: dllname.}
proc ComboBox_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ComboBox_SetOnKeyDown", dynlib: dllname.}
proc ComboBox_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ComboBox_SetOnKeyPress", dynlib: dllname.}
proc ComboBox_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ComboBox_SetOnKeyUp", dynlib: dllname.}
proc ComboBox_SetOnMeasureItem*(AObj: pointer, AEventId: TMeasureItemEvent) {.importc: "ComboBox_SetOnMeasureItem", dynlib: dllname.}
proc ComboBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnMouseEnter", dynlib: dllname.}
proc ComboBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnMouseLeave", dynlib: dllname.}
proc ComboBox_SetOnSelect*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBox_SetOnSelect", dynlib: dllname.}
proc ComboBox_GetItems*(AObj: pointer): pointer {.importc: "ComboBox_GetItems", dynlib: dllname.}
proc ComboBox_SetItems*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetItems", dynlib: dllname.}
proc ComboBox_GetSelText*(AObj: pointer): cstring {.importc: "ComboBox_GetSelText", dynlib: dllname.}
proc ComboBox_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "ComboBox_SetSelText", dynlib: dllname.}
proc ComboBox_GetCanvas*(AObj: pointer): pointer {.importc: "ComboBox_GetCanvas", dynlib: dllname.}
proc ComboBox_GetDroppedDown*(AObj: pointer): bool {.importc: "ComboBox_GetDroppedDown", dynlib: dllname.}
proc ComboBox_SetDroppedDown*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetDroppedDown", dynlib: dllname.}
proc ComboBox_GetSelLength*(AObj: pointer): int32 {.importc: "ComboBox_GetSelLength", dynlib: dllname.}
proc ComboBox_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetSelLength", dynlib: dllname.}
proc ComboBox_GetSelStart*(AObj: pointer): int32 {.importc: "ComboBox_GetSelStart", dynlib: dllname.}
proc ComboBox_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetSelStart", dynlib: dllname.}
proc ComboBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "ComboBox_GetDockClientCount", dynlib: dllname.}
proc ComboBox_GetDockSite*(AObj: pointer): bool {.importc: "ComboBox_GetDockSite", dynlib: dllname.}
proc ComboBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetDockSite", dynlib: dllname.}
proc ComboBox_GetMouseInClient*(AObj: pointer): bool {.importc: "ComboBox_GetMouseInClient", dynlib: dllname.}
proc ComboBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ComboBox_GetVisibleDockClientCount", dynlib: dllname.}
proc ComboBox_GetBrush*(AObj: pointer): pointer {.importc: "ComboBox_GetBrush", dynlib: dllname.}
proc ComboBox_GetControlCount*(AObj: pointer): int32 {.importc: "ComboBox_GetControlCount", dynlib: dllname.}
proc ComboBox_GetHandle*(AObj: pointer): HWND {.importc: "ComboBox_GetHandle", dynlib: dllname.}
proc ComboBox_GetParentWindow*(AObj: pointer): HWND {.importc: "ComboBox_GetParentWindow", dynlib: dllname.}
proc ComboBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ComboBox_SetParentWindow", dynlib: dllname.}
proc ComboBox_GetShowing*(AObj: pointer): bool {.importc: "ComboBox_GetShowing", dynlib: dllname.}
proc ComboBox_GetUseDockManager*(AObj: pointer): bool {.importc: "ComboBox_GetUseDockManager", dynlib: dllname.}
proc ComboBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ComboBox_SetUseDockManager", dynlib: dllname.}
proc ComboBox_GetAction*(AObj: pointer): pointer {.importc: "ComboBox_GetAction", dynlib: dllname.}
proc ComboBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetAction", dynlib: dllname.}
proc ComboBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ComboBox_GetBoundsRect", dynlib: dllname.}
proc ComboBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ComboBox_SetBoundsRect", dynlib: dllname.}
proc ComboBox_GetClientHeight*(AObj: pointer): int32 {.importc: "ComboBox_GetClientHeight", dynlib: dllname.}
proc ComboBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetClientHeight", dynlib: dllname.}
proc ComboBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ComboBox_GetClientOrigin", dynlib: dllname.}
proc ComboBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ComboBox_GetClientRect", dynlib: dllname.}
proc ComboBox_GetClientWidth*(AObj: pointer): int32 {.importc: "ComboBox_GetClientWidth", dynlib: dllname.}
proc ComboBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetClientWidth", dynlib: dllname.}
proc ComboBox_GetControlState*(AObj: pointer): TControlState {.importc: "ComboBox_GetControlState", dynlib: dllname.}
proc ComboBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ComboBox_SetControlState", dynlib: dllname.}
proc ComboBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ComboBox_GetControlStyle", dynlib: dllname.}
proc ComboBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ComboBox_SetControlStyle", dynlib: dllname.}
proc ComboBox_GetFloating*(AObj: pointer): bool {.importc: "ComboBox_GetFloating", dynlib: dllname.}
proc ComboBox_GetParent*(AObj: pointer): pointer {.importc: "ComboBox_GetParent", dynlib: dllname.}
proc ComboBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetParent", dynlib: dllname.}
proc ComboBox_GetLeft*(AObj: pointer): int32 {.importc: "ComboBox_GetLeft", dynlib: dllname.}
proc ComboBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetLeft", dynlib: dllname.}
proc ComboBox_GetTop*(AObj: pointer): int32 {.importc: "ComboBox_GetTop", dynlib: dllname.}
proc ComboBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetTop", dynlib: dllname.}
proc ComboBox_GetWidth*(AObj: pointer): int32 {.importc: "ComboBox_GetWidth", dynlib: dllname.}
proc ComboBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetWidth", dynlib: dllname.}
proc ComboBox_GetHeight*(AObj: pointer): int32 {.importc: "ComboBox_GetHeight", dynlib: dllname.}
proc ComboBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetHeight", dynlib: dllname.}
proc ComboBox_GetCursor*(AObj: pointer): TCursor {.importc: "ComboBox_GetCursor", dynlib: dllname.}
proc ComboBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ComboBox_SetCursor", dynlib: dllname.}
proc ComboBox_GetHint*(AObj: pointer): cstring {.importc: "ComboBox_GetHint", dynlib: dllname.}
proc ComboBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ComboBox_SetHint", dynlib: dllname.}
proc ComboBox_GetComponentCount*(AObj: pointer): int32 {.importc: "ComboBox_GetComponentCount", dynlib: dllname.}
proc ComboBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "ComboBox_GetComponentIndex", dynlib: dllname.}
proc ComboBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ComboBox_SetComponentIndex", dynlib: dllname.}
proc ComboBox_GetOwner*(AObj: pointer): pointer {.importc: "ComboBox_GetOwner", dynlib: dllname.}
proc ComboBox_GetName*(AObj: pointer): cstring {.importc: "ComboBox_GetName", dynlib: dllname.}
proc ComboBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "ComboBox_SetName", dynlib: dllname.}
proc ComboBox_GetTag*(AObj: pointer): int {.importc: "ComboBox_GetTag", dynlib: dllname.}
proc ComboBox_SetTag*(AObj: pointer, AValue: int) {.importc: "ComboBox_SetTag", dynlib: dllname.}
proc ComboBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ComboBox_GetAnchorSideLeft", dynlib: dllname.}
proc ComboBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetAnchorSideLeft", dynlib: dllname.}
proc ComboBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ComboBox_GetAnchorSideTop", dynlib: dllname.}
proc ComboBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetAnchorSideTop", dynlib: dllname.}
proc ComboBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ComboBox_GetAnchorSideRight", dynlib: dllname.}
proc ComboBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetAnchorSideRight", dynlib: dllname.}
proc ComboBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ComboBox_GetAnchorSideBottom", dynlib: dllname.}
proc ComboBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetAnchorSideBottom", dynlib: dllname.}
proc ComboBox_GetChildSizing*(AObj: pointer): pointer {.importc: "ComboBox_GetChildSizing", dynlib: dllname.}
proc ComboBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetChildSizing", dynlib: dllname.}
proc ComboBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ComboBox_GetBorderSpacing", dynlib: dllname.}
proc ComboBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ComboBox_SetBorderSpacing", dynlib: dllname.}
proc ComboBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ComboBox_GetDockClients", dynlib: dllname.}
proc ComboBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ComboBox_GetControls", dynlib: dllname.}
proc ComboBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ComboBox_GetComponents", dynlib: dllname.}
proc ComboBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ComboBox_GetAnchorSide", dynlib: dllname.}
proc ComboBox_StaticClassType*(): TClass {.importc: "ComboBox_StaticClassType", dynlib: dllname.}
# ----------------- TPanel ----------------------
proc Panel_Create*(AOwner: pointer): pointer {.importc: "Panel_Create", dynlib: dllname.}
proc Panel_Free*(AObj: pointer) {.importc: "Panel_Free", dynlib: dllname.}
proc Panel_CanFocus*(AObj: pointer): bool {.importc: "Panel_CanFocus", dynlib: dllname.}
proc Panel_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "Panel_ContainsControl", dynlib: dllname.}
proc Panel_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "Panel_ControlAtPos", dynlib: dllname.}
proc Panel_DisableAlign*(AObj: pointer) {.importc: "Panel_DisableAlign", dynlib: dllname.}
proc Panel_EnableAlign*(AObj: pointer) {.importc: "Panel_EnableAlign", dynlib: dllname.}
proc Panel_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "Panel_FindChildControl", dynlib: dllname.}
proc Panel_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "Panel_FlipChildren", dynlib: dllname.}
proc Panel_Focused*(AObj: pointer): bool {.importc: "Panel_Focused", dynlib: dllname.}
proc Panel_HandleAllocated*(AObj: pointer): bool {.importc: "Panel_HandleAllocated", dynlib: dllname.}
proc Panel_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "Panel_InsertControl", dynlib: dllname.}
proc Panel_Invalidate*(AObj: pointer) {.importc: "Panel_Invalidate", dynlib: dllname.}
proc Panel_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "Panel_PaintTo", dynlib: dllname.}
proc Panel_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "Panel_RemoveControl", dynlib: dllname.}
proc Panel_Realign*(AObj: pointer) {.importc: "Panel_Realign", dynlib: dllname.}
proc Panel_Repaint*(AObj: pointer) {.importc: "Panel_Repaint", dynlib: dllname.}
proc Panel_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "Panel_ScaleBy", dynlib: dllname.}
proc Panel_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "Panel_ScrollBy", dynlib: dllname.}
proc Panel_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Panel_SetBounds", dynlib: dllname.}
proc Panel_SetFocus*(AObj: pointer) {.importc: "Panel_SetFocus", dynlib: dllname.}
proc Panel_Update*(AObj: pointer) {.importc: "Panel_Update", dynlib: dllname.}
proc Panel_BringToFront*(AObj: pointer) {.importc: "Panel_BringToFront", dynlib: dllname.}
proc Panel_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Panel_ClientToScreen", dynlib: dllname.}
proc Panel_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Panel_ClientToParent", dynlib: dllname.}
proc Panel_Dragging*(AObj: pointer): bool {.importc: "Panel_Dragging", dynlib: dllname.}
proc Panel_HasParent*(AObj: pointer): bool {.importc: "Panel_HasParent", dynlib: dllname.}
proc Panel_Hide*(AObj: pointer) {.importc: "Panel_Hide", dynlib: dllname.}
proc Panel_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Panel_Perform", dynlib: dllname.}
proc Panel_Refresh*(AObj: pointer) {.importc: "Panel_Refresh", dynlib: dllname.}
proc Panel_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Panel_ScreenToClient", dynlib: dllname.}
proc Panel_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Panel_ParentToClient", dynlib: dllname.}
proc Panel_SendToBack*(AObj: pointer) {.importc: "Panel_SendToBack", dynlib: dllname.}
proc Panel_Show*(AObj: pointer) {.importc: "Panel_Show", dynlib: dllname.}
proc Panel_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Panel_GetTextBuf", dynlib: dllname.}
proc Panel_GetTextLen*(AObj: pointer): int32 {.importc: "Panel_GetTextLen", dynlib: dllname.}
proc Panel_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Panel_SetTextBuf", dynlib: dllname.}
proc Panel_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Panel_FindComponent", dynlib: dllname.}
proc Panel_GetNamePath*(AObj: pointer): cstring {.importc: "Panel_GetNamePath", dynlib: dllname.}
proc Panel_Assign*(AObj: pointer, Source: pointer) {.importc: "Panel_Assign", dynlib: dllname.}
proc Panel_ClassType*(AObj: pointer): TClass {.importc: "Panel_ClassType", dynlib: dllname.}
proc Panel_ClassName*(AObj: pointer): cstring {.importc: "Panel_ClassName", dynlib: dllname.}
proc Panel_InstanceSize*(AObj: pointer): int32 {.importc: "Panel_InstanceSize", dynlib: dllname.}
proc Panel_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Panel_InheritsFrom", dynlib: dllname.}
proc Panel_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Panel_Equals", dynlib: dllname.}
proc Panel_GetHashCode*(AObj: pointer): int32 {.importc: "Panel_GetHashCode", dynlib: dllname.}
proc Panel_ToString*(AObj: pointer): cstring {.importc: "Panel_ToString", dynlib: dllname.}
proc Panel_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Panel_AnchorToNeighbour", dynlib: dllname.}
proc Panel_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Panel_AnchorParallel", dynlib: dllname.}
proc Panel_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Panel_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Panel_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Panel_AnchorVerticalCenterTo", dynlib: dllname.}
proc Panel_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Panel_AnchorSame", dynlib: dllname.}
proc Panel_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Panel_AnchorAsAlign", dynlib: dllname.}
proc Panel_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Panel_AnchorClient", dynlib: dllname.}
proc Panel_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_ScaleDesignToForm", dynlib: dllname.}
proc Panel_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_ScaleFormToDesign", dynlib: dllname.}
proc Panel_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_Scale96ToForm", dynlib: dllname.}
proc Panel_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_ScaleFormTo96", dynlib: dllname.}
proc Panel_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_Scale96ToFont", dynlib: dllname.}
proc Panel_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_ScaleFontTo96", dynlib: dllname.}
proc Panel_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_ScaleScreenToFont", dynlib: dllname.}
proc Panel_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_ScaleFontToScreen", dynlib: dllname.}
proc Panel_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_Scale96ToScreen", dynlib: dllname.}
proc Panel_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Panel_ScaleScreenTo96", dynlib: dllname.}
proc Panel_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Panel_AutoAdjustLayout", dynlib: dllname.}
proc Panel_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Panel_FixDesignFontsPPI", dynlib: dllname.}
proc Panel_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Panel_ScaleFontsPPI", dynlib: dllname.}
proc Panel_GetAlign*(AObj: pointer): TAlign {.importc: "Panel_GetAlign", dynlib: dllname.}
proc Panel_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Panel_SetAlign", dynlib: dllname.}
proc Panel_GetAlignment*(AObj: pointer): TAlignment {.importc: "Panel_GetAlignment", dynlib: dllname.}
proc Panel_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "Panel_SetAlignment", dynlib: dllname.}
proc Panel_GetAnchors*(AObj: pointer): TAnchors {.importc: "Panel_GetAnchors", dynlib: dllname.}
proc Panel_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Panel_SetAnchors", dynlib: dllname.}
proc Panel_GetAutoSize*(AObj: pointer): bool {.importc: "Panel_GetAutoSize", dynlib: dllname.}
proc Panel_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "Panel_SetAutoSize", dynlib: dllname.}
proc Panel_GetBevelInner*(AObj: pointer): TBevelCut {.importc: "Panel_GetBevelInner", dynlib: dllname.}
proc Panel_SetBevelInner*(AObj: pointer, AValue: TBevelCut) {.importc: "Panel_SetBevelInner", dynlib: dllname.}
proc Panel_GetBevelOuter*(AObj: pointer): TBevelCut {.importc: "Panel_GetBevelOuter", dynlib: dllname.}
proc Panel_SetBevelOuter*(AObj: pointer, AValue: TBevelCut) {.importc: "Panel_SetBevelOuter", dynlib: dllname.}
proc Panel_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Panel_GetBiDiMode", dynlib: dllname.}
proc Panel_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Panel_SetBiDiMode", dynlib: dllname.}
proc Panel_GetBorderWidth*(AObj: pointer): int32 {.importc: "Panel_GetBorderWidth", dynlib: dllname.}
proc Panel_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "Panel_SetBorderWidth", dynlib: dllname.}
proc Panel_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "Panel_GetBorderStyle", dynlib: dllname.}
proc Panel_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "Panel_SetBorderStyle", dynlib: dllname.}
proc Panel_GetCaption*(AObj: pointer): cstring {.importc: "Panel_GetCaption", dynlib: dllname.}
proc Panel_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "Panel_SetCaption", dynlib: dllname.}
proc Panel_GetColor*(AObj: pointer): TColor {.importc: "Panel_GetColor", dynlib: dllname.}
proc Panel_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Panel_SetColor", dynlib: dllname.}
proc Panel_GetConstraints*(AObj: pointer): pointer {.importc: "Panel_GetConstraints", dynlib: dllname.}
proc Panel_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetConstraints", dynlib: dllname.}
proc Panel_GetUseDockManager*(AObj: pointer): bool {.importc: "Panel_GetUseDockManager", dynlib: dllname.}
proc Panel_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "Panel_SetUseDockManager", dynlib: dllname.}
proc Panel_GetDockSite*(AObj: pointer): bool {.importc: "Panel_GetDockSite", dynlib: dllname.}
proc Panel_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "Panel_SetDockSite", dynlib: dllname.}
proc Panel_GetDoubleBuffered*(AObj: pointer): bool {.importc: "Panel_GetDoubleBuffered", dynlib: dllname.}
proc Panel_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Panel_SetDoubleBuffered", dynlib: dllname.}
proc Panel_GetDragCursor*(AObj: pointer): TCursor {.importc: "Panel_GetDragCursor", dynlib: dllname.}
proc Panel_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Panel_SetDragCursor", dynlib: dllname.}
proc Panel_GetDragKind*(AObj: pointer): TDragKind {.importc: "Panel_GetDragKind", dynlib: dllname.}
proc Panel_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Panel_SetDragKind", dynlib: dllname.}
proc Panel_GetDragMode*(AObj: pointer): TDragMode {.importc: "Panel_GetDragMode", dynlib: dllname.}
proc Panel_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Panel_SetDragMode", dynlib: dllname.}
proc Panel_GetEnabled*(AObj: pointer): bool {.importc: "Panel_GetEnabled", dynlib: dllname.}
proc Panel_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Panel_SetEnabled", dynlib: dllname.}
proc Panel_GetFullRepaint*(AObj: pointer): bool {.importc: "Panel_GetFullRepaint", dynlib: dllname.}
proc Panel_SetFullRepaint*(AObj: pointer, AValue: bool) {.importc: "Panel_SetFullRepaint", dynlib: dllname.}
proc Panel_GetFont*(AObj: pointer): pointer {.importc: "Panel_GetFont", dynlib: dllname.}
proc Panel_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetFont", dynlib: dllname.}
proc Panel_GetParentBackground*(AObj: pointer): bool {.importc: "Panel_GetParentBackground", dynlib: dllname.}
proc Panel_SetParentBackground*(AObj: pointer, AValue: bool) {.importc: "Panel_SetParentBackground", dynlib: dllname.}
proc Panel_GetParentColor*(AObj: pointer): bool {.importc: "Panel_GetParentColor", dynlib: dllname.}
proc Panel_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "Panel_SetParentColor", dynlib: dllname.}
proc Panel_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "Panel_GetParentDoubleBuffered", dynlib: dllname.}
proc Panel_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Panel_SetParentDoubleBuffered", dynlib: dllname.}
proc Panel_GetParentFont*(AObj: pointer): bool {.importc: "Panel_GetParentFont", dynlib: dllname.}
proc Panel_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Panel_SetParentFont", dynlib: dllname.}
proc Panel_GetParentShowHint*(AObj: pointer): bool {.importc: "Panel_GetParentShowHint", dynlib: dllname.}
proc Panel_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Panel_SetParentShowHint", dynlib: dllname.}
proc Panel_GetPopupMenu*(AObj: pointer): pointer {.importc: "Panel_GetPopupMenu", dynlib: dllname.}
proc Panel_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetPopupMenu", dynlib: dllname.}
proc Panel_GetShowHint*(AObj: pointer): bool {.importc: "Panel_GetShowHint", dynlib: dllname.}
proc Panel_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Panel_SetShowHint", dynlib: dllname.}
proc Panel_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "Panel_GetTabOrder", dynlib: dllname.}
proc Panel_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "Panel_SetTabOrder", dynlib: dllname.}
proc Panel_GetTabStop*(AObj: pointer): bool {.importc: "Panel_GetTabStop", dynlib: dllname.}
proc Panel_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "Panel_SetTabStop", dynlib: dllname.}
proc Panel_GetVisible*(AObj: pointer): bool {.importc: "Panel_GetVisible", dynlib: dllname.}
proc Panel_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Panel_SetVisible", dynlib: dllname.}
proc Panel_SetOnAlignPosition*(AObj: pointer, AEventId: TAlignPositionEvent) {.importc: "Panel_SetOnAlignPosition", dynlib: dllname.}
proc Panel_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Panel_SetOnClick", dynlib: dllname.}
proc Panel_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "Panel_SetOnContextPopup", dynlib: dllname.}
proc Panel_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "Panel_SetOnDockDrop", dynlib: dllname.}
proc Panel_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Panel_SetOnDblClick", dynlib: dllname.}
proc Panel_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Panel_SetOnDragDrop", dynlib: dllname.}
proc Panel_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Panel_SetOnDragOver", dynlib: dllname.}
proc Panel_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Panel_SetOnEndDock", dynlib: dllname.}
proc Panel_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Panel_SetOnEndDrag", dynlib: dllname.}
proc Panel_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Panel_SetOnEnter", dynlib: dllname.}
proc Panel_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Panel_SetOnExit", dynlib: dllname.}
proc Panel_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "Panel_SetOnGetSiteInfo", dynlib: dllname.}
proc Panel_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Panel_SetOnMouseDown", dynlib: dllname.}
proc Panel_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Panel_SetOnMouseEnter", dynlib: dllname.}
proc Panel_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Panel_SetOnMouseLeave", dynlib: dllname.}
proc Panel_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Panel_SetOnMouseMove", dynlib: dllname.}
proc Panel_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Panel_SetOnMouseUp", dynlib: dllname.}
proc Panel_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Panel_SetOnResize", dynlib: dllname.}
proc Panel_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "Panel_SetOnStartDock", dynlib: dllname.}
proc Panel_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "Panel_SetOnUnDock", dynlib: dllname.}
proc Panel_GetDockClientCount*(AObj: pointer): int32 {.importc: "Panel_GetDockClientCount", dynlib: dllname.}
proc Panel_GetMouseInClient*(AObj: pointer): bool {.importc: "Panel_GetMouseInClient", dynlib: dllname.}
proc Panel_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "Panel_GetVisibleDockClientCount", dynlib: dllname.}
proc Panel_GetBrush*(AObj: pointer): pointer {.importc: "Panel_GetBrush", dynlib: dllname.}
proc Panel_GetControlCount*(AObj: pointer): int32 {.importc: "Panel_GetControlCount", dynlib: dllname.}
proc Panel_GetHandle*(AObj: pointer): HWND {.importc: "Panel_GetHandle", dynlib: dllname.}
proc Panel_GetParentWindow*(AObj: pointer): HWND {.importc: "Panel_GetParentWindow", dynlib: dllname.}
proc Panel_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "Panel_SetParentWindow", dynlib: dllname.}
proc Panel_GetShowing*(AObj: pointer): bool {.importc: "Panel_GetShowing", dynlib: dllname.}
proc Panel_GetAction*(AObj: pointer): pointer {.importc: "Panel_GetAction", dynlib: dllname.}
proc Panel_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetAction", dynlib: dllname.}
proc Panel_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Panel_GetBoundsRect", dynlib: dllname.}
proc Panel_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Panel_SetBoundsRect", dynlib: dllname.}
proc Panel_GetClientHeight*(AObj: pointer): int32 {.importc: "Panel_GetClientHeight", dynlib: dllname.}
proc Panel_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Panel_SetClientHeight", dynlib: dllname.}
proc Panel_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Panel_GetClientOrigin", dynlib: dllname.}
proc Panel_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Panel_GetClientRect", dynlib: dllname.}
proc Panel_GetClientWidth*(AObj: pointer): int32 {.importc: "Panel_GetClientWidth", dynlib: dllname.}
proc Panel_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Panel_SetClientWidth", dynlib: dllname.}
proc Panel_GetControlState*(AObj: pointer): TControlState {.importc: "Panel_GetControlState", dynlib: dllname.}
proc Panel_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Panel_SetControlState", dynlib: dllname.}
proc Panel_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Panel_GetControlStyle", dynlib: dllname.}
proc Panel_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Panel_SetControlStyle", dynlib: dllname.}
proc Panel_GetFloating*(AObj: pointer): bool {.importc: "Panel_GetFloating", dynlib: dllname.}
proc Panel_GetParent*(AObj: pointer): pointer {.importc: "Panel_GetParent", dynlib: dllname.}
proc Panel_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetParent", dynlib: dllname.}
proc Panel_GetLeft*(AObj: pointer): int32 {.importc: "Panel_GetLeft", dynlib: dllname.}
proc Panel_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Panel_SetLeft", dynlib: dllname.}
proc Panel_GetTop*(AObj: pointer): int32 {.importc: "Panel_GetTop", dynlib: dllname.}
proc Panel_SetTop*(AObj: pointer, AValue: int32) {.importc: "Panel_SetTop", dynlib: dllname.}
proc Panel_GetWidth*(AObj: pointer): int32 {.importc: "Panel_GetWidth", dynlib: dllname.}
proc Panel_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Panel_SetWidth", dynlib: dllname.}
proc Panel_GetHeight*(AObj: pointer): int32 {.importc: "Panel_GetHeight", dynlib: dllname.}
proc Panel_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Panel_SetHeight", dynlib: dllname.}
proc Panel_GetCursor*(AObj: pointer): TCursor {.importc: "Panel_GetCursor", dynlib: dllname.}
proc Panel_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Panel_SetCursor", dynlib: dllname.}
proc Panel_GetHint*(AObj: pointer): cstring {.importc: "Panel_GetHint", dynlib: dllname.}
proc Panel_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Panel_SetHint", dynlib: dllname.}
proc Panel_GetComponentCount*(AObj: pointer): int32 {.importc: "Panel_GetComponentCount", dynlib: dllname.}
proc Panel_GetComponentIndex*(AObj: pointer): int32 {.importc: "Panel_GetComponentIndex", dynlib: dllname.}
proc Panel_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Panel_SetComponentIndex", dynlib: dllname.}
proc Panel_GetOwner*(AObj: pointer): pointer {.importc: "Panel_GetOwner", dynlib: dllname.}
proc Panel_GetName*(AObj: pointer): cstring {.importc: "Panel_GetName", dynlib: dllname.}
proc Panel_SetName*(AObj: pointer, AValue: cstring) {.importc: "Panel_SetName", dynlib: dllname.}
proc Panel_GetTag*(AObj: pointer): int {.importc: "Panel_GetTag", dynlib: dllname.}
proc Panel_SetTag*(AObj: pointer, AValue: int) {.importc: "Panel_SetTag", dynlib: dllname.}
proc Panel_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Panel_GetAnchorSideLeft", dynlib: dllname.}
proc Panel_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetAnchorSideLeft", dynlib: dllname.}
proc Panel_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Panel_GetAnchorSideTop", dynlib: dllname.}
proc Panel_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetAnchorSideTop", dynlib: dllname.}
proc Panel_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Panel_GetAnchorSideRight", dynlib: dllname.}
proc Panel_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetAnchorSideRight", dynlib: dllname.}
proc Panel_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Panel_GetAnchorSideBottom", dynlib: dllname.}
proc Panel_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetAnchorSideBottom", dynlib: dllname.}
proc Panel_GetChildSizing*(AObj: pointer): pointer {.importc: "Panel_GetChildSizing", dynlib: dllname.}
proc Panel_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetChildSizing", dynlib: dllname.}
proc Panel_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Panel_GetBorderSpacing", dynlib: dllname.}
proc Panel_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Panel_SetBorderSpacing", dynlib: dllname.}
proc Panel_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "Panel_GetDockClients", dynlib: dllname.}
proc Panel_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "Panel_GetControls", dynlib: dllname.}
proc Panel_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Panel_GetComponents", dynlib: dllname.}
proc Panel_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Panel_GetAnchorSide", dynlib: dllname.}
proc Panel_StaticClassType*(): TClass {.importc: "Panel_StaticClassType", dynlib: dllname.}
# ----------------- TImage ----------------------
proc Image_Create*(AOwner: pointer): pointer {.importc: "Image_Create", dynlib: dllname.}
proc Image_Free*(AObj: pointer) {.importc: "Image_Free", dynlib: dllname.}
proc Image_BringToFront*(AObj: pointer) {.importc: "Image_BringToFront", dynlib: dllname.}
proc Image_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Image_ClientToScreen", dynlib: dllname.}
proc Image_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Image_ClientToParent", dynlib: dllname.}
proc Image_Dragging*(AObj: pointer): bool {.importc: "Image_Dragging", dynlib: dllname.}
proc Image_HasParent*(AObj: pointer): bool {.importc: "Image_HasParent", dynlib: dllname.}
proc Image_Hide*(AObj: pointer) {.importc: "Image_Hide", dynlib: dllname.}
proc Image_Invalidate*(AObj: pointer) {.importc: "Image_Invalidate", dynlib: dllname.}
proc Image_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Image_Perform", dynlib: dllname.}
proc Image_Refresh*(AObj: pointer) {.importc: "Image_Refresh", dynlib: dllname.}
proc Image_Repaint*(AObj: pointer) {.importc: "Image_Repaint", dynlib: dllname.}
proc Image_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Image_ScreenToClient", dynlib: dllname.}
proc Image_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Image_ParentToClient", dynlib: dllname.}
proc Image_SendToBack*(AObj: pointer) {.importc: "Image_SendToBack", dynlib: dllname.}
proc Image_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Image_SetBounds", dynlib: dllname.}
proc Image_Show*(AObj: pointer) {.importc: "Image_Show", dynlib: dllname.}
proc Image_Update*(AObj: pointer) {.importc: "Image_Update", dynlib: dllname.}
proc Image_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Image_GetTextBuf", dynlib: dllname.}
proc Image_GetTextLen*(AObj: pointer): int32 {.importc: "Image_GetTextLen", dynlib: dllname.}
proc Image_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Image_SetTextBuf", dynlib: dllname.}
proc Image_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Image_FindComponent", dynlib: dllname.}
proc Image_GetNamePath*(AObj: pointer): cstring {.importc: "Image_GetNamePath", dynlib: dllname.}
proc Image_Assign*(AObj: pointer, Source: pointer) {.importc: "Image_Assign", dynlib: dllname.}
proc Image_ClassType*(AObj: pointer): TClass {.importc: "Image_ClassType", dynlib: dllname.}
proc Image_ClassName*(AObj: pointer): cstring {.importc: "Image_ClassName", dynlib: dllname.}
proc Image_InstanceSize*(AObj: pointer): int32 {.importc: "Image_InstanceSize", dynlib: dllname.}
proc Image_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Image_InheritsFrom", dynlib: dllname.}
proc Image_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Image_Equals", dynlib: dllname.}
proc Image_GetHashCode*(AObj: pointer): int32 {.importc: "Image_GetHashCode", dynlib: dllname.}
proc Image_ToString*(AObj: pointer): cstring {.importc: "Image_ToString", dynlib: dllname.}
proc Image_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Image_AnchorToNeighbour", dynlib: dllname.}
proc Image_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Image_AnchorParallel", dynlib: dllname.}
proc Image_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Image_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Image_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Image_AnchorVerticalCenterTo", dynlib: dllname.}
proc Image_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Image_AnchorSame", dynlib: dllname.}
proc Image_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Image_AnchorAsAlign", dynlib: dllname.}
proc Image_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Image_AnchorClient", dynlib: dllname.}
proc Image_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Image_ScaleDesignToForm", dynlib: dllname.}
proc Image_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Image_ScaleFormToDesign", dynlib: dllname.}
proc Image_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Image_Scale96ToForm", dynlib: dllname.}
proc Image_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Image_ScaleFormTo96", dynlib: dllname.}
proc Image_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Image_Scale96ToFont", dynlib: dllname.}
proc Image_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Image_ScaleFontTo96", dynlib: dllname.}
proc Image_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Image_ScaleScreenToFont", dynlib: dllname.}
proc Image_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Image_ScaleFontToScreen", dynlib: dllname.}
proc Image_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Image_Scale96ToScreen", dynlib: dllname.}
proc Image_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Image_ScaleScreenTo96", dynlib: dllname.}
proc Image_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Image_AutoAdjustLayout", dynlib: dllname.}
proc Image_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Image_FixDesignFontsPPI", dynlib: dllname.}
proc Image_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Image_ScaleFontsPPI", dynlib: dllname.}
proc Image_GetAntialiasingMode*(AObj: pointer): TAntialiasingMode {.importc: "Image_GetAntialiasingMode", dynlib: dllname.}
proc Image_SetAntialiasingMode*(AObj: pointer, AValue: TAntialiasingMode) {.importc: "Image_SetAntialiasingMode", dynlib: dllname.}
proc Image_GetKeepOriginXWhenClipped*(AObj: pointer): bool {.importc: "Image_GetKeepOriginXWhenClipped", dynlib: dllname.}
proc Image_SetKeepOriginXWhenClipped*(AObj: pointer, AValue: bool) {.importc: "Image_SetKeepOriginXWhenClipped", dynlib: dllname.}
proc Image_GetKeepOriginYWhenClipped*(AObj: pointer): bool {.importc: "Image_GetKeepOriginYWhenClipped", dynlib: dllname.}
proc Image_SetKeepOriginYWhenClipped*(AObj: pointer, AValue: bool) {.importc: "Image_SetKeepOriginYWhenClipped", dynlib: dllname.}
proc Image_GetStretchInEnabled*(AObj: pointer): bool {.importc: "Image_GetStretchInEnabled", dynlib: dllname.}
proc Image_SetStretchInEnabled*(AObj: pointer, AValue: bool) {.importc: "Image_SetStretchInEnabled", dynlib: dllname.}
proc Image_GetStretchOutEnabled*(AObj: pointer): bool {.importc: "Image_GetStretchOutEnabled", dynlib: dllname.}
proc Image_SetStretchOutEnabled*(AObj: pointer, AValue: bool) {.importc: "Image_SetStretchOutEnabled", dynlib: dllname.}
proc Image_GetCanvas*(AObj: pointer): pointer {.importc: "Image_GetCanvas", dynlib: dllname.}
proc Image_GetAlign*(AObj: pointer): TAlign {.importc: "Image_GetAlign", dynlib: dllname.}
proc Image_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Image_SetAlign", dynlib: dllname.}
proc Image_GetAnchors*(AObj: pointer): TAnchors {.importc: "Image_GetAnchors", dynlib: dllname.}
proc Image_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Image_SetAnchors", dynlib: dllname.}
proc Image_GetAutoSize*(AObj: pointer): bool {.importc: "Image_GetAutoSize", dynlib: dllname.}
proc Image_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "Image_SetAutoSize", dynlib: dllname.}
proc Image_GetCenter*(AObj: pointer): bool {.importc: "Image_GetCenter", dynlib: dllname.}
proc Image_SetCenter*(AObj: pointer, AValue: bool) {.importc: "Image_SetCenter", dynlib: dllname.}
proc Image_GetConstraints*(AObj: pointer): pointer {.importc: "Image_GetConstraints", dynlib: dllname.}
proc Image_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Image_SetConstraints", dynlib: dllname.}
proc Image_GetDragCursor*(AObj: pointer): TCursor {.importc: "Image_GetDragCursor", dynlib: dllname.}
proc Image_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Image_SetDragCursor", dynlib: dllname.}
proc Image_GetDragMode*(AObj: pointer): TDragMode {.importc: "Image_GetDragMode", dynlib: dllname.}
proc Image_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Image_SetDragMode", dynlib: dllname.}
proc Image_GetEnabled*(AObj: pointer): bool {.importc: "Image_GetEnabled", dynlib: dllname.}
proc Image_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Image_SetEnabled", dynlib: dllname.}
proc Image_GetParentShowHint*(AObj: pointer): bool {.importc: "Image_GetParentShowHint", dynlib: dllname.}
proc Image_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Image_SetParentShowHint", dynlib: dllname.}
proc Image_GetPicture*(AObj: pointer): pointer {.importc: "Image_GetPicture", dynlib: dllname.}
proc Image_SetPicture*(AObj: pointer, AValue: pointer) {.importc: "Image_SetPicture", dynlib: dllname.}
proc Image_GetPopupMenu*(AObj: pointer): pointer {.importc: "Image_GetPopupMenu", dynlib: dllname.}
proc Image_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Image_SetPopupMenu", dynlib: dllname.}
proc Image_GetProportional*(AObj: pointer): bool {.importc: "Image_GetProportional", dynlib: dllname.}
proc Image_SetProportional*(AObj: pointer, AValue: bool) {.importc: "Image_SetProportional", dynlib: dllname.}
proc Image_GetShowHint*(AObj: pointer): bool {.importc: "Image_GetShowHint", dynlib: dllname.}
proc Image_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Image_SetShowHint", dynlib: dllname.}
proc Image_GetStretch*(AObj: pointer): bool {.importc: "Image_GetStretch", dynlib: dllname.}
proc Image_SetStretch*(AObj: pointer, AValue: bool) {.importc: "Image_SetStretch", dynlib: dllname.}
proc Image_GetTransparent*(AObj: pointer): bool {.importc: "Image_GetTransparent", dynlib: dllname.}
proc Image_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "Image_SetTransparent", dynlib: dllname.}
proc Image_GetVisible*(AObj: pointer): bool {.importc: "Image_GetVisible", dynlib: dllname.}
proc Image_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Image_SetVisible", dynlib: dllname.}
proc Image_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Image_SetOnClick", dynlib: dllname.}
proc Image_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Image_SetOnDblClick", dynlib: dllname.}
proc Image_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Image_SetOnDragDrop", dynlib: dllname.}
proc Image_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Image_SetOnDragOver", dynlib: dllname.}
proc Image_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Image_SetOnEndDrag", dynlib: dllname.}
proc Image_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Image_SetOnMouseDown", dynlib: dllname.}
proc Image_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Image_SetOnMouseEnter", dynlib: dllname.}
proc Image_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Image_SetOnMouseLeave", dynlib: dllname.}
proc Image_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Image_SetOnMouseMove", dynlib: dllname.}
proc Image_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Image_SetOnMouseUp", dynlib: dllname.}
proc Image_GetAction*(AObj: pointer): pointer {.importc: "Image_GetAction", dynlib: dllname.}
proc Image_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Image_SetAction", dynlib: dllname.}
proc Image_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Image_GetBiDiMode", dynlib: dllname.}
proc Image_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Image_SetBiDiMode", dynlib: dllname.}
proc Image_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Image_GetBoundsRect", dynlib: dllname.}
proc Image_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Image_SetBoundsRect", dynlib: dllname.}
proc Image_GetClientHeight*(AObj: pointer): int32 {.importc: "Image_GetClientHeight", dynlib: dllname.}
proc Image_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Image_SetClientHeight", dynlib: dllname.}
proc Image_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Image_GetClientOrigin", dynlib: dllname.}
proc Image_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Image_GetClientRect", dynlib: dllname.}
proc Image_GetClientWidth*(AObj: pointer): int32 {.importc: "Image_GetClientWidth", dynlib: dllname.}
proc Image_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Image_SetClientWidth", dynlib: dllname.}
proc Image_GetControlState*(AObj: pointer): TControlState {.importc: "Image_GetControlState", dynlib: dllname.}
proc Image_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Image_SetControlState", dynlib: dllname.}
proc Image_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Image_GetControlStyle", dynlib: dllname.}
proc Image_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Image_SetControlStyle", dynlib: dllname.}
proc Image_GetFloating*(AObj: pointer): bool {.importc: "Image_GetFloating", dynlib: dllname.}
proc Image_GetParent*(AObj: pointer): pointer {.importc: "Image_GetParent", dynlib: dllname.}
proc Image_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Image_SetParent", dynlib: dllname.}
proc Image_GetLeft*(AObj: pointer): int32 {.importc: "Image_GetLeft", dynlib: dllname.}
proc Image_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Image_SetLeft", dynlib: dllname.}
proc Image_GetTop*(AObj: pointer): int32 {.importc: "Image_GetTop", dynlib: dllname.}
proc Image_SetTop*(AObj: pointer, AValue: int32) {.importc: "Image_SetTop", dynlib: dllname.}
proc Image_GetWidth*(AObj: pointer): int32 {.importc: "Image_GetWidth", dynlib: dllname.}
proc Image_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Image_SetWidth", dynlib: dllname.}
proc Image_GetHeight*(AObj: pointer): int32 {.importc: "Image_GetHeight", dynlib: dllname.}
proc Image_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Image_SetHeight", dynlib: dllname.}
proc Image_GetCursor*(AObj: pointer): TCursor {.importc: "Image_GetCursor", dynlib: dllname.}
proc Image_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Image_SetCursor", dynlib: dllname.}
proc Image_GetHint*(AObj: pointer): cstring {.importc: "Image_GetHint", dynlib: dllname.}
proc Image_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Image_SetHint", dynlib: dllname.}
proc Image_GetComponentCount*(AObj: pointer): int32 {.importc: "Image_GetComponentCount", dynlib: dllname.}
proc Image_GetComponentIndex*(AObj: pointer): int32 {.importc: "Image_GetComponentIndex", dynlib: dllname.}
proc Image_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Image_SetComponentIndex", dynlib: dllname.}
proc Image_GetOwner*(AObj: pointer): pointer {.importc: "Image_GetOwner", dynlib: dllname.}
proc Image_GetName*(AObj: pointer): cstring {.importc: "Image_GetName", dynlib: dllname.}
proc Image_SetName*(AObj: pointer, AValue: cstring) {.importc: "Image_SetName", dynlib: dllname.}
proc Image_GetTag*(AObj: pointer): int {.importc: "Image_GetTag", dynlib: dllname.}
proc Image_SetTag*(AObj: pointer, AValue: int) {.importc: "Image_SetTag", dynlib: dllname.}
proc Image_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Image_GetAnchorSideLeft", dynlib: dllname.}
proc Image_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Image_SetAnchorSideLeft", dynlib: dllname.}
proc Image_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Image_GetAnchorSideTop", dynlib: dllname.}
proc Image_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Image_SetAnchorSideTop", dynlib: dllname.}
proc Image_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Image_GetAnchorSideRight", dynlib: dllname.}
proc Image_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Image_SetAnchorSideRight", dynlib: dllname.}
proc Image_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Image_GetAnchorSideBottom", dynlib: dllname.}
proc Image_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Image_SetAnchorSideBottom", dynlib: dllname.}
proc Image_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Image_GetBorderSpacing", dynlib: dllname.}
proc Image_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Image_SetBorderSpacing", dynlib: dllname.}
proc Image_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Image_GetComponents", dynlib: dllname.}
proc Image_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Image_GetAnchorSide", dynlib: dllname.}
proc Image_StaticClassType*(): TClass {.importc: "Image_StaticClassType", dynlib: dllname.}
# ----------------- TLinkLabel ----------------------
proc LinkLabel_Create*(AOwner: pointer): pointer {.importc: "LinkLabel_Create", dynlib: dllname.}
proc LinkLabel_Free*(AObj: pointer) {.importc: "LinkLabel_Free", dynlib: dllname.}
proc LinkLabel_Invalidate*(AObj: pointer) {.importc: "LinkLabel_Invalidate", dynlib: dllname.}
proc LinkLabel_Repaint*(AObj: pointer) {.importc: "LinkLabel_Repaint", dynlib: dllname.}
proc LinkLabel_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "LinkLabel_SetBounds", dynlib: dllname.}
proc LinkLabel_Update*(AObj: pointer) {.importc: "LinkLabel_Update", dynlib: dllname.}
proc LinkLabel_BringToFront*(AObj: pointer) {.importc: "LinkLabel_BringToFront", dynlib: dllname.}
proc LinkLabel_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "LinkLabel_ClientToScreen", dynlib: dllname.}
proc LinkLabel_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "LinkLabel_ClientToParent", dynlib: dllname.}
proc LinkLabel_Dragging*(AObj: pointer): bool {.importc: "LinkLabel_Dragging", dynlib: dllname.}
proc LinkLabel_HasParent*(AObj: pointer): bool {.importc: "LinkLabel_HasParent", dynlib: dllname.}
proc LinkLabel_Hide*(AObj: pointer) {.importc: "LinkLabel_Hide", dynlib: dllname.}
proc LinkLabel_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "LinkLabel_Perform", dynlib: dllname.}
proc LinkLabel_Refresh*(AObj: pointer) {.importc: "LinkLabel_Refresh", dynlib: dllname.}
proc LinkLabel_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "LinkLabel_ScreenToClient", dynlib: dllname.}
proc LinkLabel_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "LinkLabel_ParentToClient", dynlib: dllname.}
proc LinkLabel_SendToBack*(AObj: pointer) {.importc: "LinkLabel_SendToBack", dynlib: dllname.}
proc LinkLabel_Show*(AObj: pointer) {.importc: "LinkLabel_Show", dynlib: dllname.}
proc LinkLabel_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "LinkLabel_GetTextBuf", dynlib: dllname.}
proc LinkLabel_GetTextLen*(AObj: pointer): int32 {.importc: "LinkLabel_GetTextLen", dynlib: dllname.}
proc LinkLabel_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "LinkLabel_SetTextBuf", dynlib: dllname.}
proc LinkLabel_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "LinkLabel_FindComponent", dynlib: dllname.}
proc LinkLabel_GetNamePath*(AObj: pointer): cstring {.importc: "LinkLabel_GetNamePath", dynlib: dllname.}
proc LinkLabel_Assign*(AObj: pointer, Source: pointer) {.importc: "LinkLabel_Assign", dynlib: dllname.}
proc LinkLabel_ClassType*(AObj: pointer): TClass {.importc: "LinkLabel_ClassType", dynlib: dllname.}
proc LinkLabel_ClassName*(AObj: pointer): cstring {.importc: "LinkLabel_ClassName", dynlib: dllname.}
proc LinkLabel_InstanceSize*(AObj: pointer): int32 {.importc: "LinkLabel_InstanceSize", dynlib: dllname.}
proc LinkLabel_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "LinkLabel_InheritsFrom", dynlib: dllname.}
proc LinkLabel_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "LinkLabel_Equals", dynlib: dllname.}
proc LinkLabel_GetHashCode*(AObj: pointer): int32 {.importc: "LinkLabel_GetHashCode", dynlib: dllname.}
proc LinkLabel_ToString*(AObj: pointer): cstring {.importc: "LinkLabel_ToString", dynlib: dllname.}
proc LinkLabel_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "LinkLabel_AnchorToNeighbour", dynlib: dllname.}
proc LinkLabel_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "LinkLabel_AnchorParallel", dynlib: dllname.}
proc LinkLabel_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "LinkLabel_AnchorHorizontalCenterTo", dynlib: dllname.}
proc LinkLabel_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "LinkLabel_AnchorVerticalCenterTo", dynlib: dllname.}
proc LinkLabel_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "LinkLabel_AnchorSame", dynlib: dllname.}
proc LinkLabel_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "LinkLabel_AnchorAsAlign", dynlib: dllname.}
proc LinkLabel_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "LinkLabel_AnchorClient", dynlib: dllname.}
proc LinkLabel_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_ScaleDesignToForm", dynlib: dllname.}
proc LinkLabel_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_ScaleFormToDesign", dynlib: dllname.}
proc LinkLabel_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_Scale96ToForm", dynlib: dllname.}
proc LinkLabel_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_ScaleFormTo96", dynlib: dllname.}
proc LinkLabel_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_Scale96ToFont", dynlib: dllname.}
proc LinkLabel_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_ScaleFontTo96", dynlib: dllname.}
proc LinkLabel_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_ScaleScreenToFont", dynlib: dllname.}
proc LinkLabel_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_ScaleFontToScreen", dynlib: dllname.}
proc LinkLabel_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_Scale96ToScreen", dynlib: dllname.}
proc LinkLabel_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "LinkLabel_ScaleScreenTo96", dynlib: dllname.}
proc LinkLabel_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "LinkLabel_AutoAdjustLayout", dynlib: dllname.}
proc LinkLabel_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "LinkLabel_FixDesignFontsPPI", dynlib: dllname.}
proc LinkLabel_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "LinkLabel_ScaleFontsPPI", dynlib: dllname.}
proc LinkLabel_GetAlign*(AObj: pointer): TAlign {.importc: "LinkLabel_GetAlign", dynlib: dllname.}
proc LinkLabel_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "LinkLabel_SetAlign", dynlib: dllname.}
proc LinkLabel_GetAlignment*(AObj: pointer): TAlignment {.importc: "LinkLabel_GetAlignment", dynlib: dllname.}
proc LinkLabel_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "LinkLabel_SetAlignment", dynlib: dllname.}
proc LinkLabel_GetAnchors*(AObj: pointer): TAnchors {.importc: "LinkLabel_GetAnchors", dynlib: dllname.}
proc LinkLabel_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "LinkLabel_SetAnchors", dynlib: dllname.}
proc LinkLabel_GetAutoSize*(AObj: pointer): bool {.importc: "LinkLabel_GetAutoSize", dynlib: dllname.}
proc LinkLabel_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "LinkLabel_SetAutoSize", dynlib: dllname.}
proc LinkLabel_GetCaption*(AObj: pointer): cstring {.importc: "LinkLabel_GetCaption", dynlib: dllname.}
proc LinkLabel_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "LinkLabel_SetCaption", dynlib: dllname.}
proc LinkLabel_GetColor*(AObj: pointer): TColor {.importc: "LinkLabel_GetColor", dynlib: dllname.}
proc LinkLabel_SetColor*(AObj: pointer, AValue: TColor) {.importc: "LinkLabel_SetColor", dynlib: dllname.}
proc LinkLabel_GetConstraints*(AObj: pointer): pointer {.importc: "LinkLabel_GetConstraints", dynlib: dllname.}
proc LinkLabel_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetConstraints", dynlib: dllname.}
proc LinkLabel_GetDragCursor*(AObj: pointer): TCursor {.importc: "LinkLabel_GetDragCursor", dynlib: dllname.}
proc LinkLabel_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "LinkLabel_SetDragCursor", dynlib: dllname.}
proc LinkLabel_GetDragKind*(AObj: pointer): TDragKind {.importc: "LinkLabel_GetDragKind", dynlib: dllname.}
proc LinkLabel_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "LinkLabel_SetDragKind", dynlib: dllname.}
proc LinkLabel_GetDragMode*(AObj: pointer): TDragMode {.importc: "LinkLabel_GetDragMode", dynlib: dllname.}
proc LinkLabel_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "LinkLabel_SetDragMode", dynlib: dllname.}
proc LinkLabel_GetEnabled*(AObj: pointer): bool {.importc: "LinkLabel_GetEnabled", dynlib: dllname.}
proc LinkLabel_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "LinkLabel_SetEnabled", dynlib: dllname.}
proc LinkLabel_GetFont*(AObj: pointer): pointer {.importc: "LinkLabel_GetFont", dynlib: dllname.}
proc LinkLabel_SetFont*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetFont", dynlib: dllname.}
proc LinkLabel_GetParentColor*(AObj: pointer): bool {.importc: "LinkLabel_GetParentColor", dynlib: dllname.}
proc LinkLabel_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "LinkLabel_SetParentColor", dynlib: dllname.}
proc LinkLabel_GetParentFont*(AObj: pointer): bool {.importc: "LinkLabel_GetParentFont", dynlib: dllname.}
proc LinkLabel_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "LinkLabel_SetParentFont", dynlib: dllname.}
proc LinkLabel_GetParentShowHint*(AObj: pointer): bool {.importc: "LinkLabel_GetParentShowHint", dynlib: dllname.}
proc LinkLabel_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "LinkLabel_SetParentShowHint", dynlib: dllname.}
proc LinkLabel_GetPopupMenu*(AObj: pointer): pointer {.importc: "LinkLabel_GetPopupMenu", dynlib: dllname.}
proc LinkLabel_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetPopupMenu", dynlib: dllname.}
proc LinkLabel_GetShowHint*(AObj: pointer): bool {.importc: "LinkLabel_GetShowHint", dynlib: dllname.}
proc LinkLabel_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "LinkLabel_SetShowHint", dynlib: dllname.}
proc LinkLabel_GetVisible*(AObj: pointer): bool {.importc: "LinkLabel_GetVisible", dynlib: dllname.}
proc LinkLabel_SetVisible*(AObj: pointer, AValue: bool) {.importc: "LinkLabel_SetVisible", dynlib: dllname.}
proc LinkLabel_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LinkLabel_SetOnClick", dynlib: dllname.}
proc LinkLabel_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "LinkLabel_SetOnContextPopup", dynlib: dllname.}
proc LinkLabel_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LinkLabel_SetOnDblClick", dynlib: dllname.}
proc LinkLabel_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "LinkLabel_SetOnDragDrop", dynlib: dllname.}
proc LinkLabel_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "LinkLabel_SetOnDragOver", dynlib: dllname.}
proc LinkLabel_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "LinkLabel_SetOnEndDrag", dynlib: dllname.}
proc LinkLabel_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "LinkLabel_SetOnMouseDown", dynlib: dllname.}
proc LinkLabel_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LinkLabel_SetOnMouseEnter", dynlib: dllname.}
proc LinkLabel_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LinkLabel_SetOnMouseLeave", dynlib: dllname.}
proc LinkLabel_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "LinkLabel_SetOnMouseMove", dynlib: dllname.}
proc LinkLabel_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "LinkLabel_SetOnMouseUp", dynlib: dllname.}
proc LinkLabel_SetOnLinkClick*(AObj: pointer, AEventId: TSysLinkEvent) {.importc: "LinkLabel_SetOnLinkClick", dynlib: dllname.}
proc LinkLabel_GetMouseInClient*(AObj: pointer): bool {.importc: "LinkLabel_GetMouseInClient", dynlib: dllname.}
proc LinkLabel_GetAction*(AObj: pointer): pointer {.importc: "LinkLabel_GetAction", dynlib: dllname.}
proc LinkLabel_SetAction*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetAction", dynlib: dllname.}
proc LinkLabel_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "LinkLabel_GetBiDiMode", dynlib: dllname.}
proc LinkLabel_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "LinkLabel_SetBiDiMode", dynlib: dllname.}
proc LinkLabel_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "LinkLabel_GetBoundsRect", dynlib: dllname.}
proc LinkLabel_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "LinkLabel_SetBoundsRect", dynlib: dllname.}
proc LinkLabel_GetClientHeight*(AObj: pointer): int32 {.importc: "LinkLabel_GetClientHeight", dynlib: dllname.}
proc LinkLabel_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "LinkLabel_SetClientHeight", dynlib: dllname.}
proc LinkLabel_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "LinkLabel_GetClientOrigin", dynlib: dllname.}
proc LinkLabel_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "LinkLabel_GetClientRect", dynlib: dllname.}
proc LinkLabel_GetClientWidth*(AObj: pointer): int32 {.importc: "LinkLabel_GetClientWidth", dynlib: dllname.}
proc LinkLabel_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "LinkLabel_SetClientWidth", dynlib: dllname.}
proc LinkLabel_GetControlState*(AObj: pointer): TControlState {.importc: "LinkLabel_GetControlState", dynlib: dllname.}
proc LinkLabel_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "LinkLabel_SetControlState", dynlib: dllname.}
proc LinkLabel_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "LinkLabel_GetControlStyle", dynlib: dllname.}
proc LinkLabel_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "LinkLabel_SetControlStyle", dynlib: dllname.}
proc LinkLabel_GetFloating*(AObj: pointer): bool {.importc: "LinkLabel_GetFloating", dynlib: dllname.}
proc LinkLabel_GetParent*(AObj: pointer): pointer {.importc: "LinkLabel_GetParent", dynlib: dllname.}
proc LinkLabel_SetParent*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetParent", dynlib: dllname.}
proc LinkLabel_GetLeft*(AObj: pointer): int32 {.importc: "LinkLabel_GetLeft", dynlib: dllname.}
proc LinkLabel_SetLeft*(AObj: pointer, AValue: int32) {.importc: "LinkLabel_SetLeft", dynlib: dllname.}
proc LinkLabel_GetTop*(AObj: pointer): int32 {.importc: "LinkLabel_GetTop", dynlib: dllname.}
proc LinkLabel_SetTop*(AObj: pointer, AValue: int32) {.importc: "LinkLabel_SetTop", dynlib: dllname.}
proc LinkLabel_GetWidth*(AObj: pointer): int32 {.importc: "LinkLabel_GetWidth", dynlib: dllname.}
proc LinkLabel_SetWidth*(AObj: pointer, AValue: int32) {.importc: "LinkLabel_SetWidth", dynlib: dllname.}
proc LinkLabel_GetHeight*(AObj: pointer): int32 {.importc: "LinkLabel_GetHeight", dynlib: dllname.}
proc LinkLabel_SetHeight*(AObj: pointer, AValue: int32) {.importc: "LinkLabel_SetHeight", dynlib: dllname.}
proc LinkLabel_GetHint*(AObj: pointer): cstring {.importc: "LinkLabel_GetHint", dynlib: dllname.}
proc LinkLabel_SetHint*(AObj: pointer, AValue: cstring) {.importc: "LinkLabel_SetHint", dynlib: dllname.}
proc LinkLabel_GetComponentCount*(AObj: pointer): int32 {.importc: "LinkLabel_GetComponentCount", dynlib: dllname.}
proc LinkLabel_GetComponentIndex*(AObj: pointer): int32 {.importc: "LinkLabel_GetComponentIndex", dynlib: dllname.}
proc LinkLabel_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "LinkLabel_SetComponentIndex", dynlib: dllname.}
proc LinkLabel_GetOwner*(AObj: pointer): pointer {.importc: "LinkLabel_GetOwner", dynlib: dllname.}
proc LinkLabel_GetName*(AObj: pointer): cstring {.importc: "LinkLabel_GetName", dynlib: dllname.}
proc LinkLabel_SetName*(AObj: pointer, AValue: cstring) {.importc: "LinkLabel_SetName", dynlib: dllname.}
proc LinkLabel_GetTag*(AObj: pointer): int {.importc: "LinkLabel_GetTag", dynlib: dllname.}
proc LinkLabel_SetTag*(AObj: pointer, AValue: int) {.importc: "LinkLabel_SetTag", dynlib: dllname.}
proc LinkLabel_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "LinkLabel_GetAnchorSideLeft", dynlib: dllname.}
proc LinkLabel_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetAnchorSideLeft", dynlib: dllname.}
proc LinkLabel_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "LinkLabel_GetAnchorSideTop", dynlib: dllname.}
proc LinkLabel_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetAnchorSideTop", dynlib: dllname.}
proc LinkLabel_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "LinkLabel_GetAnchorSideRight", dynlib: dllname.}
proc LinkLabel_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetAnchorSideRight", dynlib: dllname.}
proc LinkLabel_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "LinkLabel_GetAnchorSideBottom", dynlib: dllname.}
proc LinkLabel_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetAnchorSideBottom", dynlib: dllname.}
proc LinkLabel_GetBorderSpacing*(AObj: pointer): pointer {.importc: "LinkLabel_GetBorderSpacing", dynlib: dllname.}
proc LinkLabel_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "LinkLabel_SetBorderSpacing", dynlib: dllname.}
proc LinkLabel_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "LinkLabel_GetComponents", dynlib: dllname.}
proc LinkLabel_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "LinkLabel_GetAnchorSide", dynlib: dllname.}
proc LinkLabel_StaticClassType*(): TClass {.importc: "LinkLabel_StaticClassType", dynlib: dllname.}
# ----------------- TSpeedButton ----------------------
proc SpeedButton_Create*(AOwner: pointer): pointer {.importc: "SpeedButton_Create", dynlib: dllname.}
proc SpeedButton_Free*(AObj: pointer) {.importc: "SpeedButton_Free", dynlib: dllname.}
proc SpeedButton_Click*(AObj: pointer) {.importc: "SpeedButton_Click", dynlib: dllname.}
proc SpeedButton_BringToFront*(AObj: pointer) {.importc: "SpeedButton_BringToFront", dynlib: dllname.}
proc SpeedButton_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "SpeedButton_ClientToScreen", dynlib: dllname.}
proc SpeedButton_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "SpeedButton_ClientToParent", dynlib: dllname.}
proc SpeedButton_Dragging*(AObj: pointer): bool {.importc: "SpeedButton_Dragging", dynlib: dllname.}
proc SpeedButton_HasParent*(AObj: pointer): bool {.importc: "SpeedButton_HasParent", dynlib: dllname.}
proc SpeedButton_Hide*(AObj: pointer) {.importc: "SpeedButton_Hide", dynlib: dllname.}
proc SpeedButton_Invalidate*(AObj: pointer) {.importc: "SpeedButton_Invalidate", dynlib: dllname.}
proc SpeedButton_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "SpeedButton_Perform", dynlib: dllname.}
proc SpeedButton_Refresh*(AObj: pointer) {.importc: "SpeedButton_Refresh", dynlib: dllname.}
proc SpeedButton_Repaint*(AObj: pointer) {.importc: "SpeedButton_Repaint", dynlib: dllname.}
proc SpeedButton_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "SpeedButton_ScreenToClient", dynlib: dllname.}
proc SpeedButton_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "SpeedButton_ParentToClient", dynlib: dllname.}
proc SpeedButton_SendToBack*(AObj: pointer) {.importc: "SpeedButton_SendToBack", dynlib: dllname.}
proc SpeedButton_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "SpeedButton_SetBounds", dynlib: dllname.}
proc SpeedButton_Show*(AObj: pointer) {.importc: "SpeedButton_Show", dynlib: dllname.}
proc SpeedButton_Update*(AObj: pointer) {.importc: "SpeedButton_Update", dynlib: dllname.}
proc SpeedButton_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "SpeedButton_GetTextBuf", dynlib: dllname.}
proc SpeedButton_GetTextLen*(AObj: pointer): int32 {.importc: "SpeedButton_GetTextLen", dynlib: dllname.}
proc SpeedButton_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "SpeedButton_SetTextBuf", dynlib: dllname.}
proc SpeedButton_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "SpeedButton_FindComponent", dynlib: dllname.}
proc SpeedButton_GetNamePath*(AObj: pointer): cstring {.importc: "SpeedButton_GetNamePath", dynlib: dllname.}
proc SpeedButton_Assign*(AObj: pointer, Source: pointer) {.importc: "SpeedButton_Assign", dynlib: dllname.}
proc SpeedButton_ClassType*(AObj: pointer): TClass {.importc: "SpeedButton_ClassType", dynlib: dllname.}
proc SpeedButton_ClassName*(AObj: pointer): cstring {.importc: "SpeedButton_ClassName", dynlib: dllname.}
proc SpeedButton_InstanceSize*(AObj: pointer): int32 {.importc: "SpeedButton_InstanceSize", dynlib: dllname.}
proc SpeedButton_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "SpeedButton_InheritsFrom", dynlib: dllname.}
proc SpeedButton_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "SpeedButton_Equals", dynlib: dllname.}
proc SpeedButton_GetHashCode*(AObj: pointer): int32 {.importc: "SpeedButton_GetHashCode", dynlib: dllname.}
proc SpeedButton_ToString*(AObj: pointer): cstring {.importc: "SpeedButton_ToString", dynlib: dllname.}
proc SpeedButton_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "SpeedButton_AnchorToNeighbour", dynlib: dllname.}
proc SpeedButton_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "SpeedButton_AnchorParallel", dynlib: dllname.}
proc SpeedButton_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "SpeedButton_AnchorHorizontalCenterTo", dynlib: dllname.}
proc SpeedButton_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "SpeedButton_AnchorVerticalCenterTo", dynlib: dllname.}
proc SpeedButton_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "SpeedButton_AnchorSame", dynlib: dllname.}
proc SpeedButton_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "SpeedButton_AnchorAsAlign", dynlib: dllname.}
proc SpeedButton_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "SpeedButton_AnchorClient", dynlib: dllname.}
proc SpeedButton_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_ScaleDesignToForm", dynlib: dllname.}
proc SpeedButton_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_ScaleFormToDesign", dynlib: dllname.}
proc SpeedButton_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_Scale96ToForm", dynlib: dllname.}
proc SpeedButton_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_ScaleFormTo96", dynlib: dllname.}
proc SpeedButton_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_Scale96ToFont", dynlib: dllname.}
proc SpeedButton_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_ScaleFontTo96", dynlib: dllname.}
proc SpeedButton_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_ScaleScreenToFont", dynlib: dllname.}
proc SpeedButton_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_ScaleFontToScreen", dynlib: dllname.}
proc SpeedButton_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_Scale96ToScreen", dynlib: dllname.}
proc SpeedButton_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "SpeedButton_ScaleScreenTo96", dynlib: dllname.}
proc SpeedButton_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "SpeedButton_AutoAdjustLayout", dynlib: dllname.}
proc SpeedButton_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "SpeedButton_FixDesignFontsPPI", dynlib: dllname.}
proc SpeedButton_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "SpeedButton_ScaleFontsPPI", dynlib: dllname.}
proc SpeedButton_GetImageIndex*(AObj: pointer): int32 {.importc: "SpeedButton_GetImageIndex", dynlib: dllname.}
proc SpeedButton_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetImageIndex", dynlib: dllname.}
proc SpeedButton_GetImages*(AObj: pointer): pointer {.importc: "SpeedButton_GetImages", dynlib: dllname.}
proc SpeedButton_SetImages*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetImages", dynlib: dllname.}
proc SpeedButton_GetImageWidth*(AObj: pointer): int32 {.importc: "SpeedButton_GetImageWidth", dynlib: dllname.}
proc SpeedButton_SetImageWidth*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetImageWidth", dynlib: dllname.}
proc SpeedButton_GetShowCaption*(AObj: pointer): bool {.importc: "SpeedButton_GetShowCaption", dynlib: dllname.}
proc SpeedButton_SetShowCaption*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetShowCaption", dynlib: dllname.}
proc SpeedButton_GetAction*(AObj: pointer): pointer {.importc: "SpeedButton_GetAction", dynlib: dllname.}
proc SpeedButton_SetAction*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetAction", dynlib: dllname.}
proc SpeedButton_GetAlign*(AObj: pointer): TAlign {.importc: "SpeedButton_GetAlign", dynlib: dllname.}
proc SpeedButton_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "SpeedButton_SetAlign", dynlib: dllname.}
proc SpeedButton_GetAllowAllUp*(AObj: pointer): bool {.importc: "SpeedButton_GetAllowAllUp", dynlib: dllname.}
proc SpeedButton_SetAllowAllUp*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetAllowAllUp", dynlib: dllname.}
proc SpeedButton_GetAnchors*(AObj: pointer): TAnchors {.importc: "SpeedButton_GetAnchors", dynlib: dllname.}
proc SpeedButton_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "SpeedButton_SetAnchors", dynlib: dllname.}
proc SpeedButton_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "SpeedButton_GetBiDiMode", dynlib: dllname.}
proc SpeedButton_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "SpeedButton_SetBiDiMode", dynlib: dllname.}
proc SpeedButton_GetConstraints*(AObj: pointer): pointer {.importc: "SpeedButton_GetConstraints", dynlib: dllname.}
proc SpeedButton_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetConstraints", dynlib: dllname.}
proc SpeedButton_GetGroupIndex*(AObj: pointer): int32 {.importc: "SpeedButton_GetGroupIndex", dynlib: dllname.}
proc SpeedButton_SetGroupIndex*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetGroupIndex", dynlib: dllname.}
proc SpeedButton_GetDown*(AObj: pointer): bool {.importc: "SpeedButton_GetDown", dynlib: dllname.}
proc SpeedButton_SetDown*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetDown", dynlib: dllname.}
proc SpeedButton_GetCaption*(AObj: pointer): cstring {.importc: "SpeedButton_GetCaption", dynlib: dllname.}
proc SpeedButton_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "SpeedButton_SetCaption", dynlib: dllname.}
proc SpeedButton_GetEnabled*(AObj: pointer): bool {.importc: "SpeedButton_GetEnabled", dynlib: dllname.}
proc SpeedButton_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetEnabled", dynlib: dllname.}
proc SpeedButton_GetFlat*(AObj: pointer): bool {.importc: "SpeedButton_GetFlat", dynlib: dllname.}
proc SpeedButton_SetFlat*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetFlat", dynlib: dllname.}
proc SpeedButton_GetFont*(AObj: pointer): pointer {.importc: "SpeedButton_GetFont", dynlib: dllname.}
proc SpeedButton_SetFont*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetFont", dynlib: dllname.}
proc SpeedButton_GetGlyph*(AObj: pointer): pointer {.importc: "SpeedButton_GetGlyph", dynlib: dllname.}
proc SpeedButton_SetGlyph*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetGlyph", dynlib: dllname.}
proc SpeedButton_GetLayout*(AObj: pointer): TButtonLayout {.importc: "SpeedButton_GetLayout", dynlib: dllname.}
proc SpeedButton_SetLayout*(AObj: pointer, AValue: TButtonLayout) {.importc: "SpeedButton_SetLayout", dynlib: dllname.}
proc SpeedButton_GetNumGlyphs*(AObj: pointer): TNumGlyphs {.importc: "SpeedButton_GetNumGlyphs", dynlib: dllname.}
proc SpeedButton_SetNumGlyphs*(AObj: pointer, AValue: TNumGlyphs) {.importc: "SpeedButton_SetNumGlyphs", dynlib: dllname.}
proc SpeedButton_GetParentFont*(AObj: pointer): bool {.importc: "SpeedButton_GetParentFont", dynlib: dllname.}
proc SpeedButton_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetParentFont", dynlib: dllname.}
proc SpeedButton_GetParentShowHint*(AObj: pointer): bool {.importc: "SpeedButton_GetParentShowHint", dynlib: dllname.}
proc SpeedButton_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetParentShowHint", dynlib: dllname.}
proc SpeedButton_GetPopupMenu*(AObj: pointer): pointer {.importc: "SpeedButton_GetPopupMenu", dynlib: dllname.}
proc SpeedButton_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetPopupMenu", dynlib: dllname.}
proc SpeedButton_GetShowHint*(AObj: pointer): bool {.importc: "SpeedButton_GetShowHint", dynlib: dllname.}
proc SpeedButton_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetShowHint", dynlib: dllname.}
proc SpeedButton_GetSpacing*(AObj: pointer): int32 {.importc: "SpeedButton_GetSpacing", dynlib: dllname.}
proc SpeedButton_SetSpacing*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetSpacing", dynlib: dllname.}
proc SpeedButton_GetTransparent*(AObj: pointer): bool {.importc: "SpeedButton_GetTransparent", dynlib: dllname.}
proc SpeedButton_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetTransparent", dynlib: dllname.}
proc SpeedButton_GetVisible*(AObj: pointer): bool {.importc: "SpeedButton_GetVisible", dynlib: dllname.}
proc SpeedButton_SetVisible*(AObj: pointer, AValue: bool) {.importc: "SpeedButton_SetVisible", dynlib: dllname.}
proc SpeedButton_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpeedButton_SetOnClick", dynlib: dllname.}
proc SpeedButton_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpeedButton_SetOnDblClick", dynlib: dllname.}
proc SpeedButton_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "SpeedButton_SetOnMouseDown", dynlib: dllname.}
proc SpeedButton_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpeedButton_SetOnMouseEnter", dynlib: dllname.}
proc SpeedButton_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpeedButton_SetOnMouseLeave", dynlib: dllname.}
proc SpeedButton_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "SpeedButton_SetOnMouseMove", dynlib: dllname.}
proc SpeedButton_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "SpeedButton_SetOnMouseUp", dynlib: dllname.}
proc SpeedButton_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "SpeedButton_GetBoundsRect", dynlib: dllname.}
proc SpeedButton_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "SpeedButton_SetBoundsRect", dynlib: dllname.}
proc SpeedButton_GetClientHeight*(AObj: pointer): int32 {.importc: "SpeedButton_GetClientHeight", dynlib: dllname.}
proc SpeedButton_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetClientHeight", dynlib: dllname.}
proc SpeedButton_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "SpeedButton_GetClientOrigin", dynlib: dllname.}
proc SpeedButton_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "SpeedButton_GetClientRect", dynlib: dllname.}
proc SpeedButton_GetClientWidth*(AObj: pointer): int32 {.importc: "SpeedButton_GetClientWidth", dynlib: dllname.}
proc SpeedButton_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetClientWidth", dynlib: dllname.}
proc SpeedButton_GetControlState*(AObj: pointer): TControlState {.importc: "SpeedButton_GetControlState", dynlib: dllname.}
proc SpeedButton_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "SpeedButton_SetControlState", dynlib: dllname.}
proc SpeedButton_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "SpeedButton_GetControlStyle", dynlib: dllname.}
proc SpeedButton_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "SpeedButton_SetControlStyle", dynlib: dllname.}
proc SpeedButton_GetFloating*(AObj: pointer): bool {.importc: "SpeedButton_GetFloating", dynlib: dllname.}
proc SpeedButton_GetParent*(AObj: pointer): pointer {.importc: "SpeedButton_GetParent", dynlib: dllname.}
proc SpeedButton_SetParent*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetParent", dynlib: dllname.}
proc SpeedButton_GetLeft*(AObj: pointer): int32 {.importc: "SpeedButton_GetLeft", dynlib: dllname.}
proc SpeedButton_SetLeft*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetLeft", dynlib: dllname.}
proc SpeedButton_GetTop*(AObj: pointer): int32 {.importc: "SpeedButton_GetTop", dynlib: dllname.}
proc SpeedButton_SetTop*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetTop", dynlib: dllname.}
proc SpeedButton_GetWidth*(AObj: pointer): int32 {.importc: "SpeedButton_GetWidth", dynlib: dllname.}
proc SpeedButton_SetWidth*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetWidth", dynlib: dllname.}
proc SpeedButton_GetHeight*(AObj: pointer): int32 {.importc: "SpeedButton_GetHeight", dynlib: dllname.}
proc SpeedButton_SetHeight*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetHeight", dynlib: dllname.}
proc SpeedButton_GetCursor*(AObj: pointer): TCursor {.importc: "SpeedButton_GetCursor", dynlib: dllname.}
proc SpeedButton_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "SpeedButton_SetCursor", dynlib: dllname.}
proc SpeedButton_GetHint*(AObj: pointer): cstring {.importc: "SpeedButton_GetHint", dynlib: dllname.}
proc SpeedButton_SetHint*(AObj: pointer, AValue: cstring) {.importc: "SpeedButton_SetHint", dynlib: dllname.}
proc SpeedButton_GetComponentCount*(AObj: pointer): int32 {.importc: "SpeedButton_GetComponentCount", dynlib: dllname.}
proc SpeedButton_GetComponentIndex*(AObj: pointer): int32 {.importc: "SpeedButton_GetComponentIndex", dynlib: dllname.}
proc SpeedButton_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "SpeedButton_SetComponentIndex", dynlib: dllname.}
proc SpeedButton_GetOwner*(AObj: pointer): pointer {.importc: "SpeedButton_GetOwner", dynlib: dllname.}
proc SpeedButton_GetName*(AObj: pointer): cstring {.importc: "SpeedButton_GetName", dynlib: dllname.}
proc SpeedButton_SetName*(AObj: pointer, AValue: cstring) {.importc: "SpeedButton_SetName", dynlib: dllname.}
proc SpeedButton_GetTag*(AObj: pointer): int {.importc: "SpeedButton_GetTag", dynlib: dllname.}
proc SpeedButton_SetTag*(AObj: pointer, AValue: int) {.importc: "SpeedButton_SetTag", dynlib: dllname.}
proc SpeedButton_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "SpeedButton_GetAnchorSideLeft", dynlib: dllname.}
proc SpeedButton_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetAnchorSideLeft", dynlib: dllname.}
proc SpeedButton_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "SpeedButton_GetAnchorSideTop", dynlib: dllname.}
proc SpeedButton_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetAnchorSideTop", dynlib: dllname.}
proc SpeedButton_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "SpeedButton_GetAnchorSideRight", dynlib: dllname.}
proc SpeedButton_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetAnchorSideRight", dynlib: dllname.}
proc SpeedButton_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "SpeedButton_GetAnchorSideBottom", dynlib: dllname.}
proc SpeedButton_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetAnchorSideBottom", dynlib: dllname.}
proc SpeedButton_GetBorderSpacing*(AObj: pointer): pointer {.importc: "SpeedButton_GetBorderSpacing", dynlib: dllname.}
proc SpeedButton_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "SpeedButton_SetBorderSpacing", dynlib: dllname.}
proc SpeedButton_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "SpeedButton_GetComponents", dynlib: dllname.}
proc SpeedButton_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "SpeedButton_GetAnchorSide", dynlib: dllname.}
proc SpeedButton_StaticClassType*(): TClass {.importc: "SpeedButton_StaticClassType", dynlib: dllname.}
# ----------------- TSplitter ----------------------
proc Splitter_Create*(AOwner: pointer): pointer {.importc: "Splitter_Create", dynlib: dllname.}
proc Splitter_Free*(AObj: pointer) {.importc: "Splitter_Free", dynlib: dllname.}
proc Splitter_BringToFront*(AObj: pointer) {.importc: "Splitter_BringToFront", dynlib: dllname.}
proc Splitter_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Splitter_ClientToScreen", dynlib: dllname.}
proc Splitter_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Splitter_ClientToParent", dynlib: dllname.}
proc Splitter_Dragging*(AObj: pointer): bool {.importc: "Splitter_Dragging", dynlib: dllname.}
proc Splitter_HasParent*(AObj: pointer): bool {.importc: "Splitter_HasParent", dynlib: dllname.}
proc Splitter_Hide*(AObj: pointer) {.importc: "Splitter_Hide", dynlib: dllname.}
proc Splitter_Invalidate*(AObj: pointer) {.importc: "Splitter_Invalidate", dynlib: dllname.}
proc Splitter_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Splitter_Perform", dynlib: dllname.}
proc Splitter_Refresh*(AObj: pointer) {.importc: "Splitter_Refresh", dynlib: dllname.}
proc Splitter_Repaint*(AObj: pointer) {.importc: "Splitter_Repaint", dynlib: dllname.}
proc Splitter_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Splitter_ScreenToClient", dynlib: dllname.}
proc Splitter_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Splitter_ParentToClient", dynlib: dllname.}
proc Splitter_SendToBack*(AObj: pointer) {.importc: "Splitter_SendToBack", dynlib: dllname.}
proc Splitter_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Splitter_SetBounds", dynlib: dllname.}
proc Splitter_Show*(AObj: pointer) {.importc: "Splitter_Show", dynlib: dllname.}
proc Splitter_Update*(AObj: pointer) {.importc: "Splitter_Update", dynlib: dllname.}
proc Splitter_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Splitter_GetTextBuf", dynlib: dllname.}
proc Splitter_GetTextLen*(AObj: pointer): int32 {.importc: "Splitter_GetTextLen", dynlib: dllname.}
proc Splitter_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Splitter_SetTextBuf", dynlib: dllname.}
proc Splitter_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Splitter_FindComponent", dynlib: dllname.}
proc Splitter_GetNamePath*(AObj: pointer): cstring {.importc: "Splitter_GetNamePath", dynlib: dllname.}
proc Splitter_Assign*(AObj: pointer, Source: pointer) {.importc: "Splitter_Assign", dynlib: dllname.}
proc Splitter_ClassType*(AObj: pointer): TClass {.importc: "Splitter_ClassType", dynlib: dllname.}
proc Splitter_ClassName*(AObj: pointer): cstring {.importc: "Splitter_ClassName", dynlib: dllname.}
proc Splitter_InstanceSize*(AObj: pointer): int32 {.importc: "Splitter_InstanceSize", dynlib: dllname.}
proc Splitter_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Splitter_InheritsFrom", dynlib: dllname.}
proc Splitter_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Splitter_Equals", dynlib: dllname.}
proc Splitter_GetHashCode*(AObj: pointer): int32 {.importc: "Splitter_GetHashCode", dynlib: dllname.}
proc Splitter_ToString*(AObj: pointer): cstring {.importc: "Splitter_ToString", dynlib: dllname.}
proc Splitter_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Splitter_AnchorToNeighbour", dynlib: dllname.}
proc Splitter_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Splitter_AnchorParallel", dynlib: dllname.}
proc Splitter_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Splitter_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Splitter_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Splitter_AnchorVerticalCenterTo", dynlib: dllname.}
proc Splitter_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Splitter_AnchorSame", dynlib: dllname.}
proc Splitter_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Splitter_AnchorAsAlign", dynlib: dllname.}
proc Splitter_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Splitter_AnchorClient", dynlib: dllname.}
proc Splitter_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_ScaleDesignToForm", dynlib: dllname.}
proc Splitter_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_ScaleFormToDesign", dynlib: dllname.}
proc Splitter_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_Scale96ToForm", dynlib: dllname.}
proc Splitter_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_ScaleFormTo96", dynlib: dllname.}
proc Splitter_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_Scale96ToFont", dynlib: dllname.}
proc Splitter_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_ScaleFontTo96", dynlib: dllname.}
proc Splitter_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_ScaleScreenToFont", dynlib: dllname.}
proc Splitter_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_ScaleFontToScreen", dynlib: dllname.}
proc Splitter_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_Scale96ToScreen", dynlib: dllname.}
proc Splitter_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Splitter_ScaleScreenTo96", dynlib: dllname.}
proc Splitter_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Splitter_AutoAdjustLayout", dynlib: dllname.}
proc Splitter_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Splitter_FixDesignFontsPPI", dynlib: dllname.}
proc Splitter_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Splitter_ScaleFontsPPI", dynlib: dllname.}
proc Splitter_GetResizeAnchor*(AObj: pointer): TAnchorKind {.importc: "Splitter_GetResizeAnchor", dynlib: dllname.}
proc Splitter_SetResizeAnchor*(AObj: pointer, AValue: TAnchorKind) {.importc: "Splitter_SetResizeAnchor", dynlib: dllname.}
proc Splitter_GetCanvas*(AObj: pointer): pointer {.importc: "Splitter_GetCanvas", dynlib: dllname.}
proc Splitter_GetAlign*(AObj: pointer): TAlign {.importc: "Splitter_GetAlign", dynlib: dllname.}
proc Splitter_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Splitter_SetAlign", dynlib: dllname.}
proc Splitter_GetColor*(AObj: pointer): TColor {.importc: "Splitter_GetColor", dynlib: dllname.}
proc Splitter_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Splitter_SetColor", dynlib: dllname.}
proc Splitter_GetCursor*(AObj: pointer): TCursor {.importc: "Splitter_GetCursor", dynlib: dllname.}
proc Splitter_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Splitter_SetCursor", dynlib: dllname.}
proc Splitter_GetConstraints*(AObj: pointer): pointer {.importc: "Splitter_GetConstraints", dynlib: dllname.}
proc Splitter_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetConstraints", dynlib: dllname.}
proc Splitter_GetMinSize*(AObj: pointer): int32 {.importc: "Splitter_GetMinSize", dynlib: dllname.}
proc Splitter_SetMinSize*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetMinSize", dynlib: dllname.}
proc Splitter_GetParentColor*(AObj: pointer): bool {.importc: "Splitter_GetParentColor", dynlib: dllname.}
proc Splitter_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "Splitter_SetParentColor", dynlib: dllname.}
proc Splitter_GetVisible*(AObj: pointer): bool {.importc: "Splitter_GetVisible", dynlib: dllname.}
proc Splitter_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Splitter_SetVisible", dynlib: dllname.}
proc Splitter_GetWidth*(AObj: pointer): int32 {.importc: "Splitter_GetWidth", dynlib: dllname.}
proc Splitter_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetWidth", dynlib: dllname.}
proc Splitter_SetOnPaint*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Splitter_SetOnPaint", dynlib: dllname.}
proc Splitter_GetEnabled*(AObj: pointer): bool {.importc: "Splitter_GetEnabled", dynlib: dllname.}
proc Splitter_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Splitter_SetEnabled", dynlib: dllname.}
proc Splitter_GetAction*(AObj: pointer): pointer {.importc: "Splitter_GetAction", dynlib: dllname.}
proc Splitter_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetAction", dynlib: dllname.}
proc Splitter_GetAnchors*(AObj: pointer): TAnchors {.importc: "Splitter_GetAnchors", dynlib: dllname.}
proc Splitter_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Splitter_SetAnchors", dynlib: dllname.}
proc Splitter_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Splitter_GetBiDiMode", dynlib: dllname.}
proc Splitter_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Splitter_SetBiDiMode", dynlib: dllname.}
proc Splitter_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Splitter_GetBoundsRect", dynlib: dllname.}
proc Splitter_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Splitter_SetBoundsRect", dynlib: dllname.}
proc Splitter_GetClientHeight*(AObj: pointer): int32 {.importc: "Splitter_GetClientHeight", dynlib: dllname.}
proc Splitter_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetClientHeight", dynlib: dllname.}
proc Splitter_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Splitter_GetClientOrigin", dynlib: dllname.}
proc Splitter_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Splitter_GetClientRect", dynlib: dllname.}
proc Splitter_GetClientWidth*(AObj: pointer): int32 {.importc: "Splitter_GetClientWidth", dynlib: dllname.}
proc Splitter_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetClientWidth", dynlib: dllname.}
proc Splitter_GetControlState*(AObj: pointer): TControlState {.importc: "Splitter_GetControlState", dynlib: dllname.}
proc Splitter_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Splitter_SetControlState", dynlib: dllname.}
proc Splitter_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Splitter_GetControlStyle", dynlib: dllname.}
proc Splitter_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Splitter_SetControlStyle", dynlib: dllname.}
proc Splitter_GetFloating*(AObj: pointer): bool {.importc: "Splitter_GetFloating", dynlib: dllname.}
proc Splitter_GetShowHint*(AObj: pointer): bool {.importc: "Splitter_GetShowHint", dynlib: dllname.}
proc Splitter_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Splitter_SetShowHint", dynlib: dllname.}
proc Splitter_GetParent*(AObj: pointer): pointer {.importc: "Splitter_GetParent", dynlib: dllname.}
proc Splitter_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetParent", dynlib: dllname.}
proc Splitter_GetLeft*(AObj: pointer): int32 {.importc: "Splitter_GetLeft", dynlib: dllname.}
proc Splitter_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetLeft", dynlib: dllname.}
proc Splitter_GetTop*(AObj: pointer): int32 {.importc: "Splitter_GetTop", dynlib: dllname.}
proc Splitter_SetTop*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetTop", dynlib: dllname.}
proc Splitter_GetHeight*(AObj: pointer): int32 {.importc: "Splitter_GetHeight", dynlib: dllname.}
proc Splitter_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetHeight", dynlib: dllname.}
proc Splitter_GetHint*(AObj: pointer): cstring {.importc: "Splitter_GetHint", dynlib: dllname.}
proc Splitter_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Splitter_SetHint", dynlib: dllname.}
proc Splitter_GetComponentCount*(AObj: pointer): int32 {.importc: "Splitter_GetComponentCount", dynlib: dllname.}
proc Splitter_GetComponentIndex*(AObj: pointer): int32 {.importc: "Splitter_GetComponentIndex", dynlib: dllname.}
proc Splitter_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Splitter_SetComponentIndex", dynlib: dllname.}
proc Splitter_GetOwner*(AObj: pointer): pointer {.importc: "Splitter_GetOwner", dynlib: dllname.}
proc Splitter_GetName*(AObj: pointer): cstring {.importc: "Splitter_GetName", dynlib: dllname.}
proc Splitter_SetName*(AObj: pointer, AValue: cstring) {.importc: "Splitter_SetName", dynlib: dllname.}
proc Splitter_GetTag*(AObj: pointer): int {.importc: "Splitter_GetTag", dynlib: dllname.}
proc Splitter_SetTag*(AObj: pointer, AValue: int) {.importc: "Splitter_SetTag", dynlib: dllname.}
proc Splitter_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Splitter_GetAnchorSideLeft", dynlib: dllname.}
proc Splitter_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetAnchorSideLeft", dynlib: dllname.}
proc Splitter_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Splitter_GetAnchorSideTop", dynlib: dllname.}
proc Splitter_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetAnchorSideTop", dynlib: dllname.}
proc Splitter_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Splitter_GetAnchorSideRight", dynlib: dllname.}
proc Splitter_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetAnchorSideRight", dynlib: dllname.}
proc Splitter_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Splitter_GetAnchorSideBottom", dynlib: dllname.}
proc Splitter_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetAnchorSideBottom", dynlib: dllname.}
proc Splitter_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Splitter_GetBorderSpacing", dynlib: dllname.}
proc Splitter_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Splitter_SetBorderSpacing", dynlib: dllname.}
proc Splitter_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Splitter_GetComponents", dynlib: dllname.}
proc Splitter_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Splitter_GetAnchorSide", dynlib: dllname.}
proc Splitter_StaticClassType*(): TClass {.importc: "Splitter_StaticClassType", dynlib: dllname.}
# ----------------- TRadioGroup ----------------------
proc RadioGroup_Create*(AOwner: pointer): pointer {.importc: "RadioGroup_Create", dynlib: dllname.}
proc RadioGroup_Free*(AObj: pointer) {.importc: "RadioGroup_Free", dynlib: dllname.}
proc RadioGroup_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "RadioGroup_FlipChildren", dynlib: dllname.}
proc RadioGroup_CanFocus*(AObj: pointer): bool {.importc: "RadioGroup_CanFocus", dynlib: dllname.}
proc RadioGroup_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "RadioGroup_ContainsControl", dynlib: dllname.}
proc RadioGroup_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "RadioGroup_ControlAtPos", dynlib: dllname.}
proc RadioGroup_DisableAlign*(AObj: pointer) {.importc: "RadioGroup_DisableAlign", dynlib: dllname.}
proc RadioGroup_EnableAlign*(AObj: pointer) {.importc: "RadioGroup_EnableAlign", dynlib: dllname.}
proc RadioGroup_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "RadioGroup_FindChildControl", dynlib: dllname.}
proc RadioGroup_Focused*(AObj: pointer): bool {.importc: "RadioGroup_Focused", dynlib: dllname.}
proc RadioGroup_HandleAllocated*(AObj: pointer): bool {.importc: "RadioGroup_HandleAllocated", dynlib: dllname.}
proc RadioGroup_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "RadioGroup_InsertControl", dynlib: dllname.}
proc RadioGroup_Invalidate*(AObj: pointer) {.importc: "RadioGroup_Invalidate", dynlib: dllname.}
proc RadioGroup_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "RadioGroup_PaintTo", dynlib: dllname.}
proc RadioGroup_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "RadioGroup_RemoveControl", dynlib: dllname.}
proc RadioGroup_Realign*(AObj: pointer) {.importc: "RadioGroup_Realign", dynlib: dllname.}
proc RadioGroup_Repaint*(AObj: pointer) {.importc: "RadioGroup_Repaint", dynlib: dllname.}
proc RadioGroup_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "RadioGroup_ScaleBy", dynlib: dllname.}
proc RadioGroup_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "RadioGroup_ScrollBy", dynlib: dllname.}
proc RadioGroup_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "RadioGroup_SetBounds", dynlib: dllname.}
proc RadioGroup_SetFocus*(AObj: pointer) {.importc: "RadioGroup_SetFocus", dynlib: dllname.}
proc RadioGroup_Update*(AObj: pointer) {.importc: "RadioGroup_Update", dynlib: dllname.}
proc RadioGroup_BringToFront*(AObj: pointer) {.importc: "RadioGroup_BringToFront", dynlib: dllname.}
proc RadioGroup_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "RadioGroup_ClientToScreen", dynlib: dllname.}
proc RadioGroup_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "RadioGroup_ClientToParent", dynlib: dllname.}
proc RadioGroup_Dragging*(AObj: pointer): bool {.importc: "RadioGroup_Dragging", dynlib: dllname.}
proc RadioGroup_HasParent*(AObj: pointer): bool {.importc: "RadioGroup_HasParent", dynlib: dllname.}
proc RadioGroup_Hide*(AObj: pointer) {.importc: "RadioGroup_Hide", dynlib: dllname.}
proc RadioGroup_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "RadioGroup_Perform", dynlib: dllname.}
proc RadioGroup_Refresh*(AObj: pointer) {.importc: "RadioGroup_Refresh", dynlib: dllname.}
proc RadioGroup_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "RadioGroup_ScreenToClient", dynlib: dllname.}
proc RadioGroup_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "RadioGroup_ParentToClient", dynlib: dllname.}
proc RadioGroup_SendToBack*(AObj: pointer) {.importc: "RadioGroup_SendToBack", dynlib: dllname.}
proc RadioGroup_Show*(AObj: pointer) {.importc: "RadioGroup_Show", dynlib: dllname.}
proc RadioGroup_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "RadioGroup_GetTextBuf", dynlib: dllname.}
proc RadioGroup_GetTextLen*(AObj: pointer): int32 {.importc: "RadioGroup_GetTextLen", dynlib: dllname.}
proc RadioGroup_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "RadioGroup_SetTextBuf", dynlib: dllname.}
proc RadioGroup_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "RadioGroup_FindComponent", dynlib: dllname.}
proc RadioGroup_GetNamePath*(AObj: pointer): cstring {.importc: "RadioGroup_GetNamePath", dynlib: dllname.}
proc RadioGroup_Assign*(AObj: pointer, Source: pointer) {.importc: "RadioGroup_Assign", dynlib: dllname.}
proc RadioGroup_ClassType*(AObj: pointer): TClass {.importc: "RadioGroup_ClassType", dynlib: dllname.}
proc RadioGroup_ClassName*(AObj: pointer): cstring {.importc: "RadioGroup_ClassName", dynlib: dllname.}
proc RadioGroup_InstanceSize*(AObj: pointer): int32 {.importc: "RadioGroup_InstanceSize", dynlib: dllname.}
proc RadioGroup_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "RadioGroup_InheritsFrom", dynlib: dllname.}
proc RadioGroup_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "RadioGroup_Equals", dynlib: dllname.}
proc RadioGroup_GetHashCode*(AObj: pointer): int32 {.importc: "RadioGroup_GetHashCode", dynlib: dllname.}
proc RadioGroup_ToString*(AObj: pointer): cstring {.importc: "RadioGroup_ToString", dynlib: dllname.}
proc RadioGroup_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "RadioGroup_AnchorToNeighbour", dynlib: dllname.}
proc RadioGroup_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "RadioGroup_AnchorParallel", dynlib: dllname.}
proc RadioGroup_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "RadioGroup_AnchorHorizontalCenterTo", dynlib: dllname.}
proc RadioGroup_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "RadioGroup_AnchorVerticalCenterTo", dynlib: dllname.}
proc RadioGroup_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "RadioGroup_AnchorSame", dynlib: dllname.}
proc RadioGroup_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "RadioGroup_AnchorAsAlign", dynlib: dllname.}
proc RadioGroup_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "RadioGroup_AnchorClient", dynlib: dllname.}
proc RadioGroup_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_ScaleDesignToForm", dynlib: dllname.}
proc RadioGroup_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_ScaleFormToDesign", dynlib: dllname.}
proc RadioGroup_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_Scale96ToForm", dynlib: dllname.}
proc RadioGroup_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_ScaleFormTo96", dynlib: dllname.}
proc RadioGroup_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_Scale96ToFont", dynlib: dllname.}
proc RadioGroup_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_ScaleFontTo96", dynlib: dllname.}
proc RadioGroup_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_ScaleScreenToFont", dynlib: dllname.}
proc RadioGroup_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_ScaleFontToScreen", dynlib: dllname.}
proc RadioGroup_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_Scale96ToScreen", dynlib: dllname.}
proc RadioGroup_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RadioGroup_ScaleScreenTo96", dynlib: dllname.}
proc RadioGroup_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "RadioGroup_AutoAdjustLayout", dynlib: dllname.}
proc RadioGroup_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "RadioGroup_FixDesignFontsPPI", dynlib: dllname.}
proc RadioGroup_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "RadioGroup_ScaleFontsPPI", dynlib: dllname.}
proc RadioGroup_GetAlign*(AObj: pointer): TAlign {.importc: "RadioGroup_GetAlign", dynlib: dllname.}
proc RadioGroup_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "RadioGroup_SetAlign", dynlib: dllname.}
proc RadioGroup_GetAnchors*(AObj: pointer): TAnchors {.importc: "RadioGroup_GetAnchors", dynlib: dllname.}
proc RadioGroup_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "RadioGroup_SetAnchors", dynlib: dllname.}
proc RadioGroup_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "RadioGroup_GetBiDiMode", dynlib: dllname.}
proc RadioGroup_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "RadioGroup_SetBiDiMode", dynlib: dllname.}
proc RadioGroup_GetCaption*(AObj: pointer): cstring {.importc: "RadioGroup_GetCaption", dynlib: dllname.}
proc RadioGroup_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "RadioGroup_SetCaption", dynlib: dllname.}
proc RadioGroup_GetColor*(AObj: pointer): TColor {.importc: "RadioGroup_GetColor", dynlib: dllname.}
proc RadioGroup_SetColor*(AObj: pointer, AValue: TColor) {.importc: "RadioGroup_SetColor", dynlib: dllname.}
proc RadioGroup_GetColumns*(AObj: pointer): int32 {.importc: "RadioGroup_GetColumns", dynlib: dllname.}
proc RadioGroup_SetColumns*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetColumns", dynlib: dllname.}
proc RadioGroup_GetDoubleBuffered*(AObj: pointer): bool {.importc: "RadioGroup_GetDoubleBuffered", dynlib: dllname.}
proc RadioGroup_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetDoubleBuffered", dynlib: dllname.}
proc RadioGroup_GetDragCursor*(AObj: pointer): TCursor {.importc: "RadioGroup_GetDragCursor", dynlib: dllname.}
proc RadioGroup_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "RadioGroup_SetDragCursor", dynlib: dllname.}
proc RadioGroup_GetDragMode*(AObj: pointer): TDragMode {.importc: "RadioGroup_GetDragMode", dynlib: dllname.}
proc RadioGroup_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "RadioGroup_SetDragMode", dynlib: dllname.}
proc RadioGroup_GetEnabled*(AObj: pointer): bool {.importc: "RadioGroup_GetEnabled", dynlib: dllname.}
proc RadioGroup_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetEnabled", dynlib: dllname.}
proc RadioGroup_GetFont*(AObj: pointer): pointer {.importc: "RadioGroup_GetFont", dynlib: dllname.}
proc RadioGroup_SetFont*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetFont", dynlib: dllname.}
proc RadioGroup_GetItemIndex*(AObj: pointer): int32 {.importc: "RadioGroup_GetItemIndex", dynlib: dllname.}
proc RadioGroup_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetItemIndex", dynlib: dllname.}
proc RadioGroup_GetItems*(AObj: pointer): pointer {.importc: "RadioGroup_GetItems", dynlib: dllname.}
proc RadioGroup_SetItems*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetItems", dynlib: dllname.}
proc RadioGroup_GetConstraints*(AObj: pointer): pointer {.importc: "RadioGroup_GetConstraints", dynlib: dllname.}
proc RadioGroup_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetConstraints", dynlib: dllname.}
proc RadioGroup_GetParentColor*(AObj: pointer): bool {.importc: "RadioGroup_GetParentColor", dynlib: dllname.}
proc RadioGroup_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetParentColor", dynlib: dllname.}
proc RadioGroup_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "RadioGroup_GetParentDoubleBuffered", dynlib: dllname.}
proc RadioGroup_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetParentDoubleBuffered", dynlib: dllname.}
proc RadioGroup_GetParentFont*(AObj: pointer): bool {.importc: "RadioGroup_GetParentFont", dynlib: dllname.}
proc RadioGroup_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetParentFont", dynlib: dllname.}
proc RadioGroup_GetParentShowHint*(AObj: pointer): bool {.importc: "RadioGroup_GetParentShowHint", dynlib: dllname.}
proc RadioGroup_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetParentShowHint", dynlib: dllname.}
proc RadioGroup_GetPopupMenu*(AObj: pointer): pointer {.importc: "RadioGroup_GetPopupMenu", dynlib: dllname.}
proc RadioGroup_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetPopupMenu", dynlib: dllname.}
proc RadioGroup_GetShowHint*(AObj: pointer): bool {.importc: "RadioGroup_GetShowHint", dynlib: dllname.}
proc RadioGroup_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetShowHint", dynlib: dllname.}
proc RadioGroup_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "RadioGroup_GetTabOrder", dynlib: dllname.}
proc RadioGroup_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "RadioGroup_SetTabOrder", dynlib: dllname.}
proc RadioGroup_GetTabStop*(AObj: pointer): bool {.importc: "RadioGroup_GetTabStop", dynlib: dllname.}
proc RadioGroup_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetTabStop", dynlib: dllname.}
proc RadioGroup_GetVisible*(AObj: pointer): bool {.importc: "RadioGroup_GetVisible", dynlib: dllname.}
proc RadioGroup_SetVisible*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetVisible", dynlib: dllname.}
proc RadioGroup_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioGroup_SetOnClick", dynlib: dllname.}
proc RadioGroup_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "RadioGroup_SetOnDragDrop", dynlib: dllname.}
proc RadioGroup_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "RadioGroup_SetOnDragOver", dynlib: dllname.}
proc RadioGroup_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "RadioGroup_SetOnEndDrag", dynlib: dllname.}
proc RadioGroup_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioGroup_SetOnEnter", dynlib: dllname.}
proc RadioGroup_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RadioGroup_SetOnExit", dynlib: dllname.}
proc RadioGroup_GetDockClientCount*(AObj: pointer): int32 {.importc: "RadioGroup_GetDockClientCount", dynlib: dllname.}
proc RadioGroup_GetDockSite*(AObj: pointer): bool {.importc: "RadioGroup_GetDockSite", dynlib: dllname.}
proc RadioGroup_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetDockSite", dynlib: dllname.}
proc RadioGroup_GetMouseInClient*(AObj: pointer): bool {.importc: "RadioGroup_GetMouseInClient", dynlib: dllname.}
proc RadioGroup_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "RadioGroup_GetVisibleDockClientCount", dynlib: dllname.}
proc RadioGroup_GetBrush*(AObj: pointer): pointer {.importc: "RadioGroup_GetBrush", dynlib: dllname.}
proc RadioGroup_GetControlCount*(AObj: pointer): int32 {.importc: "RadioGroup_GetControlCount", dynlib: dllname.}
proc RadioGroup_GetHandle*(AObj: pointer): HWND {.importc: "RadioGroup_GetHandle", dynlib: dllname.}
proc RadioGroup_GetParentWindow*(AObj: pointer): HWND {.importc: "RadioGroup_GetParentWindow", dynlib: dllname.}
proc RadioGroup_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "RadioGroup_SetParentWindow", dynlib: dllname.}
proc RadioGroup_GetShowing*(AObj: pointer): bool {.importc: "RadioGroup_GetShowing", dynlib: dllname.}
proc RadioGroup_GetUseDockManager*(AObj: pointer): bool {.importc: "RadioGroup_GetUseDockManager", dynlib: dllname.}
proc RadioGroup_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "RadioGroup_SetUseDockManager", dynlib: dllname.}
proc RadioGroup_GetAction*(AObj: pointer): pointer {.importc: "RadioGroup_GetAction", dynlib: dllname.}
proc RadioGroup_SetAction*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetAction", dynlib: dllname.}
proc RadioGroup_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "RadioGroup_GetBoundsRect", dynlib: dllname.}
proc RadioGroup_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "RadioGroup_SetBoundsRect", dynlib: dllname.}
proc RadioGroup_GetClientHeight*(AObj: pointer): int32 {.importc: "RadioGroup_GetClientHeight", dynlib: dllname.}
proc RadioGroup_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetClientHeight", dynlib: dllname.}
proc RadioGroup_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "RadioGroup_GetClientOrigin", dynlib: dllname.}
proc RadioGroup_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "RadioGroup_GetClientRect", dynlib: dllname.}
proc RadioGroup_GetClientWidth*(AObj: pointer): int32 {.importc: "RadioGroup_GetClientWidth", dynlib: dllname.}
proc RadioGroup_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetClientWidth", dynlib: dllname.}
proc RadioGroup_GetControlState*(AObj: pointer): TControlState {.importc: "RadioGroup_GetControlState", dynlib: dllname.}
proc RadioGroup_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "RadioGroup_SetControlState", dynlib: dllname.}
proc RadioGroup_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "RadioGroup_GetControlStyle", dynlib: dllname.}
proc RadioGroup_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "RadioGroup_SetControlStyle", dynlib: dllname.}
proc RadioGroup_GetFloating*(AObj: pointer): bool {.importc: "RadioGroup_GetFloating", dynlib: dllname.}
proc RadioGroup_GetParent*(AObj: pointer): pointer {.importc: "RadioGroup_GetParent", dynlib: dllname.}
proc RadioGroup_SetParent*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetParent", dynlib: dllname.}
proc RadioGroup_GetLeft*(AObj: pointer): int32 {.importc: "RadioGroup_GetLeft", dynlib: dllname.}
proc RadioGroup_SetLeft*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetLeft", dynlib: dllname.}
proc RadioGroup_GetTop*(AObj: pointer): int32 {.importc: "RadioGroup_GetTop", dynlib: dllname.}
proc RadioGroup_SetTop*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetTop", dynlib: dllname.}
proc RadioGroup_GetWidth*(AObj: pointer): int32 {.importc: "RadioGroup_GetWidth", dynlib: dllname.}
proc RadioGroup_SetWidth*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetWidth", dynlib: dllname.}
proc RadioGroup_GetHeight*(AObj: pointer): int32 {.importc: "RadioGroup_GetHeight", dynlib: dllname.}
proc RadioGroup_SetHeight*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetHeight", dynlib: dllname.}
proc RadioGroup_GetCursor*(AObj: pointer): TCursor {.importc: "RadioGroup_GetCursor", dynlib: dllname.}
proc RadioGroup_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "RadioGroup_SetCursor", dynlib: dllname.}
proc RadioGroup_GetHint*(AObj: pointer): cstring {.importc: "RadioGroup_GetHint", dynlib: dllname.}
proc RadioGroup_SetHint*(AObj: pointer, AValue: cstring) {.importc: "RadioGroup_SetHint", dynlib: dllname.}
proc RadioGroup_GetComponentCount*(AObj: pointer): int32 {.importc: "RadioGroup_GetComponentCount", dynlib: dllname.}
proc RadioGroup_GetComponentIndex*(AObj: pointer): int32 {.importc: "RadioGroup_GetComponentIndex", dynlib: dllname.}
proc RadioGroup_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "RadioGroup_SetComponentIndex", dynlib: dllname.}
proc RadioGroup_GetOwner*(AObj: pointer): pointer {.importc: "RadioGroup_GetOwner", dynlib: dllname.}
proc RadioGroup_GetName*(AObj: pointer): cstring {.importc: "RadioGroup_GetName", dynlib: dllname.}
proc RadioGroup_SetName*(AObj: pointer, AValue: cstring) {.importc: "RadioGroup_SetName", dynlib: dllname.}
proc RadioGroup_GetTag*(AObj: pointer): int {.importc: "RadioGroup_GetTag", dynlib: dllname.}
proc RadioGroup_SetTag*(AObj: pointer, AValue: int) {.importc: "RadioGroup_SetTag", dynlib: dllname.}
proc RadioGroup_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "RadioGroup_GetAnchorSideLeft", dynlib: dllname.}
proc RadioGroup_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetAnchorSideLeft", dynlib: dllname.}
proc RadioGroup_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "RadioGroup_GetAnchorSideTop", dynlib: dllname.}
proc RadioGroup_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetAnchorSideTop", dynlib: dllname.}
proc RadioGroup_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "RadioGroup_GetAnchorSideRight", dynlib: dllname.}
proc RadioGroup_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetAnchorSideRight", dynlib: dllname.}
proc RadioGroup_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "RadioGroup_GetAnchorSideBottom", dynlib: dllname.}
proc RadioGroup_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetAnchorSideBottom", dynlib: dllname.}
proc RadioGroup_GetChildSizing*(AObj: pointer): pointer {.importc: "RadioGroup_GetChildSizing", dynlib: dllname.}
proc RadioGroup_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetChildSizing", dynlib: dllname.}
proc RadioGroup_GetBorderSpacing*(AObj: pointer): pointer {.importc: "RadioGroup_GetBorderSpacing", dynlib: dllname.}
proc RadioGroup_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "RadioGroup_SetBorderSpacing", dynlib: dllname.}
proc RadioGroup_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "RadioGroup_GetDockClients", dynlib: dllname.}
proc RadioGroup_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "RadioGroup_GetControls", dynlib: dllname.}
proc RadioGroup_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "RadioGroup_GetComponents", dynlib: dllname.}
proc RadioGroup_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "RadioGroup_GetAnchorSide", dynlib: dllname.}
proc RadioGroup_StaticClassType*(): TClass {.importc: "RadioGroup_StaticClassType", dynlib: dllname.}
# ----------------- TStaticText ----------------------
proc StaticText_Create*(AOwner: pointer): pointer {.importc: "StaticText_Create", dynlib: dllname.}
proc StaticText_Free*(AObj: pointer) {.importc: "StaticText_Free", dynlib: dllname.}
proc StaticText_CanFocus*(AObj: pointer): bool {.importc: "StaticText_CanFocus", dynlib: dllname.}
proc StaticText_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "StaticText_ContainsControl", dynlib: dllname.}
proc StaticText_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "StaticText_ControlAtPos", dynlib: dllname.}
proc StaticText_DisableAlign*(AObj: pointer) {.importc: "StaticText_DisableAlign", dynlib: dllname.}
proc StaticText_EnableAlign*(AObj: pointer) {.importc: "StaticText_EnableAlign", dynlib: dllname.}
proc StaticText_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "StaticText_FindChildControl", dynlib: dllname.}
proc StaticText_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "StaticText_FlipChildren", dynlib: dllname.}
proc StaticText_Focused*(AObj: pointer): bool {.importc: "StaticText_Focused", dynlib: dllname.}
proc StaticText_HandleAllocated*(AObj: pointer): bool {.importc: "StaticText_HandleAllocated", dynlib: dllname.}
proc StaticText_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "StaticText_InsertControl", dynlib: dllname.}
proc StaticText_Invalidate*(AObj: pointer) {.importc: "StaticText_Invalidate", dynlib: dllname.}
proc StaticText_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "StaticText_PaintTo", dynlib: dllname.}
proc StaticText_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "StaticText_RemoveControl", dynlib: dllname.}
proc StaticText_Realign*(AObj: pointer) {.importc: "StaticText_Realign", dynlib: dllname.}
proc StaticText_Repaint*(AObj: pointer) {.importc: "StaticText_Repaint", dynlib: dllname.}
proc StaticText_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "StaticText_ScaleBy", dynlib: dllname.}
proc StaticText_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "StaticText_ScrollBy", dynlib: dllname.}
proc StaticText_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "StaticText_SetBounds", dynlib: dllname.}
proc StaticText_SetFocus*(AObj: pointer) {.importc: "StaticText_SetFocus", dynlib: dllname.}
proc StaticText_Update*(AObj: pointer) {.importc: "StaticText_Update", dynlib: dllname.}
proc StaticText_BringToFront*(AObj: pointer) {.importc: "StaticText_BringToFront", dynlib: dllname.}
proc StaticText_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "StaticText_ClientToScreen", dynlib: dllname.}
proc StaticText_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "StaticText_ClientToParent", dynlib: dllname.}
proc StaticText_Dragging*(AObj: pointer): bool {.importc: "StaticText_Dragging", dynlib: dllname.}
proc StaticText_HasParent*(AObj: pointer): bool {.importc: "StaticText_HasParent", dynlib: dllname.}
proc StaticText_Hide*(AObj: pointer) {.importc: "StaticText_Hide", dynlib: dllname.}
proc StaticText_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "StaticText_Perform", dynlib: dllname.}
proc StaticText_Refresh*(AObj: pointer) {.importc: "StaticText_Refresh", dynlib: dllname.}
proc StaticText_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "StaticText_ScreenToClient", dynlib: dllname.}
proc StaticText_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "StaticText_ParentToClient", dynlib: dllname.}
proc StaticText_SendToBack*(AObj: pointer) {.importc: "StaticText_SendToBack", dynlib: dllname.}
proc StaticText_Show*(AObj: pointer) {.importc: "StaticText_Show", dynlib: dllname.}
proc StaticText_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "StaticText_GetTextBuf", dynlib: dllname.}
proc StaticText_GetTextLen*(AObj: pointer): int32 {.importc: "StaticText_GetTextLen", dynlib: dllname.}
proc StaticText_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "StaticText_SetTextBuf", dynlib: dllname.}
proc StaticText_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "StaticText_FindComponent", dynlib: dllname.}
proc StaticText_GetNamePath*(AObj: pointer): cstring {.importc: "StaticText_GetNamePath", dynlib: dllname.}
proc StaticText_Assign*(AObj: pointer, Source: pointer) {.importc: "StaticText_Assign", dynlib: dllname.}
proc StaticText_ClassType*(AObj: pointer): TClass {.importc: "StaticText_ClassType", dynlib: dllname.}
proc StaticText_ClassName*(AObj: pointer): cstring {.importc: "StaticText_ClassName", dynlib: dllname.}
proc StaticText_InstanceSize*(AObj: pointer): int32 {.importc: "StaticText_InstanceSize", dynlib: dllname.}
proc StaticText_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "StaticText_InheritsFrom", dynlib: dllname.}
proc StaticText_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "StaticText_Equals", dynlib: dllname.}
proc StaticText_GetHashCode*(AObj: pointer): int32 {.importc: "StaticText_GetHashCode", dynlib: dllname.}
proc StaticText_ToString*(AObj: pointer): cstring {.importc: "StaticText_ToString", dynlib: dllname.}
proc StaticText_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "StaticText_AnchorToNeighbour", dynlib: dllname.}
proc StaticText_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "StaticText_AnchorParallel", dynlib: dllname.}
proc StaticText_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "StaticText_AnchorHorizontalCenterTo", dynlib: dllname.}
proc StaticText_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "StaticText_AnchorVerticalCenterTo", dynlib: dllname.}
proc StaticText_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "StaticText_AnchorSame", dynlib: dllname.}
proc StaticText_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "StaticText_AnchorAsAlign", dynlib: dllname.}
proc StaticText_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "StaticText_AnchorClient", dynlib: dllname.}
proc StaticText_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_ScaleDesignToForm", dynlib: dllname.}
proc StaticText_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_ScaleFormToDesign", dynlib: dllname.}
proc StaticText_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_Scale96ToForm", dynlib: dllname.}
proc StaticText_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_ScaleFormTo96", dynlib: dllname.}
proc StaticText_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_Scale96ToFont", dynlib: dllname.}
proc StaticText_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_ScaleFontTo96", dynlib: dllname.}
proc StaticText_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_ScaleScreenToFont", dynlib: dllname.}
proc StaticText_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_ScaleFontToScreen", dynlib: dllname.}
proc StaticText_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_Scale96ToScreen", dynlib: dllname.}
proc StaticText_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StaticText_ScaleScreenTo96", dynlib: dllname.}
proc StaticText_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "StaticText_AutoAdjustLayout", dynlib: dllname.}
proc StaticText_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "StaticText_FixDesignFontsPPI", dynlib: dllname.}
proc StaticText_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "StaticText_ScaleFontsPPI", dynlib: dllname.}
proc StaticText_GetAlign*(AObj: pointer): TAlign {.importc: "StaticText_GetAlign", dynlib: dllname.}
proc StaticText_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "StaticText_SetAlign", dynlib: dllname.}
proc StaticText_GetAlignment*(AObj: pointer): TAlignment {.importc: "StaticText_GetAlignment", dynlib: dllname.}
proc StaticText_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "StaticText_SetAlignment", dynlib: dllname.}
proc StaticText_GetAnchors*(AObj: pointer): TAnchors {.importc: "StaticText_GetAnchors", dynlib: dllname.}
proc StaticText_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "StaticText_SetAnchors", dynlib: dllname.}
proc StaticText_GetAutoSize*(AObj: pointer): bool {.importc: "StaticText_GetAutoSize", dynlib: dllname.}
proc StaticText_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetAutoSize", dynlib: dllname.}
proc StaticText_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "StaticText_GetBiDiMode", dynlib: dllname.}
proc StaticText_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "StaticText_SetBiDiMode", dynlib: dllname.}
proc StaticText_GetBorderStyle*(AObj: pointer): TStaticBorderStyle {.importc: "StaticText_GetBorderStyle", dynlib: dllname.}
proc StaticText_SetBorderStyle*(AObj: pointer, AValue: TStaticBorderStyle) {.importc: "StaticText_SetBorderStyle", dynlib: dllname.}
proc StaticText_GetCaption*(AObj: pointer): cstring {.importc: "StaticText_GetCaption", dynlib: dllname.}
proc StaticText_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "StaticText_SetCaption", dynlib: dllname.}
proc StaticText_GetColor*(AObj: pointer): TColor {.importc: "StaticText_GetColor", dynlib: dllname.}
proc StaticText_SetColor*(AObj: pointer, AValue: TColor) {.importc: "StaticText_SetColor", dynlib: dllname.}
proc StaticText_GetConstraints*(AObj: pointer): pointer {.importc: "StaticText_GetConstraints", dynlib: dllname.}
proc StaticText_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetConstraints", dynlib: dllname.}
proc StaticText_GetDoubleBuffered*(AObj: pointer): bool {.importc: "StaticText_GetDoubleBuffered", dynlib: dllname.}
proc StaticText_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetDoubleBuffered", dynlib: dllname.}
proc StaticText_GetDragCursor*(AObj: pointer): TCursor {.importc: "StaticText_GetDragCursor", dynlib: dllname.}
proc StaticText_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "StaticText_SetDragCursor", dynlib: dllname.}
proc StaticText_GetDragKind*(AObj: pointer): TDragKind {.importc: "StaticText_GetDragKind", dynlib: dllname.}
proc StaticText_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "StaticText_SetDragKind", dynlib: dllname.}
proc StaticText_GetDragMode*(AObj: pointer): TDragMode {.importc: "StaticText_GetDragMode", dynlib: dllname.}
proc StaticText_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "StaticText_SetDragMode", dynlib: dllname.}
proc StaticText_GetEnabled*(AObj: pointer): bool {.importc: "StaticText_GetEnabled", dynlib: dllname.}
proc StaticText_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetEnabled", dynlib: dllname.}
proc StaticText_GetFocusControl*(AObj: pointer): pointer {.importc: "StaticText_GetFocusControl", dynlib: dllname.}
proc StaticText_SetFocusControl*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetFocusControl", dynlib: dllname.}
proc StaticText_GetFont*(AObj: pointer): pointer {.importc: "StaticText_GetFont", dynlib: dllname.}
proc StaticText_SetFont*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetFont", dynlib: dllname.}
proc StaticText_GetParentColor*(AObj: pointer): bool {.importc: "StaticText_GetParentColor", dynlib: dllname.}
proc StaticText_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetParentColor", dynlib: dllname.}
proc StaticText_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "StaticText_GetParentDoubleBuffered", dynlib: dllname.}
proc StaticText_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetParentDoubleBuffered", dynlib: dllname.}
proc StaticText_GetParentFont*(AObj: pointer): bool {.importc: "StaticText_GetParentFont", dynlib: dllname.}
proc StaticText_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetParentFont", dynlib: dllname.}
proc StaticText_GetParentShowHint*(AObj: pointer): bool {.importc: "StaticText_GetParentShowHint", dynlib: dllname.}
proc StaticText_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetParentShowHint", dynlib: dllname.}
proc StaticText_GetPopupMenu*(AObj: pointer): pointer {.importc: "StaticText_GetPopupMenu", dynlib: dllname.}
proc StaticText_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetPopupMenu", dynlib: dllname.}
proc StaticText_GetShowAccelChar*(AObj: pointer): bool {.importc: "StaticText_GetShowAccelChar", dynlib: dllname.}
proc StaticText_SetShowAccelChar*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetShowAccelChar", dynlib: dllname.}
proc StaticText_GetShowHint*(AObj: pointer): bool {.importc: "StaticText_GetShowHint", dynlib: dllname.}
proc StaticText_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetShowHint", dynlib: dllname.}
proc StaticText_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "StaticText_GetTabOrder", dynlib: dllname.}
proc StaticText_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "StaticText_SetTabOrder", dynlib: dllname.}
proc StaticText_GetTabStop*(AObj: pointer): bool {.importc: "StaticText_GetTabStop", dynlib: dllname.}
proc StaticText_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetTabStop", dynlib: dllname.}
proc StaticText_GetTransparent*(AObj: pointer): bool {.importc: "StaticText_GetTransparent", dynlib: dllname.}
proc StaticText_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetTransparent", dynlib: dllname.}
proc StaticText_GetVisible*(AObj: pointer): bool {.importc: "StaticText_GetVisible", dynlib: dllname.}
proc StaticText_SetVisible*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetVisible", dynlib: dllname.}
proc StaticText_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StaticText_SetOnClick", dynlib: dllname.}
proc StaticText_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "StaticText_SetOnContextPopup", dynlib: dllname.}
proc StaticText_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StaticText_SetOnDblClick", dynlib: dllname.}
proc StaticText_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "StaticText_SetOnDragDrop", dynlib: dllname.}
proc StaticText_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "StaticText_SetOnDragOver", dynlib: dllname.}
proc StaticText_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "StaticText_SetOnEndDrag", dynlib: dllname.}
proc StaticText_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "StaticText_SetOnMouseDown", dynlib: dllname.}
proc StaticText_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StaticText_SetOnMouseEnter", dynlib: dllname.}
proc StaticText_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StaticText_SetOnMouseLeave", dynlib: dllname.}
proc StaticText_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "StaticText_SetOnMouseMove", dynlib: dllname.}
proc StaticText_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "StaticText_SetOnMouseUp", dynlib: dllname.}
proc StaticText_GetDockClientCount*(AObj: pointer): int32 {.importc: "StaticText_GetDockClientCount", dynlib: dllname.}
proc StaticText_GetDockSite*(AObj: pointer): bool {.importc: "StaticText_GetDockSite", dynlib: dllname.}
proc StaticText_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetDockSite", dynlib: dllname.}
proc StaticText_GetMouseInClient*(AObj: pointer): bool {.importc: "StaticText_GetMouseInClient", dynlib: dllname.}
proc StaticText_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "StaticText_GetVisibleDockClientCount", dynlib: dllname.}
proc StaticText_GetBrush*(AObj: pointer): pointer {.importc: "StaticText_GetBrush", dynlib: dllname.}
proc StaticText_GetControlCount*(AObj: pointer): int32 {.importc: "StaticText_GetControlCount", dynlib: dllname.}
proc StaticText_GetHandle*(AObj: pointer): HWND {.importc: "StaticText_GetHandle", dynlib: dllname.}
proc StaticText_GetParentWindow*(AObj: pointer): HWND {.importc: "StaticText_GetParentWindow", dynlib: dllname.}
proc StaticText_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "StaticText_SetParentWindow", dynlib: dllname.}
proc StaticText_GetShowing*(AObj: pointer): bool {.importc: "StaticText_GetShowing", dynlib: dllname.}
proc StaticText_GetUseDockManager*(AObj: pointer): bool {.importc: "StaticText_GetUseDockManager", dynlib: dllname.}
proc StaticText_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "StaticText_SetUseDockManager", dynlib: dllname.}
proc StaticText_GetAction*(AObj: pointer): pointer {.importc: "StaticText_GetAction", dynlib: dllname.}
proc StaticText_SetAction*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetAction", dynlib: dllname.}
proc StaticText_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "StaticText_GetBoundsRect", dynlib: dllname.}
proc StaticText_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "StaticText_SetBoundsRect", dynlib: dllname.}
proc StaticText_GetClientHeight*(AObj: pointer): int32 {.importc: "StaticText_GetClientHeight", dynlib: dllname.}
proc StaticText_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "StaticText_SetClientHeight", dynlib: dllname.}
proc StaticText_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "StaticText_GetClientOrigin", dynlib: dllname.}
proc StaticText_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "StaticText_GetClientRect", dynlib: dllname.}
proc StaticText_GetClientWidth*(AObj: pointer): int32 {.importc: "StaticText_GetClientWidth", dynlib: dllname.}
proc StaticText_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "StaticText_SetClientWidth", dynlib: dllname.}
proc StaticText_GetControlState*(AObj: pointer): TControlState {.importc: "StaticText_GetControlState", dynlib: dllname.}
proc StaticText_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "StaticText_SetControlState", dynlib: dllname.}
proc StaticText_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "StaticText_GetControlStyle", dynlib: dllname.}
proc StaticText_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "StaticText_SetControlStyle", dynlib: dllname.}
proc StaticText_GetFloating*(AObj: pointer): bool {.importc: "StaticText_GetFloating", dynlib: dllname.}
proc StaticText_GetParent*(AObj: pointer): pointer {.importc: "StaticText_GetParent", dynlib: dllname.}
proc StaticText_SetParent*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetParent", dynlib: dllname.}
proc StaticText_GetLeft*(AObj: pointer): int32 {.importc: "StaticText_GetLeft", dynlib: dllname.}
proc StaticText_SetLeft*(AObj: pointer, AValue: int32) {.importc: "StaticText_SetLeft", dynlib: dllname.}
proc StaticText_GetTop*(AObj: pointer): int32 {.importc: "StaticText_GetTop", dynlib: dllname.}
proc StaticText_SetTop*(AObj: pointer, AValue: int32) {.importc: "StaticText_SetTop", dynlib: dllname.}
proc StaticText_GetWidth*(AObj: pointer): int32 {.importc: "StaticText_GetWidth", dynlib: dllname.}
proc StaticText_SetWidth*(AObj: pointer, AValue: int32) {.importc: "StaticText_SetWidth", dynlib: dllname.}
proc StaticText_GetHeight*(AObj: pointer): int32 {.importc: "StaticText_GetHeight", dynlib: dllname.}
proc StaticText_SetHeight*(AObj: pointer, AValue: int32) {.importc: "StaticText_SetHeight", dynlib: dllname.}
proc StaticText_GetCursor*(AObj: pointer): TCursor {.importc: "StaticText_GetCursor", dynlib: dllname.}
proc StaticText_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "StaticText_SetCursor", dynlib: dllname.}
proc StaticText_GetHint*(AObj: pointer): cstring {.importc: "StaticText_GetHint", dynlib: dllname.}
proc StaticText_SetHint*(AObj: pointer, AValue: cstring) {.importc: "StaticText_SetHint", dynlib: dllname.}
proc StaticText_GetComponentCount*(AObj: pointer): int32 {.importc: "StaticText_GetComponentCount", dynlib: dllname.}
proc StaticText_GetComponentIndex*(AObj: pointer): int32 {.importc: "StaticText_GetComponentIndex", dynlib: dllname.}
proc StaticText_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "StaticText_SetComponentIndex", dynlib: dllname.}
proc StaticText_GetOwner*(AObj: pointer): pointer {.importc: "StaticText_GetOwner", dynlib: dllname.}
proc StaticText_GetName*(AObj: pointer): cstring {.importc: "StaticText_GetName", dynlib: dllname.}
proc StaticText_SetName*(AObj: pointer, AValue: cstring) {.importc: "StaticText_SetName", dynlib: dllname.}
proc StaticText_GetTag*(AObj: pointer): int {.importc: "StaticText_GetTag", dynlib: dllname.}
proc StaticText_SetTag*(AObj: pointer, AValue: int) {.importc: "StaticText_SetTag", dynlib: dllname.}
proc StaticText_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "StaticText_GetAnchorSideLeft", dynlib: dllname.}
proc StaticText_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetAnchorSideLeft", dynlib: dllname.}
proc StaticText_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "StaticText_GetAnchorSideTop", dynlib: dllname.}
proc StaticText_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetAnchorSideTop", dynlib: dllname.}
proc StaticText_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "StaticText_GetAnchorSideRight", dynlib: dllname.}
proc StaticText_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetAnchorSideRight", dynlib: dllname.}
proc StaticText_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "StaticText_GetAnchorSideBottom", dynlib: dllname.}
proc StaticText_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetAnchorSideBottom", dynlib: dllname.}
proc StaticText_GetChildSizing*(AObj: pointer): pointer {.importc: "StaticText_GetChildSizing", dynlib: dllname.}
proc StaticText_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetChildSizing", dynlib: dllname.}
proc StaticText_GetBorderSpacing*(AObj: pointer): pointer {.importc: "StaticText_GetBorderSpacing", dynlib: dllname.}
proc StaticText_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "StaticText_SetBorderSpacing", dynlib: dllname.}
proc StaticText_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "StaticText_GetDockClients", dynlib: dllname.}
proc StaticText_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "StaticText_GetControls", dynlib: dllname.}
proc StaticText_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "StaticText_GetComponents", dynlib: dllname.}
proc StaticText_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "StaticText_GetAnchorSide", dynlib: dllname.}
proc StaticText_StaticClassType*(): TClass {.importc: "StaticText_StaticClassType", dynlib: dllname.}
# ----------------- TColorBox ----------------------
proc ColorBox_Create*(AOwner: pointer): pointer {.importc: "ColorBox_Create", dynlib: dllname.}
proc ColorBox_Free*(AObj: pointer) {.importc: "ColorBox_Free", dynlib: dllname.}
proc ColorBox_AddItem*(AObj: pointer, Item: cstring, AObject: pointer) {.importc: "ColorBox_AddItem", dynlib: dllname.}
proc ColorBox_Clear*(AObj: pointer) {.importc: "ColorBox_Clear", dynlib: dllname.}
proc ColorBox_ClearSelection*(AObj: pointer) {.importc: "ColorBox_ClearSelection", dynlib: dllname.}
proc ColorBox_DeleteSelected*(AObj: pointer) {.importc: "ColorBox_DeleteSelected", dynlib: dllname.}
proc ColorBox_Focused*(AObj: pointer): bool {.importc: "ColorBox_Focused", dynlib: dllname.}
proc ColorBox_SelectAll*(AObj: pointer) {.importc: "ColorBox_SelectAll", dynlib: dllname.}
proc ColorBox_CanFocus*(AObj: pointer): bool {.importc: "ColorBox_CanFocus", dynlib: dllname.}
proc ColorBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ColorBox_ContainsControl", dynlib: dllname.}
proc ColorBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ColorBox_ControlAtPos", dynlib: dllname.}
proc ColorBox_DisableAlign*(AObj: pointer) {.importc: "ColorBox_DisableAlign", dynlib: dllname.}
proc ColorBox_EnableAlign*(AObj: pointer) {.importc: "ColorBox_EnableAlign", dynlib: dllname.}
proc ColorBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ColorBox_FindChildControl", dynlib: dllname.}
proc ColorBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ColorBox_FlipChildren", dynlib: dllname.}
proc ColorBox_HandleAllocated*(AObj: pointer): bool {.importc: "ColorBox_HandleAllocated", dynlib: dllname.}
proc ColorBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ColorBox_InsertControl", dynlib: dllname.}
proc ColorBox_Invalidate*(AObj: pointer) {.importc: "ColorBox_Invalidate", dynlib: dllname.}
proc ColorBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ColorBox_PaintTo", dynlib: dllname.}
proc ColorBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ColorBox_RemoveControl", dynlib: dllname.}
proc ColorBox_Realign*(AObj: pointer) {.importc: "ColorBox_Realign", dynlib: dllname.}
proc ColorBox_Repaint*(AObj: pointer) {.importc: "ColorBox_Repaint", dynlib: dllname.}
proc ColorBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ColorBox_ScaleBy", dynlib: dllname.}
proc ColorBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ColorBox_ScrollBy", dynlib: dllname.}
proc ColorBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ColorBox_SetBounds", dynlib: dllname.}
proc ColorBox_SetFocus*(AObj: pointer) {.importc: "ColorBox_SetFocus", dynlib: dllname.}
proc ColorBox_Update*(AObj: pointer) {.importc: "ColorBox_Update", dynlib: dllname.}
proc ColorBox_BringToFront*(AObj: pointer) {.importc: "ColorBox_BringToFront", dynlib: dllname.}
proc ColorBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ColorBox_ClientToScreen", dynlib: dllname.}
proc ColorBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ColorBox_ClientToParent", dynlib: dllname.}
proc ColorBox_Dragging*(AObj: pointer): bool {.importc: "ColorBox_Dragging", dynlib: dllname.}
proc ColorBox_HasParent*(AObj: pointer): bool {.importc: "ColorBox_HasParent", dynlib: dllname.}
proc ColorBox_Hide*(AObj: pointer) {.importc: "ColorBox_Hide", dynlib: dllname.}
proc ColorBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ColorBox_Perform", dynlib: dllname.}
proc ColorBox_Refresh*(AObj: pointer) {.importc: "ColorBox_Refresh", dynlib: dllname.}
proc ColorBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ColorBox_ScreenToClient", dynlib: dllname.}
proc ColorBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ColorBox_ParentToClient", dynlib: dllname.}
proc ColorBox_SendToBack*(AObj: pointer) {.importc: "ColorBox_SendToBack", dynlib: dllname.}
proc ColorBox_Show*(AObj: pointer) {.importc: "ColorBox_Show", dynlib: dllname.}
proc ColorBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ColorBox_GetTextBuf", dynlib: dllname.}
proc ColorBox_GetTextLen*(AObj: pointer): int32 {.importc: "ColorBox_GetTextLen", dynlib: dllname.}
proc ColorBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ColorBox_SetTextBuf", dynlib: dllname.}
proc ColorBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ColorBox_FindComponent", dynlib: dllname.}
proc ColorBox_GetNamePath*(AObj: pointer): cstring {.importc: "ColorBox_GetNamePath", dynlib: dllname.}
proc ColorBox_Assign*(AObj: pointer, Source: pointer) {.importc: "ColorBox_Assign", dynlib: dllname.}
proc ColorBox_ClassType*(AObj: pointer): TClass {.importc: "ColorBox_ClassType", dynlib: dllname.}
proc ColorBox_ClassName*(AObj: pointer): cstring {.importc: "ColorBox_ClassName", dynlib: dllname.}
proc ColorBox_InstanceSize*(AObj: pointer): int32 {.importc: "ColorBox_InstanceSize", dynlib: dllname.}
proc ColorBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ColorBox_InheritsFrom", dynlib: dllname.}
proc ColorBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ColorBox_Equals", dynlib: dllname.}
proc ColorBox_GetHashCode*(AObj: pointer): int32 {.importc: "ColorBox_GetHashCode", dynlib: dllname.}
proc ColorBox_ToString*(AObj: pointer): cstring {.importc: "ColorBox_ToString", dynlib: dllname.}
proc ColorBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ColorBox_AnchorToNeighbour", dynlib: dllname.}
proc ColorBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ColorBox_AnchorParallel", dynlib: dllname.}
proc ColorBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ColorBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ColorBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ColorBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc ColorBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ColorBox_AnchorSame", dynlib: dllname.}
proc ColorBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ColorBox_AnchorAsAlign", dynlib: dllname.}
proc ColorBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ColorBox_AnchorClient", dynlib: dllname.}
proc ColorBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_ScaleDesignToForm", dynlib: dllname.}
proc ColorBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_ScaleFormToDesign", dynlib: dllname.}
proc ColorBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_Scale96ToForm", dynlib: dllname.}
proc ColorBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_ScaleFormTo96", dynlib: dllname.}
proc ColorBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_Scale96ToFont", dynlib: dllname.}
proc ColorBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_ScaleFontTo96", dynlib: dllname.}
proc ColorBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_ScaleScreenToFont", dynlib: dllname.}
proc ColorBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_ScaleFontToScreen", dynlib: dllname.}
proc ColorBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_Scale96ToScreen", dynlib: dllname.}
proc ColorBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ColorBox_ScaleScreenTo96", dynlib: dllname.}
proc ColorBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ColorBox_AutoAdjustLayout", dynlib: dllname.}
proc ColorBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ColorBox_FixDesignFontsPPI", dynlib: dllname.}
proc ColorBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ColorBox_ScaleFontsPPI", dynlib: dllname.}
proc ColorBox_GetAlign*(AObj: pointer): TAlign {.importc: "ColorBox_GetAlign", dynlib: dllname.}
proc ColorBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ColorBox_SetAlign", dynlib: dllname.}
proc ColorBox_GetAutoComplete*(AObj: pointer): bool {.importc: "ColorBox_GetAutoComplete", dynlib: dllname.}
proc ColorBox_SetAutoComplete*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetAutoComplete", dynlib: dllname.}
proc ColorBox_GetAutoDropDown*(AObj: pointer): bool {.importc: "ColorBox_GetAutoDropDown", dynlib: dllname.}
proc ColorBox_SetAutoDropDown*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetAutoDropDown", dynlib: dllname.}
proc ColorBox_GetDefaultColorColor*(AObj: pointer): TColor {.importc: "ColorBox_GetDefaultColorColor", dynlib: dllname.}
proc ColorBox_SetDefaultColorColor*(AObj: pointer, AValue: TColor) {.importc: "ColorBox_SetDefaultColorColor", dynlib: dllname.}
proc ColorBox_GetNoneColorColor*(AObj: pointer): TColor {.importc: "ColorBox_GetNoneColorColor", dynlib: dllname.}
proc ColorBox_SetNoneColorColor*(AObj: pointer, AValue: TColor) {.importc: "ColorBox_SetNoneColorColor", dynlib: dllname.}
proc ColorBox_GetSelected*(AObj: pointer): TColor {.importc: "ColorBox_GetSelected", dynlib: dllname.}
proc ColorBox_SetSelected*(AObj: pointer, AValue: TColor) {.importc: "ColorBox_SetSelected", dynlib: dllname.}
proc ColorBox_GetStyle*(AObj: pointer): TColorBoxStyle {.importc: "ColorBox_GetStyle", dynlib: dllname.}
proc ColorBox_SetStyle*(AObj: pointer, AValue: TColorBoxStyle) {.importc: "ColorBox_SetStyle", dynlib: dllname.}
proc ColorBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "ColorBox_GetAnchors", dynlib: dllname.}
proc ColorBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ColorBox_SetAnchors", dynlib: dllname.}
proc ColorBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ColorBox_GetBiDiMode", dynlib: dllname.}
proc ColorBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ColorBox_SetBiDiMode", dynlib: dllname.}
proc ColorBox_GetColor*(AObj: pointer): TColor {.importc: "ColorBox_GetColor", dynlib: dllname.}
proc ColorBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ColorBox_SetColor", dynlib: dllname.}
proc ColorBox_GetConstraints*(AObj: pointer): pointer {.importc: "ColorBox_GetConstraints", dynlib: dllname.}
proc ColorBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetConstraints", dynlib: dllname.}
proc ColorBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ColorBox_GetDoubleBuffered", dynlib: dllname.}
proc ColorBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetDoubleBuffered", dynlib: dllname.}
proc ColorBox_GetDropDownCount*(AObj: pointer): int32 {.importc: "ColorBox_GetDropDownCount", dynlib: dllname.}
proc ColorBox_SetDropDownCount*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetDropDownCount", dynlib: dllname.}
proc ColorBox_GetEnabled*(AObj: pointer): bool {.importc: "ColorBox_GetEnabled", dynlib: dllname.}
proc ColorBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetEnabled", dynlib: dllname.}
proc ColorBox_GetFont*(AObj: pointer): pointer {.importc: "ColorBox_GetFont", dynlib: dllname.}
proc ColorBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetFont", dynlib: dllname.}
proc ColorBox_GetItemHeight*(AObj: pointer): int32 {.importc: "ColorBox_GetItemHeight", dynlib: dllname.}
proc ColorBox_SetItemHeight*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetItemHeight", dynlib: dllname.}
proc ColorBox_GetParentColor*(AObj: pointer): bool {.importc: "ColorBox_GetParentColor", dynlib: dllname.}
proc ColorBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetParentColor", dynlib: dllname.}
proc ColorBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ColorBox_GetParentDoubleBuffered", dynlib: dllname.}
proc ColorBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetParentDoubleBuffered", dynlib: dllname.}
proc ColorBox_GetParentFont*(AObj: pointer): bool {.importc: "ColorBox_GetParentFont", dynlib: dllname.}
proc ColorBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetParentFont", dynlib: dllname.}
proc ColorBox_GetParentShowHint*(AObj: pointer): bool {.importc: "ColorBox_GetParentShowHint", dynlib: dllname.}
proc ColorBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetParentShowHint", dynlib: dllname.}
proc ColorBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "ColorBox_GetPopupMenu", dynlib: dllname.}
proc ColorBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetPopupMenu", dynlib: dllname.}
proc ColorBox_GetShowHint*(AObj: pointer): bool {.importc: "ColorBox_GetShowHint", dynlib: dllname.}
proc ColorBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetShowHint", dynlib: dllname.}
proc ColorBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ColorBox_GetTabOrder", dynlib: dllname.}
proc ColorBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ColorBox_SetTabOrder", dynlib: dllname.}
proc ColorBox_GetTabStop*(AObj: pointer): bool {.importc: "ColorBox_GetTabStop", dynlib: dllname.}
proc ColorBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetTabStop", dynlib: dllname.}
proc ColorBox_GetVisible*(AObj: pointer): bool {.importc: "ColorBox_GetVisible", dynlib: dllname.}
proc ColorBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetVisible", dynlib: dllname.}
proc ColorBox_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnChange", dynlib: dllname.}
proc ColorBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnClick", dynlib: dllname.}
proc ColorBox_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ColorBox_SetOnContextPopup", dynlib: dllname.}
proc ColorBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ColorBox_SetOnDragDrop", dynlib: dllname.}
proc ColorBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ColorBox_SetOnDragOver", dynlib: dllname.}
proc ColorBox_SetOnDropDown*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnDropDown", dynlib: dllname.}
proc ColorBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ColorBox_SetOnEndDrag", dynlib: dllname.}
proc ColorBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnEnter", dynlib: dllname.}
proc ColorBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnExit", dynlib: dllname.}
proc ColorBox_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ColorBox_SetOnKeyDown", dynlib: dllname.}
proc ColorBox_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ColorBox_SetOnKeyPress", dynlib: dllname.}
proc ColorBox_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ColorBox_SetOnKeyUp", dynlib: dllname.}
proc ColorBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnMouseEnter", dynlib: dllname.}
proc ColorBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnMouseLeave", dynlib: dllname.}
proc ColorBox_SetOnSelect*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorBox_SetOnSelect", dynlib: dllname.}
proc ColorBox_GetCharCase*(AObj: pointer): TEditCharCase {.importc: "ColorBox_GetCharCase", dynlib: dllname.}
proc ColorBox_SetCharCase*(AObj: pointer, AValue: TEditCharCase) {.importc: "ColorBox_SetCharCase", dynlib: dllname.}
proc ColorBox_GetSelText*(AObj: pointer): cstring {.importc: "ColorBox_GetSelText", dynlib: dllname.}
proc ColorBox_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "ColorBox_SetSelText", dynlib: dllname.}
proc ColorBox_GetCanvas*(AObj: pointer): pointer {.importc: "ColorBox_GetCanvas", dynlib: dllname.}
proc ColorBox_GetDroppedDown*(AObj: pointer): bool {.importc: "ColorBox_GetDroppedDown", dynlib: dllname.}
proc ColorBox_SetDroppedDown*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetDroppedDown", dynlib: dllname.}
proc ColorBox_GetItems*(AObj: pointer): pointer {.importc: "ColorBox_GetItems", dynlib: dllname.}
proc ColorBox_SetItems*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetItems", dynlib: dllname.}
proc ColorBox_GetSelLength*(AObj: pointer): int32 {.importc: "ColorBox_GetSelLength", dynlib: dllname.}
proc ColorBox_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetSelLength", dynlib: dllname.}
proc ColorBox_GetSelStart*(AObj: pointer): int32 {.importc: "ColorBox_GetSelStart", dynlib: dllname.}
proc ColorBox_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetSelStart", dynlib: dllname.}
proc ColorBox_GetItemIndex*(AObj: pointer): int32 {.importc: "ColorBox_GetItemIndex", dynlib: dllname.}
proc ColorBox_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetItemIndex", dynlib: dllname.}
proc ColorBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "ColorBox_GetDockClientCount", dynlib: dllname.}
proc ColorBox_GetDockSite*(AObj: pointer): bool {.importc: "ColorBox_GetDockSite", dynlib: dllname.}
proc ColorBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetDockSite", dynlib: dllname.}
proc ColorBox_GetMouseInClient*(AObj: pointer): bool {.importc: "ColorBox_GetMouseInClient", dynlib: dllname.}
proc ColorBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ColorBox_GetVisibleDockClientCount", dynlib: dllname.}
proc ColorBox_GetBrush*(AObj: pointer): pointer {.importc: "ColorBox_GetBrush", dynlib: dllname.}
proc ColorBox_GetControlCount*(AObj: pointer): int32 {.importc: "ColorBox_GetControlCount", dynlib: dllname.}
proc ColorBox_GetHandle*(AObj: pointer): HWND {.importc: "ColorBox_GetHandle", dynlib: dllname.}
proc ColorBox_GetParentWindow*(AObj: pointer): HWND {.importc: "ColorBox_GetParentWindow", dynlib: dllname.}
proc ColorBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ColorBox_SetParentWindow", dynlib: dllname.}
proc ColorBox_GetShowing*(AObj: pointer): bool {.importc: "ColorBox_GetShowing", dynlib: dllname.}
proc ColorBox_GetUseDockManager*(AObj: pointer): bool {.importc: "ColorBox_GetUseDockManager", dynlib: dllname.}
proc ColorBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ColorBox_SetUseDockManager", dynlib: dllname.}
proc ColorBox_GetAction*(AObj: pointer): pointer {.importc: "ColorBox_GetAction", dynlib: dllname.}
proc ColorBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetAction", dynlib: dllname.}
proc ColorBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ColorBox_GetBoundsRect", dynlib: dllname.}
proc ColorBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ColorBox_SetBoundsRect", dynlib: dllname.}
proc ColorBox_GetClientHeight*(AObj: pointer): int32 {.importc: "ColorBox_GetClientHeight", dynlib: dllname.}
proc ColorBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetClientHeight", dynlib: dllname.}
proc ColorBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ColorBox_GetClientOrigin", dynlib: dllname.}
proc ColorBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ColorBox_GetClientRect", dynlib: dllname.}
proc ColorBox_GetClientWidth*(AObj: pointer): int32 {.importc: "ColorBox_GetClientWidth", dynlib: dllname.}
proc ColorBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetClientWidth", dynlib: dllname.}
proc ColorBox_GetControlState*(AObj: pointer): TControlState {.importc: "ColorBox_GetControlState", dynlib: dllname.}
proc ColorBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ColorBox_SetControlState", dynlib: dllname.}
proc ColorBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ColorBox_GetControlStyle", dynlib: dllname.}
proc ColorBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ColorBox_SetControlStyle", dynlib: dllname.}
proc ColorBox_GetFloating*(AObj: pointer): bool {.importc: "ColorBox_GetFloating", dynlib: dllname.}
proc ColorBox_GetParent*(AObj: pointer): pointer {.importc: "ColorBox_GetParent", dynlib: dllname.}
proc ColorBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetParent", dynlib: dllname.}
proc ColorBox_GetLeft*(AObj: pointer): int32 {.importc: "ColorBox_GetLeft", dynlib: dllname.}
proc ColorBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetLeft", dynlib: dllname.}
proc ColorBox_GetTop*(AObj: pointer): int32 {.importc: "ColorBox_GetTop", dynlib: dllname.}
proc ColorBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetTop", dynlib: dllname.}
proc ColorBox_GetWidth*(AObj: pointer): int32 {.importc: "ColorBox_GetWidth", dynlib: dllname.}
proc ColorBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetWidth", dynlib: dllname.}
proc ColorBox_GetHeight*(AObj: pointer): int32 {.importc: "ColorBox_GetHeight", dynlib: dllname.}
proc ColorBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetHeight", dynlib: dllname.}
proc ColorBox_GetCursor*(AObj: pointer): TCursor {.importc: "ColorBox_GetCursor", dynlib: dllname.}
proc ColorBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ColorBox_SetCursor", dynlib: dllname.}
proc ColorBox_GetHint*(AObj: pointer): cstring {.importc: "ColorBox_GetHint", dynlib: dllname.}
proc ColorBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ColorBox_SetHint", dynlib: dllname.}
proc ColorBox_GetComponentCount*(AObj: pointer): int32 {.importc: "ColorBox_GetComponentCount", dynlib: dllname.}
proc ColorBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "ColorBox_GetComponentIndex", dynlib: dllname.}
proc ColorBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ColorBox_SetComponentIndex", dynlib: dllname.}
proc ColorBox_GetOwner*(AObj: pointer): pointer {.importc: "ColorBox_GetOwner", dynlib: dllname.}
proc ColorBox_GetName*(AObj: pointer): cstring {.importc: "ColorBox_GetName", dynlib: dllname.}
proc ColorBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "ColorBox_SetName", dynlib: dllname.}
proc ColorBox_GetTag*(AObj: pointer): int {.importc: "ColorBox_GetTag", dynlib: dllname.}
proc ColorBox_SetTag*(AObj: pointer, AValue: int) {.importc: "ColorBox_SetTag", dynlib: dllname.}
proc ColorBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ColorBox_GetAnchorSideLeft", dynlib: dllname.}
proc ColorBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetAnchorSideLeft", dynlib: dllname.}
proc ColorBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ColorBox_GetAnchorSideTop", dynlib: dllname.}
proc ColorBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetAnchorSideTop", dynlib: dllname.}
proc ColorBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ColorBox_GetAnchorSideRight", dynlib: dllname.}
proc ColorBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetAnchorSideRight", dynlib: dllname.}
proc ColorBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ColorBox_GetAnchorSideBottom", dynlib: dllname.}
proc ColorBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetAnchorSideBottom", dynlib: dllname.}
proc ColorBox_GetChildSizing*(AObj: pointer): pointer {.importc: "ColorBox_GetChildSizing", dynlib: dllname.}
proc ColorBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetChildSizing", dynlib: dllname.}
proc ColorBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ColorBox_GetBorderSpacing", dynlib: dllname.}
proc ColorBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ColorBox_SetBorderSpacing", dynlib: dllname.}
proc ColorBox_GetColors*(AObj: pointer, Index: int32): TColor {.importc: "ColorBox_GetColors", dynlib: dllname.}
proc ColorBox_GetColorNames*(AObj: pointer, Index: int32): cstring {.importc: "ColorBox_GetColorNames", dynlib: dllname.}
proc ColorBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ColorBox_GetDockClients", dynlib: dllname.}
proc ColorBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ColorBox_GetControls", dynlib: dllname.}
proc ColorBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ColorBox_GetComponents", dynlib: dllname.}
proc ColorBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ColorBox_GetAnchorSide", dynlib: dllname.}
proc ColorBox_StaticClassType*(): TClass {.importc: "ColorBox_StaticClassType", dynlib: dllname.}
# ----------------- TColorListBox ----------------------
proc ColorListBox_Create*(AOwner: pointer): pointer {.importc: "ColorListBox_Create", dynlib: dllname.}
proc ColorListBox_Free*(AObj: pointer) {.importc: "ColorListBox_Free", dynlib: dllname.}
proc ColorListBox_AddItem*(AObj: pointer, Item: cstring, AObject: pointer) {.importc: "ColorListBox_AddItem", dynlib: dllname.}
proc ColorListBox_Clear*(AObj: pointer) {.importc: "ColorListBox_Clear", dynlib: dllname.}
proc ColorListBox_ClearSelection*(AObj: pointer) {.importc: "ColorListBox_ClearSelection", dynlib: dllname.}
proc ColorListBox_DeleteSelected*(AObj: pointer) {.importc: "ColorListBox_DeleteSelected", dynlib: dllname.}
proc ColorListBox_ItemAtPos*(AObj: pointer, Pos: var TPoint, Existing: bool): int32 {.importc: "ColorListBox_ItemAtPos", dynlib: dllname.}
proc ColorListBox_ItemRect*(AObj: pointer, Index: int32, Result: var TRect) {.importc: "ColorListBox_ItemRect", dynlib: dllname.}
proc ColorListBox_SelectAll*(AObj: pointer) {.importc: "ColorListBox_SelectAll", dynlib: dllname.}
proc ColorListBox_CanFocus*(AObj: pointer): bool {.importc: "ColorListBox_CanFocus", dynlib: dllname.}
proc ColorListBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ColorListBox_ContainsControl", dynlib: dllname.}
proc ColorListBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ColorListBox_ControlAtPos", dynlib: dllname.}
proc ColorListBox_DisableAlign*(AObj: pointer) {.importc: "ColorListBox_DisableAlign", dynlib: dllname.}
proc ColorListBox_EnableAlign*(AObj: pointer) {.importc: "ColorListBox_EnableAlign", dynlib: dllname.}
proc ColorListBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ColorListBox_FindChildControl", dynlib: dllname.}
proc ColorListBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ColorListBox_FlipChildren", dynlib: dllname.}
proc ColorListBox_Focused*(AObj: pointer): bool {.importc: "ColorListBox_Focused", dynlib: dllname.}
proc ColorListBox_HandleAllocated*(AObj: pointer): bool {.importc: "ColorListBox_HandleAllocated", dynlib: dllname.}
proc ColorListBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ColorListBox_InsertControl", dynlib: dllname.}
proc ColorListBox_Invalidate*(AObj: pointer) {.importc: "ColorListBox_Invalidate", dynlib: dllname.}
proc ColorListBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ColorListBox_PaintTo", dynlib: dllname.}
proc ColorListBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ColorListBox_RemoveControl", dynlib: dllname.}
proc ColorListBox_Realign*(AObj: pointer) {.importc: "ColorListBox_Realign", dynlib: dllname.}
proc ColorListBox_Repaint*(AObj: pointer) {.importc: "ColorListBox_Repaint", dynlib: dllname.}
proc ColorListBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ColorListBox_ScaleBy", dynlib: dllname.}
proc ColorListBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ColorListBox_ScrollBy", dynlib: dllname.}
proc ColorListBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ColorListBox_SetBounds", dynlib: dllname.}
proc ColorListBox_SetFocus*(AObj: pointer) {.importc: "ColorListBox_SetFocus", dynlib: dllname.}
proc ColorListBox_Update*(AObj: pointer) {.importc: "ColorListBox_Update", dynlib: dllname.}
proc ColorListBox_BringToFront*(AObj: pointer) {.importc: "ColorListBox_BringToFront", dynlib: dllname.}
proc ColorListBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ColorListBox_ClientToScreen", dynlib: dllname.}
proc ColorListBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ColorListBox_ClientToParent", dynlib: dllname.}
proc ColorListBox_Dragging*(AObj: pointer): bool {.importc: "ColorListBox_Dragging", dynlib: dllname.}
proc ColorListBox_HasParent*(AObj: pointer): bool {.importc: "ColorListBox_HasParent", dynlib: dllname.}
proc ColorListBox_Hide*(AObj: pointer) {.importc: "ColorListBox_Hide", dynlib: dllname.}
proc ColorListBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ColorListBox_Perform", dynlib: dllname.}
proc ColorListBox_Refresh*(AObj: pointer) {.importc: "ColorListBox_Refresh", dynlib: dllname.}
proc ColorListBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ColorListBox_ScreenToClient", dynlib: dllname.}
proc ColorListBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ColorListBox_ParentToClient", dynlib: dllname.}
proc ColorListBox_SendToBack*(AObj: pointer) {.importc: "ColorListBox_SendToBack", dynlib: dllname.}
proc ColorListBox_Show*(AObj: pointer) {.importc: "ColorListBox_Show", dynlib: dllname.}
proc ColorListBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ColorListBox_GetTextBuf", dynlib: dllname.}
proc ColorListBox_GetTextLen*(AObj: pointer): int32 {.importc: "ColorListBox_GetTextLen", dynlib: dllname.}
proc ColorListBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ColorListBox_SetTextBuf", dynlib: dllname.}
proc ColorListBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ColorListBox_FindComponent", dynlib: dllname.}
proc ColorListBox_GetNamePath*(AObj: pointer): cstring {.importc: "ColorListBox_GetNamePath", dynlib: dllname.}
proc ColorListBox_Assign*(AObj: pointer, Source: pointer) {.importc: "ColorListBox_Assign", dynlib: dllname.}
proc ColorListBox_ClassType*(AObj: pointer): TClass {.importc: "ColorListBox_ClassType", dynlib: dllname.}
proc ColorListBox_ClassName*(AObj: pointer): cstring {.importc: "ColorListBox_ClassName", dynlib: dllname.}
proc ColorListBox_InstanceSize*(AObj: pointer): int32 {.importc: "ColorListBox_InstanceSize", dynlib: dllname.}
proc ColorListBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ColorListBox_InheritsFrom", dynlib: dllname.}
proc ColorListBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ColorListBox_Equals", dynlib: dllname.}
proc ColorListBox_GetHashCode*(AObj: pointer): int32 {.importc: "ColorListBox_GetHashCode", dynlib: dllname.}
proc ColorListBox_ToString*(AObj: pointer): cstring {.importc: "ColorListBox_ToString", dynlib: dllname.}
proc ColorListBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ColorListBox_AnchorToNeighbour", dynlib: dllname.}
proc ColorListBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ColorListBox_AnchorParallel", dynlib: dllname.}
proc ColorListBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ColorListBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ColorListBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ColorListBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc ColorListBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ColorListBox_AnchorSame", dynlib: dllname.}
proc ColorListBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ColorListBox_AnchorAsAlign", dynlib: dllname.}
proc ColorListBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ColorListBox_AnchorClient", dynlib: dllname.}
proc ColorListBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_ScaleDesignToForm", dynlib: dllname.}
proc ColorListBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_ScaleFormToDesign", dynlib: dllname.}
proc ColorListBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_Scale96ToForm", dynlib: dllname.}
proc ColorListBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_ScaleFormTo96", dynlib: dllname.}
proc ColorListBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_Scale96ToFont", dynlib: dllname.}
proc ColorListBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_ScaleFontTo96", dynlib: dllname.}
proc ColorListBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_ScaleScreenToFont", dynlib: dllname.}
proc ColorListBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_ScaleFontToScreen", dynlib: dllname.}
proc ColorListBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_Scale96ToScreen", dynlib: dllname.}
proc ColorListBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ColorListBox_ScaleScreenTo96", dynlib: dllname.}
proc ColorListBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ColorListBox_AutoAdjustLayout", dynlib: dllname.}
proc ColorListBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ColorListBox_FixDesignFontsPPI", dynlib: dllname.}
proc ColorListBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ColorListBox_ScaleFontsPPI", dynlib: dllname.}
proc ColorListBox_GetAlign*(AObj: pointer): TAlign {.importc: "ColorListBox_GetAlign", dynlib: dllname.}
proc ColorListBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ColorListBox_SetAlign", dynlib: dllname.}
proc ColorListBox_GetDefaultColorColor*(AObj: pointer): TColor {.importc: "ColorListBox_GetDefaultColorColor", dynlib: dllname.}
proc ColorListBox_SetDefaultColorColor*(AObj: pointer, AValue: TColor) {.importc: "ColorListBox_SetDefaultColorColor", dynlib: dllname.}
proc ColorListBox_GetNoneColorColor*(AObj: pointer): TColor {.importc: "ColorListBox_GetNoneColorColor", dynlib: dllname.}
proc ColorListBox_SetNoneColorColor*(AObj: pointer, AValue: TColor) {.importc: "ColorListBox_SetNoneColorColor", dynlib: dllname.}
proc ColorListBox_GetSelected*(AObj: pointer): TColor {.importc: "ColorListBox_GetSelected", dynlib: dllname.}
proc ColorListBox_SetSelected*(AObj: pointer, AValue: TColor) {.importc: "ColorListBox_SetSelected", dynlib: dllname.}
proc ColorListBox_GetStyle*(AObj: pointer): TColorBoxStyle {.importc: "ColorListBox_GetStyle", dynlib: dllname.}
proc ColorListBox_SetStyle*(AObj: pointer, AValue: TColorBoxStyle) {.importc: "ColorListBox_SetStyle", dynlib: dllname.}
proc ColorListBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "ColorListBox_GetAnchors", dynlib: dllname.}
proc ColorListBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ColorListBox_SetAnchors", dynlib: dllname.}
proc ColorListBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ColorListBox_GetBiDiMode", dynlib: dllname.}
proc ColorListBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ColorListBox_SetBiDiMode", dynlib: dllname.}
proc ColorListBox_GetColor*(AObj: pointer): TColor {.importc: "ColorListBox_GetColor", dynlib: dllname.}
proc ColorListBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ColorListBox_SetColor", dynlib: dllname.}
proc ColorListBox_GetConstraints*(AObj: pointer): pointer {.importc: "ColorListBox_GetConstraints", dynlib: dllname.}
proc ColorListBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetConstraints", dynlib: dllname.}
proc ColorListBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ColorListBox_GetDoubleBuffered", dynlib: dllname.}
proc ColorListBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetDoubleBuffered", dynlib: dllname.}
proc ColorListBox_GetEnabled*(AObj: pointer): bool {.importc: "ColorListBox_GetEnabled", dynlib: dllname.}
proc ColorListBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetEnabled", dynlib: dllname.}
proc ColorListBox_GetFont*(AObj: pointer): pointer {.importc: "ColorListBox_GetFont", dynlib: dllname.}
proc ColorListBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetFont", dynlib: dllname.}
proc ColorListBox_GetItemHeight*(AObj: pointer): int32 {.importc: "ColorListBox_GetItemHeight", dynlib: dllname.}
proc ColorListBox_SetItemHeight*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetItemHeight", dynlib: dllname.}
proc ColorListBox_GetParentColor*(AObj: pointer): bool {.importc: "ColorListBox_GetParentColor", dynlib: dllname.}
proc ColorListBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetParentColor", dynlib: dllname.}
proc ColorListBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ColorListBox_GetParentDoubleBuffered", dynlib: dllname.}
proc ColorListBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetParentDoubleBuffered", dynlib: dllname.}
proc ColorListBox_GetParentFont*(AObj: pointer): bool {.importc: "ColorListBox_GetParentFont", dynlib: dllname.}
proc ColorListBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetParentFont", dynlib: dllname.}
proc ColorListBox_GetParentShowHint*(AObj: pointer): bool {.importc: "ColorListBox_GetParentShowHint", dynlib: dllname.}
proc ColorListBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetParentShowHint", dynlib: dllname.}
proc ColorListBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "ColorListBox_GetPopupMenu", dynlib: dllname.}
proc ColorListBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetPopupMenu", dynlib: dllname.}
proc ColorListBox_GetShowHint*(AObj: pointer): bool {.importc: "ColorListBox_GetShowHint", dynlib: dllname.}
proc ColorListBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetShowHint", dynlib: dllname.}
proc ColorListBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ColorListBox_GetTabOrder", dynlib: dllname.}
proc ColorListBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ColorListBox_SetTabOrder", dynlib: dllname.}
proc ColorListBox_GetTabStop*(AObj: pointer): bool {.importc: "ColorListBox_GetTabStop", dynlib: dllname.}
proc ColorListBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetTabStop", dynlib: dllname.}
proc ColorListBox_GetVisible*(AObj: pointer): bool {.importc: "ColorListBox_GetVisible", dynlib: dllname.}
proc ColorListBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetVisible", dynlib: dllname.}
proc ColorListBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorListBox_SetOnClick", dynlib: dllname.}
proc ColorListBox_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ColorListBox_SetOnContextPopup", dynlib: dllname.}
proc ColorListBox_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorListBox_SetOnDblClick", dynlib: dllname.}
proc ColorListBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ColorListBox_SetOnDragDrop", dynlib: dllname.}
proc ColorListBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ColorListBox_SetOnDragOver", dynlib: dllname.}
proc ColorListBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ColorListBox_SetOnEndDrag", dynlib: dllname.}
proc ColorListBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorListBox_SetOnEnter", dynlib: dllname.}
proc ColorListBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorListBox_SetOnExit", dynlib: dllname.}
proc ColorListBox_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ColorListBox_SetOnKeyDown", dynlib: dllname.}
proc ColorListBox_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ColorListBox_SetOnKeyPress", dynlib: dllname.}
proc ColorListBox_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ColorListBox_SetOnKeyUp", dynlib: dllname.}
proc ColorListBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ColorListBox_SetOnMouseDown", dynlib: dllname.}
proc ColorListBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorListBox_SetOnMouseEnter", dynlib: dllname.}
proc ColorListBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorListBox_SetOnMouseLeave", dynlib: dllname.}
proc ColorListBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ColorListBox_SetOnMouseMove", dynlib: dllname.}
proc ColorListBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ColorListBox_SetOnMouseUp", dynlib: dllname.}
proc ColorListBox_GetCanvas*(AObj: pointer): pointer {.importc: "ColorListBox_GetCanvas", dynlib: dllname.}
proc ColorListBox_GetCount*(AObj: pointer): int32 {.importc: "ColorListBox_GetCount", dynlib: dllname.}
proc ColorListBox_GetItems*(AObj: pointer): pointer {.importc: "ColorListBox_GetItems", dynlib: dllname.}
proc ColorListBox_SetItems*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetItems", dynlib: dllname.}
proc ColorListBox_GetTopIndex*(AObj: pointer): int32 {.importc: "ColorListBox_GetTopIndex", dynlib: dllname.}
proc ColorListBox_SetTopIndex*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetTopIndex", dynlib: dllname.}
proc ColorListBox_GetMultiSelect*(AObj: pointer): bool {.importc: "ColorListBox_GetMultiSelect", dynlib: dllname.}
proc ColorListBox_SetMultiSelect*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetMultiSelect", dynlib: dllname.}
proc ColorListBox_GetSelCount*(AObj: pointer): int32 {.importc: "ColorListBox_GetSelCount", dynlib: dllname.}
proc ColorListBox_GetItemIndex*(AObj: pointer): int32 {.importc: "ColorListBox_GetItemIndex", dynlib: dllname.}
proc ColorListBox_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetItemIndex", dynlib: dllname.}
proc ColorListBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "ColorListBox_GetDockClientCount", dynlib: dllname.}
proc ColorListBox_GetDockSite*(AObj: pointer): bool {.importc: "ColorListBox_GetDockSite", dynlib: dllname.}
proc ColorListBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetDockSite", dynlib: dllname.}
proc ColorListBox_GetMouseInClient*(AObj: pointer): bool {.importc: "ColorListBox_GetMouseInClient", dynlib: dllname.}
proc ColorListBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ColorListBox_GetVisibleDockClientCount", dynlib: dllname.}
proc ColorListBox_GetBrush*(AObj: pointer): pointer {.importc: "ColorListBox_GetBrush", dynlib: dllname.}
proc ColorListBox_GetControlCount*(AObj: pointer): int32 {.importc: "ColorListBox_GetControlCount", dynlib: dllname.}
proc ColorListBox_GetHandle*(AObj: pointer): HWND {.importc: "ColorListBox_GetHandle", dynlib: dllname.}
proc ColorListBox_GetParentWindow*(AObj: pointer): HWND {.importc: "ColorListBox_GetParentWindow", dynlib: dllname.}
proc ColorListBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ColorListBox_SetParentWindow", dynlib: dllname.}
proc ColorListBox_GetShowing*(AObj: pointer): bool {.importc: "ColorListBox_GetShowing", dynlib: dllname.}
proc ColorListBox_GetUseDockManager*(AObj: pointer): bool {.importc: "ColorListBox_GetUseDockManager", dynlib: dllname.}
proc ColorListBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ColorListBox_SetUseDockManager", dynlib: dllname.}
proc ColorListBox_GetAction*(AObj: pointer): pointer {.importc: "ColorListBox_GetAction", dynlib: dllname.}
proc ColorListBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetAction", dynlib: dllname.}
proc ColorListBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ColorListBox_GetBoundsRect", dynlib: dllname.}
proc ColorListBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ColorListBox_SetBoundsRect", dynlib: dllname.}
proc ColorListBox_GetClientHeight*(AObj: pointer): int32 {.importc: "ColorListBox_GetClientHeight", dynlib: dllname.}
proc ColorListBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetClientHeight", dynlib: dllname.}
proc ColorListBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ColorListBox_GetClientOrigin", dynlib: dllname.}
proc ColorListBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ColorListBox_GetClientRect", dynlib: dllname.}
proc ColorListBox_GetClientWidth*(AObj: pointer): int32 {.importc: "ColorListBox_GetClientWidth", dynlib: dllname.}
proc ColorListBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetClientWidth", dynlib: dllname.}
proc ColorListBox_GetControlState*(AObj: pointer): TControlState {.importc: "ColorListBox_GetControlState", dynlib: dllname.}
proc ColorListBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ColorListBox_SetControlState", dynlib: dllname.}
proc ColorListBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ColorListBox_GetControlStyle", dynlib: dllname.}
proc ColorListBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ColorListBox_SetControlStyle", dynlib: dllname.}
proc ColorListBox_GetFloating*(AObj: pointer): bool {.importc: "ColorListBox_GetFloating", dynlib: dllname.}
proc ColorListBox_GetParent*(AObj: pointer): pointer {.importc: "ColorListBox_GetParent", dynlib: dllname.}
proc ColorListBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetParent", dynlib: dllname.}
proc ColorListBox_GetLeft*(AObj: pointer): int32 {.importc: "ColorListBox_GetLeft", dynlib: dllname.}
proc ColorListBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetLeft", dynlib: dllname.}
proc ColorListBox_GetTop*(AObj: pointer): int32 {.importc: "ColorListBox_GetTop", dynlib: dllname.}
proc ColorListBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetTop", dynlib: dllname.}
proc ColorListBox_GetWidth*(AObj: pointer): int32 {.importc: "ColorListBox_GetWidth", dynlib: dllname.}
proc ColorListBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetWidth", dynlib: dllname.}
proc ColorListBox_GetHeight*(AObj: pointer): int32 {.importc: "ColorListBox_GetHeight", dynlib: dllname.}
proc ColorListBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetHeight", dynlib: dllname.}
proc ColorListBox_GetCursor*(AObj: pointer): TCursor {.importc: "ColorListBox_GetCursor", dynlib: dllname.}
proc ColorListBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ColorListBox_SetCursor", dynlib: dllname.}
proc ColorListBox_GetHint*(AObj: pointer): cstring {.importc: "ColorListBox_GetHint", dynlib: dllname.}
proc ColorListBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ColorListBox_SetHint", dynlib: dllname.}
proc ColorListBox_GetComponentCount*(AObj: pointer): int32 {.importc: "ColorListBox_GetComponentCount", dynlib: dllname.}
proc ColorListBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "ColorListBox_GetComponentIndex", dynlib: dllname.}
proc ColorListBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ColorListBox_SetComponentIndex", dynlib: dllname.}
proc ColorListBox_GetOwner*(AObj: pointer): pointer {.importc: "ColorListBox_GetOwner", dynlib: dllname.}
proc ColorListBox_GetName*(AObj: pointer): cstring {.importc: "ColorListBox_GetName", dynlib: dllname.}
proc ColorListBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "ColorListBox_SetName", dynlib: dllname.}
proc ColorListBox_GetTag*(AObj: pointer): int {.importc: "ColorListBox_GetTag", dynlib: dllname.}
proc ColorListBox_SetTag*(AObj: pointer, AValue: int) {.importc: "ColorListBox_SetTag", dynlib: dllname.}
proc ColorListBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ColorListBox_GetAnchorSideLeft", dynlib: dllname.}
proc ColorListBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetAnchorSideLeft", dynlib: dllname.}
proc ColorListBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ColorListBox_GetAnchorSideTop", dynlib: dllname.}
proc ColorListBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetAnchorSideTop", dynlib: dllname.}
proc ColorListBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ColorListBox_GetAnchorSideRight", dynlib: dllname.}
proc ColorListBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetAnchorSideRight", dynlib: dllname.}
proc ColorListBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ColorListBox_GetAnchorSideBottom", dynlib: dllname.}
proc ColorListBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetAnchorSideBottom", dynlib: dllname.}
proc ColorListBox_GetChildSizing*(AObj: pointer): pointer {.importc: "ColorListBox_GetChildSizing", dynlib: dllname.}
proc ColorListBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetChildSizing", dynlib: dllname.}
proc ColorListBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ColorListBox_GetBorderSpacing", dynlib: dllname.}
proc ColorListBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ColorListBox_SetBorderSpacing", dynlib: dllname.}
proc ColorListBox_GetColors*(AObj: pointer, Index: int32): TColor {.importc: "ColorListBox_GetColors", dynlib: dllname.}
proc ColorListBox_GetColorNames*(AObj: pointer, Index: int32): cstring {.importc: "ColorListBox_GetColorNames", dynlib: dllname.}
proc ColorListBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ColorListBox_GetDockClients", dynlib: dllname.}
proc ColorListBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ColorListBox_GetControls", dynlib: dllname.}
proc ColorListBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ColorListBox_GetComponents", dynlib: dllname.}
proc ColorListBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ColorListBox_GetAnchorSide", dynlib: dllname.}
proc ColorListBox_StaticClassType*(): TClass {.importc: "ColorListBox_StaticClassType", dynlib: dllname.}
# ----------------- TTrayIcon ----------------------
proc TrayIcon_Create*(AOwner: pointer): pointer {.importc: "TrayIcon_Create", dynlib: dllname.}
proc TrayIcon_Free*(AObj: pointer) {.importc: "TrayIcon_Free", dynlib: dllname.}
proc TrayIcon_ShowBalloonHint*(AObj: pointer) {.importc: "TrayIcon_ShowBalloonHint", dynlib: dllname.}
proc TrayIcon_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "TrayIcon_FindComponent", dynlib: dllname.}
proc TrayIcon_GetNamePath*(AObj: pointer): cstring {.importc: "TrayIcon_GetNamePath", dynlib: dllname.}
proc TrayIcon_HasParent*(AObj: pointer): bool {.importc: "TrayIcon_HasParent", dynlib: dllname.}
proc TrayIcon_Assign*(AObj: pointer, Source: pointer) {.importc: "TrayIcon_Assign", dynlib: dllname.}
proc TrayIcon_ClassType*(AObj: pointer): TClass {.importc: "TrayIcon_ClassType", dynlib: dllname.}
proc TrayIcon_ClassName*(AObj: pointer): cstring {.importc: "TrayIcon_ClassName", dynlib: dllname.}
proc TrayIcon_InstanceSize*(AObj: pointer): int32 {.importc: "TrayIcon_InstanceSize", dynlib: dllname.}
proc TrayIcon_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TrayIcon_InheritsFrom", dynlib: dllname.}
proc TrayIcon_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TrayIcon_Equals", dynlib: dllname.}
proc TrayIcon_GetHashCode*(AObj: pointer): int32 {.importc: "TrayIcon_GetHashCode", dynlib: dllname.}
proc TrayIcon_ToString*(AObj: pointer): cstring {.importc: "TrayIcon_ToString", dynlib: dllname.}
proc TrayIcon_GetAnimateInterval*(AObj: pointer): uint32 {.importc: "TrayIcon_GetAnimateInterval", dynlib: dllname.}
proc TrayIcon_SetAnimateInterval*(AObj: pointer, AValue: uint32) {.importc: "TrayIcon_SetAnimateInterval", dynlib: dllname.}
proc TrayIcon_GetHint*(AObj: pointer): cstring {.importc: "TrayIcon_GetHint", dynlib: dllname.}
proc TrayIcon_SetHint*(AObj: pointer, AValue: cstring) {.importc: "TrayIcon_SetHint", dynlib: dllname.}
proc TrayIcon_GetBalloonHint*(AObj: pointer): cstring {.importc: "TrayIcon_GetBalloonHint", dynlib: dllname.}
proc TrayIcon_SetBalloonHint*(AObj: pointer, AValue: cstring) {.importc: "TrayIcon_SetBalloonHint", dynlib: dllname.}
proc TrayIcon_GetBalloonTitle*(AObj: pointer): cstring {.importc: "TrayIcon_GetBalloonTitle", dynlib: dllname.}
proc TrayIcon_SetBalloonTitle*(AObj: pointer, AValue: cstring) {.importc: "TrayIcon_SetBalloonTitle", dynlib: dllname.}
proc TrayIcon_GetBalloonTimeout*(AObj: pointer): int32 {.importc: "TrayIcon_GetBalloonTimeout", dynlib: dllname.}
proc TrayIcon_SetBalloonTimeout*(AObj: pointer, AValue: int32) {.importc: "TrayIcon_SetBalloonTimeout", dynlib: dllname.}
proc TrayIcon_GetBalloonFlags*(AObj: pointer): TBalloonFlags {.importc: "TrayIcon_GetBalloonFlags", dynlib: dllname.}
proc TrayIcon_SetBalloonFlags*(AObj: pointer, AValue: TBalloonFlags) {.importc: "TrayIcon_SetBalloonFlags", dynlib: dllname.}
proc TrayIcon_GetIcon*(AObj: pointer): pointer {.importc: "TrayIcon_GetIcon", dynlib: dllname.}
proc TrayIcon_SetIcon*(AObj: pointer, AValue: pointer) {.importc: "TrayIcon_SetIcon", dynlib: dllname.}
proc TrayIcon_GetPopupMenu*(AObj: pointer): pointer {.importc: "TrayIcon_GetPopupMenu", dynlib: dllname.}
proc TrayIcon_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "TrayIcon_SetPopupMenu", dynlib: dllname.}
proc TrayIcon_GetVisible*(AObj: pointer): bool {.importc: "TrayIcon_GetVisible", dynlib: dllname.}
proc TrayIcon_SetVisible*(AObj: pointer, AValue: bool) {.importc: "TrayIcon_SetVisible", dynlib: dllname.}
proc TrayIcon_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TrayIcon_SetOnClick", dynlib: dllname.}
proc TrayIcon_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TrayIcon_SetOnDblClick", dynlib: dllname.}
proc TrayIcon_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "TrayIcon_SetOnMouseMove", dynlib: dllname.}
proc TrayIcon_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "TrayIcon_SetOnMouseUp", dynlib: dllname.}
proc TrayIcon_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "TrayIcon_SetOnMouseDown", dynlib: dllname.}
proc TrayIcon_GetComponentCount*(AObj: pointer): int32 {.importc: "TrayIcon_GetComponentCount", dynlib: dllname.}
proc TrayIcon_GetComponentIndex*(AObj: pointer): int32 {.importc: "TrayIcon_GetComponentIndex", dynlib: dllname.}
proc TrayIcon_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "TrayIcon_SetComponentIndex", dynlib: dllname.}
proc TrayIcon_GetOwner*(AObj: pointer): pointer {.importc: "TrayIcon_GetOwner", dynlib: dllname.}
proc TrayIcon_GetName*(AObj: pointer): cstring {.importc: "TrayIcon_GetName", dynlib: dllname.}
proc TrayIcon_SetName*(AObj: pointer, AValue: cstring) {.importc: "TrayIcon_SetName", dynlib: dllname.}
proc TrayIcon_GetTag*(AObj: pointer): int {.importc: "TrayIcon_GetTag", dynlib: dllname.}
proc TrayIcon_SetTag*(AObj: pointer, AValue: int) {.importc: "TrayIcon_SetTag", dynlib: dllname.}
proc TrayIcon_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "TrayIcon_GetComponents", dynlib: dllname.}
proc TrayIcon_StaticClassType*(): TClass {.importc: "TrayIcon_StaticClassType", dynlib: dllname.}
# ----------------- TOpenDialog ----------------------
proc OpenDialog_Create*(AOwner: pointer): pointer {.importc: "OpenDialog_Create", dynlib: dllname.}
proc OpenDialog_Free*(AObj: pointer) {.importc: "OpenDialog_Free", dynlib: dllname.}
proc OpenDialog_Execute*(AObj: pointer): bool {.importc: "OpenDialog_Execute", dynlib: dllname.}
proc OpenDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "OpenDialog_FindComponent", dynlib: dllname.}
proc OpenDialog_GetNamePath*(AObj: pointer): cstring {.importc: "OpenDialog_GetNamePath", dynlib: dllname.}
proc OpenDialog_HasParent*(AObj: pointer): bool {.importc: "OpenDialog_HasParent", dynlib: dllname.}
proc OpenDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "OpenDialog_Assign", dynlib: dllname.}
proc OpenDialog_ClassType*(AObj: pointer): TClass {.importc: "OpenDialog_ClassType", dynlib: dllname.}
proc OpenDialog_ClassName*(AObj: pointer): cstring {.importc: "OpenDialog_ClassName", dynlib: dllname.}
proc OpenDialog_InstanceSize*(AObj: pointer): int32 {.importc: "OpenDialog_InstanceSize", dynlib: dllname.}
proc OpenDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "OpenDialog_InheritsFrom", dynlib: dllname.}
proc OpenDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "OpenDialog_Equals", dynlib: dllname.}
proc OpenDialog_GetHashCode*(AObj: pointer): int32 {.importc: "OpenDialog_GetHashCode", dynlib: dllname.}
proc OpenDialog_ToString*(AObj: pointer): cstring {.importc: "OpenDialog_ToString", dynlib: dllname.}
proc OpenDialog_GetFiles*(AObj: pointer): pointer {.importc: "OpenDialog_GetFiles", dynlib: dllname.}
proc OpenDialog_GetDefaultExt*(AObj: pointer): cstring {.importc: "OpenDialog_GetDefaultExt", dynlib: dllname.}
proc OpenDialog_SetDefaultExt*(AObj: pointer, AValue: cstring) {.importc: "OpenDialog_SetDefaultExt", dynlib: dllname.}
proc OpenDialog_GetFileName*(AObj: pointer): cstring {.importc: "OpenDialog_GetFileName", dynlib: dllname.}
proc OpenDialog_SetFileName*(AObj: pointer, AValue: cstring) {.importc: "OpenDialog_SetFileName", dynlib: dllname.}
proc OpenDialog_GetFilter*(AObj: pointer): cstring {.importc: "OpenDialog_GetFilter", dynlib: dllname.}
proc OpenDialog_SetFilter*(AObj: pointer, AValue: cstring) {.importc: "OpenDialog_SetFilter", dynlib: dllname.}
proc OpenDialog_GetFilterIndex*(AObj: pointer): int32 {.importc: "OpenDialog_GetFilterIndex", dynlib: dllname.}
proc OpenDialog_SetFilterIndex*(AObj: pointer, AValue: int32) {.importc: "OpenDialog_SetFilterIndex", dynlib: dllname.}
proc OpenDialog_GetInitialDir*(AObj: pointer): cstring {.importc: "OpenDialog_GetInitialDir", dynlib: dllname.}
proc OpenDialog_SetInitialDir*(AObj: pointer, AValue: cstring) {.importc: "OpenDialog_SetInitialDir", dynlib: dllname.}
proc OpenDialog_GetOptions*(AObj: pointer): TOpenOptions {.importc: "OpenDialog_GetOptions", dynlib: dllname.}
proc OpenDialog_SetOptions*(AObj: pointer, AValue: TOpenOptions) {.importc: "OpenDialog_SetOptions", dynlib: dllname.}
proc OpenDialog_GetTitle*(AObj: pointer): cstring {.importc: "OpenDialog_GetTitle", dynlib: dllname.}
proc OpenDialog_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "OpenDialog_SetTitle", dynlib: dllname.}
proc OpenDialog_GetHandle*(AObj: pointer): HWND {.importc: "OpenDialog_GetHandle", dynlib: dllname.}
proc OpenDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "OpenDialog_SetOnClose", dynlib: dllname.}
proc OpenDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "OpenDialog_SetOnShow", dynlib: dllname.}
proc OpenDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "OpenDialog_GetComponentCount", dynlib: dllname.}
proc OpenDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "OpenDialog_GetComponentIndex", dynlib: dllname.}
proc OpenDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "OpenDialog_SetComponentIndex", dynlib: dllname.}
proc OpenDialog_GetOwner*(AObj: pointer): pointer {.importc: "OpenDialog_GetOwner", dynlib: dllname.}
proc OpenDialog_GetName*(AObj: pointer): cstring {.importc: "OpenDialog_GetName", dynlib: dllname.}
proc OpenDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "OpenDialog_SetName", dynlib: dllname.}
proc OpenDialog_GetTag*(AObj: pointer): int {.importc: "OpenDialog_GetTag", dynlib: dllname.}
proc OpenDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "OpenDialog_SetTag", dynlib: dllname.}
proc OpenDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "OpenDialog_GetComponents", dynlib: dllname.}
proc OpenDialog_StaticClassType*(): TClass {.importc: "OpenDialog_StaticClassType", dynlib: dllname.}
# ----------------- TSaveDialog ----------------------
proc SaveDialog_Create*(AOwner: pointer): pointer {.importc: "SaveDialog_Create", dynlib: dllname.}
proc SaveDialog_Free*(AObj: pointer) {.importc: "SaveDialog_Free", dynlib: dllname.}
proc SaveDialog_Execute*(AObj: pointer): bool {.importc: "SaveDialog_Execute", dynlib: dllname.}
proc SaveDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "SaveDialog_FindComponent", dynlib: dllname.}
proc SaveDialog_GetNamePath*(AObj: pointer): cstring {.importc: "SaveDialog_GetNamePath", dynlib: dllname.}
proc SaveDialog_HasParent*(AObj: pointer): bool {.importc: "SaveDialog_HasParent", dynlib: dllname.}
proc SaveDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "SaveDialog_Assign", dynlib: dllname.}
proc SaveDialog_ClassType*(AObj: pointer): TClass {.importc: "SaveDialog_ClassType", dynlib: dllname.}
proc SaveDialog_ClassName*(AObj: pointer): cstring {.importc: "SaveDialog_ClassName", dynlib: dllname.}
proc SaveDialog_InstanceSize*(AObj: pointer): int32 {.importc: "SaveDialog_InstanceSize", dynlib: dllname.}
proc SaveDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "SaveDialog_InheritsFrom", dynlib: dllname.}
proc SaveDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "SaveDialog_Equals", dynlib: dllname.}
proc SaveDialog_GetHashCode*(AObj: pointer): int32 {.importc: "SaveDialog_GetHashCode", dynlib: dllname.}
proc SaveDialog_ToString*(AObj: pointer): cstring {.importc: "SaveDialog_ToString", dynlib: dllname.}
proc SaveDialog_GetFiles*(AObj: pointer): pointer {.importc: "SaveDialog_GetFiles", dynlib: dllname.}
proc SaveDialog_GetDefaultExt*(AObj: pointer): cstring {.importc: "SaveDialog_GetDefaultExt", dynlib: dllname.}
proc SaveDialog_SetDefaultExt*(AObj: pointer, AValue: cstring) {.importc: "SaveDialog_SetDefaultExt", dynlib: dllname.}
proc SaveDialog_GetFileName*(AObj: pointer): cstring {.importc: "SaveDialog_GetFileName", dynlib: dllname.}
proc SaveDialog_SetFileName*(AObj: pointer, AValue: cstring) {.importc: "SaveDialog_SetFileName", dynlib: dllname.}
proc SaveDialog_GetFilter*(AObj: pointer): cstring {.importc: "SaveDialog_GetFilter", dynlib: dllname.}
proc SaveDialog_SetFilter*(AObj: pointer, AValue: cstring) {.importc: "SaveDialog_SetFilter", dynlib: dllname.}
proc SaveDialog_GetFilterIndex*(AObj: pointer): int32 {.importc: "SaveDialog_GetFilterIndex", dynlib: dllname.}
proc SaveDialog_SetFilterIndex*(AObj: pointer, AValue: int32) {.importc: "SaveDialog_SetFilterIndex", dynlib: dllname.}
proc SaveDialog_GetInitialDir*(AObj: pointer): cstring {.importc: "SaveDialog_GetInitialDir", dynlib: dllname.}
proc SaveDialog_SetInitialDir*(AObj: pointer, AValue: cstring) {.importc: "SaveDialog_SetInitialDir", dynlib: dllname.}
proc SaveDialog_GetOptions*(AObj: pointer): TOpenOptions {.importc: "SaveDialog_GetOptions", dynlib: dllname.}
proc SaveDialog_SetOptions*(AObj: pointer, AValue: TOpenOptions) {.importc: "SaveDialog_SetOptions", dynlib: dllname.}
proc SaveDialog_GetTitle*(AObj: pointer): cstring {.importc: "SaveDialog_GetTitle", dynlib: dllname.}
proc SaveDialog_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "SaveDialog_SetTitle", dynlib: dllname.}
proc SaveDialog_GetHandle*(AObj: pointer): HWND {.importc: "SaveDialog_GetHandle", dynlib: dllname.}
proc SaveDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SaveDialog_SetOnClose", dynlib: dllname.}
proc SaveDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SaveDialog_SetOnShow", dynlib: dllname.}
proc SaveDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "SaveDialog_GetComponentCount", dynlib: dllname.}
proc SaveDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "SaveDialog_GetComponentIndex", dynlib: dllname.}
proc SaveDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "SaveDialog_SetComponentIndex", dynlib: dllname.}
proc SaveDialog_GetOwner*(AObj: pointer): pointer {.importc: "SaveDialog_GetOwner", dynlib: dllname.}
proc SaveDialog_GetName*(AObj: pointer): cstring {.importc: "SaveDialog_GetName", dynlib: dllname.}
proc SaveDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "SaveDialog_SetName", dynlib: dllname.}
proc SaveDialog_GetTag*(AObj: pointer): int {.importc: "SaveDialog_GetTag", dynlib: dllname.}
proc SaveDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "SaveDialog_SetTag", dynlib: dllname.}
proc SaveDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "SaveDialog_GetComponents", dynlib: dllname.}
proc SaveDialog_StaticClassType*(): TClass {.importc: "SaveDialog_StaticClassType", dynlib: dllname.}
# ----------------- TColorDialog ----------------------
proc ColorDialog_Create*(AOwner: pointer): pointer {.importc: "ColorDialog_Create", dynlib: dllname.}
proc ColorDialog_Free*(AObj: pointer) {.importc: "ColorDialog_Free", dynlib: dllname.}
proc ColorDialog_Execute*(AObj: pointer): bool {.importc: "ColorDialog_Execute", dynlib: dllname.}
proc ColorDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ColorDialog_FindComponent", dynlib: dllname.}
proc ColorDialog_GetNamePath*(AObj: pointer): cstring {.importc: "ColorDialog_GetNamePath", dynlib: dllname.}
proc ColorDialog_HasParent*(AObj: pointer): bool {.importc: "ColorDialog_HasParent", dynlib: dllname.}
proc ColorDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "ColorDialog_Assign", dynlib: dllname.}
proc ColorDialog_ClassType*(AObj: pointer): TClass {.importc: "ColorDialog_ClassType", dynlib: dllname.}
proc ColorDialog_ClassName*(AObj: pointer): cstring {.importc: "ColorDialog_ClassName", dynlib: dllname.}
proc ColorDialog_InstanceSize*(AObj: pointer): int32 {.importc: "ColorDialog_InstanceSize", dynlib: dllname.}
proc ColorDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ColorDialog_InheritsFrom", dynlib: dllname.}
proc ColorDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ColorDialog_Equals", dynlib: dllname.}
proc ColorDialog_GetHashCode*(AObj: pointer): int32 {.importc: "ColorDialog_GetHashCode", dynlib: dllname.}
proc ColorDialog_ToString*(AObj: pointer): cstring {.importc: "ColorDialog_ToString", dynlib: dllname.}
proc ColorDialog_GetColor*(AObj: pointer): TColor {.importc: "ColorDialog_GetColor", dynlib: dllname.}
proc ColorDialog_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ColorDialog_SetColor", dynlib: dllname.}
proc ColorDialog_GetCustomColors*(AObj: pointer): pointer {.importc: "ColorDialog_GetCustomColors", dynlib: dllname.}
proc ColorDialog_SetCustomColors*(AObj: pointer, AValue: pointer) {.importc: "ColorDialog_SetCustomColors", dynlib: dllname.}
proc ColorDialog_GetHandle*(AObj: pointer): HWND {.importc: "ColorDialog_GetHandle", dynlib: dllname.}
proc ColorDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorDialog_SetOnClose", dynlib: dllname.}
proc ColorDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ColorDialog_SetOnShow", dynlib: dllname.}
proc ColorDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "ColorDialog_GetComponentCount", dynlib: dllname.}
proc ColorDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "ColorDialog_GetComponentIndex", dynlib: dllname.}
proc ColorDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ColorDialog_SetComponentIndex", dynlib: dllname.}
proc ColorDialog_GetOwner*(AObj: pointer): pointer {.importc: "ColorDialog_GetOwner", dynlib: dllname.}
proc ColorDialog_GetName*(AObj: pointer): cstring {.importc: "ColorDialog_GetName", dynlib: dllname.}
proc ColorDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "ColorDialog_SetName", dynlib: dllname.}
proc ColorDialog_GetTag*(AObj: pointer): int {.importc: "ColorDialog_GetTag", dynlib: dllname.}
proc ColorDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "ColorDialog_SetTag", dynlib: dllname.}
proc ColorDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ColorDialog_GetComponents", dynlib: dllname.}
proc ColorDialog_StaticClassType*(): TClass {.importc: "ColorDialog_StaticClassType", dynlib: dllname.}
# ----------------- TFontDialog ----------------------
proc FontDialog_Create*(AOwner: pointer): pointer {.importc: "FontDialog_Create", dynlib: dllname.}
proc FontDialog_Free*(AObj: pointer) {.importc: "FontDialog_Free", dynlib: dllname.}
proc FontDialog_Execute*(AObj: pointer): bool {.importc: "FontDialog_Execute", dynlib: dllname.}
proc FontDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "FontDialog_FindComponent", dynlib: dllname.}
proc FontDialog_GetNamePath*(AObj: pointer): cstring {.importc: "FontDialog_GetNamePath", dynlib: dllname.}
proc FontDialog_HasParent*(AObj: pointer): bool {.importc: "FontDialog_HasParent", dynlib: dllname.}
proc FontDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "FontDialog_Assign", dynlib: dllname.}
proc FontDialog_ClassType*(AObj: pointer): TClass {.importc: "FontDialog_ClassType", dynlib: dllname.}
proc FontDialog_ClassName*(AObj: pointer): cstring {.importc: "FontDialog_ClassName", dynlib: dllname.}
proc FontDialog_InstanceSize*(AObj: pointer): int32 {.importc: "FontDialog_InstanceSize", dynlib: dllname.}
proc FontDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "FontDialog_InheritsFrom", dynlib: dllname.}
proc FontDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "FontDialog_Equals", dynlib: dllname.}
proc FontDialog_GetHashCode*(AObj: pointer): int32 {.importc: "FontDialog_GetHashCode", dynlib: dllname.}
proc FontDialog_ToString*(AObj: pointer): cstring {.importc: "FontDialog_ToString", dynlib: dllname.}
proc FontDialog_GetFont*(AObj: pointer): pointer {.importc: "FontDialog_GetFont", dynlib: dllname.}
proc FontDialog_SetFont*(AObj: pointer, AValue: pointer) {.importc: "FontDialog_SetFont", dynlib: dllname.}
proc FontDialog_GetOptions*(AObj: pointer): TFontDialogOptions {.importc: "FontDialog_GetOptions", dynlib: dllname.}
proc FontDialog_SetOptions*(AObj: pointer, AValue: TFontDialogOptions) {.importc: "FontDialog_SetOptions", dynlib: dllname.}
proc FontDialog_GetHandle*(AObj: pointer): HWND {.importc: "FontDialog_GetHandle", dynlib: dllname.}
proc FontDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FontDialog_SetOnClose", dynlib: dllname.}
proc FontDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FontDialog_SetOnShow", dynlib: dllname.}
proc FontDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "FontDialog_GetComponentCount", dynlib: dllname.}
proc FontDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "FontDialog_GetComponentIndex", dynlib: dllname.}
proc FontDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "FontDialog_SetComponentIndex", dynlib: dllname.}
proc FontDialog_GetOwner*(AObj: pointer): pointer {.importc: "FontDialog_GetOwner", dynlib: dllname.}
proc FontDialog_GetName*(AObj: pointer): cstring {.importc: "FontDialog_GetName", dynlib: dllname.}
proc FontDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "FontDialog_SetName", dynlib: dllname.}
proc FontDialog_GetTag*(AObj: pointer): int {.importc: "FontDialog_GetTag", dynlib: dllname.}
proc FontDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "FontDialog_SetTag", dynlib: dllname.}
proc FontDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "FontDialog_GetComponents", dynlib: dllname.}
proc FontDialog_StaticClassType*(): TClass {.importc: "FontDialog_StaticClassType", dynlib: dllname.}
# ----------------- TPrintDialog ----------------------
proc PrintDialog_Create*(AOwner: pointer): pointer {.importc: "PrintDialog_Create", dynlib: dllname.}
proc PrintDialog_Free*(AObj: pointer) {.importc: "PrintDialog_Free", dynlib: dllname.}
proc PrintDialog_Execute*(AObj: pointer): bool {.importc: "PrintDialog_Execute", dynlib: dllname.}
proc PrintDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "PrintDialog_FindComponent", dynlib: dllname.}
proc PrintDialog_GetNamePath*(AObj: pointer): cstring {.importc: "PrintDialog_GetNamePath", dynlib: dllname.}
proc PrintDialog_HasParent*(AObj: pointer): bool {.importc: "PrintDialog_HasParent", dynlib: dllname.}
proc PrintDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "PrintDialog_Assign", dynlib: dllname.}
proc PrintDialog_ClassType*(AObj: pointer): TClass {.importc: "PrintDialog_ClassType", dynlib: dllname.}
proc PrintDialog_ClassName*(AObj: pointer): cstring {.importc: "PrintDialog_ClassName", dynlib: dllname.}
proc PrintDialog_InstanceSize*(AObj: pointer): int32 {.importc: "PrintDialog_InstanceSize", dynlib: dllname.}
proc PrintDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "PrintDialog_InheritsFrom", dynlib: dllname.}
proc PrintDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "PrintDialog_Equals", dynlib: dllname.}
proc PrintDialog_GetHashCode*(AObj: pointer): int32 {.importc: "PrintDialog_GetHashCode", dynlib: dllname.}
proc PrintDialog_ToString*(AObj: pointer): cstring {.importc: "PrintDialog_ToString", dynlib: dllname.}
proc PrintDialog_GetCollate*(AObj: pointer): bool {.importc: "PrintDialog_GetCollate", dynlib: dllname.}
proc PrintDialog_SetCollate*(AObj: pointer, AValue: bool) {.importc: "PrintDialog_SetCollate", dynlib: dllname.}
proc PrintDialog_GetCopies*(AObj: pointer): int32 {.importc: "PrintDialog_GetCopies", dynlib: dllname.}
proc PrintDialog_SetCopies*(AObj: pointer, AValue: int32) {.importc: "PrintDialog_SetCopies", dynlib: dllname.}
proc PrintDialog_GetFromPage*(AObj: pointer): int32 {.importc: "PrintDialog_GetFromPage", dynlib: dllname.}
proc PrintDialog_SetFromPage*(AObj: pointer, AValue: int32) {.importc: "PrintDialog_SetFromPage", dynlib: dllname.}
proc PrintDialog_GetMinPage*(AObj: pointer): int32 {.importc: "PrintDialog_GetMinPage", dynlib: dllname.}
proc PrintDialog_SetMinPage*(AObj: pointer, AValue: int32) {.importc: "PrintDialog_SetMinPage", dynlib: dllname.}
proc PrintDialog_GetMaxPage*(AObj: pointer): int32 {.importc: "PrintDialog_GetMaxPage", dynlib: dllname.}
proc PrintDialog_SetMaxPage*(AObj: pointer, AValue: int32) {.importc: "PrintDialog_SetMaxPage", dynlib: dllname.}
proc PrintDialog_GetOptions*(AObj: pointer): TPrintDialogOptions {.importc: "PrintDialog_GetOptions", dynlib: dllname.}
proc PrintDialog_SetOptions*(AObj: pointer, AValue: TPrintDialogOptions) {.importc: "PrintDialog_SetOptions", dynlib: dllname.}
proc PrintDialog_GetPrintToFile*(AObj: pointer): bool {.importc: "PrintDialog_GetPrintToFile", dynlib: dllname.}
proc PrintDialog_SetPrintToFile*(AObj: pointer, AValue: bool) {.importc: "PrintDialog_SetPrintToFile", dynlib: dllname.}
proc PrintDialog_GetPrintRange*(AObj: pointer): TPrintRange {.importc: "PrintDialog_GetPrintRange", dynlib: dllname.}
proc PrintDialog_SetPrintRange*(AObj: pointer, AValue: TPrintRange) {.importc: "PrintDialog_SetPrintRange", dynlib: dllname.}
proc PrintDialog_GetToPage*(AObj: pointer): int32 {.importc: "PrintDialog_GetToPage", dynlib: dllname.}
proc PrintDialog_SetToPage*(AObj: pointer, AValue: int32) {.importc: "PrintDialog_SetToPage", dynlib: dllname.}
proc PrintDialog_GetHandle*(AObj: pointer): HWND {.importc: "PrintDialog_GetHandle", dynlib: dllname.}
proc PrintDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PrintDialog_SetOnClose", dynlib: dllname.}
proc PrintDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PrintDialog_SetOnShow", dynlib: dllname.}
proc PrintDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "PrintDialog_GetComponentCount", dynlib: dllname.}
proc PrintDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "PrintDialog_GetComponentIndex", dynlib: dllname.}
proc PrintDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "PrintDialog_SetComponentIndex", dynlib: dllname.}
proc PrintDialog_GetOwner*(AObj: pointer): pointer {.importc: "PrintDialog_GetOwner", dynlib: dllname.}
proc PrintDialog_GetName*(AObj: pointer): cstring {.importc: "PrintDialog_GetName", dynlib: dllname.}
proc PrintDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "PrintDialog_SetName", dynlib: dllname.}
proc PrintDialog_GetTag*(AObj: pointer): int {.importc: "PrintDialog_GetTag", dynlib: dllname.}
proc PrintDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "PrintDialog_SetTag", dynlib: dllname.}
proc PrintDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "PrintDialog_GetComponents", dynlib: dllname.}
proc PrintDialog_StaticClassType*(): TClass {.importc: "PrintDialog_StaticClassType", dynlib: dllname.}
# ----------------- TOpenPictureDialog ----------------------
proc OpenPictureDialog_Create*(AOwner: pointer): pointer {.importc: "OpenPictureDialog_Create", dynlib: dllname.}
proc OpenPictureDialog_Free*(AObj: pointer) {.importc: "OpenPictureDialog_Free", dynlib: dllname.}
proc OpenPictureDialog_Execute*(AObj: pointer): bool {.importc: "OpenPictureDialog_Execute", dynlib: dllname.}
proc OpenPictureDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "OpenPictureDialog_FindComponent", dynlib: dllname.}
proc OpenPictureDialog_GetNamePath*(AObj: pointer): cstring {.importc: "OpenPictureDialog_GetNamePath", dynlib: dllname.}
proc OpenPictureDialog_HasParent*(AObj: pointer): bool {.importc: "OpenPictureDialog_HasParent", dynlib: dllname.}
proc OpenPictureDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "OpenPictureDialog_Assign", dynlib: dllname.}
proc OpenPictureDialog_ClassType*(AObj: pointer): TClass {.importc: "OpenPictureDialog_ClassType", dynlib: dllname.}
proc OpenPictureDialog_ClassName*(AObj: pointer): cstring {.importc: "OpenPictureDialog_ClassName", dynlib: dllname.}
proc OpenPictureDialog_InstanceSize*(AObj: pointer): int32 {.importc: "OpenPictureDialog_InstanceSize", dynlib: dllname.}
proc OpenPictureDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "OpenPictureDialog_InheritsFrom", dynlib: dllname.}
proc OpenPictureDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "OpenPictureDialog_Equals", dynlib: dllname.}
proc OpenPictureDialog_GetHashCode*(AObj: pointer): int32 {.importc: "OpenPictureDialog_GetHashCode", dynlib: dllname.}
proc OpenPictureDialog_ToString*(AObj: pointer): cstring {.importc: "OpenPictureDialog_ToString", dynlib: dllname.}
proc OpenPictureDialog_GetFilter*(AObj: pointer): cstring {.importc: "OpenPictureDialog_GetFilter", dynlib: dllname.}
proc OpenPictureDialog_SetFilter*(AObj: pointer, AValue: cstring) {.importc: "OpenPictureDialog_SetFilter", dynlib: dllname.}
proc OpenPictureDialog_GetFiles*(AObj: pointer): pointer {.importc: "OpenPictureDialog_GetFiles", dynlib: dllname.}
proc OpenPictureDialog_GetDefaultExt*(AObj: pointer): cstring {.importc: "OpenPictureDialog_GetDefaultExt", dynlib: dllname.}
proc OpenPictureDialog_SetDefaultExt*(AObj: pointer, AValue: cstring) {.importc: "OpenPictureDialog_SetDefaultExt", dynlib: dllname.}
proc OpenPictureDialog_GetFileName*(AObj: pointer): cstring {.importc: "OpenPictureDialog_GetFileName", dynlib: dllname.}
proc OpenPictureDialog_SetFileName*(AObj: pointer, AValue: cstring) {.importc: "OpenPictureDialog_SetFileName", dynlib: dllname.}
proc OpenPictureDialog_GetFilterIndex*(AObj: pointer): int32 {.importc: "OpenPictureDialog_GetFilterIndex", dynlib: dllname.}
proc OpenPictureDialog_SetFilterIndex*(AObj: pointer, AValue: int32) {.importc: "OpenPictureDialog_SetFilterIndex", dynlib: dllname.}
proc OpenPictureDialog_GetInitialDir*(AObj: pointer): cstring {.importc: "OpenPictureDialog_GetInitialDir", dynlib: dllname.}
proc OpenPictureDialog_SetInitialDir*(AObj: pointer, AValue: cstring) {.importc: "OpenPictureDialog_SetInitialDir", dynlib: dllname.}
proc OpenPictureDialog_GetOptions*(AObj: pointer): TOpenOptions {.importc: "OpenPictureDialog_GetOptions", dynlib: dllname.}
proc OpenPictureDialog_SetOptions*(AObj: pointer, AValue: TOpenOptions) {.importc: "OpenPictureDialog_SetOptions", dynlib: dllname.}
proc OpenPictureDialog_GetTitle*(AObj: pointer): cstring {.importc: "OpenPictureDialog_GetTitle", dynlib: dllname.}
proc OpenPictureDialog_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "OpenPictureDialog_SetTitle", dynlib: dllname.}
proc OpenPictureDialog_GetHandle*(AObj: pointer): HWND {.importc: "OpenPictureDialog_GetHandle", dynlib: dllname.}
proc OpenPictureDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "OpenPictureDialog_SetOnClose", dynlib: dllname.}
proc OpenPictureDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "OpenPictureDialog_SetOnShow", dynlib: dllname.}
proc OpenPictureDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "OpenPictureDialog_GetComponentCount", dynlib: dllname.}
proc OpenPictureDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "OpenPictureDialog_GetComponentIndex", dynlib: dllname.}
proc OpenPictureDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "OpenPictureDialog_SetComponentIndex", dynlib: dllname.}
proc OpenPictureDialog_GetOwner*(AObj: pointer): pointer {.importc: "OpenPictureDialog_GetOwner", dynlib: dllname.}
proc OpenPictureDialog_GetName*(AObj: pointer): cstring {.importc: "OpenPictureDialog_GetName", dynlib: dllname.}
proc OpenPictureDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "OpenPictureDialog_SetName", dynlib: dllname.}
proc OpenPictureDialog_GetTag*(AObj: pointer): int {.importc: "OpenPictureDialog_GetTag", dynlib: dllname.}
proc OpenPictureDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "OpenPictureDialog_SetTag", dynlib: dllname.}
proc OpenPictureDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "OpenPictureDialog_GetComponents", dynlib: dllname.}
proc OpenPictureDialog_StaticClassType*(): TClass {.importc: "OpenPictureDialog_StaticClassType", dynlib: dllname.}
# ----------------- TSavePictureDialog ----------------------
proc SavePictureDialog_Create*(AOwner: pointer): pointer {.importc: "SavePictureDialog_Create", dynlib: dllname.}
proc SavePictureDialog_Free*(AObj: pointer) {.importc: "SavePictureDialog_Free", dynlib: dllname.}
proc SavePictureDialog_Execute*(AObj: pointer): bool {.importc: "SavePictureDialog_Execute", dynlib: dllname.}
proc SavePictureDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "SavePictureDialog_FindComponent", dynlib: dllname.}
proc SavePictureDialog_GetNamePath*(AObj: pointer): cstring {.importc: "SavePictureDialog_GetNamePath", dynlib: dllname.}
proc SavePictureDialog_HasParent*(AObj: pointer): bool {.importc: "SavePictureDialog_HasParent", dynlib: dllname.}
proc SavePictureDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "SavePictureDialog_Assign", dynlib: dllname.}
proc SavePictureDialog_ClassType*(AObj: pointer): TClass {.importc: "SavePictureDialog_ClassType", dynlib: dllname.}
proc SavePictureDialog_ClassName*(AObj: pointer): cstring {.importc: "SavePictureDialog_ClassName", dynlib: dllname.}
proc SavePictureDialog_InstanceSize*(AObj: pointer): int32 {.importc: "SavePictureDialog_InstanceSize", dynlib: dllname.}
proc SavePictureDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "SavePictureDialog_InheritsFrom", dynlib: dllname.}
proc SavePictureDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "SavePictureDialog_Equals", dynlib: dllname.}
proc SavePictureDialog_GetHashCode*(AObj: pointer): int32 {.importc: "SavePictureDialog_GetHashCode", dynlib: dllname.}
proc SavePictureDialog_ToString*(AObj: pointer): cstring {.importc: "SavePictureDialog_ToString", dynlib: dllname.}
proc SavePictureDialog_GetFilter*(AObj: pointer): cstring {.importc: "SavePictureDialog_GetFilter", dynlib: dllname.}
proc SavePictureDialog_SetFilter*(AObj: pointer, AValue: cstring) {.importc: "SavePictureDialog_SetFilter", dynlib: dllname.}
proc SavePictureDialog_GetFiles*(AObj: pointer): pointer {.importc: "SavePictureDialog_GetFiles", dynlib: dllname.}
proc SavePictureDialog_GetDefaultExt*(AObj: pointer): cstring {.importc: "SavePictureDialog_GetDefaultExt", dynlib: dllname.}
proc SavePictureDialog_SetDefaultExt*(AObj: pointer, AValue: cstring) {.importc: "SavePictureDialog_SetDefaultExt", dynlib: dllname.}
proc SavePictureDialog_GetFileName*(AObj: pointer): cstring {.importc: "SavePictureDialog_GetFileName", dynlib: dllname.}
proc SavePictureDialog_SetFileName*(AObj: pointer, AValue: cstring) {.importc: "SavePictureDialog_SetFileName", dynlib: dllname.}
proc SavePictureDialog_GetFilterIndex*(AObj: pointer): int32 {.importc: "SavePictureDialog_GetFilterIndex", dynlib: dllname.}
proc SavePictureDialog_SetFilterIndex*(AObj: pointer, AValue: int32) {.importc: "SavePictureDialog_SetFilterIndex", dynlib: dllname.}
proc SavePictureDialog_GetInitialDir*(AObj: pointer): cstring {.importc: "SavePictureDialog_GetInitialDir", dynlib: dllname.}
proc SavePictureDialog_SetInitialDir*(AObj: pointer, AValue: cstring) {.importc: "SavePictureDialog_SetInitialDir", dynlib: dllname.}
proc SavePictureDialog_GetOptions*(AObj: pointer): TOpenOptions {.importc: "SavePictureDialog_GetOptions", dynlib: dllname.}
proc SavePictureDialog_SetOptions*(AObj: pointer, AValue: TOpenOptions) {.importc: "SavePictureDialog_SetOptions", dynlib: dllname.}
proc SavePictureDialog_GetTitle*(AObj: pointer): cstring {.importc: "SavePictureDialog_GetTitle", dynlib: dllname.}
proc SavePictureDialog_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "SavePictureDialog_SetTitle", dynlib: dllname.}
proc SavePictureDialog_GetHandle*(AObj: pointer): HWND {.importc: "SavePictureDialog_GetHandle", dynlib: dllname.}
proc SavePictureDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SavePictureDialog_SetOnClose", dynlib: dllname.}
proc SavePictureDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SavePictureDialog_SetOnShow", dynlib: dllname.}
proc SavePictureDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "SavePictureDialog_GetComponentCount", dynlib: dllname.}
proc SavePictureDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "SavePictureDialog_GetComponentIndex", dynlib: dllname.}
proc SavePictureDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "SavePictureDialog_SetComponentIndex", dynlib: dllname.}
proc SavePictureDialog_GetOwner*(AObj: pointer): pointer {.importc: "SavePictureDialog_GetOwner", dynlib: dllname.}
proc SavePictureDialog_GetName*(AObj: pointer): cstring {.importc: "SavePictureDialog_GetName", dynlib: dllname.}
proc SavePictureDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "SavePictureDialog_SetName", dynlib: dllname.}
proc SavePictureDialog_GetTag*(AObj: pointer): int {.importc: "SavePictureDialog_GetTag", dynlib: dllname.}
proc SavePictureDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "SavePictureDialog_SetTag", dynlib: dllname.}
proc SavePictureDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "SavePictureDialog_GetComponents", dynlib: dllname.}
proc SavePictureDialog_StaticClassType*(): TClass {.importc: "SavePictureDialog_StaticClassType", dynlib: dllname.}
# ----------------- TSelectDirectoryDialog ----------------------
proc SelectDirectoryDialog_Create*(AOwner: pointer): pointer {.importc: "SelectDirectoryDialog_Create", dynlib: dllname.}
proc SelectDirectoryDialog_Free*(AObj: pointer) {.importc: "SelectDirectoryDialog_Free", dynlib: dllname.}
proc SelectDirectoryDialog_Execute*(AObj: pointer): bool {.importc: "SelectDirectoryDialog_Execute", dynlib: dllname.}
proc SelectDirectoryDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "SelectDirectoryDialog_FindComponent", dynlib: dllname.}
proc SelectDirectoryDialog_GetNamePath*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_GetNamePath", dynlib: dllname.}
proc SelectDirectoryDialog_HasParent*(AObj: pointer): bool {.importc: "SelectDirectoryDialog_HasParent", dynlib: dllname.}
proc SelectDirectoryDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "SelectDirectoryDialog_Assign", dynlib: dllname.}
proc SelectDirectoryDialog_ClassType*(AObj: pointer): TClass {.importc: "SelectDirectoryDialog_ClassType", dynlib: dllname.}
proc SelectDirectoryDialog_ClassName*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_ClassName", dynlib: dllname.}
proc SelectDirectoryDialog_InstanceSize*(AObj: pointer): int32 {.importc: "SelectDirectoryDialog_InstanceSize", dynlib: dllname.}
proc SelectDirectoryDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "SelectDirectoryDialog_InheritsFrom", dynlib: dllname.}
proc SelectDirectoryDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "SelectDirectoryDialog_Equals", dynlib: dllname.}
proc SelectDirectoryDialog_GetHashCode*(AObj: pointer): int32 {.importc: "SelectDirectoryDialog_GetHashCode", dynlib: dllname.}
proc SelectDirectoryDialog_ToString*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_ToString", dynlib: dllname.}
proc SelectDirectoryDialog_GetFiles*(AObj: pointer): pointer {.importc: "SelectDirectoryDialog_GetFiles", dynlib: dllname.}
proc SelectDirectoryDialog_GetDefaultExt*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_GetDefaultExt", dynlib: dllname.}
proc SelectDirectoryDialog_SetDefaultExt*(AObj: pointer, AValue: cstring) {.importc: "SelectDirectoryDialog_SetDefaultExt", dynlib: dllname.}
proc SelectDirectoryDialog_GetFileName*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_GetFileName", dynlib: dllname.}
proc SelectDirectoryDialog_SetFileName*(AObj: pointer, AValue: cstring) {.importc: "SelectDirectoryDialog_SetFileName", dynlib: dllname.}
proc SelectDirectoryDialog_GetFilter*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_GetFilter", dynlib: dllname.}
proc SelectDirectoryDialog_SetFilter*(AObj: pointer, AValue: cstring) {.importc: "SelectDirectoryDialog_SetFilter", dynlib: dllname.}
proc SelectDirectoryDialog_GetFilterIndex*(AObj: pointer): int32 {.importc: "SelectDirectoryDialog_GetFilterIndex", dynlib: dllname.}
proc SelectDirectoryDialog_SetFilterIndex*(AObj: pointer, AValue: int32) {.importc: "SelectDirectoryDialog_SetFilterIndex", dynlib: dllname.}
proc SelectDirectoryDialog_GetInitialDir*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_GetInitialDir", dynlib: dllname.}
proc SelectDirectoryDialog_SetInitialDir*(AObj: pointer, AValue: cstring) {.importc: "SelectDirectoryDialog_SetInitialDir", dynlib: dllname.}
proc SelectDirectoryDialog_GetOptions*(AObj: pointer): TOpenOptions {.importc: "SelectDirectoryDialog_GetOptions", dynlib: dllname.}
proc SelectDirectoryDialog_SetOptions*(AObj: pointer, AValue: TOpenOptions) {.importc: "SelectDirectoryDialog_SetOptions", dynlib: dllname.}
proc SelectDirectoryDialog_GetTitle*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_GetTitle", dynlib: dllname.}
proc SelectDirectoryDialog_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "SelectDirectoryDialog_SetTitle", dynlib: dllname.}
proc SelectDirectoryDialog_GetHandle*(AObj: pointer): HWND {.importc: "SelectDirectoryDialog_GetHandle", dynlib: dllname.}
proc SelectDirectoryDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SelectDirectoryDialog_SetOnClose", dynlib: dllname.}
proc SelectDirectoryDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SelectDirectoryDialog_SetOnShow", dynlib: dllname.}
proc SelectDirectoryDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "SelectDirectoryDialog_GetComponentCount", dynlib: dllname.}
proc SelectDirectoryDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "SelectDirectoryDialog_GetComponentIndex", dynlib: dllname.}
proc SelectDirectoryDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "SelectDirectoryDialog_SetComponentIndex", dynlib: dllname.}
proc SelectDirectoryDialog_GetOwner*(AObj: pointer): pointer {.importc: "SelectDirectoryDialog_GetOwner", dynlib: dllname.}
proc SelectDirectoryDialog_GetName*(AObj: pointer): cstring {.importc: "SelectDirectoryDialog_GetName", dynlib: dllname.}
proc SelectDirectoryDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "SelectDirectoryDialog_SetName", dynlib: dllname.}
proc SelectDirectoryDialog_GetTag*(AObj: pointer): int {.importc: "SelectDirectoryDialog_GetTag", dynlib: dllname.}
proc SelectDirectoryDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "SelectDirectoryDialog_SetTag", dynlib: dllname.}
proc SelectDirectoryDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "SelectDirectoryDialog_GetComponents", dynlib: dllname.}
proc SelectDirectoryDialog_StaticClassType*(): TClass {.importc: "SelectDirectoryDialog_StaticClassType", dynlib: dllname.}
# ----------------- TRichEdit ----------------------
proc RichEdit_Create*(AOwner: pointer): pointer {.importc: "RichEdit_Create", dynlib: dllname.}
proc RichEdit_Free*(AObj: pointer) {.importc: "RichEdit_Free", dynlib: dllname.}
proc RichEdit_Clear*(AObj: pointer) {.importc: "RichEdit_Clear", dynlib: dllname.}
proc RichEdit_FindText*(AObj: pointer, SearchStr: cstring, StartPos: int32, Length: int32, Options: TSearchTypes): int32 {.importc: "RichEdit_FindText", dynlib: dllname.}
proc RichEdit_ClearSelection*(AObj: pointer) {.importc: "RichEdit_ClearSelection", dynlib: dllname.}
proc RichEdit_CopyToClipboard*(AObj: pointer) {.importc: "RichEdit_CopyToClipboard", dynlib: dllname.}
proc RichEdit_CutToClipboard*(AObj: pointer) {.importc: "RichEdit_CutToClipboard", dynlib: dllname.}
proc RichEdit_PasteFromClipboard*(AObj: pointer) {.importc: "RichEdit_PasteFromClipboard", dynlib: dllname.}
proc RichEdit_Undo*(AObj: pointer) {.importc: "RichEdit_Undo", dynlib: dllname.}
proc RichEdit_SelectAll*(AObj: pointer) {.importc: "RichEdit_SelectAll", dynlib: dllname.}
proc RichEdit_CanFocus*(AObj: pointer): bool {.importc: "RichEdit_CanFocus", dynlib: dllname.}
proc RichEdit_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "RichEdit_ContainsControl", dynlib: dllname.}
proc RichEdit_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "RichEdit_ControlAtPos", dynlib: dllname.}
proc RichEdit_DisableAlign*(AObj: pointer) {.importc: "RichEdit_DisableAlign", dynlib: dllname.}
proc RichEdit_EnableAlign*(AObj: pointer) {.importc: "RichEdit_EnableAlign", dynlib: dllname.}
proc RichEdit_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "RichEdit_FindChildControl", dynlib: dllname.}
proc RichEdit_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "RichEdit_FlipChildren", dynlib: dllname.}
proc RichEdit_Focused*(AObj: pointer): bool {.importc: "RichEdit_Focused", dynlib: dllname.}
proc RichEdit_HandleAllocated*(AObj: pointer): bool {.importc: "RichEdit_HandleAllocated", dynlib: dllname.}
proc RichEdit_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "RichEdit_InsertControl", dynlib: dllname.}
proc RichEdit_Invalidate*(AObj: pointer) {.importc: "RichEdit_Invalidate", dynlib: dllname.}
proc RichEdit_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "RichEdit_PaintTo", dynlib: dllname.}
proc RichEdit_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "RichEdit_RemoveControl", dynlib: dllname.}
proc RichEdit_Realign*(AObj: pointer) {.importc: "RichEdit_Realign", dynlib: dllname.}
proc RichEdit_Repaint*(AObj: pointer) {.importc: "RichEdit_Repaint", dynlib: dllname.}
proc RichEdit_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "RichEdit_ScaleBy", dynlib: dllname.}
proc RichEdit_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "RichEdit_ScrollBy", dynlib: dllname.}
proc RichEdit_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "RichEdit_SetBounds", dynlib: dllname.}
proc RichEdit_SetFocus*(AObj: pointer) {.importc: "RichEdit_SetFocus", dynlib: dllname.}
proc RichEdit_Update*(AObj: pointer) {.importc: "RichEdit_Update", dynlib: dllname.}
proc RichEdit_BringToFront*(AObj: pointer) {.importc: "RichEdit_BringToFront", dynlib: dllname.}
proc RichEdit_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "RichEdit_ClientToScreen", dynlib: dllname.}
proc RichEdit_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "RichEdit_ClientToParent", dynlib: dllname.}
proc RichEdit_Dragging*(AObj: pointer): bool {.importc: "RichEdit_Dragging", dynlib: dllname.}
proc RichEdit_HasParent*(AObj: pointer): bool {.importc: "RichEdit_HasParent", dynlib: dllname.}
proc RichEdit_Hide*(AObj: pointer) {.importc: "RichEdit_Hide", dynlib: dllname.}
proc RichEdit_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "RichEdit_Perform", dynlib: dllname.}
proc RichEdit_Refresh*(AObj: pointer) {.importc: "RichEdit_Refresh", dynlib: dllname.}
proc RichEdit_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "RichEdit_ScreenToClient", dynlib: dllname.}
proc RichEdit_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "RichEdit_ParentToClient", dynlib: dllname.}
proc RichEdit_SendToBack*(AObj: pointer) {.importc: "RichEdit_SendToBack", dynlib: dllname.}
proc RichEdit_Show*(AObj: pointer) {.importc: "RichEdit_Show", dynlib: dllname.}
proc RichEdit_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "RichEdit_GetTextBuf", dynlib: dllname.}
proc RichEdit_GetTextLen*(AObj: pointer): int32 {.importc: "RichEdit_GetTextLen", dynlib: dllname.}
proc RichEdit_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "RichEdit_SetTextBuf", dynlib: dllname.}
proc RichEdit_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "RichEdit_FindComponent", dynlib: dllname.}
proc RichEdit_GetNamePath*(AObj: pointer): cstring {.importc: "RichEdit_GetNamePath", dynlib: dllname.}
proc RichEdit_Assign*(AObj: pointer, Source: pointer) {.importc: "RichEdit_Assign", dynlib: dllname.}
proc RichEdit_ClassType*(AObj: pointer): TClass {.importc: "RichEdit_ClassType", dynlib: dllname.}
proc RichEdit_ClassName*(AObj: pointer): cstring {.importc: "RichEdit_ClassName", dynlib: dllname.}
proc RichEdit_InstanceSize*(AObj: pointer): int32 {.importc: "RichEdit_InstanceSize", dynlib: dllname.}
proc RichEdit_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "RichEdit_InheritsFrom", dynlib: dllname.}
proc RichEdit_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "RichEdit_Equals", dynlib: dllname.}
proc RichEdit_GetHashCode*(AObj: pointer): int32 {.importc: "RichEdit_GetHashCode", dynlib: dllname.}
proc RichEdit_ToString*(AObj: pointer): cstring {.importc: "RichEdit_ToString", dynlib: dllname.}
proc RichEdit_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "RichEdit_AnchorToNeighbour", dynlib: dllname.}
proc RichEdit_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "RichEdit_AnchorParallel", dynlib: dllname.}
proc RichEdit_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "RichEdit_AnchorHorizontalCenterTo", dynlib: dllname.}
proc RichEdit_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "RichEdit_AnchorVerticalCenterTo", dynlib: dllname.}
proc RichEdit_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "RichEdit_AnchorSame", dynlib: dllname.}
proc RichEdit_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "RichEdit_AnchorAsAlign", dynlib: dllname.}
proc RichEdit_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "RichEdit_AnchorClient", dynlib: dllname.}
proc RichEdit_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_ScaleDesignToForm", dynlib: dllname.}
proc RichEdit_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_ScaleFormToDesign", dynlib: dllname.}
proc RichEdit_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_Scale96ToForm", dynlib: dllname.}
proc RichEdit_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_ScaleFormTo96", dynlib: dllname.}
proc RichEdit_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_Scale96ToFont", dynlib: dllname.}
proc RichEdit_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_ScaleFontTo96", dynlib: dllname.}
proc RichEdit_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_ScaleScreenToFont", dynlib: dllname.}
proc RichEdit_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_ScaleFontToScreen", dynlib: dllname.}
proc RichEdit_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_Scale96ToScreen", dynlib: dllname.}
proc RichEdit_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "RichEdit_ScaleScreenTo96", dynlib: dllname.}
proc RichEdit_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "RichEdit_AutoAdjustLayout", dynlib: dllname.}
proc RichEdit_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "RichEdit_FixDesignFontsPPI", dynlib: dllname.}
proc RichEdit_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "RichEdit_ScaleFontsPPI", dynlib: dllname.}
proc RichEdit_GetAlign*(AObj: pointer): TAlign {.importc: "RichEdit_GetAlign", dynlib: dllname.}
proc RichEdit_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "RichEdit_SetAlign", dynlib: dllname.}
proc RichEdit_GetAlignment*(AObj: pointer): TAlignment {.importc: "RichEdit_GetAlignment", dynlib: dllname.}
proc RichEdit_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "RichEdit_SetAlignment", dynlib: dllname.}
proc RichEdit_GetAnchors*(AObj: pointer): TAnchors {.importc: "RichEdit_GetAnchors", dynlib: dllname.}
proc RichEdit_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "RichEdit_SetAnchors", dynlib: dllname.}
proc RichEdit_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "RichEdit_GetBiDiMode", dynlib: dllname.}
proc RichEdit_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "RichEdit_SetBiDiMode", dynlib: dllname.}
proc RichEdit_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "RichEdit_GetBorderStyle", dynlib: dllname.}
proc RichEdit_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "RichEdit_SetBorderStyle", dynlib: dllname.}
proc RichEdit_GetBorderWidth*(AObj: pointer): int32 {.importc: "RichEdit_GetBorderWidth", dynlib: dllname.}
proc RichEdit_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetBorderWidth", dynlib: dllname.}
proc RichEdit_GetColor*(AObj: pointer): TColor {.importc: "RichEdit_GetColor", dynlib: dllname.}
proc RichEdit_SetColor*(AObj: pointer, AValue: TColor) {.importc: "RichEdit_SetColor", dynlib: dllname.}
proc RichEdit_GetDragCursor*(AObj: pointer): TCursor {.importc: "RichEdit_GetDragCursor", dynlib: dllname.}
proc RichEdit_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "RichEdit_SetDragCursor", dynlib: dllname.}
proc RichEdit_GetDragKind*(AObj: pointer): TDragKind {.importc: "RichEdit_GetDragKind", dynlib: dllname.}
proc RichEdit_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "RichEdit_SetDragKind", dynlib: dllname.}
proc RichEdit_GetDragMode*(AObj: pointer): TDragMode {.importc: "RichEdit_GetDragMode", dynlib: dllname.}
proc RichEdit_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "RichEdit_SetDragMode", dynlib: dllname.}
proc RichEdit_GetEnabled*(AObj: pointer): bool {.importc: "RichEdit_GetEnabled", dynlib: dllname.}
proc RichEdit_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetEnabled", dynlib: dllname.}
proc RichEdit_GetFont*(AObj: pointer): pointer {.importc: "RichEdit_GetFont", dynlib: dllname.}
proc RichEdit_SetFont*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetFont", dynlib: dllname.}
proc RichEdit_GetHideSelection*(AObj: pointer): bool {.importc: "RichEdit_GetHideSelection", dynlib: dllname.}
proc RichEdit_SetHideSelection*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetHideSelection", dynlib: dllname.}
proc RichEdit_GetConstraints*(AObj: pointer): pointer {.importc: "RichEdit_GetConstraints", dynlib: dllname.}
proc RichEdit_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetConstraints", dynlib: dllname.}
proc RichEdit_GetLines*(AObj: pointer): pointer {.importc: "RichEdit_GetLines", dynlib: dllname.}
proc RichEdit_SetLines*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetLines", dynlib: dllname.}
proc RichEdit_GetMaxLength*(AObj: pointer): int32 {.importc: "RichEdit_GetMaxLength", dynlib: dllname.}
proc RichEdit_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetMaxLength", dynlib: dllname.}
proc RichEdit_GetParentColor*(AObj: pointer): bool {.importc: "RichEdit_GetParentColor", dynlib: dllname.}
proc RichEdit_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetParentColor", dynlib: dllname.}
proc RichEdit_GetParentFont*(AObj: pointer): bool {.importc: "RichEdit_GetParentFont", dynlib: dllname.}
proc RichEdit_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetParentFont", dynlib: dllname.}
proc RichEdit_GetParentShowHint*(AObj: pointer): bool {.importc: "RichEdit_GetParentShowHint", dynlib: dllname.}
proc RichEdit_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetParentShowHint", dynlib: dllname.}
proc RichEdit_GetPopupMenu*(AObj: pointer): pointer {.importc: "RichEdit_GetPopupMenu", dynlib: dllname.}
proc RichEdit_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetPopupMenu", dynlib: dllname.}
proc RichEdit_GetReadOnly*(AObj: pointer): bool {.importc: "RichEdit_GetReadOnly", dynlib: dllname.}
proc RichEdit_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetReadOnly", dynlib: dllname.}
proc RichEdit_GetScrollBars*(AObj: pointer): TScrollStyle {.importc: "RichEdit_GetScrollBars", dynlib: dllname.}
proc RichEdit_SetScrollBars*(AObj: pointer, AValue: TScrollStyle) {.importc: "RichEdit_SetScrollBars", dynlib: dllname.}
proc RichEdit_GetShowHint*(AObj: pointer): bool {.importc: "RichEdit_GetShowHint", dynlib: dllname.}
proc RichEdit_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetShowHint", dynlib: dllname.}
proc RichEdit_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "RichEdit_GetTabOrder", dynlib: dllname.}
proc RichEdit_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "RichEdit_SetTabOrder", dynlib: dllname.}
proc RichEdit_GetTabStop*(AObj: pointer): bool {.importc: "RichEdit_GetTabStop", dynlib: dllname.}
proc RichEdit_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetTabStop", dynlib: dllname.}
proc RichEdit_GetVisible*(AObj: pointer): bool {.importc: "RichEdit_GetVisible", dynlib: dllname.}
proc RichEdit_SetVisible*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetVisible", dynlib: dllname.}
proc RichEdit_GetWantTabs*(AObj: pointer): bool {.importc: "RichEdit_GetWantTabs", dynlib: dllname.}
proc RichEdit_SetWantTabs*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetWantTabs", dynlib: dllname.}
proc RichEdit_GetWantReturns*(AObj: pointer): bool {.importc: "RichEdit_GetWantReturns", dynlib: dllname.}
proc RichEdit_SetWantReturns*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetWantReturns", dynlib: dllname.}
proc RichEdit_GetWordWrap*(AObj: pointer): bool {.importc: "RichEdit_GetWordWrap", dynlib: dllname.}
proc RichEdit_SetWordWrap*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetWordWrap", dynlib: dllname.}
proc RichEdit_GetZoom*(AObj: pointer): int32 {.importc: "RichEdit_GetZoom", dynlib: dllname.}
proc RichEdit_SetZoom*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetZoom", dynlib: dllname.}
proc RichEdit_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RichEdit_SetOnChange", dynlib: dllname.}
proc RichEdit_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RichEdit_SetOnClick", dynlib: dllname.}
proc RichEdit_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "RichEdit_SetOnContextPopup", dynlib: dllname.}
proc RichEdit_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RichEdit_SetOnDblClick", dynlib: dllname.}
proc RichEdit_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "RichEdit_SetOnDragDrop", dynlib: dllname.}
proc RichEdit_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "RichEdit_SetOnDragOver", dynlib: dllname.}
proc RichEdit_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "RichEdit_SetOnEndDrag", dynlib: dllname.}
proc RichEdit_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RichEdit_SetOnEnter", dynlib: dllname.}
proc RichEdit_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RichEdit_SetOnExit", dynlib: dllname.}
proc RichEdit_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "RichEdit_SetOnKeyDown", dynlib: dllname.}
proc RichEdit_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "RichEdit_SetOnKeyPress", dynlib: dllname.}
proc RichEdit_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "RichEdit_SetOnKeyUp", dynlib: dllname.}
proc RichEdit_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "RichEdit_SetOnMouseDown", dynlib: dllname.}
proc RichEdit_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RichEdit_SetOnMouseEnter", dynlib: dllname.}
proc RichEdit_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "RichEdit_SetOnMouseLeave", dynlib: dllname.}
proc RichEdit_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "RichEdit_SetOnMouseMove", dynlib: dllname.}
proc RichEdit_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "RichEdit_SetOnMouseUp", dynlib: dllname.}
proc RichEdit_SetOnMouseWheel*(AObj: pointer, AEventId: TMouseWheelEvent) {.importc: "RichEdit_SetOnMouseWheel", dynlib: dllname.}
proc RichEdit_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "RichEdit_SetOnMouseWheelDown", dynlib: dllname.}
proc RichEdit_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "RichEdit_SetOnMouseWheelUp", dynlib: dllname.}
proc RichEdit_GetDefAttributes*(AObj: pointer): pointer {.importc: "RichEdit_GetDefAttributes", dynlib: dllname.}
proc RichEdit_SetDefAttributes*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetDefAttributes", dynlib: dllname.}
proc RichEdit_GetSelAttributes*(AObj: pointer): pointer {.importc: "RichEdit_GetSelAttributes", dynlib: dllname.}
proc RichEdit_SetSelAttributes*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetSelAttributes", dynlib: dllname.}
proc RichEdit_GetParagraph*(AObj: pointer): pointer {.importc: "RichEdit_GetParagraph", dynlib: dllname.}
proc RichEdit_GetCaretPos*(AObj: pointer, Result: var TPoint) {.importc: "RichEdit_GetCaretPos", dynlib: dllname.}
proc RichEdit_SetCaretPos*(AObj: pointer, AValue: var TPoint) {.importc: "RichEdit_SetCaretPos", dynlib: dllname.}
proc RichEdit_GetCanUndo*(AObj: pointer): bool {.importc: "RichEdit_GetCanUndo", dynlib: dllname.}
proc RichEdit_GetModified*(AObj: pointer): bool {.importc: "RichEdit_GetModified", dynlib: dllname.}
proc RichEdit_SetModified*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetModified", dynlib: dllname.}
proc RichEdit_GetSelLength*(AObj: pointer): int32 {.importc: "RichEdit_GetSelLength", dynlib: dllname.}
proc RichEdit_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetSelLength", dynlib: dllname.}
proc RichEdit_GetSelStart*(AObj: pointer): int32 {.importc: "RichEdit_GetSelStart", dynlib: dllname.}
proc RichEdit_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetSelStart", dynlib: dllname.}
proc RichEdit_GetSelText*(AObj: pointer): cstring {.importc: "RichEdit_GetSelText", dynlib: dllname.}
proc RichEdit_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "RichEdit_SetSelText", dynlib: dllname.}
proc RichEdit_GetText*(AObj: pointer): cstring {.importc: "RichEdit_GetText", dynlib: dllname.}
proc RichEdit_SetText*(AObj: pointer, AValue: cstring) {.importc: "RichEdit_SetText", dynlib: dllname.}
proc RichEdit_GetTextHint*(AObj: pointer): cstring {.importc: "RichEdit_GetTextHint", dynlib: dllname.}
proc RichEdit_SetTextHint*(AObj: pointer, AValue: cstring) {.importc: "RichEdit_SetTextHint", dynlib: dllname.}
proc RichEdit_GetDockClientCount*(AObj: pointer): int32 {.importc: "RichEdit_GetDockClientCount", dynlib: dllname.}
proc RichEdit_GetDockSite*(AObj: pointer): bool {.importc: "RichEdit_GetDockSite", dynlib: dllname.}
proc RichEdit_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetDockSite", dynlib: dllname.}
proc RichEdit_GetDoubleBuffered*(AObj: pointer): bool {.importc: "RichEdit_GetDoubleBuffered", dynlib: dllname.}
proc RichEdit_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetDoubleBuffered", dynlib: dllname.}
proc RichEdit_GetMouseInClient*(AObj: pointer): bool {.importc: "RichEdit_GetMouseInClient", dynlib: dllname.}
proc RichEdit_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "RichEdit_GetVisibleDockClientCount", dynlib: dllname.}
proc RichEdit_GetBrush*(AObj: pointer): pointer {.importc: "RichEdit_GetBrush", dynlib: dllname.}
proc RichEdit_GetControlCount*(AObj: pointer): int32 {.importc: "RichEdit_GetControlCount", dynlib: dllname.}
proc RichEdit_GetHandle*(AObj: pointer): HWND {.importc: "RichEdit_GetHandle", dynlib: dllname.}
proc RichEdit_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "RichEdit_GetParentDoubleBuffered", dynlib: dllname.}
proc RichEdit_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetParentDoubleBuffered", dynlib: dllname.}
proc RichEdit_GetParentWindow*(AObj: pointer): HWND {.importc: "RichEdit_GetParentWindow", dynlib: dllname.}
proc RichEdit_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "RichEdit_SetParentWindow", dynlib: dllname.}
proc RichEdit_GetShowing*(AObj: pointer): bool {.importc: "RichEdit_GetShowing", dynlib: dllname.}
proc RichEdit_GetUseDockManager*(AObj: pointer): bool {.importc: "RichEdit_GetUseDockManager", dynlib: dllname.}
proc RichEdit_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "RichEdit_SetUseDockManager", dynlib: dllname.}
proc RichEdit_GetAction*(AObj: pointer): pointer {.importc: "RichEdit_GetAction", dynlib: dllname.}
proc RichEdit_SetAction*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetAction", dynlib: dllname.}
proc RichEdit_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "RichEdit_GetBoundsRect", dynlib: dllname.}
proc RichEdit_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "RichEdit_SetBoundsRect", dynlib: dllname.}
proc RichEdit_GetClientHeight*(AObj: pointer): int32 {.importc: "RichEdit_GetClientHeight", dynlib: dllname.}
proc RichEdit_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetClientHeight", dynlib: dllname.}
proc RichEdit_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "RichEdit_GetClientOrigin", dynlib: dllname.}
proc RichEdit_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "RichEdit_GetClientRect", dynlib: dllname.}
proc RichEdit_GetClientWidth*(AObj: pointer): int32 {.importc: "RichEdit_GetClientWidth", dynlib: dllname.}
proc RichEdit_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetClientWidth", dynlib: dllname.}
proc RichEdit_GetControlState*(AObj: pointer): TControlState {.importc: "RichEdit_GetControlState", dynlib: dllname.}
proc RichEdit_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "RichEdit_SetControlState", dynlib: dllname.}
proc RichEdit_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "RichEdit_GetControlStyle", dynlib: dllname.}
proc RichEdit_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "RichEdit_SetControlStyle", dynlib: dllname.}
proc RichEdit_GetFloating*(AObj: pointer): bool {.importc: "RichEdit_GetFloating", dynlib: dllname.}
proc RichEdit_GetParent*(AObj: pointer): pointer {.importc: "RichEdit_GetParent", dynlib: dllname.}
proc RichEdit_SetParent*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetParent", dynlib: dllname.}
proc RichEdit_GetLeft*(AObj: pointer): int32 {.importc: "RichEdit_GetLeft", dynlib: dllname.}
proc RichEdit_SetLeft*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetLeft", dynlib: dllname.}
proc RichEdit_GetTop*(AObj: pointer): int32 {.importc: "RichEdit_GetTop", dynlib: dllname.}
proc RichEdit_SetTop*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetTop", dynlib: dllname.}
proc RichEdit_GetWidth*(AObj: pointer): int32 {.importc: "RichEdit_GetWidth", dynlib: dllname.}
proc RichEdit_SetWidth*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetWidth", dynlib: dllname.}
proc RichEdit_GetHeight*(AObj: pointer): int32 {.importc: "RichEdit_GetHeight", dynlib: dllname.}
proc RichEdit_SetHeight*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetHeight", dynlib: dllname.}
proc RichEdit_GetCursor*(AObj: pointer): TCursor {.importc: "RichEdit_GetCursor", dynlib: dllname.}
proc RichEdit_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "RichEdit_SetCursor", dynlib: dllname.}
proc RichEdit_GetHint*(AObj: pointer): cstring {.importc: "RichEdit_GetHint", dynlib: dllname.}
proc RichEdit_SetHint*(AObj: pointer, AValue: cstring) {.importc: "RichEdit_SetHint", dynlib: dllname.}
proc RichEdit_GetComponentCount*(AObj: pointer): int32 {.importc: "RichEdit_GetComponentCount", dynlib: dllname.}
proc RichEdit_GetComponentIndex*(AObj: pointer): int32 {.importc: "RichEdit_GetComponentIndex", dynlib: dllname.}
proc RichEdit_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "RichEdit_SetComponentIndex", dynlib: dllname.}
proc RichEdit_GetOwner*(AObj: pointer): pointer {.importc: "RichEdit_GetOwner", dynlib: dllname.}
proc RichEdit_GetName*(AObj: pointer): cstring {.importc: "RichEdit_GetName", dynlib: dllname.}
proc RichEdit_SetName*(AObj: pointer, AValue: cstring) {.importc: "RichEdit_SetName", dynlib: dllname.}
proc RichEdit_GetTag*(AObj: pointer): int {.importc: "RichEdit_GetTag", dynlib: dllname.}
proc RichEdit_SetTag*(AObj: pointer, AValue: int) {.importc: "RichEdit_SetTag", dynlib: dllname.}
proc RichEdit_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "RichEdit_GetAnchorSideLeft", dynlib: dllname.}
proc RichEdit_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetAnchorSideLeft", dynlib: dllname.}
proc RichEdit_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "RichEdit_GetAnchorSideTop", dynlib: dllname.}
proc RichEdit_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetAnchorSideTop", dynlib: dllname.}
proc RichEdit_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "RichEdit_GetAnchorSideRight", dynlib: dllname.}
proc RichEdit_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetAnchorSideRight", dynlib: dllname.}
proc RichEdit_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "RichEdit_GetAnchorSideBottom", dynlib: dllname.}
proc RichEdit_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetAnchorSideBottom", dynlib: dllname.}
proc RichEdit_GetChildSizing*(AObj: pointer): pointer {.importc: "RichEdit_GetChildSizing", dynlib: dllname.}
proc RichEdit_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetChildSizing", dynlib: dllname.}
proc RichEdit_GetBorderSpacing*(AObj: pointer): pointer {.importc: "RichEdit_GetBorderSpacing", dynlib: dllname.}
proc RichEdit_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "RichEdit_SetBorderSpacing", dynlib: dllname.}
proc RichEdit_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "RichEdit_GetDockClients", dynlib: dllname.}
proc RichEdit_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "RichEdit_GetControls", dynlib: dllname.}
proc RichEdit_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "RichEdit_GetComponents", dynlib: dllname.}
proc RichEdit_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "RichEdit_GetAnchorSide", dynlib: dllname.}
proc RichEdit_StaticClassType*(): TClass {.importc: "RichEdit_StaticClassType", dynlib: dllname.}
# ----------------- TTrackBar ----------------------
proc TrackBar_Create*(AOwner: pointer): pointer {.importc: "TrackBar_Create", dynlib: dllname.}
proc TrackBar_Free*(AObj: pointer) {.importc: "TrackBar_Free", dynlib: dllname.}
proc TrackBar_SetTick*(AObj: pointer, Value: int32) {.importc: "TrackBar_SetTick", dynlib: dllname.}
proc TrackBar_CanFocus*(AObj: pointer): bool {.importc: "TrackBar_CanFocus", dynlib: dllname.}
proc TrackBar_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "TrackBar_ContainsControl", dynlib: dllname.}
proc TrackBar_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "TrackBar_ControlAtPos", dynlib: dllname.}
proc TrackBar_DisableAlign*(AObj: pointer) {.importc: "TrackBar_DisableAlign", dynlib: dllname.}
proc TrackBar_EnableAlign*(AObj: pointer) {.importc: "TrackBar_EnableAlign", dynlib: dllname.}
proc TrackBar_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "TrackBar_FindChildControl", dynlib: dllname.}
proc TrackBar_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "TrackBar_FlipChildren", dynlib: dllname.}
proc TrackBar_Focused*(AObj: pointer): bool {.importc: "TrackBar_Focused", dynlib: dllname.}
proc TrackBar_HandleAllocated*(AObj: pointer): bool {.importc: "TrackBar_HandleAllocated", dynlib: dllname.}
proc TrackBar_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "TrackBar_InsertControl", dynlib: dllname.}
proc TrackBar_Invalidate*(AObj: pointer) {.importc: "TrackBar_Invalidate", dynlib: dllname.}
proc TrackBar_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "TrackBar_PaintTo", dynlib: dllname.}
proc TrackBar_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "TrackBar_RemoveControl", dynlib: dllname.}
proc TrackBar_Realign*(AObj: pointer) {.importc: "TrackBar_Realign", dynlib: dllname.}
proc TrackBar_Repaint*(AObj: pointer) {.importc: "TrackBar_Repaint", dynlib: dllname.}
proc TrackBar_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "TrackBar_ScaleBy", dynlib: dllname.}
proc TrackBar_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "TrackBar_ScrollBy", dynlib: dllname.}
proc TrackBar_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "TrackBar_SetBounds", dynlib: dllname.}
proc TrackBar_SetFocus*(AObj: pointer) {.importc: "TrackBar_SetFocus", dynlib: dllname.}
proc TrackBar_Update*(AObj: pointer) {.importc: "TrackBar_Update", dynlib: dllname.}
proc TrackBar_BringToFront*(AObj: pointer) {.importc: "TrackBar_BringToFront", dynlib: dllname.}
proc TrackBar_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "TrackBar_ClientToScreen", dynlib: dllname.}
proc TrackBar_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "TrackBar_ClientToParent", dynlib: dllname.}
proc TrackBar_Dragging*(AObj: pointer): bool {.importc: "TrackBar_Dragging", dynlib: dllname.}
proc TrackBar_HasParent*(AObj: pointer): bool {.importc: "TrackBar_HasParent", dynlib: dllname.}
proc TrackBar_Hide*(AObj: pointer) {.importc: "TrackBar_Hide", dynlib: dllname.}
proc TrackBar_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "TrackBar_Perform", dynlib: dllname.}
proc TrackBar_Refresh*(AObj: pointer) {.importc: "TrackBar_Refresh", dynlib: dllname.}
proc TrackBar_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "TrackBar_ScreenToClient", dynlib: dllname.}
proc TrackBar_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "TrackBar_ParentToClient", dynlib: dllname.}
proc TrackBar_SendToBack*(AObj: pointer) {.importc: "TrackBar_SendToBack", dynlib: dllname.}
proc TrackBar_Show*(AObj: pointer) {.importc: "TrackBar_Show", dynlib: dllname.}
proc TrackBar_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "TrackBar_GetTextBuf", dynlib: dllname.}
proc TrackBar_GetTextLen*(AObj: pointer): int32 {.importc: "TrackBar_GetTextLen", dynlib: dllname.}
proc TrackBar_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "TrackBar_SetTextBuf", dynlib: dllname.}
proc TrackBar_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "TrackBar_FindComponent", dynlib: dllname.}
proc TrackBar_GetNamePath*(AObj: pointer): cstring {.importc: "TrackBar_GetNamePath", dynlib: dllname.}
proc TrackBar_Assign*(AObj: pointer, Source: pointer) {.importc: "TrackBar_Assign", dynlib: dllname.}
proc TrackBar_ClassType*(AObj: pointer): TClass {.importc: "TrackBar_ClassType", dynlib: dllname.}
proc TrackBar_ClassName*(AObj: pointer): cstring {.importc: "TrackBar_ClassName", dynlib: dllname.}
proc TrackBar_InstanceSize*(AObj: pointer): int32 {.importc: "TrackBar_InstanceSize", dynlib: dllname.}
proc TrackBar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TrackBar_InheritsFrom", dynlib: dllname.}
proc TrackBar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TrackBar_Equals", dynlib: dllname.}
proc TrackBar_GetHashCode*(AObj: pointer): int32 {.importc: "TrackBar_GetHashCode", dynlib: dllname.}
proc TrackBar_ToString*(AObj: pointer): cstring {.importc: "TrackBar_ToString", dynlib: dllname.}
proc TrackBar_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "TrackBar_AnchorToNeighbour", dynlib: dllname.}
proc TrackBar_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "TrackBar_AnchorParallel", dynlib: dllname.}
proc TrackBar_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "TrackBar_AnchorHorizontalCenterTo", dynlib: dllname.}
proc TrackBar_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "TrackBar_AnchorVerticalCenterTo", dynlib: dllname.}
proc TrackBar_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "TrackBar_AnchorSame", dynlib: dllname.}
proc TrackBar_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "TrackBar_AnchorAsAlign", dynlib: dllname.}
proc TrackBar_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "TrackBar_AnchorClient", dynlib: dllname.}
proc TrackBar_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_ScaleDesignToForm", dynlib: dllname.}
proc TrackBar_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_ScaleFormToDesign", dynlib: dllname.}
proc TrackBar_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_Scale96ToForm", dynlib: dllname.}
proc TrackBar_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_ScaleFormTo96", dynlib: dllname.}
proc TrackBar_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_Scale96ToFont", dynlib: dllname.}
proc TrackBar_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_ScaleFontTo96", dynlib: dllname.}
proc TrackBar_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_ScaleScreenToFont", dynlib: dllname.}
proc TrackBar_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_ScaleFontToScreen", dynlib: dllname.}
proc TrackBar_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_Scale96ToScreen", dynlib: dllname.}
proc TrackBar_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TrackBar_ScaleScreenTo96", dynlib: dllname.}
proc TrackBar_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "TrackBar_AutoAdjustLayout", dynlib: dllname.}
proc TrackBar_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "TrackBar_FixDesignFontsPPI", dynlib: dllname.}
proc TrackBar_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "TrackBar_ScaleFontsPPI", dynlib: dllname.}
proc TrackBar_GetAlign*(AObj: pointer): TAlign {.importc: "TrackBar_GetAlign", dynlib: dllname.}
proc TrackBar_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "TrackBar_SetAlign", dynlib: dllname.}
proc TrackBar_GetAnchors*(AObj: pointer): TAnchors {.importc: "TrackBar_GetAnchors", dynlib: dllname.}
proc TrackBar_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "TrackBar_SetAnchors", dynlib: dllname.}
proc TrackBar_GetBorderWidth*(AObj: pointer): int32 {.importc: "TrackBar_GetBorderWidth", dynlib: dllname.}
proc TrackBar_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetBorderWidth", dynlib: dllname.}
proc TrackBar_GetDoubleBuffered*(AObj: pointer): bool {.importc: "TrackBar_GetDoubleBuffered", dynlib: dllname.}
proc TrackBar_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetDoubleBuffered", dynlib: dllname.}
proc TrackBar_GetDragCursor*(AObj: pointer): TCursor {.importc: "TrackBar_GetDragCursor", dynlib: dllname.}
proc TrackBar_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "TrackBar_SetDragCursor", dynlib: dllname.}
proc TrackBar_GetDragMode*(AObj: pointer): TDragMode {.importc: "TrackBar_GetDragMode", dynlib: dllname.}
proc TrackBar_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "TrackBar_SetDragMode", dynlib: dllname.}
proc TrackBar_GetEnabled*(AObj: pointer): bool {.importc: "TrackBar_GetEnabled", dynlib: dllname.}
proc TrackBar_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetEnabled", dynlib: dllname.}
proc TrackBar_GetConstraints*(AObj: pointer): pointer {.importc: "TrackBar_GetConstraints", dynlib: dllname.}
proc TrackBar_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetConstraints", dynlib: dllname.}
proc TrackBar_GetLineSize*(AObj: pointer): int32 {.importc: "TrackBar_GetLineSize", dynlib: dllname.}
proc TrackBar_SetLineSize*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetLineSize", dynlib: dllname.}
proc TrackBar_GetMax*(AObj: pointer): int32 {.importc: "TrackBar_GetMax", dynlib: dllname.}
proc TrackBar_SetMax*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetMax", dynlib: dllname.}
proc TrackBar_GetMin*(AObj: pointer): int32 {.importc: "TrackBar_GetMin", dynlib: dllname.}
proc TrackBar_SetMin*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetMin", dynlib: dllname.}
proc TrackBar_GetOrientation*(AObj: pointer): TTrackBarOrientation {.importc: "TrackBar_GetOrientation", dynlib: dllname.}
proc TrackBar_SetOrientation*(AObj: pointer, AValue: TTrackBarOrientation) {.importc: "TrackBar_SetOrientation", dynlib: dllname.}
proc TrackBar_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "TrackBar_GetParentDoubleBuffered", dynlib: dllname.}
proc TrackBar_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetParentDoubleBuffered", dynlib: dllname.}
proc TrackBar_GetParentShowHint*(AObj: pointer): bool {.importc: "TrackBar_GetParentShowHint", dynlib: dllname.}
proc TrackBar_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetParentShowHint", dynlib: dllname.}
proc TrackBar_GetPageSize*(AObj: pointer): int32 {.importc: "TrackBar_GetPageSize", dynlib: dllname.}
proc TrackBar_SetPageSize*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetPageSize", dynlib: dllname.}
proc TrackBar_GetPopupMenu*(AObj: pointer): pointer {.importc: "TrackBar_GetPopupMenu", dynlib: dllname.}
proc TrackBar_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetPopupMenu", dynlib: dllname.}
proc TrackBar_GetFrequency*(AObj: pointer): int32 {.importc: "TrackBar_GetFrequency", dynlib: dllname.}
proc TrackBar_SetFrequency*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetFrequency", dynlib: dllname.}
proc TrackBar_GetPosition*(AObj: pointer): int32 {.importc: "TrackBar_GetPosition", dynlib: dllname.}
proc TrackBar_SetPosition*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetPosition", dynlib: dllname.}
proc TrackBar_GetSelEnd*(AObj: pointer): int32 {.importc: "TrackBar_GetSelEnd", dynlib: dllname.}
proc TrackBar_SetSelEnd*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetSelEnd", dynlib: dllname.}
proc TrackBar_GetSelStart*(AObj: pointer): int32 {.importc: "TrackBar_GetSelStart", dynlib: dllname.}
proc TrackBar_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetSelStart", dynlib: dllname.}
proc TrackBar_GetShowHint*(AObj: pointer): bool {.importc: "TrackBar_GetShowHint", dynlib: dllname.}
proc TrackBar_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetShowHint", dynlib: dllname.}
proc TrackBar_GetShowSelRange*(AObj: pointer): bool {.importc: "TrackBar_GetShowSelRange", dynlib: dllname.}
proc TrackBar_SetShowSelRange*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetShowSelRange", dynlib: dllname.}
proc TrackBar_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "TrackBar_GetTabOrder", dynlib: dllname.}
proc TrackBar_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "TrackBar_SetTabOrder", dynlib: dllname.}
proc TrackBar_GetTabStop*(AObj: pointer): bool {.importc: "TrackBar_GetTabStop", dynlib: dllname.}
proc TrackBar_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetTabStop", dynlib: dllname.}
proc TrackBar_GetTickMarks*(AObj: pointer): TTickMark {.importc: "TrackBar_GetTickMarks", dynlib: dllname.}
proc TrackBar_SetTickMarks*(AObj: pointer, AValue: TTickMark) {.importc: "TrackBar_SetTickMarks", dynlib: dllname.}
proc TrackBar_GetTickStyle*(AObj: pointer): TTickStyle {.importc: "TrackBar_GetTickStyle", dynlib: dllname.}
proc TrackBar_SetTickStyle*(AObj: pointer, AValue: TTickStyle) {.importc: "TrackBar_SetTickStyle", dynlib: dllname.}
proc TrackBar_GetVisible*(AObj: pointer): bool {.importc: "TrackBar_GetVisible", dynlib: dllname.}
proc TrackBar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetVisible", dynlib: dllname.}
proc TrackBar_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "TrackBar_SetOnContextPopup", dynlib: dllname.}
proc TrackBar_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TrackBar_SetOnChange", dynlib: dllname.}
proc TrackBar_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "TrackBar_SetOnDragDrop", dynlib: dllname.}
proc TrackBar_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "TrackBar_SetOnDragOver", dynlib: dllname.}
proc TrackBar_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "TrackBar_SetOnEndDrag", dynlib: dllname.}
proc TrackBar_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TrackBar_SetOnEnter", dynlib: dllname.}
proc TrackBar_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TrackBar_SetOnExit", dynlib: dllname.}
proc TrackBar_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "TrackBar_SetOnKeyDown", dynlib: dllname.}
proc TrackBar_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "TrackBar_SetOnKeyPress", dynlib: dllname.}
proc TrackBar_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "TrackBar_SetOnKeyUp", dynlib: dllname.}
proc TrackBar_GetDockClientCount*(AObj: pointer): int32 {.importc: "TrackBar_GetDockClientCount", dynlib: dllname.}
proc TrackBar_GetDockSite*(AObj: pointer): bool {.importc: "TrackBar_GetDockSite", dynlib: dllname.}
proc TrackBar_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetDockSite", dynlib: dllname.}
proc TrackBar_GetMouseInClient*(AObj: pointer): bool {.importc: "TrackBar_GetMouseInClient", dynlib: dllname.}
proc TrackBar_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "TrackBar_GetVisibleDockClientCount", dynlib: dllname.}
proc TrackBar_GetBrush*(AObj: pointer): pointer {.importc: "TrackBar_GetBrush", dynlib: dllname.}
proc TrackBar_GetControlCount*(AObj: pointer): int32 {.importc: "TrackBar_GetControlCount", dynlib: dllname.}
proc TrackBar_GetHandle*(AObj: pointer): HWND {.importc: "TrackBar_GetHandle", dynlib: dllname.}
proc TrackBar_GetParentWindow*(AObj: pointer): HWND {.importc: "TrackBar_GetParentWindow", dynlib: dllname.}
proc TrackBar_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "TrackBar_SetParentWindow", dynlib: dllname.}
proc TrackBar_GetShowing*(AObj: pointer): bool {.importc: "TrackBar_GetShowing", dynlib: dllname.}
proc TrackBar_GetUseDockManager*(AObj: pointer): bool {.importc: "TrackBar_GetUseDockManager", dynlib: dllname.}
proc TrackBar_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "TrackBar_SetUseDockManager", dynlib: dllname.}
proc TrackBar_GetAction*(AObj: pointer): pointer {.importc: "TrackBar_GetAction", dynlib: dllname.}
proc TrackBar_SetAction*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetAction", dynlib: dllname.}
proc TrackBar_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "TrackBar_GetBiDiMode", dynlib: dllname.}
proc TrackBar_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "TrackBar_SetBiDiMode", dynlib: dllname.}
proc TrackBar_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "TrackBar_GetBoundsRect", dynlib: dllname.}
proc TrackBar_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "TrackBar_SetBoundsRect", dynlib: dllname.}
proc TrackBar_GetClientHeight*(AObj: pointer): int32 {.importc: "TrackBar_GetClientHeight", dynlib: dllname.}
proc TrackBar_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetClientHeight", dynlib: dllname.}
proc TrackBar_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "TrackBar_GetClientOrigin", dynlib: dllname.}
proc TrackBar_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "TrackBar_GetClientRect", dynlib: dllname.}
proc TrackBar_GetClientWidth*(AObj: pointer): int32 {.importc: "TrackBar_GetClientWidth", dynlib: dllname.}
proc TrackBar_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetClientWidth", dynlib: dllname.}
proc TrackBar_GetControlState*(AObj: pointer): TControlState {.importc: "TrackBar_GetControlState", dynlib: dllname.}
proc TrackBar_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "TrackBar_SetControlState", dynlib: dllname.}
proc TrackBar_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "TrackBar_GetControlStyle", dynlib: dllname.}
proc TrackBar_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "TrackBar_SetControlStyle", dynlib: dllname.}
proc TrackBar_GetFloating*(AObj: pointer): bool {.importc: "TrackBar_GetFloating", dynlib: dllname.}
proc TrackBar_GetParent*(AObj: pointer): pointer {.importc: "TrackBar_GetParent", dynlib: dllname.}
proc TrackBar_SetParent*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetParent", dynlib: dllname.}
proc TrackBar_GetLeft*(AObj: pointer): int32 {.importc: "TrackBar_GetLeft", dynlib: dllname.}
proc TrackBar_SetLeft*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetLeft", dynlib: dllname.}
proc TrackBar_GetTop*(AObj: pointer): int32 {.importc: "TrackBar_GetTop", dynlib: dllname.}
proc TrackBar_SetTop*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetTop", dynlib: dllname.}
proc TrackBar_GetWidth*(AObj: pointer): int32 {.importc: "TrackBar_GetWidth", dynlib: dllname.}
proc TrackBar_SetWidth*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetWidth", dynlib: dllname.}
proc TrackBar_GetHeight*(AObj: pointer): int32 {.importc: "TrackBar_GetHeight", dynlib: dllname.}
proc TrackBar_SetHeight*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetHeight", dynlib: dllname.}
proc TrackBar_GetCursor*(AObj: pointer): TCursor {.importc: "TrackBar_GetCursor", dynlib: dllname.}
proc TrackBar_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "TrackBar_SetCursor", dynlib: dllname.}
proc TrackBar_GetHint*(AObj: pointer): cstring {.importc: "TrackBar_GetHint", dynlib: dllname.}
proc TrackBar_SetHint*(AObj: pointer, AValue: cstring) {.importc: "TrackBar_SetHint", dynlib: dllname.}
proc TrackBar_GetComponentCount*(AObj: pointer): int32 {.importc: "TrackBar_GetComponentCount", dynlib: dllname.}
proc TrackBar_GetComponentIndex*(AObj: pointer): int32 {.importc: "TrackBar_GetComponentIndex", dynlib: dllname.}
proc TrackBar_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "TrackBar_SetComponentIndex", dynlib: dllname.}
proc TrackBar_GetOwner*(AObj: pointer): pointer {.importc: "TrackBar_GetOwner", dynlib: dllname.}
proc TrackBar_GetName*(AObj: pointer): cstring {.importc: "TrackBar_GetName", dynlib: dllname.}
proc TrackBar_SetName*(AObj: pointer, AValue: cstring) {.importc: "TrackBar_SetName", dynlib: dllname.}
proc TrackBar_GetTag*(AObj: pointer): int {.importc: "TrackBar_GetTag", dynlib: dllname.}
proc TrackBar_SetTag*(AObj: pointer, AValue: int) {.importc: "TrackBar_SetTag", dynlib: dllname.}
proc TrackBar_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "TrackBar_GetAnchorSideLeft", dynlib: dllname.}
proc TrackBar_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetAnchorSideLeft", dynlib: dllname.}
proc TrackBar_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "TrackBar_GetAnchorSideTop", dynlib: dllname.}
proc TrackBar_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetAnchorSideTop", dynlib: dllname.}
proc TrackBar_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "TrackBar_GetAnchorSideRight", dynlib: dllname.}
proc TrackBar_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetAnchorSideRight", dynlib: dllname.}
proc TrackBar_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "TrackBar_GetAnchorSideBottom", dynlib: dllname.}
proc TrackBar_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetAnchorSideBottom", dynlib: dllname.}
proc TrackBar_GetChildSizing*(AObj: pointer): pointer {.importc: "TrackBar_GetChildSizing", dynlib: dllname.}
proc TrackBar_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetChildSizing", dynlib: dllname.}
proc TrackBar_GetBorderSpacing*(AObj: pointer): pointer {.importc: "TrackBar_GetBorderSpacing", dynlib: dllname.}
proc TrackBar_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "TrackBar_SetBorderSpacing", dynlib: dllname.}
proc TrackBar_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "TrackBar_GetDockClients", dynlib: dllname.}
proc TrackBar_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "TrackBar_GetControls", dynlib: dllname.}
proc TrackBar_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "TrackBar_GetComponents", dynlib: dllname.}
proc TrackBar_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "TrackBar_GetAnchorSide", dynlib: dllname.}
proc TrackBar_StaticClassType*(): TClass {.importc: "TrackBar_StaticClassType", dynlib: dllname.}
# ----------------- TImageList ----------------------
proc ImageList_Create*(AOwner: pointer): pointer {.importc: "ImageList_Create", dynlib: dllname.}
proc ImageList_Free*(AObj: pointer) {.importc: "ImageList_Free", dynlib: dllname.}
proc ImageList_StretchDraw*(AObj: pointer, ACanvas: pointer, AIndex: int32, ARect: var TRect, AEnabled: bool) {.importc: "ImageList_StretchDraw", dynlib: dllname.}
proc ImageList_AddSliced*(AObj: pointer, Image: pointer, AHorizontalCount: int32, AVerticalCount: int32): int32 {.importc: "ImageList_AddSliced", dynlib: dllname.}
proc ImageList_GetHotSpot*(AObj: pointer, Result: var TPoint) {.importc: "ImageList_GetHotSpot", dynlib: dllname.}
proc ImageList_HideDragImage*(AObj: pointer) {.importc: "ImageList_HideDragImage", dynlib: dllname.}
proc ImageList_ShowDragImage*(AObj: pointer) {.importc: "ImageList_ShowDragImage", dynlib: dllname.}
proc ImageList_Assign*(AObj: pointer, Source: pointer) {.importc: "ImageList_Assign", dynlib: dllname.}
proc ImageList_Add*(AObj: pointer, Image: pointer, Mask: pointer): int32 {.importc: "ImageList_Add", dynlib: dllname.}
proc ImageList_AddIcon*(AObj: pointer, Image: pointer): int32 {.importc: "ImageList_AddIcon", dynlib: dllname.}
proc ImageList_AddImages*(AObj: pointer, Value: pointer) {.importc: "ImageList_AddImages", dynlib: dllname.}
proc ImageList_AddMasked*(AObj: pointer, Image: pointer, MaskColor: TColor): int32 {.importc: "ImageList_AddMasked", dynlib: dllname.}
proc ImageList_Clear*(AObj: pointer) {.importc: "ImageList_Clear", dynlib: dllname.}
proc ImageList_Delete*(AObj: pointer, Index: int32) {.importc: "ImageList_Delete", dynlib: dllname.}
proc ImageList_Insert*(AObj: pointer, Index: int32, Image: pointer, Mask: pointer) {.importc: "ImageList_Insert", dynlib: dllname.}
proc ImageList_InsertIcon*(AObj: pointer, Index: int32, Image: pointer) {.importc: "ImageList_InsertIcon", dynlib: dllname.}
proc ImageList_InsertMasked*(AObj: pointer, Index: int32, Image: pointer, MaskColor: TColor) {.importc: "ImageList_InsertMasked", dynlib: dllname.}
proc ImageList_Move*(AObj: pointer, CurIndex: int32, NewIndex: int32) {.importc: "ImageList_Move", dynlib: dllname.}
proc ImageList_Replace*(AObj: pointer, Index: int32, Image: pointer, Mask: pointer) {.importc: "ImageList_Replace", dynlib: dllname.}
proc ImageList_ReplaceMasked*(AObj: pointer, Index: int32, NewImage: pointer, MaskColor: TColor) {.importc: "ImageList_ReplaceMasked", dynlib: dllname.}
proc ImageList_BeginUpdate*(AObj: pointer) {.importc: "ImageList_BeginUpdate", dynlib: dllname.}
proc ImageList_EndUpdate*(AObj: pointer) {.importc: "ImageList_EndUpdate", dynlib: dllname.}
proc ImageList_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ImageList_FindComponent", dynlib: dllname.}
proc ImageList_GetNamePath*(AObj: pointer): cstring {.importc: "ImageList_GetNamePath", dynlib: dllname.}
proc ImageList_HasParent*(AObj: pointer): bool {.importc: "ImageList_HasParent", dynlib: dllname.}
proc ImageList_ClassType*(AObj: pointer): TClass {.importc: "ImageList_ClassType", dynlib: dllname.}
proc ImageList_ClassName*(AObj: pointer): cstring {.importc: "ImageList_ClassName", dynlib: dllname.}
proc ImageList_InstanceSize*(AObj: pointer): int32 {.importc: "ImageList_InstanceSize", dynlib: dllname.}
proc ImageList_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ImageList_InheritsFrom", dynlib: dllname.}
proc ImageList_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ImageList_Equals", dynlib: dllname.}
proc ImageList_GetHashCode*(AObj: pointer): int32 {.importc: "ImageList_GetHashCode", dynlib: dllname.}
proc ImageList_ToString*(AObj: pointer): cstring {.importc: "ImageList_ToString", dynlib: dllname.}
proc ImageList_GetBlendColor*(AObj: pointer): TColor {.importc: "ImageList_GetBlendColor", dynlib: dllname.}
proc ImageList_SetBlendColor*(AObj: pointer, AValue: TColor) {.importc: "ImageList_SetBlendColor", dynlib: dllname.}
proc ImageList_GetBkColor*(AObj: pointer): TColor {.importc: "ImageList_GetBkColor", dynlib: dllname.}
proc ImageList_SetBkColor*(AObj: pointer, AValue: TColor) {.importc: "ImageList_SetBkColor", dynlib: dllname.}
proc ImageList_GetAllocBy*(AObj: pointer): int32 {.importc: "ImageList_GetAllocBy", dynlib: dllname.}
proc ImageList_SetAllocBy*(AObj: pointer, AValue: int32) {.importc: "ImageList_SetAllocBy", dynlib: dllname.}
proc ImageList_GetDrawingStyle*(AObj: pointer): TDrawingStyle {.importc: "ImageList_GetDrawingStyle", dynlib: dllname.}
proc ImageList_SetDrawingStyle*(AObj: pointer, AValue: TDrawingStyle) {.importc: "ImageList_SetDrawingStyle", dynlib: dllname.}
proc ImageList_GetHeight*(AObj: pointer): int32 {.importc: "ImageList_GetHeight", dynlib: dllname.}
proc ImageList_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ImageList_SetHeight", dynlib: dllname.}
proc ImageList_GetImageType*(AObj: pointer): TImageType {.importc: "ImageList_GetImageType", dynlib: dllname.}
proc ImageList_SetImageType*(AObj: pointer, AValue: TImageType) {.importc: "ImageList_SetImageType", dynlib: dllname.}
proc ImageList_GetMasked*(AObj: pointer): bool {.importc: "ImageList_GetMasked", dynlib: dllname.}
proc ImageList_SetMasked*(AObj: pointer, AValue: bool) {.importc: "ImageList_SetMasked", dynlib: dllname.}
proc ImageList_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ImageList_SetOnChange", dynlib: dllname.}
proc ImageList_GetShareImages*(AObj: pointer): bool {.importc: "ImageList_GetShareImages", dynlib: dllname.}
proc ImageList_SetShareImages*(AObj: pointer, AValue: bool) {.importc: "ImageList_SetShareImages", dynlib: dllname.}
proc ImageList_GetWidth*(AObj: pointer): int32 {.importc: "ImageList_GetWidth", dynlib: dllname.}
proc ImageList_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ImageList_SetWidth", dynlib: dllname.}
proc ImageList_GetDragCursor*(AObj: pointer): TCursor {.importc: "ImageList_GetDragCursor", dynlib: dllname.}
proc ImageList_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ImageList_SetDragCursor", dynlib: dllname.}
proc ImageList_GetDragging*(AObj: pointer): bool {.importc: "ImageList_GetDragging", dynlib: dllname.}
proc ImageList_GetCount*(AObj: pointer): int32 {.importc: "ImageList_GetCount", dynlib: dllname.}
proc ImageList_GetComponentCount*(AObj: pointer): int32 {.importc: "ImageList_GetComponentCount", dynlib: dllname.}
proc ImageList_GetComponentIndex*(AObj: pointer): int32 {.importc: "ImageList_GetComponentIndex", dynlib: dllname.}
proc ImageList_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ImageList_SetComponentIndex", dynlib: dllname.}
proc ImageList_GetOwner*(AObj: pointer): pointer {.importc: "ImageList_GetOwner", dynlib: dllname.}
proc ImageList_GetName*(AObj: pointer): cstring {.importc: "ImageList_GetName", dynlib: dllname.}
proc ImageList_SetName*(AObj: pointer, AValue: cstring) {.importc: "ImageList_SetName", dynlib: dllname.}
proc ImageList_GetTag*(AObj: pointer): int {.importc: "ImageList_GetTag", dynlib: dllname.}
proc ImageList_SetTag*(AObj: pointer, AValue: int) {.importc: "ImageList_SetTag", dynlib: dllname.}
proc ImageList_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ImageList_GetComponents", dynlib: dllname.}
proc ImageList_StaticClassType*(): TClass {.importc: "ImageList_StaticClassType", dynlib: dllname.}
proc ImageList_Draw1*(AObj: pointer, Canvas: pointer, X: int32, Y: int32, Index: int32, Enabled: bool) {.importc: "ImageList_Draw1", dynlib: dllname.}
proc ImageList_DrawOverlay1*(AObj: pointer, Canvas: pointer, X: int32, Y: int32, ImageIndex: int32, Overlay: uint8, Enabled: bool) {.importc: "ImageList_DrawOverlay1", dynlib: dllname.}
proc ImageList_GetIcon1*(AObj: pointer, Index: int32, Image: pointer) {.importc: "ImageList_GetIcon1", dynlib: dllname.}
# ----------------- TUpDown ----------------------
proc UpDown_Create*(AOwner: pointer): pointer {.importc: "UpDown_Create", dynlib: dllname.}
proc UpDown_Free*(AObj: pointer) {.importc: "UpDown_Free", dynlib: dllname.}
proc UpDown_CanFocus*(AObj: pointer): bool {.importc: "UpDown_CanFocus", dynlib: dllname.}
proc UpDown_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "UpDown_ContainsControl", dynlib: dllname.}
proc UpDown_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "UpDown_ControlAtPos", dynlib: dllname.}
proc UpDown_DisableAlign*(AObj: pointer) {.importc: "UpDown_DisableAlign", dynlib: dllname.}
proc UpDown_EnableAlign*(AObj: pointer) {.importc: "UpDown_EnableAlign", dynlib: dllname.}
proc UpDown_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "UpDown_FindChildControl", dynlib: dllname.}
proc UpDown_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "UpDown_FlipChildren", dynlib: dllname.}
proc UpDown_Focused*(AObj: pointer): bool {.importc: "UpDown_Focused", dynlib: dllname.}
proc UpDown_HandleAllocated*(AObj: pointer): bool {.importc: "UpDown_HandleAllocated", dynlib: dllname.}
proc UpDown_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "UpDown_InsertControl", dynlib: dllname.}
proc UpDown_Invalidate*(AObj: pointer) {.importc: "UpDown_Invalidate", dynlib: dllname.}
proc UpDown_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "UpDown_PaintTo", dynlib: dllname.}
proc UpDown_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "UpDown_RemoveControl", dynlib: dllname.}
proc UpDown_Realign*(AObj: pointer) {.importc: "UpDown_Realign", dynlib: dllname.}
proc UpDown_Repaint*(AObj: pointer) {.importc: "UpDown_Repaint", dynlib: dllname.}
proc UpDown_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "UpDown_ScaleBy", dynlib: dllname.}
proc UpDown_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "UpDown_ScrollBy", dynlib: dllname.}
proc UpDown_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "UpDown_SetBounds", dynlib: dllname.}
proc UpDown_SetFocus*(AObj: pointer) {.importc: "UpDown_SetFocus", dynlib: dllname.}
proc UpDown_Update*(AObj: pointer) {.importc: "UpDown_Update", dynlib: dllname.}
proc UpDown_BringToFront*(AObj: pointer) {.importc: "UpDown_BringToFront", dynlib: dllname.}
proc UpDown_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "UpDown_ClientToScreen", dynlib: dllname.}
proc UpDown_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "UpDown_ClientToParent", dynlib: dllname.}
proc UpDown_Dragging*(AObj: pointer): bool {.importc: "UpDown_Dragging", dynlib: dllname.}
proc UpDown_HasParent*(AObj: pointer): bool {.importc: "UpDown_HasParent", dynlib: dllname.}
proc UpDown_Hide*(AObj: pointer) {.importc: "UpDown_Hide", dynlib: dllname.}
proc UpDown_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "UpDown_Perform", dynlib: dllname.}
proc UpDown_Refresh*(AObj: pointer) {.importc: "UpDown_Refresh", dynlib: dllname.}
proc UpDown_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "UpDown_ScreenToClient", dynlib: dllname.}
proc UpDown_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "UpDown_ParentToClient", dynlib: dllname.}
proc UpDown_SendToBack*(AObj: pointer) {.importc: "UpDown_SendToBack", dynlib: dllname.}
proc UpDown_Show*(AObj: pointer) {.importc: "UpDown_Show", dynlib: dllname.}
proc UpDown_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "UpDown_GetTextBuf", dynlib: dllname.}
proc UpDown_GetTextLen*(AObj: pointer): int32 {.importc: "UpDown_GetTextLen", dynlib: dllname.}
proc UpDown_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "UpDown_SetTextBuf", dynlib: dllname.}
proc UpDown_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "UpDown_FindComponent", dynlib: dllname.}
proc UpDown_GetNamePath*(AObj: pointer): cstring {.importc: "UpDown_GetNamePath", dynlib: dllname.}
proc UpDown_Assign*(AObj: pointer, Source: pointer) {.importc: "UpDown_Assign", dynlib: dllname.}
proc UpDown_ClassType*(AObj: pointer): TClass {.importc: "UpDown_ClassType", dynlib: dllname.}
proc UpDown_ClassName*(AObj: pointer): cstring {.importc: "UpDown_ClassName", dynlib: dllname.}
proc UpDown_InstanceSize*(AObj: pointer): int32 {.importc: "UpDown_InstanceSize", dynlib: dllname.}
proc UpDown_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "UpDown_InheritsFrom", dynlib: dllname.}
proc UpDown_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "UpDown_Equals", dynlib: dllname.}
proc UpDown_GetHashCode*(AObj: pointer): int32 {.importc: "UpDown_GetHashCode", dynlib: dllname.}
proc UpDown_ToString*(AObj: pointer): cstring {.importc: "UpDown_ToString", dynlib: dllname.}
proc UpDown_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "UpDown_AnchorToNeighbour", dynlib: dllname.}
proc UpDown_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "UpDown_AnchorParallel", dynlib: dllname.}
proc UpDown_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "UpDown_AnchorHorizontalCenterTo", dynlib: dllname.}
proc UpDown_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "UpDown_AnchorVerticalCenterTo", dynlib: dllname.}
proc UpDown_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "UpDown_AnchorSame", dynlib: dllname.}
proc UpDown_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "UpDown_AnchorAsAlign", dynlib: dllname.}
proc UpDown_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "UpDown_AnchorClient", dynlib: dllname.}
proc UpDown_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_ScaleDesignToForm", dynlib: dllname.}
proc UpDown_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_ScaleFormToDesign", dynlib: dllname.}
proc UpDown_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_Scale96ToForm", dynlib: dllname.}
proc UpDown_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_ScaleFormTo96", dynlib: dllname.}
proc UpDown_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_Scale96ToFont", dynlib: dllname.}
proc UpDown_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_ScaleFontTo96", dynlib: dllname.}
proc UpDown_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_ScaleScreenToFont", dynlib: dllname.}
proc UpDown_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_ScaleFontToScreen", dynlib: dllname.}
proc UpDown_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_Scale96ToScreen", dynlib: dllname.}
proc UpDown_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "UpDown_ScaleScreenTo96", dynlib: dllname.}
proc UpDown_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "UpDown_AutoAdjustLayout", dynlib: dllname.}
proc UpDown_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "UpDown_FixDesignFontsPPI", dynlib: dllname.}
proc UpDown_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "UpDown_ScaleFontsPPI", dynlib: dllname.}
proc UpDown_GetAnchors*(AObj: pointer): TAnchors {.importc: "UpDown_GetAnchors", dynlib: dllname.}
proc UpDown_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "UpDown_SetAnchors", dynlib: dllname.}
proc UpDown_GetDoubleBuffered*(AObj: pointer): bool {.importc: "UpDown_GetDoubleBuffered", dynlib: dllname.}
proc UpDown_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetDoubleBuffered", dynlib: dllname.}
proc UpDown_GetEnabled*(AObj: pointer): bool {.importc: "UpDown_GetEnabled", dynlib: dllname.}
proc UpDown_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetEnabled", dynlib: dllname.}
proc UpDown_GetHint*(AObj: pointer): cstring {.importc: "UpDown_GetHint", dynlib: dllname.}
proc UpDown_SetHint*(AObj: pointer, AValue: cstring) {.importc: "UpDown_SetHint", dynlib: dllname.}
proc UpDown_GetMin*(AObj: pointer): int32 {.importc: "UpDown_GetMin", dynlib: dllname.}
proc UpDown_SetMin*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetMin", dynlib: dllname.}
proc UpDown_GetMax*(AObj: pointer): int32 {.importc: "UpDown_GetMax", dynlib: dllname.}
proc UpDown_SetMax*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetMax", dynlib: dllname.}
proc UpDown_GetIncrement*(AObj: pointer): int32 {.importc: "UpDown_GetIncrement", dynlib: dllname.}
proc UpDown_SetIncrement*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetIncrement", dynlib: dllname.}
proc UpDown_GetConstraints*(AObj: pointer): pointer {.importc: "UpDown_GetConstraints", dynlib: dllname.}
proc UpDown_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetConstraints", dynlib: dllname.}
proc UpDown_GetOrientation*(AObj: pointer): TUDOrientation {.importc: "UpDown_GetOrientation", dynlib: dllname.}
proc UpDown_SetOrientation*(AObj: pointer, AValue: TUDOrientation) {.importc: "UpDown_SetOrientation", dynlib: dllname.}
proc UpDown_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "UpDown_GetParentDoubleBuffered", dynlib: dllname.}
proc UpDown_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetParentDoubleBuffered", dynlib: dllname.}
proc UpDown_GetParentShowHint*(AObj: pointer): bool {.importc: "UpDown_GetParentShowHint", dynlib: dllname.}
proc UpDown_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetParentShowHint", dynlib: dllname.}
proc UpDown_GetPopupMenu*(AObj: pointer): pointer {.importc: "UpDown_GetPopupMenu", dynlib: dllname.}
proc UpDown_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetPopupMenu", dynlib: dllname.}
proc UpDown_GetPosition*(AObj: pointer): int32 {.importc: "UpDown_GetPosition", dynlib: dllname.}
proc UpDown_SetPosition*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetPosition", dynlib: dllname.}
proc UpDown_GetShowHint*(AObj: pointer): bool {.importc: "UpDown_GetShowHint", dynlib: dllname.}
proc UpDown_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetShowHint", dynlib: dllname.}
proc UpDown_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "UpDown_GetTabOrder", dynlib: dllname.}
proc UpDown_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "UpDown_SetTabOrder", dynlib: dllname.}
proc UpDown_GetTabStop*(AObj: pointer): bool {.importc: "UpDown_GetTabStop", dynlib: dllname.}
proc UpDown_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetTabStop", dynlib: dllname.}
proc UpDown_GetVisible*(AObj: pointer): bool {.importc: "UpDown_GetVisible", dynlib: dllname.}
proc UpDown_SetVisible*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetVisible", dynlib: dllname.}
proc UpDown_GetWrap*(AObj: pointer): bool {.importc: "UpDown_GetWrap", dynlib: dllname.}
proc UpDown_SetWrap*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetWrap", dynlib: dllname.}
proc UpDown_SetOnChanging*(AObj: pointer, AEventId: TUDChangingEvent) {.importc: "UpDown_SetOnChanging", dynlib: dllname.}
proc UpDown_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "UpDown_SetOnContextPopup", dynlib: dllname.}
proc UpDown_SetOnClick*(AObj: pointer, AEventId: TUDClickEvent) {.importc: "UpDown_SetOnClick", dynlib: dllname.}
proc UpDown_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "UpDown_SetOnEnter", dynlib: dllname.}
proc UpDown_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "UpDown_SetOnExit", dynlib: dllname.}
proc UpDown_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "UpDown_SetOnMouseDown", dynlib: dllname.}
proc UpDown_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "UpDown_SetOnMouseEnter", dynlib: dllname.}
proc UpDown_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "UpDown_SetOnMouseLeave", dynlib: dllname.}
proc UpDown_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "UpDown_SetOnMouseMove", dynlib: dllname.}
proc UpDown_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "UpDown_SetOnMouseUp", dynlib: dllname.}
proc UpDown_GetDockClientCount*(AObj: pointer): int32 {.importc: "UpDown_GetDockClientCount", dynlib: dllname.}
proc UpDown_GetDockSite*(AObj: pointer): bool {.importc: "UpDown_GetDockSite", dynlib: dllname.}
proc UpDown_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetDockSite", dynlib: dllname.}
proc UpDown_GetMouseInClient*(AObj: pointer): bool {.importc: "UpDown_GetMouseInClient", dynlib: dllname.}
proc UpDown_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "UpDown_GetVisibleDockClientCount", dynlib: dllname.}
proc UpDown_GetBrush*(AObj: pointer): pointer {.importc: "UpDown_GetBrush", dynlib: dllname.}
proc UpDown_GetControlCount*(AObj: pointer): int32 {.importc: "UpDown_GetControlCount", dynlib: dllname.}
proc UpDown_GetHandle*(AObj: pointer): HWND {.importc: "UpDown_GetHandle", dynlib: dllname.}
proc UpDown_GetParentWindow*(AObj: pointer): HWND {.importc: "UpDown_GetParentWindow", dynlib: dllname.}
proc UpDown_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "UpDown_SetParentWindow", dynlib: dllname.}
proc UpDown_GetShowing*(AObj: pointer): bool {.importc: "UpDown_GetShowing", dynlib: dllname.}
proc UpDown_GetUseDockManager*(AObj: pointer): bool {.importc: "UpDown_GetUseDockManager", dynlib: dllname.}
proc UpDown_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "UpDown_SetUseDockManager", dynlib: dllname.}
proc UpDown_GetAction*(AObj: pointer): pointer {.importc: "UpDown_GetAction", dynlib: dllname.}
proc UpDown_SetAction*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetAction", dynlib: dllname.}
proc UpDown_GetAlign*(AObj: pointer): TAlign {.importc: "UpDown_GetAlign", dynlib: dllname.}
proc UpDown_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "UpDown_SetAlign", dynlib: dllname.}
proc UpDown_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "UpDown_GetBiDiMode", dynlib: dllname.}
proc UpDown_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "UpDown_SetBiDiMode", dynlib: dllname.}
proc UpDown_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "UpDown_GetBoundsRect", dynlib: dllname.}
proc UpDown_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "UpDown_SetBoundsRect", dynlib: dllname.}
proc UpDown_GetClientHeight*(AObj: pointer): int32 {.importc: "UpDown_GetClientHeight", dynlib: dllname.}
proc UpDown_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetClientHeight", dynlib: dllname.}
proc UpDown_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "UpDown_GetClientOrigin", dynlib: dllname.}
proc UpDown_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "UpDown_GetClientRect", dynlib: dllname.}
proc UpDown_GetClientWidth*(AObj: pointer): int32 {.importc: "UpDown_GetClientWidth", dynlib: dllname.}
proc UpDown_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetClientWidth", dynlib: dllname.}
proc UpDown_GetControlState*(AObj: pointer): TControlState {.importc: "UpDown_GetControlState", dynlib: dllname.}
proc UpDown_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "UpDown_SetControlState", dynlib: dllname.}
proc UpDown_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "UpDown_GetControlStyle", dynlib: dllname.}
proc UpDown_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "UpDown_SetControlStyle", dynlib: dllname.}
proc UpDown_GetFloating*(AObj: pointer): bool {.importc: "UpDown_GetFloating", dynlib: dllname.}
proc UpDown_GetParent*(AObj: pointer): pointer {.importc: "UpDown_GetParent", dynlib: dllname.}
proc UpDown_SetParent*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetParent", dynlib: dllname.}
proc UpDown_GetLeft*(AObj: pointer): int32 {.importc: "UpDown_GetLeft", dynlib: dllname.}
proc UpDown_SetLeft*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetLeft", dynlib: dllname.}
proc UpDown_GetTop*(AObj: pointer): int32 {.importc: "UpDown_GetTop", dynlib: dllname.}
proc UpDown_SetTop*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetTop", dynlib: dllname.}
proc UpDown_GetWidth*(AObj: pointer): int32 {.importc: "UpDown_GetWidth", dynlib: dllname.}
proc UpDown_SetWidth*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetWidth", dynlib: dllname.}
proc UpDown_GetHeight*(AObj: pointer): int32 {.importc: "UpDown_GetHeight", dynlib: dllname.}
proc UpDown_SetHeight*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetHeight", dynlib: dllname.}
proc UpDown_GetCursor*(AObj: pointer): TCursor {.importc: "UpDown_GetCursor", dynlib: dllname.}
proc UpDown_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "UpDown_SetCursor", dynlib: dllname.}
proc UpDown_GetComponentCount*(AObj: pointer): int32 {.importc: "UpDown_GetComponentCount", dynlib: dllname.}
proc UpDown_GetComponentIndex*(AObj: pointer): int32 {.importc: "UpDown_GetComponentIndex", dynlib: dllname.}
proc UpDown_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "UpDown_SetComponentIndex", dynlib: dllname.}
proc UpDown_GetOwner*(AObj: pointer): pointer {.importc: "UpDown_GetOwner", dynlib: dllname.}
proc UpDown_GetName*(AObj: pointer): cstring {.importc: "UpDown_GetName", dynlib: dllname.}
proc UpDown_SetName*(AObj: pointer, AValue: cstring) {.importc: "UpDown_SetName", dynlib: dllname.}
proc UpDown_GetTag*(AObj: pointer): int {.importc: "UpDown_GetTag", dynlib: dllname.}
proc UpDown_SetTag*(AObj: pointer, AValue: int) {.importc: "UpDown_SetTag", dynlib: dllname.}
proc UpDown_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "UpDown_GetAnchorSideLeft", dynlib: dllname.}
proc UpDown_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetAnchorSideLeft", dynlib: dllname.}
proc UpDown_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "UpDown_GetAnchorSideTop", dynlib: dllname.}
proc UpDown_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetAnchorSideTop", dynlib: dllname.}
proc UpDown_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "UpDown_GetAnchorSideRight", dynlib: dllname.}
proc UpDown_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetAnchorSideRight", dynlib: dllname.}
proc UpDown_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "UpDown_GetAnchorSideBottom", dynlib: dllname.}
proc UpDown_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetAnchorSideBottom", dynlib: dllname.}
proc UpDown_GetChildSizing*(AObj: pointer): pointer {.importc: "UpDown_GetChildSizing", dynlib: dllname.}
proc UpDown_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetChildSizing", dynlib: dllname.}
proc UpDown_GetBorderSpacing*(AObj: pointer): pointer {.importc: "UpDown_GetBorderSpacing", dynlib: dllname.}
proc UpDown_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "UpDown_SetBorderSpacing", dynlib: dllname.}
proc UpDown_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "UpDown_GetDockClients", dynlib: dllname.}
proc UpDown_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "UpDown_GetControls", dynlib: dllname.}
proc UpDown_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "UpDown_GetComponents", dynlib: dllname.}
proc UpDown_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "UpDown_GetAnchorSide", dynlib: dllname.}
proc UpDown_StaticClassType*(): TClass {.importc: "UpDown_StaticClassType", dynlib: dllname.}
# ----------------- TProgressBar ----------------------
proc ProgressBar_Create*(AOwner: pointer): pointer {.importc: "ProgressBar_Create", dynlib: dllname.}
proc ProgressBar_Free*(AObj: pointer) {.importc: "ProgressBar_Free", dynlib: dllname.}
proc ProgressBar_StepIt*(AObj: pointer) {.importc: "ProgressBar_StepIt", dynlib: dllname.}
proc ProgressBar_StepBy*(AObj: pointer, Delta: int32) {.importc: "ProgressBar_StepBy", dynlib: dllname.}
proc ProgressBar_CanFocus*(AObj: pointer): bool {.importc: "ProgressBar_CanFocus", dynlib: dllname.}
proc ProgressBar_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ProgressBar_ContainsControl", dynlib: dllname.}
proc ProgressBar_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ProgressBar_ControlAtPos", dynlib: dllname.}
proc ProgressBar_DisableAlign*(AObj: pointer) {.importc: "ProgressBar_DisableAlign", dynlib: dllname.}
proc ProgressBar_EnableAlign*(AObj: pointer) {.importc: "ProgressBar_EnableAlign", dynlib: dllname.}
proc ProgressBar_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ProgressBar_FindChildControl", dynlib: dllname.}
proc ProgressBar_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ProgressBar_FlipChildren", dynlib: dllname.}
proc ProgressBar_Focused*(AObj: pointer): bool {.importc: "ProgressBar_Focused", dynlib: dllname.}
proc ProgressBar_HandleAllocated*(AObj: pointer): bool {.importc: "ProgressBar_HandleAllocated", dynlib: dllname.}
proc ProgressBar_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ProgressBar_InsertControl", dynlib: dllname.}
proc ProgressBar_Invalidate*(AObj: pointer) {.importc: "ProgressBar_Invalidate", dynlib: dllname.}
proc ProgressBar_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ProgressBar_PaintTo", dynlib: dllname.}
proc ProgressBar_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ProgressBar_RemoveControl", dynlib: dllname.}
proc ProgressBar_Realign*(AObj: pointer) {.importc: "ProgressBar_Realign", dynlib: dllname.}
proc ProgressBar_Repaint*(AObj: pointer) {.importc: "ProgressBar_Repaint", dynlib: dllname.}
proc ProgressBar_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ProgressBar_ScaleBy", dynlib: dllname.}
proc ProgressBar_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ProgressBar_ScrollBy", dynlib: dllname.}
proc ProgressBar_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ProgressBar_SetBounds", dynlib: dllname.}
proc ProgressBar_SetFocus*(AObj: pointer) {.importc: "ProgressBar_SetFocus", dynlib: dllname.}
proc ProgressBar_Update*(AObj: pointer) {.importc: "ProgressBar_Update", dynlib: dllname.}
proc ProgressBar_BringToFront*(AObj: pointer) {.importc: "ProgressBar_BringToFront", dynlib: dllname.}
proc ProgressBar_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ProgressBar_ClientToScreen", dynlib: dllname.}
proc ProgressBar_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ProgressBar_ClientToParent", dynlib: dllname.}
proc ProgressBar_Dragging*(AObj: pointer): bool {.importc: "ProgressBar_Dragging", dynlib: dllname.}
proc ProgressBar_HasParent*(AObj: pointer): bool {.importc: "ProgressBar_HasParent", dynlib: dllname.}
proc ProgressBar_Hide*(AObj: pointer) {.importc: "ProgressBar_Hide", dynlib: dllname.}
proc ProgressBar_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ProgressBar_Perform", dynlib: dllname.}
proc ProgressBar_Refresh*(AObj: pointer) {.importc: "ProgressBar_Refresh", dynlib: dllname.}
proc ProgressBar_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ProgressBar_ScreenToClient", dynlib: dllname.}
proc ProgressBar_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ProgressBar_ParentToClient", dynlib: dllname.}
proc ProgressBar_SendToBack*(AObj: pointer) {.importc: "ProgressBar_SendToBack", dynlib: dllname.}
proc ProgressBar_Show*(AObj: pointer) {.importc: "ProgressBar_Show", dynlib: dllname.}
proc ProgressBar_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ProgressBar_GetTextBuf", dynlib: dllname.}
proc ProgressBar_GetTextLen*(AObj: pointer): int32 {.importc: "ProgressBar_GetTextLen", dynlib: dllname.}
proc ProgressBar_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ProgressBar_SetTextBuf", dynlib: dllname.}
proc ProgressBar_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ProgressBar_FindComponent", dynlib: dllname.}
proc ProgressBar_GetNamePath*(AObj: pointer): cstring {.importc: "ProgressBar_GetNamePath", dynlib: dllname.}
proc ProgressBar_Assign*(AObj: pointer, Source: pointer) {.importc: "ProgressBar_Assign", dynlib: dllname.}
proc ProgressBar_ClassType*(AObj: pointer): TClass {.importc: "ProgressBar_ClassType", dynlib: dllname.}
proc ProgressBar_ClassName*(AObj: pointer): cstring {.importc: "ProgressBar_ClassName", dynlib: dllname.}
proc ProgressBar_InstanceSize*(AObj: pointer): int32 {.importc: "ProgressBar_InstanceSize", dynlib: dllname.}
proc ProgressBar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ProgressBar_InheritsFrom", dynlib: dllname.}
proc ProgressBar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ProgressBar_Equals", dynlib: dllname.}
proc ProgressBar_GetHashCode*(AObj: pointer): int32 {.importc: "ProgressBar_GetHashCode", dynlib: dllname.}
proc ProgressBar_ToString*(AObj: pointer): cstring {.importc: "ProgressBar_ToString", dynlib: dllname.}
proc ProgressBar_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ProgressBar_AnchorToNeighbour", dynlib: dllname.}
proc ProgressBar_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ProgressBar_AnchorParallel", dynlib: dllname.}
proc ProgressBar_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ProgressBar_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ProgressBar_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ProgressBar_AnchorVerticalCenterTo", dynlib: dllname.}
proc ProgressBar_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ProgressBar_AnchorSame", dynlib: dllname.}
proc ProgressBar_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ProgressBar_AnchorAsAlign", dynlib: dllname.}
proc ProgressBar_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ProgressBar_AnchorClient", dynlib: dllname.}
proc ProgressBar_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_ScaleDesignToForm", dynlib: dllname.}
proc ProgressBar_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_ScaleFormToDesign", dynlib: dllname.}
proc ProgressBar_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_Scale96ToForm", dynlib: dllname.}
proc ProgressBar_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_ScaleFormTo96", dynlib: dllname.}
proc ProgressBar_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_Scale96ToFont", dynlib: dllname.}
proc ProgressBar_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_ScaleFontTo96", dynlib: dllname.}
proc ProgressBar_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_ScaleScreenToFont", dynlib: dllname.}
proc ProgressBar_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_ScaleFontToScreen", dynlib: dllname.}
proc ProgressBar_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_Scale96ToScreen", dynlib: dllname.}
proc ProgressBar_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ProgressBar_ScaleScreenTo96", dynlib: dllname.}
proc ProgressBar_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ProgressBar_AutoAdjustLayout", dynlib: dllname.}
proc ProgressBar_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ProgressBar_FixDesignFontsPPI", dynlib: dllname.}
proc ProgressBar_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ProgressBar_ScaleFontsPPI", dynlib: dllname.}
proc ProgressBar_GetAlign*(AObj: pointer): TAlign {.importc: "ProgressBar_GetAlign", dynlib: dllname.}
proc ProgressBar_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ProgressBar_SetAlign", dynlib: dllname.}
proc ProgressBar_GetAnchors*(AObj: pointer): TAnchors {.importc: "ProgressBar_GetAnchors", dynlib: dllname.}
proc ProgressBar_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ProgressBar_SetAnchors", dynlib: dllname.}
proc ProgressBar_GetBorderWidth*(AObj: pointer): int32 {.importc: "ProgressBar_GetBorderWidth", dynlib: dllname.}
proc ProgressBar_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetBorderWidth", dynlib: dllname.}
proc ProgressBar_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ProgressBar_GetDoubleBuffered", dynlib: dllname.}
proc ProgressBar_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetDoubleBuffered", dynlib: dllname.}
proc ProgressBar_GetDragCursor*(AObj: pointer): TCursor {.importc: "ProgressBar_GetDragCursor", dynlib: dllname.}
proc ProgressBar_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ProgressBar_SetDragCursor", dynlib: dllname.}
proc ProgressBar_GetDragKind*(AObj: pointer): TDragKind {.importc: "ProgressBar_GetDragKind", dynlib: dllname.}
proc ProgressBar_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ProgressBar_SetDragKind", dynlib: dllname.}
proc ProgressBar_GetDragMode*(AObj: pointer): TDragMode {.importc: "ProgressBar_GetDragMode", dynlib: dllname.}
proc ProgressBar_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ProgressBar_SetDragMode", dynlib: dllname.}
proc ProgressBar_GetEnabled*(AObj: pointer): bool {.importc: "ProgressBar_GetEnabled", dynlib: dllname.}
proc ProgressBar_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetEnabled", dynlib: dllname.}
proc ProgressBar_GetHint*(AObj: pointer): cstring {.importc: "ProgressBar_GetHint", dynlib: dllname.}
proc ProgressBar_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ProgressBar_SetHint", dynlib: dllname.}
proc ProgressBar_GetConstraints*(AObj: pointer): pointer {.importc: "ProgressBar_GetConstraints", dynlib: dllname.}
proc ProgressBar_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetConstraints", dynlib: dllname.}
proc ProgressBar_GetMin*(AObj: pointer): int32 {.importc: "ProgressBar_GetMin", dynlib: dllname.}
proc ProgressBar_SetMin*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetMin", dynlib: dllname.}
proc ProgressBar_GetMax*(AObj: pointer): int32 {.importc: "ProgressBar_GetMax", dynlib: dllname.}
proc ProgressBar_SetMax*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetMax", dynlib: dllname.}
proc ProgressBar_GetOrientation*(AObj: pointer): TProgressBarOrientation {.importc: "ProgressBar_GetOrientation", dynlib: dllname.}
proc ProgressBar_SetOrientation*(AObj: pointer, AValue: TProgressBarOrientation) {.importc: "ProgressBar_SetOrientation", dynlib: dllname.}
proc ProgressBar_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ProgressBar_GetParentDoubleBuffered", dynlib: dllname.}
proc ProgressBar_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetParentDoubleBuffered", dynlib: dllname.}
proc ProgressBar_GetParentShowHint*(AObj: pointer): bool {.importc: "ProgressBar_GetParentShowHint", dynlib: dllname.}
proc ProgressBar_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetParentShowHint", dynlib: dllname.}
proc ProgressBar_GetPopupMenu*(AObj: pointer): pointer {.importc: "ProgressBar_GetPopupMenu", dynlib: dllname.}
proc ProgressBar_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetPopupMenu", dynlib: dllname.}
proc ProgressBar_GetPosition*(AObj: pointer): int32 {.importc: "ProgressBar_GetPosition", dynlib: dllname.}
proc ProgressBar_SetPosition*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetPosition", dynlib: dllname.}
proc ProgressBar_GetSmooth*(AObj: pointer): bool {.importc: "ProgressBar_GetSmooth", dynlib: dllname.}
proc ProgressBar_SetSmooth*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetSmooth", dynlib: dllname.}
proc ProgressBar_GetStyle*(AObj: pointer): TProgressBarStyle {.importc: "ProgressBar_GetStyle", dynlib: dllname.}
proc ProgressBar_SetStyle*(AObj: pointer, AValue: TProgressBarStyle) {.importc: "ProgressBar_SetStyle", dynlib: dllname.}
proc ProgressBar_GetStep*(AObj: pointer): int32 {.importc: "ProgressBar_GetStep", dynlib: dllname.}
proc ProgressBar_SetStep*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetStep", dynlib: dllname.}
proc ProgressBar_GetShowHint*(AObj: pointer): bool {.importc: "ProgressBar_GetShowHint", dynlib: dllname.}
proc ProgressBar_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetShowHint", dynlib: dllname.}
proc ProgressBar_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ProgressBar_GetTabOrder", dynlib: dllname.}
proc ProgressBar_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ProgressBar_SetTabOrder", dynlib: dllname.}
proc ProgressBar_GetTabStop*(AObj: pointer): bool {.importc: "ProgressBar_GetTabStop", dynlib: dllname.}
proc ProgressBar_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetTabStop", dynlib: dllname.}
proc ProgressBar_GetVisible*(AObj: pointer): bool {.importc: "ProgressBar_GetVisible", dynlib: dllname.}
proc ProgressBar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetVisible", dynlib: dllname.}
proc ProgressBar_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ProgressBar_SetOnContextPopup", dynlib: dllname.}
proc ProgressBar_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ProgressBar_SetOnDragDrop", dynlib: dllname.}
proc ProgressBar_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ProgressBar_SetOnDragOver", dynlib: dllname.}
proc ProgressBar_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ProgressBar_SetOnEndDrag", dynlib: dllname.}
proc ProgressBar_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ProgressBar_SetOnEnter", dynlib: dllname.}
proc ProgressBar_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ProgressBar_SetOnExit", dynlib: dllname.}
proc ProgressBar_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ProgressBar_SetOnMouseDown", dynlib: dllname.}
proc ProgressBar_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ProgressBar_SetOnMouseEnter", dynlib: dllname.}
proc ProgressBar_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ProgressBar_SetOnMouseLeave", dynlib: dllname.}
proc ProgressBar_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ProgressBar_SetOnMouseMove", dynlib: dllname.}
proc ProgressBar_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ProgressBar_SetOnMouseUp", dynlib: dllname.}
proc ProgressBar_GetDockClientCount*(AObj: pointer): int32 {.importc: "ProgressBar_GetDockClientCount", dynlib: dllname.}
proc ProgressBar_GetDockSite*(AObj: pointer): bool {.importc: "ProgressBar_GetDockSite", dynlib: dllname.}
proc ProgressBar_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetDockSite", dynlib: dllname.}
proc ProgressBar_GetMouseInClient*(AObj: pointer): bool {.importc: "ProgressBar_GetMouseInClient", dynlib: dllname.}
proc ProgressBar_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ProgressBar_GetVisibleDockClientCount", dynlib: dllname.}
proc ProgressBar_GetBrush*(AObj: pointer): pointer {.importc: "ProgressBar_GetBrush", dynlib: dllname.}
proc ProgressBar_GetControlCount*(AObj: pointer): int32 {.importc: "ProgressBar_GetControlCount", dynlib: dllname.}
proc ProgressBar_GetHandle*(AObj: pointer): HWND {.importc: "ProgressBar_GetHandle", dynlib: dllname.}
proc ProgressBar_GetParentWindow*(AObj: pointer): HWND {.importc: "ProgressBar_GetParentWindow", dynlib: dllname.}
proc ProgressBar_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ProgressBar_SetParentWindow", dynlib: dllname.}
proc ProgressBar_GetShowing*(AObj: pointer): bool {.importc: "ProgressBar_GetShowing", dynlib: dllname.}
proc ProgressBar_GetUseDockManager*(AObj: pointer): bool {.importc: "ProgressBar_GetUseDockManager", dynlib: dllname.}
proc ProgressBar_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ProgressBar_SetUseDockManager", dynlib: dllname.}
proc ProgressBar_GetAction*(AObj: pointer): pointer {.importc: "ProgressBar_GetAction", dynlib: dllname.}
proc ProgressBar_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetAction", dynlib: dllname.}
proc ProgressBar_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ProgressBar_GetBiDiMode", dynlib: dllname.}
proc ProgressBar_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ProgressBar_SetBiDiMode", dynlib: dllname.}
proc ProgressBar_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ProgressBar_GetBoundsRect", dynlib: dllname.}
proc ProgressBar_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ProgressBar_SetBoundsRect", dynlib: dllname.}
proc ProgressBar_GetClientHeight*(AObj: pointer): int32 {.importc: "ProgressBar_GetClientHeight", dynlib: dllname.}
proc ProgressBar_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetClientHeight", dynlib: dllname.}
proc ProgressBar_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ProgressBar_GetClientOrigin", dynlib: dllname.}
proc ProgressBar_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ProgressBar_GetClientRect", dynlib: dllname.}
proc ProgressBar_GetClientWidth*(AObj: pointer): int32 {.importc: "ProgressBar_GetClientWidth", dynlib: dllname.}
proc ProgressBar_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetClientWidth", dynlib: dllname.}
proc ProgressBar_GetControlState*(AObj: pointer): TControlState {.importc: "ProgressBar_GetControlState", dynlib: dllname.}
proc ProgressBar_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ProgressBar_SetControlState", dynlib: dllname.}
proc ProgressBar_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ProgressBar_GetControlStyle", dynlib: dllname.}
proc ProgressBar_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ProgressBar_SetControlStyle", dynlib: dllname.}
proc ProgressBar_GetFloating*(AObj: pointer): bool {.importc: "ProgressBar_GetFloating", dynlib: dllname.}
proc ProgressBar_GetParent*(AObj: pointer): pointer {.importc: "ProgressBar_GetParent", dynlib: dllname.}
proc ProgressBar_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetParent", dynlib: dllname.}
proc ProgressBar_GetLeft*(AObj: pointer): int32 {.importc: "ProgressBar_GetLeft", dynlib: dllname.}
proc ProgressBar_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetLeft", dynlib: dllname.}
proc ProgressBar_GetTop*(AObj: pointer): int32 {.importc: "ProgressBar_GetTop", dynlib: dllname.}
proc ProgressBar_SetTop*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetTop", dynlib: dllname.}
proc ProgressBar_GetWidth*(AObj: pointer): int32 {.importc: "ProgressBar_GetWidth", dynlib: dllname.}
proc ProgressBar_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetWidth", dynlib: dllname.}
proc ProgressBar_GetHeight*(AObj: pointer): int32 {.importc: "ProgressBar_GetHeight", dynlib: dllname.}
proc ProgressBar_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetHeight", dynlib: dllname.}
proc ProgressBar_GetCursor*(AObj: pointer): TCursor {.importc: "ProgressBar_GetCursor", dynlib: dllname.}
proc ProgressBar_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ProgressBar_SetCursor", dynlib: dllname.}
proc ProgressBar_GetComponentCount*(AObj: pointer): int32 {.importc: "ProgressBar_GetComponentCount", dynlib: dllname.}
proc ProgressBar_GetComponentIndex*(AObj: pointer): int32 {.importc: "ProgressBar_GetComponentIndex", dynlib: dllname.}
proc ProgressBar_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ProgressBar_SetComponentIndex", dynlib: dllname.}
proc ProgressBar_GetOwner*(AObj: pointer): pointer {.importc: "ProgressBar_GetOwner", dynlib: dllname.}
proc ProgressBar_GetName*(AObj: pointer): cstring {.importc: "ProgressBar_GetName", dynlib: dllname.}
proc ProgressBar_SetName*(AObj: pointer, AValue: cstring) {.importc: "ProgressBar_SetName", dynlib: dllname.}
proc ProgressBar_GetTag*(AObj: pointer): int {.importc: "ProgressBar_GetTag", dynlib: dllname.}
proc ProgressBar_SetTag*(AObj: pointer, AValue: int) {.importc: "ProgressBar_SetTag", dynlib: dllname.}
proc ProgressBar_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ProgressBar_GetAnchorSideLeft", dynlib: dllname.}
proc ProgressBar_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetAnchorSideLeft", dynlib: dllname.}
proc ProgressBar_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ProgressBar_GetAnchorSideTop", dynlib: dllname.}
proc ProgressBar_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetAnchorSideTop", dynlib: dllname.}
proc ProgressBar_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ProgressBar_GetAnchorSideRight", dynlib: dllname.}
proc ProgressBar_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetAnchorSideRight", dynlib: dllname.}
proc ProgressBar_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ProgressBar_GetAnchorSideBottom", dynlib: dllname.}
proc ProgressBar_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetAnchorSideBottom", dynlib: dllname.}
proc ProgressBar_GetChildSizing*(AObj: pointer): pointer {.importc: "ProgressBar_GetChildSizing", dynlib: dllname.}
proc ProgressBar_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetChildSizing", dynlib: dllname.}
proc ProgressBar_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ProgressBar_GetBorderSpacing", dynlib: dllname.}
proc ProgressBar_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ProgressBar_SetBorderSpacing", dynlib: dllname.}
proc ProgressBar_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ProgressBar_GetDockClients", dynlib: dllname.}
proc ProgressBar_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ProgressBar_GetControls", dynlib: dllname.}
proc ProgressBar_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ProgressBar_GetComponents", dynlib: dllname.}
proc ProgressBar_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ProgressBar_GetAnchorSide", dynlib: dllname.}
proc ProgressBar_StaticClassType*(): TClass {.importc: "ProgressBar_StaticClassType", dynlib: dllname.}
# ----------------- TDateTimePicker ----------------------
proc DateTimePicker_Create*(AOwner: pointer): pointer {.importc: "DateTimePicker_Create", dynlib: dllname.}
proc DateTimePicker_Free*(AObj: pointer) {.importc: "DateTimePicker_Free", dynlib: dllname.}
proc DateTimePicker_DateIsNull*(AObj: pointer): bool {.importc: "DateTimePicker_DateIsNull", dynlib: dllname.}
proc DateTimePicker_SelectDate*(AObj: pointer) {.importc: "DateTimePicker_SelectDate", dynlib: dllname.}
proc DateTimePicker_SelectTime*(AObj: pointer) {.importc: "DateTimePicker_SelectTime", dynlib: dllname.}
proc DateTimePicker_CanFocus*(AObj: pointer): bool {.importc: "DateTimePicker_CanFocus", dynlib: dllname.}
proc DateTimePicker_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "DateTimePicker_ContainsControl", dynlib: dllname.}
proc DateTimePicker_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "DateTimePicker_ControlAtPos", dynlib: dllname.}
proc DateTimePicker_DisableAlign*(AObj: pointer) {.importc: "DateTimePicker_DisableAlign", dynlib: dllname.}
proc DateTimePicker_EnableAlign*(AObj: pointer) {.importc: "DateTimePicker_EnableAlign", dynlib: dllname.}
proc DateTimePicker_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "DateTimePicker_FindChildControl", dynlib: dllname.}
proc DateTimePicker_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "DateTimePicker_FlipChildren", dynlib: dllname.}
proc DateTimePicker_Focused*(AObj: pointer): bool {.importc: "DateTimePicker_Focused", dynlib: dllname.}
proc DateTimePicker_HandleAllocated*(AObj: pointer): bool {.importc: "DateTimePicker_HandleAllocated", dynlib: dllname.}
proc DateTimePicker_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "DateTimePicker_InsertControl", dynlib: dllname.}
proc DateTimePicker_Invalidate*(AObj: pointer) {.importc: "DateTimePicker_Invalidate", dynlib: dllname.}
proc DateTimePicker_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "DateTimePicker_PaintTo", dynlib: dllname.}
proc DateTimePicker_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "DateTimePicker_RemoveControl", dynlib: dllname.}
proc DateTimePicker_Realign*(AObj: pointer) {.importc: "DateTimePicker_Realign", dynlib: dllname.}
proc DateTimePicker_Repaint*(AObj: pointer) {.importc: "DateTimePicker_Repaint", dynlib: dllname.}
proc DateTimePicker_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "DateTimePicker_ScaleBy", dynlib: dllname.}
proc DateTimePicker_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "DateTimePicker_ScrollBy", dynlib: dllname.}
proc DateTimePicker_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "DateTimePicker_SetBounds", dynlib: dllname.}
proc DateTimePicker_SetFocus*(AObj: pointer) {.importc: "DateTimePicker_SetFocus", dynlib: dllname.}
proc DateTimePicker_Update*(AObj: pointer) {.importc: "DateTimePicker_Update", dynlib: dllname.}
proc DateTimePicker_BringToFront*(AObj: pointer) {.importc: "DateTimePicker_BringToFront", dynlib: dllname.}
proc DateTimePicker_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "DateTimePicker_ClientToScreen", dynlib: dllname.}
proc DateTimePicker_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "DateTimePicker_ClientToParent", dynlib: dllname.}
proc DateTimePicker_Dragging*(AObj: pointer): bool {.importc: "DateTimePicker_Dragging", dynlib: dllname.}
proc DateTimePicker_HasParent*(AObj: pointer): bool {.importc: "DateTimePicker_HasParent", dynlib: dllname.}
proc DateTimePicker_Hide*(AObj: pointer) {.importc: "DateTimePicker_Hide", dynlib: dllname.}
proc DateTimePicker_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "DateTimePicker_Perform", dynlib: dllname.}
proc DateTimePicker_Refresh*(AObj: pointer) {.importc: "DateTimePicker_Refresh", dynlib: dllname.}
proc DateTimePicker_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "DateTimePicker_ScreenToClient", dynlib: dllname.}
proc DateTimePicker_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "DateTimePicker_ParentToClient", dynlib: dllname.}
proc DateTimePicker_SendToBack*(AObj: pointer) {.importc: "DateTimePicker_SendToBack", dynlib: dllname.}
proc DateTimePicker_Show*(AObj: pointer) {.importc: "DateTimePicker_Show", dynlib: dllname.}
proc DateTimePicker_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "DateTimePicker_GetTextBuf", dynlib: dllname.}
proc DateTimePicker_GetTextLen*(AObj: pointer): int32 {.importc: "DateTimePicker_GetTextLen", dynlib: dllname.}
proc DateTimePicker_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "DateTimePicker_SetTextBuf", dynlib: dllname.}
proc DateTimePicker_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "DateTimePicker_FindComponent", dynlib: dllname.}
proc DateTimePicker_GetNamePath*(AObj: pointer): cstring {.importc: "DateTimePicker_GetNamePath", dynlib: dllname.}
proc DateTimePicker_Assign*(AObj: pointer, Source: pointer) {.importc: "DateTimePicker_Assign", dynlib: dllname.}
proc DateTimePicker_ClassType*(AObj: pointer): TClass {.importc: "DateTimePicker_ClassType", dynlib: dllname.}
proc DateTimePicker_ClassName*(AObj: pointer): cstring {.importc: "DateTimePicker_ClassName", dynlib: dllname.}
proc DateTimePicker_InstanceSize*(AObj: pointer): int32 {.importc: "DateTimePicker_InstanceSize", dynlib: dllname.}
proc DateTimePicker_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "DateTimePicker_InheritsFrom", dynlib: dllname.}
proc DateTimePicker_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "DateTimePicker_Equals", dynlib: dllname.}
proc DateTimePicker_GetHashCode*(AObj: pointer): int32 {.importc: "DateTimePicker_GetHashCode", dynlib: dllname.}
proc DateTimePicker_ToString*(AObj: pointer): cstring {.importc: "DateTimePicker_ToString", dynlib: dllname.}
proc DateTimePicker_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "DateTimePicker_AnchorToNeighbour", dynlib: dllname.}
proc DateTimePicker_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "DateTimePicker_AnchorParallel", dynlib: dllname.}
proc DateTimePicker_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "DateTimePicker_AnchorHorizontalCenterTo", dynlib: dllname.}
proc DateTimePicker_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "DateTimePicker_AnchorVerticalCenterTo", dynlib: dllname.}
proc DateTimePicker_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "DateTimePicker_AnchorSame", dynlib: dllname.}
proc DateTimePicker_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "DateTimePicker_AnchorAsAlign", dynlib: dllname.}
proc DateTimePicker_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "DateTimePicker_AnchorClient", dynlib: dllname.}
proc DateTimePicker_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_ScaleDesignToForm", dynlib: dllname.}
proc DateTimePicker_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_ScaleFormToDesign", dynlib: dllname.}
proc DateTimePicker_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_Scale96ToForm", dynlib: dllname.}
proc DateTimePicker_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_ScaleFormTo96", dynlib: dllname.}
proc DateTimePicker_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_Scale96ToFont", dynlib: dllname.}
proc DateTimePicker_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_ScaleFontTo96", dynlib: dllname.}
proc DateTimePicker_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_ScaleScreenToFont", dynlib: dllname.}
proc DateTimePicker_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_ScaleFontToScreen", dynlib: dllname.}
proc DateTimePicker_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_Scale96ToScreen", dynlib: dllname.}
proc DateTimePicker_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "DateTimePicker_ScaleScreenTo96", dynlib: dllname.}
proc DateTimePicker_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "DateTimePicker_AutoAdjustLayout", dynlib: dllname.}
proc DateTimePicker_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "DateTimePicker_FixDesignFontsPPI", dynlib: dllname.}
proc DateTimePicker_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "DateTimePicker_ScaleFontsPPI", dynlib: dllname.}
proc DateTimePicker_GetArrowShape*(AObj: pointer): TArrowShape {.importc: "DateTimePicker_GetArrowShape", dynlib: dllname.}
proc DateTimePicker_SetArrowShape*(AObj: pointer, AValue: TArrowShape) {.importc: "DateTimePicker_SetArrowShape", dynlib: dllname.}
proc DateTimePicker_GetAutoAdvance*(AObj: pointer): bool {.importc: "DateTimePicker_GetAutoAdvance", dynlib: dllname.}
proc DateTimePicker_SetAutoAdvance*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetAutoAdvance", dynlib: dllname.}
proc DateTimePicker_GetAutoButtonSize*(AObj: pointer): bool {.importc: "DateTimePicker_GetAutoButtonSize", dynlib: dllname.}
proc DateTimePicker_SetAutoButtonSize*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetAutoButtonSize", dynlib: dllname.}
proc DateTimePicker_GetCascade*(AObj: pointer): bool {.importc: "DateTimePicker_GetCascade", dynlib: dllname.}
proc DateTimePicker_SetCascade*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetCascade", dynlib: dllname.}
proc DateTimePicker_GetCenturyFrom*(AObj: pointer): uint16 {.importc: "DateTimePicker_GetCenturyFrom", dynlib: dllname.}
proc DateTimePicker_SetCenturyFrom*(AObj: pointer, AValue: uint16) {.importc: "DateTimePicker_SetCenturyFrom", dynlib: dllname.}
proc DateTimePicker_GetDateDisplayOrder*(AObj: pointer): TDateDisplayOrder {.importc: "DateTimePicker_GetDateDisplayOrder", dynlib: dllname.}
proc DateTimePicker_SetDateDisplayOrder*(AObj: pointer, AValue: TDateDisplayOrder) {.importc: "DateTimePicker_SetDateDisplayOrder", dynlib: dllname.}
proc DateTimePicker_GetDateSeparator*(AObj: pointer): cstring {.importc: "DateTimePicker_GetDateSeparator", dynlib: dllname.}
proc DateTimePicker_SetDateSeparator*(AObj: pointer, AValue: cstring) {.importc: "DateTimePicker_SetDateSeparator", dynlib: dllname.}
proc DateTimePicker_GetLeadingZeros*(AObj: pointer): bool {.importc: "DateTimePicker_GetLeadingZeros", dynlib: dllname.}
proc DateTimePicker_SetLeadingZeros*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetLeadingZeros", dynlib: dllname.}
proc DateTimePicker_GetMonthNames*(AObj: pointer): cstring {.importc: "DateTimePicker_GetMonthNames", dynlib: dllname.}
proc DateTimePicker_SetMonthNames*(AObj: pointer, AValue: cstring) {.importc: "DateTimePicker_SetMonthNames", dynlib: dllname.}
proc DateTimePicker_GetShowMonthNames*(AObj: pointer): bool {.importc: "DateTimePicker_GetShowMonthNames", dynlib: dllname.}
proc DateTimePicker_SetShowMonthNames*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetShowMonthNames", dynlib: dllname.}
proc DateTimePicker_GetNullInputAllowed*(AObj: pointer): bool {.importc: "DateTimePicker_GetNullInputAllowed", dynlib: dllname.}
proc DateTimePicker_SetNullInputAllowed*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetNullInputAllowed", dynlib: dllname.}
proc DateTimePicker_GetOptions*(AObj: pointer): TDateTimePickerOptions {.importc: "DateTimePicker_GetOptions", dynlib: dllname.}
proc DateTimePicker_SetOptions*(AObj: pointer, AValue: TDateTimePickerOptions) {.importc: "DateTimePicker_SetOptions", dynlib: dllname.}
proc DateTimePicker_GetShowCheckBox*(AObj: pointer): bool {.importc: "DateTimePicker_GetShowCheckBox", dynlib: dllname.}
proc DateTimePicker_SetShowCheckBox*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetShowCheckBox", dynlib: dllname.}
proc DateTimePicker_GetReadOnly*(AObj: pointer): bool {.importc: "DateTimePicker_GetReadOnly", dynlib: dllname.}
proc DateTimePicker_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetReadOnly", dynlib: dllname.}
proc DateTimePicker_GetTextForNullDate*(AObj: pointer): cstring {.importc: "DateTimePicker_GetTextForNullDate", dynlib: dllname.}
proc DateTimePicker_SetTextForNullDate*(AObj: pointer, AValue: cstring) {.importc: "DateTimePicker_SetTextForNullDate", dynlib: dllname.}
proc DateTimePicker_GetTimeDisplay*(AObj: pointer): TTimeDisplay {.importc: "DateTimePicker_GetTimeDisplay", dynlib: dllname.}
proc DateTimePicker_SetTimeDisplay*(AObj: pointer, AValue: TTimeDisplay) {.importc: "DateTimePicker_SetTimeDisplay", dynlib: dllname.}
proc DateTimePicker_GetTimeSeparator*(AObj: pointer): cstring {.importc: "DateTimePicker_GetTimeSeparator", dynlib: dllname.}
proc DateTimePicker_SetTimeSeparator*(AObj: pointer, AValue: cstring) {.importc: "DateTimePicker_SetTimeSeparator", dynlib: dllname.}
proc DateTimePicker_GetTrailingSeparator*(AObj: pointer): bool {.importc: "DateTimePicker_GetTrailingSeparator", dynlib: dllname.}
proc DateTimePicker_SetTrailingSeparator*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetTrailingSeparator", dynlib: dllname.}
proc DateTimePicker_GetUseDefaultSeparators*(AObj: pointer): bool {.importc: "DateTimePicker_GetUseDefaultSeparators", dynlib: dllname.}
proc DateTimePicker_SetUseDefaultSeparators*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetUseDefaultSeparators", dynlib: dllname.}
proc DateTimePicker_GetDroppedDown*(AObj: pointer): bool {.importc: "DateTimePicker_GetDroppedDown", dynlib: dllname.}
proc DateTimePicker_GetDateTime*(AObj: pointer): uint32 {.importc: "DateTimePicker_GetDateTime", dynlib: dllname.}
proc DateTimePicker_SetDateTime*(AObj: pointer, AValue: uint32) {.importc: "DateTimePicker_SetDateTime", dynlib: dllname.}
proc DateTimePicker_GetAlign*(AObj: pointer): TAlign {.importc: "DateTimePicker_GetAlign", dynlib: dllname.}
proc DateTimePicker_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "DateTimePicker_SetAlign", dynlib: dllname.}
proc DateTimePicker_GetAnchors*(AObj: pointer): TAnchors {.importc: "DateTimePicker_GetAnchors", dynlib: dllname.}
proc DateTimePicker_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "DateTimePicker_SetAnchors", dynlib: dllname.}
proc DateTimePicker_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "DateTimePicker_GetBiDiMode", dynlib: dllname.}
proc DateTimePicker_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "DateTimePicker_SetBiDiMode", dynlib: dllname.}
proc DateTimePicker_GetCalAlignment*(AObj: pointer): TDTCalAlignment {.importc: "DateTimePicker_GetCalAlignment", dynlib: dllname.}
proc DateTimePicker_SetCalAlignment*(AObj: pointer, AValue: TDTCalAlignment) {.importc: "DateTimePicker_SetCalAlignment", dynlib: dllname.}
proc DateTimePicker_GetConstraints*(AObj: pointer): pointer {.importc: "DateTimePicker_GetConstraints", dynlib: dllname.}
proc DateTimePicker_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetConstraints", dynlib: dllname.}
proc DateTimePicker_GetDate*(AObj: pointer): uint32 {.importc: "DateTimePicker_GetDate", dynlib: dllname.}
proc DateTimePicker_SetDate*(AObj: pointer, AValue: uint32) {.importc: "DateTimePicker_SetDate", dynlib: dllname.}
proc DateTimePicker_GetTime*(AObj: pointer): uint32 {.importc: "DateTimePicker_GetTime", dynlib: dllname.}
proc DateTimePicker_SetTime*(AObj: pointer, AValue: uint32) {.importc: "DateTimePicker_SetTime", dynlib: dllname.}
proc DateTimePicker_GetChecked*(AObj: pointer): bool {.importc: "DateTimePicker_GetChecked", dynlib: dllname.}
proc DateTimePicker_SetChecked*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetChecked", dynlib: dllname.}
proc DateTimePicker_GetColor*(AObj: pointer): TColor {.importc: "DateTimePicker_GetColor", dynlib: dllname.}
proc DateTimePicker_SetColor*(AObj: pointer, AValue: TColor) {.importc: "DateTimePicker_SetColor", dynlib: dllname.}
proc DateTimePicker_GetDateMode*(AObj: pointer): TDTDateMode {.importc: "DateTimePicker_GetDateMode", dynlib: dllname.}
proc DateTimePicker_SetDateMode*(AObj: pointer, AValue: TDTDateMode) {.importc: "DateTimePicker_SetDateMode", dynlib: dllname.}
proc DateTimePicker_GetDoubleBuffered*(AObj: pointer): bool {.importc: "DateTimePicker_GetDoubleBuffered", dynlib: dllname.}
proc DateTimePicker_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetDoubleBuffered", dynlib: dllname.}
proc DateTimePicker_GetEnabled*(AObj: pointer): bool {.importc: "DateTimePicker_GetEnabled", dynlib: dllname.}
proc DateTimePicker_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetEnabled", dynlib: dllname.}
proc DateTimePicker_GetFont*(AObj: pointer): pointer {.importc: "DateTimePicker_GetFont", dynlib: dllname.}
proc DateTimePicker_SetFont*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetFont", dynlib: dllname.}
proc DateTimePicker_GetMaxDate*(AObj: pointer): uint32 {.importc: "DateTimePicker_GetMaxDate", dynlib: dllname.}
proc DateTimePicker_SetMaxDate*(AObj: pointer, AValue: uint32) {.importc: "DateTimePicker_SetMaxDate", dynlib: dllname.}
proc DateTimePicker_GetMinDate*(AObj: pointer): uint32 {.importc: "DateTimePicker_GetMinDate", dynlib: dllname.}
proc DateTimePicker_SetMinDate*(AObj: pointer, AValue: uint32) {.importc: "DateTimePicker_SetMinDate", dynlib: dllname.}
proc DateTimePicker_GetParentColor*(AObj: pointer): bool {.importc: "DateTimePicker_GetParentColor", dynlib: dllname.}
proc DateTimePicker_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetParentColor", dynlib: dllname.}
proc DateTimePicker_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "DateTimePicker_GetParentDoubleBuffered", dynlib: dllname.}
proc DateTimePicker_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetParentDoubleBuffered", dynlib: dllname.}
proc DateTimePicker_GetParentFont*(AObj: pointer): bool {.importc: "DateTimePicker_GetParentFont", dynlib: dllname.}
proc DateTimePicker_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetParentFont", dynlib: dllname.}
proc DateTimePicker_GetParentShowHint*(AObj: pointer): bool {.importc: "DateTimePicker_GetParentShowHint", dynlib: dllname.}
proc DateTimePicker_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetParentShowHint", dynlib: dllname.}
proc DateTimePicker_GetPopupMenu*(AObj: pointer): pointer {.importc: "DateTimePicker_GetPopupMenu", dynlib: dllname.}
proc DateTimePicker_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetPopupMenu", dynlib: dllname.}
proc DateTimePicker_GetShowHint*(AObj: pointer): bool {.importc: "DateTimePicker_GetShowHint", dynlib: dllname.}
proc DateTimePicker_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetShowHint", dynlib: dllname.}
proc DateTimePicker_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "DateTimePicker_GetTabOrder", dynlib: dllname.}
proc DateTimePicker_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "DateTimePicker_SetTabOrder", dynlib: dllname.}
proc DateTimePicker_GetTabStop*(AObj: pointer): bool {.importc: "DateTimePicker_GetTabStop", dynlib: dllname.}
proc DateTimePicker_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetTabStop", dynlib: dllname.}
proc DateTimePicker_GetVisible*(AObj: pointer): bool {.importc: "DateTimePicker_GetVisible", dynlib: dllname.}
proc DateTimePicker_SetVisible*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetVisible", dynlib: dllname.}
proc DateTimePicker_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DateTimePicker_SetOnClick", dynlib: dllname.}
proc DateTimePicker_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DateTimePicker_SetOnChange", dynlib: dllname.}
proc DateTimePicker_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "DateTimePicker_SetOnContextPopup", dynlib: dllname.}
proc DateTimePicker_SetOnDropDown*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DateTimePicker_SetOnDropDown", dynlib: dllname.}
proc DateTimePicker_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DateTimePicker_SetOnEnter", dynlib: dllname.}
proc DateTimePicker_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DateTimePicker_SetOnExit", dynlib: dllname.}
proc DateTimePicker_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "DateTimePicker_SetOnKeyDown", dynlib: dllname.}
proc DateTimePicker_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "DateTimePicker_SetOnKeyPress", dynlib: dllname.}
proc DateTimePicker_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "DateTimePicker_SetOnKeyUp", dynlib: dllname.}
proc DateTimePicker_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DateTimePicker_SetOnMouseEnter", dynlib: dllname.}
proc DateTimePicker_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DateTimePicker_SetOnMouseLeave", dynlib: dllname.}
proc DateTimePicker_GetDockClientCount*(AObj: pointer): int32 {.importc: "DateTimePicker_GetDockClientCount", dynlib: dllname.}
proc DateTimePicker_GetDockSite*(AObj: pointer): bool {.importc: "DateTimePicker_GetDockSite", dynlib: dllname.}
proc DateTimePicker_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetDockSite", dynlib: dllname.}
proc DateTimePicker_GetMouseInClient*(AObj: pointer): bool {.importc: "DateTimePicker_GetMouseInClient", dynlib: dllname.}
proc DateTimePicker_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "DateTimePicker_GetVisibleDockClientCount", dynlib: dllname.}
proc DateTimePicker_GetBrush*(AObj: pointer): pointer {.importc: "DateTimePicker_GetBrush", dynlib: dllname.}
proc DateTimePicker_GetControlCount*(AObj: pointer): int32 {.importc: "DateTimePicker_GetControlCount", dynlib: dllname.}
proc DateTimePicker_GetHandle*(AObj: pointer): HWND {.importc: "DateTimePicker_GetHandle", dynlib: dllname.}
proc DateTimePicker_GetParentWindow*(AObj: pointer): HWND {.importc: "DateTimePicker_GetParentWindow", dynlib: dllname.}
proc DateTimePicker_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "DateTimePicker_SetParentWindow", dynlib: dllname.}
proc DateTimePicker_GetShowing*(AObj: pointer): bool {.importc: "DateTimePicker_GetShowing", dynlib: dllname.}
proc DateTimePicker_GetUseDockManager*(AObj: pointer): bool {.importc: "DateTimePicker_GetUseDockManager", dynlib: dllname.}
proc DateTimePicker_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "DateTimePicker_SetUseDockManager", dynlib: dllname.}
proc DateTimePicker_GetAction*(AObj: pointer): pointer {.importc: "DateTimePicker_GetAction", dynlib: dllname.}
proc DateTimePicker_SetAction*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetAction", dynlib: dllname.}
proc DateTimePicker_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "DateTimePicker_GetBoundsRect", dynlib: dllname.}
proc DateTimePicker_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "DateTimePicker_SetBoundsRect", dynlib: dllname.}
proc DateTimePicker_GetClientHeight*(AObj: pointer): int32 {.importc: "DateTimePicker_GetClientHeight", dynlib: dllname.}
proc DateTimePicker_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "DateTimePicker_SetClientHeight", dynlib: dllname.}
proc DateTimePicker_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "DateTimePicker_GetClientOrigin", dynlib: dllname.}
proc DateTimePicker_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "DateTimePicker_GetClientRect", dynlib: dllname.}
proc DateTimePicker_GetClientWidth*(AObj: pointer): int32 {.importc: "DateTimePicker_GetClientWidth", dynlib: dllname.}
proc DateTimePicker_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "DateTimePicker_SetClientWidth", dynlib: dllname.}
proc DateTimePicker_GetControlState*(AObj: pointer): TControlState {.importc: "DateTimePicker_GetControlState", dynlib: dllname.}
proc DateTimePicker_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "DateTimePicker_SetControlState", dynlib: dllname.}
proc DateTimePicker_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "DateTimePicker_GetControlStyle", dynlib: dllname.}
proc DateTimePicker_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "DateTimePicker_SetControlStyle", dynlib: dllname.}
proc DateTimePicker_GetFloating*(AObj: pointer): bool {.importc: "DateTimePicker_GetFloating", dynlib: dllname.}
proc DateTimePicker_GetParent*(AObj: pointer): pointer {.importc: "DateTimePicker_GetParent", dynlib: dllname.}
proc DateTimePicker_SetParent*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetParent", dynlib: dllname.}
proc DateTimePicker_GetLeft*(AObj: pointer): int32 {.importc: "DateTimePicker_GetLeft", dynlib: dllname.}
proc DateTimePicker_SetLeft*(AObj: pointer, AValue: int32) {.importc: "DateTimePicker_SetLeft", dynlib: dllname.}
proc DateTimePicker_GetTop*(AObj: pointer): int32 {.importc: "DateTimePicker_GetTop", dynlib: dllname.}
proc DateTimePicker_SetTop*(AObj: pointer, AValue: int32) {.importc: "DateTimePicker_SetTop", dynlib: dllname.}
proc DateTimePicker_GetWidth*(AObj: pointer): int32 {.importc: "DateTimePicker_GetWidth", dynlib: dllname.}
proc DateTimePicker_SetWidth*(AObj: pointer, AValue: int32) {.importc: "DateTimePicker_SetWidth", dynlib: dllname.}
proc DateTimePicker_GetHeight*(AObj: pointer): int32 {.importc: "DateTimePicker_GetHeight", dynlib: dllname.}
proc DateTimePicker_SetHeight*(AObj: pointer, AValue: int32) {.importc: "DateTimePicker_SetHeight", dynlib: dllname.}
proc DateTimePicker_GetCursor*(AObj: pointer): TCursor {.importc: "DateTimePicker_GetCursor", dynlib: dllname.}
proc DateTimePicker_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "DateTimePicker_SetCursor", dynlib: dllname.}
proc DateTimePicker_GetHint*(AObj: pointer): cstring {.importc: "DateTimePicker_GetHint", dynlib: dllname.}
proc DateTimePicker_SetHint*(AObj: pointer, AValue: cstring) {.importc: "DateTimePicker_SetHint", dynlib: dllname.}
proc DateTimePicker_GetComponentCount*(AObj: pointer): int32 {.importc: "DateTimePicker_GetComponentCount", dynlib: dllname.}
proc DateTimePicker_GetComponentIndex*(AObj: pointer): int32 {.importc: "DateTimePicker_GetComponentIndex", dynlib: dllname.}
proc DateTimePicker_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "DateTimePicker_SetComponentIndex", dynlib: dllname.}
proc DateTimePicker_GetOwner*(AObj: pointer): pointer {.importc: "DateTimePicker_GetOwner", dynlib: dllname.}
proc DateTimePicker_GetName*(AObj: pointer): cstring {.importc: "DateTimePicker_GetName", dynlib: dllname.}
proc DateTimePicker_SetName*(AObj: pointer, AValue: cstring) {.importc: "DateTimePicker_SetName", dynlib: dllname.}
proc DateTimePicker_GetTag*(AObj: pointer): int {.importc: "DateTimePicker_GetTag", dynlib: dllname.}
proc DateTimePicker_SetTag*(AObj: pointer, AValue: int) {.importc: "DateTimePicker_SetTag", dynlib: dllname.}
proc DateTimePicker_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "DateTimePicker_GetAnchorSideLeft", dynlib: dllname.}
proc DateTimePicker_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetAnchorSideLeft", dynlib: dllname.}
proc DateTimePicker_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "DateTimePicker_GetAnchorSideTop", dynlib: dllname.}
proc DateTimePicker_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetAnchorSideTop", dynlib: dllname.}
proc DateTimePicker_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "DateTimePicker_GetAnchorSideRight", dynlib: dllname.}
proc DateTimePicker_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetAnchorSideRight", dynlib: dllname.}
proc DateTimePicker_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "DateTimePicker_GetAnchorSideBottom", dynlib: dllname.}
proc DateTimePicker_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetAnchorSideBottom", dynlib: dllname.}
proc DateTimePicker_GetChildSizing*(AObj: pointer): pointer {.importc: "DateTimePicker_GetChildSizing", dynlib: dllname.}
proc DateTimePicker_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetChildSizing", dynlib: dllname.}
proc DateTimePicker_GetBorderSpacing*(AObj: pointer): pointer {.importc: "DateTimePicker_GetBorderSpacing", dynlib: dllname.}
proc DateTimePicker_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "DateTimePicker_SetBorderSpacing", dynlib: dllname.}
proc DateTimePicker_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "DateTimePicker_GetDockClients", dynlib: dllname.}
proc DateTimePicker_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "DateTimePicker_GetControls", dynlib: dllname.}
proc DateTimePicker_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "DateTimePicker_GetComponents", dynlib: dllname.}
proc DateTimePicker_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "DateTimePicker_GetAnchorSide", dynlib: dllname.}
proc DateTimePicker_StaticClassType*(): TClass {.importc: "DateTimePicker_StaticClassType", dynlib: dllname.}
# ----------------- TMonthCalendar ----------------------
proc MonthCalendar_Create*(AOwner: pointer): pointer {.importc: "MonthCalendar_Create", dynlib: dllname.}
proc MonthCalendar_Free*(AObj: pointer) {.importc: "MonthCalendar_Free", dynlib: dllname.}
proc MonthCalendar_CanFocus*(AObj: pointer): bool {.importc: "MonthCalendar_CanFocus", dynlib: dllname.}
proc MonthCalendar_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "MonthCalendar_ContainsControl", dynlib: dllname.}
proc MonthCalendar_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "MonthCalendar_ControlAtPos", dynlib: dllname.}
proc MonthCalendar_DisableAlign*(AObj: pointer) {.importc: "MonthCalendar_DisableAlign", dynlib: dllname.}
proc MonthCalendar_EnableAlign*(AObj: pointer) {.importc: "MonthCalendar_EnableAlign", dynlib: dllname.}
proc MonthCalendar_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "MonthCalendar_FindChildControl", dynlib: dllname.}
proc MonthCalendar_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "MonthCalendar_FlipChildren", dynlib: dllname.}
proc MonthCalendar_Focused*(AObj: pointer): bool {.importc: "MonthCalendar_Focused", dynlib: dllname.}
proc MonthCalendar_HandleAllocated*(AObj: pointer): bool {.importc: "MonthCalendar_HandleAllocated", dynlib: dllname.}
proc MonthCalendar_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "MonthCalendar_InsertControl", dynlib: dllname.}
proc MonthCalendar_Invalidate*(AObj: pointer) {.importc: "MonthCalendar_Invalidate", dynlib: dllname.}
proc MonthCalendar_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "MonthCalendar_PaintTo", dynlib: dllname.}
proc MonthCalendar_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "MonthCalendar_RemoveControl", dynlib: dllname.}
proc MonthCalendar_Realign*(AObj: pointer) {.importc: "MonthCalendar_Realign", dynlib: dllname.}
proc MonthCalendar_Repaint*(AObj: pointer) {.importc: "MonthCalendar_Repaint", dynlib: dllname.}
proc MonthCalendar_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "MonthCalendar_ScaleBy", dynlib: dllname.}
proc MonthCalendar_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "MonthCalendar_ScrollBy", dynlib: dllname.}
proc MonthCalendar_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "MonthCalendar_SetBounds", dynlib: dllname.}
proc MonthCalendar_SetFocus*(AObj: pointer) {.importc: "MonthCalendar_SetFocus", dynlib: dllname.}
proc MonthCalendar_Update*(AObj: pointer) {.importc: "MonthCalendar_Update", dynlib: dllname.}
proc MonthCalendar_BringToFront*(AObj: pointer) {.importc: "MonthCalendar_BringToFront", dynlib: dllname.}
proc MonthCalendar_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "MonthCalendar_ClientToScreen", dynlib: dllname.}
proc MonthCalendar_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "MonthCalendar_ClientToParent", dynlib: dllname.}
proc MonthCalendar_Dragging*(AObj: pointer): bool {.importc: "MonthCalendar_Dragging", dynlib: dllname.}
proc MonthCalendar_HasParent*(AObj: pointer): bool {.importc: "MonthCalendar_HasParent", dynlib: dllname.}
proc MonthCalendar_Hide*(AObj: pointer) {.importc: "MonthCalendar_Hide", dynlib: dllname.}
proc MonthCalendar_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "MonthCalendar_Perform", dynlib: dllname.}
proc MonthCalendar_Refresh*(AObj: pointer) {.importc: "MonthCalendar_Refresh", dynlib: dllname.}
proc MonthCalendar_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "MonthCalendar_ScreenToClient", dynlib: dllname.}
proc MonthCalendar_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "MonthCalendar_ParentToClient", dynlib: dllname.}
proc MonthCalendar_SendToBack*(AObj: pointer) {.importc: "MonthCalendar_SendToBack", dynlib: dllname.}
proc MonthCalendar_Show*(AObj: pointer) {.importc: "MonthCalendar_Show", dynlib: dllname.}
proc MonthCalendar_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "MonthCalendar_GetTextBuf", dynlib: dllname.}
proc MonthCalendar_GetTextLen*(AObj: pointer): int32 {.importc: "MonthCalendar_GetTextLen", dynlib: dllname.}
proc MonthCalendar_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "MonthCalendar_SetTextBuf", dynlib: dllname.}
proc MonthCalendar_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "MonthCalendar_FindComponent", dynlib: dllname.}
proc MonthCalendar_GetNamePath*(AObj: pointer): cstring {.importc: "MonthCalendar_GetNamePath", dynlib: dllname.}
proc MonthCalendar_Assign*(AObj: pointer, Source: pointer) {.importc: "MonthCalendar_Assign", dynlib: dllname.}
proc MonthCalendar_ClassType*(AObj: pointer): TClass {.importc: "MonthCalendar_ClassType", dynlib: dllname.}
proc MonthCalendar_ClassName*(AObj: pointer): cstring {.importc: "MonthCalendar_ClassName", dynlib: dllname.}
proc MonthCalendar_InstanceSize*(AObj: pointer): int32 {.importc: "MonthCalendar_InstanceSize", dynlib: dllname.}
proc MonthCalendar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "MonthCalendar_InheritsFrom", dynlib: dllname.}
proc MonthCalendar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "MonthCalendar_Equals", dynlib: dllname.}
proc MonthCalendar_GetHashCode*(AObj: pointer): int32 {.importc: "MonthCalendar_GetHashCode", dynlib: dllname.}
proc MonthCalendar_ToString*(AObj: pointer): cstring {.importc: "MonthCalendar_ToString", dynlib: dllname.}
proc MonthCalendar_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "MonthCalendar_AnchorToNeighbour", dynlib: dllname.}
proc MonthCalendar_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "MonthCalendar_AnchorParallel", dynlib: dllname.}
proc MonthCalendar_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "MonthCalendar_AnchorHorizontalCenterTo", dynlib: dllname.}
proc MonthCalendar_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "MonthCalendar_AnchorVerticalCenterTo", dynlib: dllname.}
proc MonthCalendar_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "MonthCalendar_AnchorSame", dynlib: dllname.}
proc MonthCalendar_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "MonthCalendar_AnchorAsAlign", dynlib: dllname.}
proc MonthCalendar_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "MonthCalendar_AnchorClient", dynlib: dllname.}
proc MonthCalendar_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_ScaleDesignToForm", dynlib: dllname.}
proc MonthCalendar_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_ScaleFormToDesign", dynlib: dllname.}
proc MonthCalendar_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_Scale96ToForm", dynlib: dllname.}
proc MonthCalendar_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_ScaleFormTo96", dynlib: dllname.}
proc MonthCalendar_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_Scale96ToFont", dynlib: dllname.}
proc MonthCalendar_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_ScaleFontTo96", dynlib: dllname.}
proc MonthCalendar_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_ScaleScreenToFont", dynlib: dllname.}
proc MonthCalendar_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_ScaleFontToScreen", dynlib: dllname.}
proc MonthCalendar_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_Scale96ToScreen", dynlib: dllname.}
proc MonthCalendar_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MonthCalendar_ScaleScreenTo96", dynlib: dllname.}
proc MonthCalendar_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "MonthCalendar_AutoAdjustLayout", dynlib: dllname.}
proc MonthCalendar_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "MonthCalendar_FixDesignFontsPPI", dynlib: dllname.}
proc MonthCalendar_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "MonthCalendar_ScaleFontsPPI", dynlib: dllname.}
proc MonthCalendar_GetDateTime*(AObj: pointer): uint32 {.importc: "MonthCalendar_GetDateTime", dynlib: dllname.}
proc MonthCalendar_SetDateTime*(AObj: pointer, AValue: uint32) {.importc: "MonthCalendar_SetDateTime", dynlib: dllname.}
proc MonthCalendar_GetAlign*(AObj: pointer): TAlign {.importc: "MonthCalendar_GetAlign", dynlib: dllname.}
proc MonthCalendar_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "MonthCalendar_SetAlign", dynlib: dllname.}
proc MonthCalendar_GetAnchors*(AObj: pointer): TAnchors {.importc: "MonthCalendar_GetAnchors", dynlib: dllname.}
proc MonthCalendar_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "MonthCalendar_SetAnchors", dynlib: dllname.}
proc MonthCalendar_GetAutoSize*(AObj: pointer): bool {.importc: "MonthCalendar_GetAutoSize", dynlib: dllname.}
proc MonthCalendar_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetAutoSize", dynlib: dllname.}
proc MonthCalendar_GetBorderWidth*(AObj: pointer): int32 {.importc: "MonthCalendar_GetBorderWidth", dynlib: dllname.}
proc MonthCalendar_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetBorderWidth", dynlib: dllname.}
proc MonthCalendar_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "MonthCalendar_GetBiDiMode", dynlib: dllname.}
proc MonthCalendar_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "MonthCalendar_SetBiDiMode", dynlib: dllname.}
proc MonthCalendar_GetConstraints*(AObj: pointer): pointer {.importc: "MonthCalendar_GetConstraints", dynlib: dllname.}
proc MonthCalendar_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetConstraints", dynlib: dllname.}
proc MonthCalendar_GetDate*(AObj: pointer): uint32 {.importc: "MonthCalendar_GetDate", dynlib: dllname.}
proc MonthCalendar_SetDate*(AObj: pointer, AValue: uint32) {.importc: "MonthCalendar_SetDate", dynlib: dllname.}
proc MonthCalendar_GetDoubleBuffered*(AObj: pointer): bool {.importc: "MonthCalendar_GetDoubleBuffered", dynlib: dllname.}
proc MonthCalendar_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetDoubleBuffered", dynlib: dllname.}
proc MonthCalendar_GetDragCursor*(AObj: pointer): TCursor {.importc: "MonthCalendar_GetDragCursor", dynlib: dllname.}
proc MonthCalendar_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "MonthCalendar_SetDragCursor", dynlib: dllname.}
proc MonthCalendar_GetDragKind*(AObj: pointer): TDragKind {.importc: "MonthCalendar_GetDragKind", dynlib: dllname.}
proc MonthCalendar_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "MonthCalendar_SetDragKind", dynlib: dllname.}
proc MonthCalendar_GetDragMode*(AObj: pointer): TDragMode {.importc: "MonthCalendar_GetDragMode", dynlib: dllname.}
proc MonthCalendar_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "MonthCalendar_SetDragMode", dynlib: dllname.}
proc MonthCalendar_GetEnabled*(AObj: pointer): bool {.importc: "MonthCalendar_GetEnabled", dynlib: dllname.}
proc MonthCalendar_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetEnabled", dynlib: dllname.}
proc MonthCalendar_GetFont*(AObj: pointer): pointer {.importc: "MonthCalendar_GetFont", dynlib: dllname.}
proc MonthCalendar_SetFont*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetFont", dynlib: dllname.}
proc MonthCalendar_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "MonthCalendar_GetParentDoubleBuffered", dynlib: dllname.}
proc MonthCalendar_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetParentDoubleBuffered", dynlib: dllname.}
proc MonthCalendar_GetPopupMenu*(AObj: pointer): pointer {.importc: "MonthCalendar_GetPopupMenu", dynlib: dllname.}
proc MonthCalendar_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetPopupMenu", dynlib: dllname.}
proc MonthCalendar_GetShowHint*(AObj: pointer): bool {.importc: "MonthCalendar_GetShowHint", dynlib: dllname.}
proc MonthCalendar_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetShowHint", dynlib: dllname.}
proc MonthCalendar_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "MonthCalendar_GetTabOrder", dynlib: dllname.}
proc MonthCalendar_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "MonthCalendar_SetTabOrder", dynlib: dllname.}
proc MonthCalendar_GetTabStop*(AObj: pointer): bool {.importc: "MonthCalendar_GetTabStop", dynlib: dllname.}
proc MonthCalendar_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetTabStop", dynlib: dllname.}
proc MonthCalendar_GetVisible*(AObj: pointer): bool {.importc: "MonthCalendar_GetVisible", dynlib: dllname.}
proc MonthCalendar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetVisible", dynlib: dllname.}
proc MonthCalendar_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MonthCalendar_SetOnClick", dynlib: dllname.}
proc MonthCalendar_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "MonthCalendar_SetOnContextPopup", dynlib: dllname.}
proc MonthCalendar_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MonthCalendar_SetOnDblClick", dynlib: dllname.}
proc MonthCalendar_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "MonthCalendar_SetOnDragDrop", dynlib: dllname.}
proc MonthCalendar_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "MonthCalendar_SetOnDragOver", dynlib: dllname.}
proc MonthCalendar_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "MonthCalendar_SetOnEndDock", dynlib: dllname.}
proc MonthCalendar_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "MonthCalendar_SetOnEndDrag", dynlib: dllname.}
proc MonthCalendar_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MonthCalendar_SetOnEnter", dynlib: dllname.}
proc MonthCalendar_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MonthCalendar_SetOnExit", dynlib: dllname.}
proc MonthCalendar_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "MonthCalendar_SetOnKeyDown", dynlib: dllname.}
proc MonthCalendar_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "MonthCalendar_SetOnKeyPress", dynlib: dllname.}
proc MonthCalendar_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "MonthCalendar_SetOnKeyUp", dynlib: dllname.}
proc MonthCalendar_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MonthCalendar_SetOnMouseEnter", dynlib: dllname.}
proc MonthCalendar_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MonthCalendar_SetOnMouseLeave", dynlib: dllname.}
proc MonthCalendar_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "MonthCalendar_SetOnStartDock", dynlib: dllname.}
proc MonthCalendar_GetDockClientCount*(AObj: pointer): int32 {.importc: "MonthCalendar_GetDockClientCount", dynlib: dllname.}
proc MonthCalendar_GetDockSite*(AObj: pointer): bool {.importc: "MonthCalendar_GetDockSite", dynlib: dllname.}
proc MonthCalendar_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetDockSite", dynlib: dllname.}
proc MonthCalendar_GetMouseInClient*(AObj: pointer): bool {.importc: "MonthCalendar_GetMouseInClient", dynlib: dllname.}
proc MonthCalendar_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "MonthCalendar_GetVisibleDockClientCount", dynlib: dllname.}
proc MonthCalendar_GetBrush*(AObj: pointer): pointer {.importc: "MonthCalendar_GetBrush", dynlib: dllname.}
proc MonthCalendar_GetControlCount*(AObj: pointer): int32 {.importc: "MonthCalendar_GetControlCount", dynlib: dllname.}
proc MonthCalendar_GetHandle*(AObj: pointer): HWND {.importc: "MonthCalendar_GetHandle", dynlib: dllname.}
proc MonthCalendar_GetParentWindow*(AObj: pointer): HWND {.importc: "MonthCalendar_GetParentWindow", dynlib: dllname.}
proc MonthCalendar_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "MonthCalendar_SetParentWindow", dynlib: dllname.}
proc MonthCalendar_GetShowing*(AObj: pointer): bool {.importc: "MonthCalendar_GetShowing", dynlib: dllname.}
proc MonthCalendar_GetUseDockManager*(AObj: pointer): bool {.importc: "MonthCalendar_GetUseDockManager", dynlib: dllname.}
proc MonthCalendar_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "MonthCalendar_SetUseDockManager", dynlib: dllname.}
proc MonthCalendar_GetAction*(AObj: pointer): pointer {.importc: "MonthCalendar_GetAction", dynlib: dllname.}
proc MonthCalendar_SetAction*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetAction", dynlib: dllname.}
proc MonthCalendar_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "MonthCalendar_GetBoundsRect", dynlib: dllname.}
proc MonthCalendar_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "MonthCalendar_SetBoundsRect", dynlib: dllname.}
proc MonthCalendar_GetClientHeight*(AObj: pointer): int32 {.importc: "MonthCalendar_GetClientHeight", dynlib: dllname.}
proc MonthCalendar_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetClientHeight", dynlib: dllname.}
proc MonthCalendar_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "MonthCalendar_GetClientOrigin", dynlib: dllname.}
proc MonthCalendar_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "MonthCalendar_GetClientRect", dynlib: dllname.}
proc MonthCalendar_GetClientWidth*(AObj: pointer): int32 {.importc: "MonthCalendar_GetClientWidth", dynlib: dllname.}
proc MonthCalendar_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetClientWidth", dynlib: dllname.}
proc MonthCalendar_GetControlState*(AObj: pointer): TControlState {.importc: "MonthCalendar_GetControlState", dynlib: dllname.}
proc MonthCalendar_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "MonthCalendar_SetControlState", dynlib: dllname.}
proc MonthCalendar_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "MonthCalendar_GetControlStyle", dynlib: dllname.}
proc MonthCalendar_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "MonthCalendar_SetControlStyle", dynlib: dllname.}
proc MonthCalendar_GetFloating*(AObj: pointer): bool {.importc: "MonthCalendar_GetFloating", dynlib: dllname.}
proc MonthCalendar_GetParent*(AObj: pointer): pointer {.importc: "MonthCalendar_GetParent", dynlib: dllname.}
proc MonthCalendar_SetParent*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetParent", dynlib: dllname.}
proc MonthCalendar_GetLeft*(AObj: pointer): int32 {.importc: "MonthCalendar_GetLeft", dynlib: dllname.}
proc MonthCalendar_SetLeft*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetLeft", dynlib: dllname.}
proc MonthCalendar_GetTop*(AObj: pointer): int32 {.importc: "MonthCalendar_GetTop", dynlib: dllname.}
proc MonthCalendar_SetTop*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetTop", dynlib: dllname.}
proc MonthCalendar_GetWidth*(AObj: pointer): int32 {.importc: "MonthCalendar_GetWidth", dynlib: dllname.}
proc MonthCalendar_SetWidth*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetWidth", dynlib: dllname.}
proc MonthCalendar_GetHeight*(AObj: pointer): int32 {.importc: "MonthCalendar_GetHeight", dynlib: dllname.}
proc MonthCalendar_SetHeight*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetHeight", dynlib: dllname.}
proc MonthCalendar_GetCursor*(AObj: pointer): TCursor {.importc: "MonthCalendar_GetCursor", dynlib: dllname.}
proc MonthCalendar_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "MonthCalendar_SetCursor", dynlib: dllname.}
proc MonthCalendar_GetHint*(AObj: pointer): cstring {.importc: "MonthCalendar_GetHint", dynlib: dllname.}
proc MonthCalendar_SetHint*(AObj: pointer, AValue: cstring) {.importc: "MonthCalendar_SetHint", dynlib: dllname.}
proc MonthCalendar_GetComponentCount*(AObj: pointer): int32 {.importc: "MonthCalendar_GetComponentCount", dynlib: dllname.}
proc MonthCalendar_GetComponentIndex*(AObj: pointer): int32 {.importc: "MonthCalendar_GetComponentIndex", dynlib: dllname.}
proc MonthCalendar_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "MonthCalendar_SetComponentIndex", dynlib: dllname.}
proc MonthCalendar_GetOwner*(AObj: pointer): pointer {.importc: "MonthCalendar_GetOwner", dynlib: dllname.}
proc MonthCalendar_GetName*(AObj: pointer): cstring {.importc: "MonthCalendar_GetName", dynlib: dllname.}
proc MonthCalendar_SetName*(AObj: pointer, AValue: cstring) {.importc: "MonthCalendar_SetName", dynlib: dllname.}
proc MonthCalendar_GetTag*(AObj: pointer): int {.importc: "MonthCalendar_GetTag", dynlib: dllname.}
proc MonthCalendar_SetTag*(AObj: pointer, AValue: int) {.importc: "MonthCalendar_SetTag", dynlib: dllname.}
proc MonthCalendar_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "MonthCalendar_GetAnchorSideLeft", dynlib: dllname.}
proc MonthCalendar_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetAnchorSideLeft", dynlib: dllname.}
proc MonthCalendar_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "MonthCalendar_GetAnchorSideTop", dynlib: dllname.}
proc MonthCalendar_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetAnchorSideTop", dynlib: dllname.}
proc MonthCalendar_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "MonthCalendar_GetAnchorSideRight", dynlib: dllname.}
proc MonthCalendar_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetAnchorSideRight", dynlib: dllname.}
proc MonthCalendar_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "MonthCalendar_GetAnchorSideBottom", dynlib: dllname.}
proc MonthCalendar_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetAnchorSideBottom", dynlib: dllname.}
proc MonthCalendar_GetChildSizing*(AObj: pointer): pointer {.importc: "MonthCalendar_GetChildSizing", dynlib: dllname.}
proc MonthCalendar_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetChildSizing", dynlib: dllname.}
proc MonthCalendar_GetBorderSpacing*(AObj: pointer): pointer {.importc: "MonthCalendar_GetBorderSpacing", dynlib: dllname.}
proc MonthCalendar_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "MonthCalendar_SetBorderSpacing", dynlib: dllname.}
proc MonthCalendar_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "MonthCalendar_GetDockClients", dynlib: dllname.}
proc MonthCalendar_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "MonthCalendar_GetControls", dynlib: dllname.}
proc MonthCalendar_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "MonthCalendar_GetComponents", dynlib: dllname.}
proc MonthCalendar_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "MonthCalendar_GetAnchorSide", dynlib: dllname.}
proc MonthCalendar_StaticClassType*(): TClass {.importc: "MonthCalendar_StaticClassType", dynlib: dllname.}
# ----------------- TListView ----------------------
proc ListView_Create*(AOwner: pointer): pointer {.importc: "ListView_Create", dynlib: dllname.}
proc ListView_Free*(AObj: pointer) {.importc: "ListView_Free", dynlib: dllname.}
proc ListView_AddItem*(AObj: pointer, Item: cstring, AObject: pointer) {.importc: "ListView_AddItem", dynlib: dllname.}
proc ListView_AlphaSort*(AObj: pointer): bool {.importc: "ListView_AlphaSort", dynlib: dllname.}
proc ListView_Clear*(AObj: pointer) {.importc: "ListView_Clear", dynlib: dllname.}
proc ListView_ClearSelection*(AObj: pointer) {.importc: "ListView_ClearSelection", dynlib: dllname.}
proc ListView_DeleteSelected*(AObj: pointer) {.importc: "ListView_DeleteSelected", dynlib: dllname.}
proc ListView_IsEditing*(AObj: pointer): bool {.importc: "ListView_IsEditing", dynlib: dllname.}
proc ListView_SelectAll*(AObj: pointer) {.importc: "ListView_SelectAll", dynlib: dllname.}
proc ListView_CustomSort*(AObj: pointer, SortProc: PFNLVCOMPARE, lParam: int): bool {.importc: "ListView_CustomSort", dynlib: dllname.}
proc ListView_CanFocus*(AObj: pointer): bool {.importc: "ListView_CanFocus", dynlib: dllname.}
proc ListView_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ListView_ContainsControl", dynlib: dllname.}
proc ListView_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ListView_ControlAtPos", dynlib: dllname.}
proc ListView_DisableAlign*(AObj: pointer) {.importc: "ListView_DisableAlign", dynlib: dllname.}
proc ListView_EnableAlign*(AObj: pointer) {.importc: "ListView_EnableAlign", dynlib: dllname.}
proc ListView_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ListView_FindChildControl", dynlib: dllname.}
proc ListView_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ListView_FlipChildren", dynlib: dllname.}
proc ListView_Focused*(AObj: pointer): bool {.importc: "ListView_Focused", dynlib: dllname.}
proc ListView_HandleAllocated*(AObj: pointer): bool {.importc: "ListView_HandleAllocated", dynlib: dllname.}
proc ListView_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ListView_InsertControl", dynlib: dllname.}
proc ListView_Invalidate*(AObj: pointer) {.importc: "ListView_Invalidate", dynlib: dllname.}
proc ListView_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ListView_PaintTo", dynlib: dllname.}
proc ListView_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ListView_RemoveControl", dynlib: dllname.}
proc ListView_Realign*(AObj: pointer) {.importc: "ListView_Realign", dynlib: dllname.}
proc ListView_Repaint*(AObj: pointer) {.importc: "ListView_Repaint", dynlib: dllname.}
proc ListView_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ListView_ScaleBy", dynlib: dllname.}
proc ListView_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ListView_ScrollBy", dynlib: dllname.}
proc ListView_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ListView_SetBounds", dynlib: dllname.}
proc ListView_SetFocus*(AObj: pointer) {.importc: "ListView_SetFocus", dynlib: dllname.}
proc ListView_Update*(AObj: pointer) {.importc: "ListView_Update", dynlib: dllname.}
proc ListView_BringToFront*(AObj: pointer) {.importc: "ListView_BringToFront", dynlib: dllname.}
proc ListView_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ListView_ClientToScreen", dynlib: dllname.}
proc ListView_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ListView_ClientToParent", dynlib: dllname.}
proc ListView_Dragging*(AObj: pointer): bool {.importc: "ListView_Dragging", dynlib: dllname.}
proc ListView_HasParent*(AObj: pointer): bool {.importc: "ListView_HasParent", dynlib: dllname.}
proc ListView_Hide*(AObj: pointer) {.importc: "ListView_Hide", dynlib: dllname.}
proc ListView_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ListView_Perform", dynlib: dllname.}
proc ListView_Refresh*(AObj: pointer) {.importc: "ListView_Refresh", dynlib: dllname.}
proc ListView_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ListView_ScreenToClient", dynlib: dllname.}
proc ListView_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ListView_ParentToClient", dynlib: dllname.}
proc ListView_SendToBack*(AObj: pointer) {.importc: "ListView_SendToBack", dynlib: dllname.}
proc ListView_Show*(AObj: pointer) {.importc: "ListView_Show", dynlib: dllname.}
proc ListView_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ListView_GetTextBuf", dynlib: dllname.}
proc ListView_GetTextLen*(AObj: pointer): int32 {.importc: "ListView_GetTextLen", dynlib: dllname.}
proc ListView_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ListView_SetTextBuf", dynlib: dllname.}
proc ListView_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ListView_FindComponent", dynlib: dllname.}
proc ListView_GetNamePath*(AObj: pointer): cstring {.importc: "ListView_GetNamePath", dynlib: dllname.}
proc ListView_Assign*(AObj: pointer, Source: pointer) {.importc: "ListView_Assign", dynlib: dllname.}
proc ListView_ClassType*(AObj: pointer): TClass {.importc: "ListView_ClassType", dynlib: dllname.}
proc ListView_ClassName*(AObj: pointer): cstring {.importc: "ListView_ClassName", dynlib: dllname.}
proc ListView_InstanceSize*(AObj: pointer): int32 {.importc: "ListView_InstanceSize", dynlib: dllname.}
proc ListView_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ListView_InheritsFrom", dynlib: dllname.}
proc ListView_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ListView_Equals", dynlib: dllname.}
proc ListView_GetHashCode*(AObj: pointer): int32 {.importc: "ListView_GetHashCode", dynlib: dllname.}
proc ListView_ToString*(AObj: pointer): cstring {.importc: "ListView_ToString", dynlib: dllname.}
proc ListView_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ListView_AnchorToNeighbour", dynlib: dllname.}
proc ListView_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ListView_AnchorParallel", dynlib: dllname.}
proc ListView_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ListView_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ListView_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ListView_AnchorVerticalCenterTo", dynlib: dllname.}
proc ListView_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ListView_AnchorSame", dynlib: dllname.}
proc ListView_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ListView_AnchorAsAlign", dynlib: dllname.}
proc ListView_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ListView_AnchorClient", dynlib: dllname.}
proc ListView_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_ScaleDesignToForm", dynlib: dllname.}
proc ListView_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_ScaleFormToDesign", dynlib: dllname.}
proc ListView_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_Scale96ToForm", dynlib: dllname.}
proc ListView_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_ScaleFormTo96", dynlib: dllname.}
proc ListView_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_Scale96ToFont", dynlib: dllname.}
proc ListView_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_ScaleFontTo96", dynlib: dllname.}
proc ListView_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_ScaleScreenToFont", dynlib: dllname.}
proc ListView_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_ScaleFontToScreen", dynlib: dllname.}
proc ListView_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_Scale96ToScreen", dynlib: dllname.}
proc ListView_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ListView_ScaleScreenTo96", dynlib: dllname.}
proc ListView_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ListView_AutoAdjustLayout", dynlib: dllname.}
proc ListView_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ListView_FixDesignFontsPPI", dynlib: dllname.}
proc ListView_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ListView_ScaleFontsPPI", dynlib: dllname.}
proc ListView_GetAutoSort*(AObj: pointer): bool {.importc: "ListView_GetAutoSort", dynlib: dllname.}
proc ListView_SetAutoSort*(AObj: pointer, AValue: bool) {.importc: "ListView_SetAutoSort", dynlib: dllname.}
proc ListView_GetAutoSortIndicator*(AObj: pointer): bool {.importc: "ListView_GetAutoSortIndicator", dynlib: dllname.}
proc ListView_SetAutoSortIndicator*(AObj: pointer, AValue: bool) {.importc: "ListView_SetAutoSortIndicator", dynlib: dllname.}
proc ListView_GetAutoWidthLastColumn*(AObj: pointer): bool {.importc: "ListView_GetAutoWidthLastColumn", dynlib: dllname.}
proc ListView_SetAutoWidthLastColumn*(AObj: pointer, AValue: bool) {.importc: "ListView_SetAutoWidthLastColumn", dynlib: dllname.}
proc ListView_GetSmallImagesWidth*(AObj: pointer): int32 {.importc: "ListView_GetSmallImagesWidth", dynlib: dllname.}
proc ListView_SetSmallImagesWidth*(AObj: pointer, AValue: int32) {.importc: "ListView_SetSmallImagesWidth", dynlib: dllname.}
proc ListView_GetSortColumn*(AObj: pointer): int32 {.importc: "ListView_GetSortColumn", dynlib: dllname.}
proc ListView_SetSortColumn*(AObj: pointer, AValue: int32) {.importc: "ListView_SetSortColumn", dynlib: dllname.}
proc ListView_GetSortDirection*(AObj: pointer): TSortDirection {.importc: "ListView_GetSortDirection", dynlib: dllname.}
proc ListView_SetSortDirection*(AObj: pointer, AValue: TSortDirection) {.importc: "ListView_SetSortDirection", dynlib: dllname.}
proc ListView_GetLargeImagesWidth*(AObj: pointer): int32 {.importc: "ListView_GetLargeImagesWidth", dynlib: dllname.}
proc ListView_SetLargeImagesWidth*(AObj: pointer, AValue: int32) {.importc: "ListView_SetLargeImagesWidth", dynlib: dllname.}
proc ListView_GetStateImagesWidth*(AObj: pointer): int32 {.importc: "ListView_GetStateImagesWidth", dynlib: dllname.}
proc ListView_SetStateImagesWidth*(AObj: pointer, AValue: int32) {.importc: "ListView_SetStateImagesWidth", dynlib: dllname.}
proc ListView_GetToolTips*(AObj: pointer): bool {.importc: "ListView_GetToolTips", dynlib: dllname.}
proc ListView_SetToolTips*(AObj: pointer, AValue: bool) {.importc: "ListView_SetToolTips", dynlib: dllname.}
proc ListView_GetScrollBars*(AObj: pointer): TScrollStyle {.importc: "ListView_GetScrollBars", dynlib: dllname.}
proc ListView_SetScrollBars*(AObj: pointer, AValue: TScrollStyle) {.importc: "ListView_SetScrollBars", dynlib: dllname.}
proc ListView_GetAction*(AObj: pointer): pointer {.importc: "ListView_GetAction", dynlib: dllname.}
proc ListView_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetAction", dynlib: dllname.}
proc ListView_GetAlign*(AObj: pointer): TAlign {.importc: "ListView_GetAlign", dynlib: dllname.}
proc ListView_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ListView_SetAlign", dynlib: dllname.}
proc ListView_GetAllocBy*(AObj: pointer): int32 {.importc: "ListView_GetAllocBy", dynlib: dllname.}
proc ListView_SetAllocBy*(AObj: pointer, AValue: int32) {.importc: "ListView_SetAllocBy", dynlib: dllname.}
proc ListView_GetAnchors*(AObj: pointer): TAnchors {.importc: "ListView_GetAnchors", dynlib: dllname.}
proc ListView_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ListView_SetAnchors", dynlib: dllname.}
proc ListView_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ListView_GetBiDiMode", dynlib: dllname.}
proc ListView_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ListView_SetBiDiMode", dynlib: dllname.}
proc ListView_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "ListView_GetBorderStyle", dynlib: dllname.}
proc ListView_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "ListView_SetBorderStyle", dynlib: dllname.}
proc ListView_GetBorderWidth*(AObj: pointer): int32 {.importc: "ListView_GetBorderWidth", dynlib: dllname.}
proc ListView_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "ListView_SetBorderWidth", dynlib: dllname.}
proc ListView_GetCheckboxes*(AObj: pointer): bool {.importc: "ListView_GetCheckboxes", dynlib: dllname.}
proc ListView_SetCheckboxes*(AObj: pointer, AValue: bool) {.importc: "ListView_SetCheckboxes", dynlib: dllname.}
proc ListView_GetColor*(AObj: pointer): TColor {.importc: "ListView_GetColor", dynlib: dllname.}
proc ListView_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ListView_SetColor", dynlib: dllname.}
proc ListView_GetColumns*(AObj: pointer): pointer {.importc: "ListView_GetColumns", dynlib: dllname.}
proc ListView_SetColumns*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetColumns", dynlib: dllname.}
proc ListView_GetColumnClick*(AObj: pointer): bool {.importc: "ListView_GetColumnClick", dynlib: dllname.}
proc ListView_SetColumnClick*(AObj: pointer, AValue: bool) {.importc: "ListView_SetColumnClick", dynlib: dllname.}
proc ListView_GetConstraints*(AObj: pointer): pointer {.importc: "ListView_GetConstraints", dynlib: dllname.}
proc ListView_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetConstraints", dynlib: dllname.}
proc ListView_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ListView_GetDoubleBuffered", dynlib: dllname.}
proc ListView_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ListView_SetDoubleBuffered", dynlib: dllname.}
proc ListView_GetDragCursor*(AObj: pointer): TCursor {.importc: "ListView_GetDragCursor", dynlib: dllname.}
proc ListView_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ListView_SetDragCursor", dynlib: dllname.}
proc ListView_GetDragKind*(AObj: pointer): TDragKind {.importc: "ListView_GetDragKind", dynlib: dllname.}
proc ListView_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ListView_SetDragKind", dynlib: dllname.}
proc ListView_GetDragMode*(AObj: pointer): TDragMode {.importc: "ListView_GetDragMode", dynlib: dllname.}
proc ListView_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ListView_SetDragMode", dynlib: dllname.}
proc ListView_GetEnabled*(AObj: pointer): bool {.importc: "ListView_GetEnabled", dynlib: dllname.}
proc ListView_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ListView_SetEnabled", dynlib: dllname.}
proc ListView_GetFont*(AObj: pointer): pointer {.importc: "ListView_GetFont", dynlib: dllname.}
proc ListView_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetFont", dynlib: dllname.}
proc ListView_GetFlatScrollBars*(AObj: pointer): bool {.importc: "ListView_GetFlatScrollBars", dynlib: dllname.}
proc ListView_SetFlatScrollBars*(AObj: pointer, AValue: bool) {.importc: "ListView_SetFlatScrollBars", dynlib: dllname.}
proc ListView_GetFullDrag*(AObj: pointer): bool {.importc: "ListView_GetFullDrag", dynlib: dllname.}
proc ListView_SetFullDrag*(AObj: pointer, AValue: bool) {.importc: "ListView_SetFullDrag", dynlib: dllname.}
proc ListView_GetGridLines*(AObj: pointer): bool {.importc: "ListView_GetGridLines", dynlib: dllname.}
proc ListView_SetGridLines*(AObj: pointer, AValue: bool) {.importc: "ListView_SetGridLines", dynlib: dllname.}
proc ListView_GetHideSelection*(AObj: pointer): bool {.importc: "ListView_GetHideSelection", dynlib: dllname.}
proc ListView_SetHideSelection*(AObj: pointer, AValue: bool) {.importc: "ListView_SetHideSelection", dynlib: dllname.}
proc ListView_GetHotTrack*(AObj: pointer): bool {.importc: "ListView_GetHotTrack", dynlib: dllname.}
proc ListView_SetHotTrack*(AObj: pointer, AValue: bool) {.importc: "ListView_SetHotTrack", dynlib: dllname.}
proc ListView_GetIconOptions*(AObj: pointer): pointer {.importc: "ListView_GetIconOptions", dynlib: dllname.}
proc ListView_SetIconOptions*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetIconOptions", dynlib: dllname.}
proc ListView_GetItems*(AObj: pointer): pointer {.importc: "ListView_GetItems", dynlib: dllname.}
proc ListView_SetItems*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetItems", dynlib: dllname.}
proc ListView_GetLargeImages*(AObj: pointer): pointer {.importc: "ListView_GetLargeImages", dynlib: dllname.}
proc ListView_SetLargeImages*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetLargeImages", dynlib: dllname.}
proc ListView_GetMultiSelect*(AObj: pointer): bool {.importc: "ListView_GetMultiSelect", dynlib: dllname.}
proc ListView_SetMultiSelect*(AObj: pointer, AValue: bool) {.importc: "ListView_SetMultiSelect", dynlib: dllname.}
proc ListView_GetOwnerData*(AObj: pointer): bool {.importc: "ListView_GetOwnerData", dynlib: dllname.}
proc ListView_SetOwnerData*(AObj: pointer, AValue: bool) {.importc: "ListView_SetOwnerData", dynlib: dllname.}
proc ListView_GetOwnerDraw*(AObj: pointer): bool {.importc: "ListView_GetOwnerDraw", dynlib: dllname.}
proc ListView_SetOwnerDraw*(AObj: pointer, AValue: bool) {.importc: "ListView_SetOwnerDraw", dynlib: dllname.}
proc ListView_GetReadOnly*(AObj: pointer): bool {.importc: "ListView_GetReadOnly", dynlib: dllname.}
proc ListView_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "ListView_SetReadOnly", dynlib: dllname.}
proc ListView_GetRowSelect*(AObj: pointer): bool {.importc: "ListView_GetRowSelect", dynlib: dllname.}
proc ListView_SetRowSelect*(AObj: pointer, AValue: bool) {.importc: "ListView_SetRowSelect", dynlib: dllname.}
proc ListView_GetParentColor*(AObj: pointer): bool {.importc: "ListView_GetParentColor", dynlib: dllname.}
proc ListView_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ListView_SetParentColor", dynlib: dllname.}
proc ListView_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ListView_GetParentDoubleBuffered", dynlib: dllname.}
proc ListView_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ListView_SetParentDoubleBuffered", dynlib: dllname.}
proc ListView_GetParentFont*(AObj: pointer): bool {.importc: "ListView_GetParentFont", dynlib: dllname.}
proc ListView_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ListView_SetParentFont", dynlib: dllname.}
proc ListView_GetParentShowHint*(AObj: pointer): bool {.importc: "ListView_GetParentShowHint", dynlib: dllname.}
proc ListView_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ListView_SetParentShowHint", dynlib: dllname.}
proc ListView_GetPopupMenu*(AObj: pointer): pointer {.importc: "ListView_GetPopupMenu", dynlib: dllname.}
proc ListView_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetPopupMenu", dynlib: dllname.}
proc ListView_GetShowColumnHeaders*(AObj: pointer): bool {.importc: "ListView_GetShowColumnHeaders", dynlib: dllname.}
proc ListView_SetShowColumnHeaders*(AObj: pointer, AValue: bool) {.importc: "ListView_SetShowColumnHeaders", dynlib: dllname.}
proc ListView_GetShowHint*(AObj: pointer): bool {.importc: "ListView_GetShowHint", dynlib: dllname.}
proc ListView_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ListView_SetShowHint", dynlib: dllname.}
proc ListView_GetSmallImages*(AObj: pointer): pointer {.importc: "ListView_GetSmallImages", dynlib: dllname.}
proc ListView_SetSmallImages*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetSmallImages", dynlib: dllname.}
proc ListView_GetSortType*(AObj: pointer): TSortType {.importc: "ListView_GetSortType", dynlib: dllname.}
proc ListView_SetSortType*(AObj: pointer, AValue: TSortType) {.importc: "ListView_SetSortType", dynlib: dllname.}
proc ListView_GetStateImages*(AObj: pointer): pointer {.importc: "ListView_GetStateImages", dynlib: dllname.}
proc ListView_SetStateImages*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetStateImages", dynlib: dllname.}
proc ListView_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ListView_GetTabOrder", dynlib: dllname.}
proc ListView_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ListView_SetTabOrder", dynlib: dllname.}
proc ListView_GetTabStop*(AObj: pointer): bool {.importc: "ListView_GetTabStop", dynlib: dllname.}
proc ListView_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ListView_SetTabStop", dynlib: dllname.}
proc ListView_GetViewStyle*(AObj: pointer): TViewStyle {.importc: "ListView_GetViewStyle", dynlib: dllname.}
proc ListView_SetViewStyle*(AObj: pointer, AValue: TViewStyle) {.importc: "ListView_SetViewStyle", dynlib: dllname.}
proc ListView_GetVisible*(AObj: pointer): bool {.importc: "ListView_GetVisible", dynlib: dllname.}
proc ListView_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ListView_SetVisible", dynlib: dllname.}
proc ListView_SetOnAdvancedCustomDraw*(AObj: pointer, AEventId: TLVAdvancedCustomDrawEvent) {.importc: "ListView_SetOnAdvancedCustomDraw", dynlib: dllname.}
proc ListView_SetOnAdvancedCustomDrawItem*(AObj: pointer, AEventId: TLVAdvancedCustomDrawItemEvent) {.importc: "ListView_SetOnAdvancedCustomDrawItem", dynlib: dllname.}
proc ListView_SetOnAdvancedCustomDrawSubItem*(AObj: pointer, AEventId: TLVAdvancedCustomDrawSubItemEvent) {.importc: "ListView_SetOnAdvancedCustomDrawSubItem", dynlib: dllname.}
proc ListView_SetOnChange*(AObj: pointer, AEventId: TLVChangeEvent) {.importc: "ListView_SetOnChange", dynlib: dllname.}
proc ListView_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListView_SetOnClick", dynlib: dllname.}
proc ListView_SetOnColumnClick*(AObj: pointer, AEventId: TLVColumnClickEvent) {.importc: "ListView_SetOnColumnClick", dynlib: dllname.}
proc ListView_SetOnCompare*(AObj: pointer, AEventId: TLVCompareEvent) {.importc: "ListView_SetOnCompare", dynlib: dllname.}
proc ListView_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ListView_SetOnContextPopup", dynlib: dllname.}
proc ListView_SetOnCustomDraw*(AObj: pointer, AEventId: TLVCustomDrawEvent) {.importc: "ListView_SetOnCustomDraw", dynlib: dllname.}
proc ListView_SetOnCustomDrawItem*(AObj: pointer, AEventId: TLVCustomDrawItemEvent) {.importc: "ListView_SetOnCustomDrawItem", dynlib: dllname.}
proc ListView_SetOnCustomDrawSubItem*(AObj: pointer, AEventId: TLVCustomDrawSubItemEvent) {.importc: "ListView_SetOnCustomDrawSubItem", dynlib: dllname.}
proc ListView_SetOnData*(AObj: pointer, AEventId: TLVDataEvent) {.importc: "ListView_SetOnData", dynlib: dllname.}
proc ListView_SetOnDataFind*(AObj: pointer, AEventId: TLVDataFindEvent) {.importc: "ListView_SetOnDataFind", dynlib: dllname.}
proc ListView_SetOnDataHint*(AObj: pointer, AEventId: TLVDataHintEvent) {.importc: "ListView_SetOnDataHint", dynlib: dllname.}
proc ListView_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListView_SetOnDblClick", dynlib: dllname.}
proc ListView_SetOnDeletion*(AObj: pointer, AEventId: TLVDeletedEvent) {.importc: "ListView_SetOnDeletion", dynlib: dllname.}
proc ListView_SetOnEdited*(AObj: pointer, AEventId: TLVEditedEvent) {.importc: "ListView_SetOnEdited", dynlib: dllname.}
proc ListView_SetOnEditing*(AObj: pointer, AEventId: TLVEditingEvent) {.importc: "ListView_SetOnEditing", dynlib: dllname.}
proc ListView_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ListView_SetOnEndDock", dynlib: dllname.}
proc ListView_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ListView_SetOnEndDrag", dynlib: dllname.}
proc ListView_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListView_SetOnEnter", dynlib: dllname.}
proc ListView_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListView_SetOnExit", dynlib: dllname.}
proc ListView_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ListView_SetOnDragDrop", dynlib: dllname.}
proc ListView_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ListView_SetOnDragOver", dynlib: dllname.}
proc ListView_SetOnInsert*(AObj: pointer, AEventId: TLVDeletedEvent) {.importc: "ListView_SetOnInsert", dynlib: dllname.}
proc ListView_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ListView_SetOnKeyDown", dynlib: dllname.}
proc ListView_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ListView_SetOnKeyPress", dynlib: dllname.}
proc ListView_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ListView_SetOnKeyUp", dynlib: dllname.}
proc ListView_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ListView_SetOnMouseDown", dynlib: dllname.}
proc ListView_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListView_SetOnMouseEnter", dynlib: dllname.}
proc ListView_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListView_SetOnMouseLeave", dynlib: dllname.}
proc ListView_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ListView_SetOnMouseMove", dynlib: dllname.}
proc ListView_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ListView_SetOnMouseUp", dynlib: dllname.}
proc ListView_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ListView_SetOnResize", dynlib: dllname.}
proc ListView_SetOnSelectItem*(AObj: pointer, AEventId: TLVSelectItemEvent) {.importc: "ListView_SetOnSelectItem", dynlib: dllname.}
proc ListView_SetOnItemChecked*(AObj: pointer, AEventId: TLVCheckedItemEvent) {.importc: "ListView_SetOnItemChecked", dynlib: dllname.}
proc ListView_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "ListView_SetOnStartDock", dynlib: dllname.}
proc ListView_GetCanvas*(AObj: pointer): pointer {.importc: "ListView_GetCanvas", dynlib: dllname.}
proc ListView_GetDropTarget*(AObj: pointer): pointer {.importc: "ListView_GetDropTarget", dynlib: dllname.}
proc ListView_SetDropTarget*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetDropTarget", dynlib: dllname.}
proc ListView_GetItemFocused*(AObj: pointer): pointer {.importc: "ListView_GetItemFocused", dynlib: dllname.}
proc ListView_SetItemFocused*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetItemFocused", dynlib: dllname.}
proc ListView_GetSelCount*(AObj: pointer): int32 {.importc: "ListView_GetSelCount", dynlib: dllname.}
proc ListView_GetSelected*(AObj: pointer): pointer {.importc: "ListView_GetSelected", dynlib: dllname.}
proc ListView_SetSelected*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetSelected", dynlib: dllname.}
proc ListView_GetTopItem*(AObj: pointer): pointer {.importc: "ListView_GetTopItem", dynlib: dllname.}
proc ListView_GetVisibleRowCount*(AObj: pointer): int32 {.importc: "ListView_GetVisibleRowCount", dynlib: dllname.}
proc ListView_GetItemIndex*(AObj: pointer): int32 {.importc: "ListView_GetItemIndex", dynlib: dllname.}
proc ListView_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "ListView_SetItemIndex", dynlib: dllname.}
proc ListView_GetDockClientCount*(AObj: pointer): int32 {.importc: "ListView_GetDockClientCount", dynlib: dllname.}
proc ListView_GetDockSite*(AObj: pointer): bool {.importc: "ListView_GetDockSite", dynlib: dllname.}
proc ListView_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ListView_SetDockSite", dynlib: dllname.}
proc ListView_GetMouseInClient*(AObj: pointer): bool {.importc: "ListView_GetMouseInClient", dynlib: dllname.}
proc ListView_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ListView_GetVisibleDockClientCount", dynlib: dllname.}
proc ListView_GetBrush*(AObj: pointer): pointer {.importc: "ListView_GetBrush", dynlib: dllname.}
proc ListView_GetControlCount*(AObj: pointer): int32 {.importc: "ListView_GetControlCount", dynlib: dllname.}
proc ListView_GetHandle*(AObj: pointer): HWND {.importc: "ListView_GetHandle", dynlib: dllname.}
proc ListView_GetParentWindow*(AObj: pointer): HWND {.importc: "ListView_GetParentWindow", dynlib: dllname.}
proc ListView_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ListView_SetParentWindow", dynlib: dllname.}
proc ListView_GetShowing*(AObj: pointer): bool {.importc: "ListView_GetShowing", dynlib: dllname.}
proc ListView_GetUseDockManager*(AObj: pointer): bool {.importc: "ListView_GetUseDockManager", dynlib: dllname.}
proc ListView_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ListView_SetUseDockManager", dynlib: dllname.}
proc ListView_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ListView_GetBoundsRect", dynlib: dllname.}
proc ListView_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ListView_SetBoundsRect", dynlib: dllname.}
proc ListView_GetClientHeight*(AObj: pointer): int32 {.importc: "ListView_GetClientHeight", dynlib: dllname.}
proc ListView_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ListView_SetClientHeight", dynlib: dllname.}
proc ListView_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ListView_GetClientOrigin", dynlib: dllname.}
proc ListView_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ListView_GetClientRect", dynlib: dllname.}
proc ListView_GetClientWidth*(AObj: pointer): int32 {.importc: "ListView_GetClientWidth", dynlib: dllname.}
proc ListView_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ListView_SetClientWidth", dynlib: dllname.}
proc ListView_GetControlState*(AObj: pointer): TControlState {.importc: "ListView_GetControlState", dynlib: dllname.}
proc ListView_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ListView_SetControlState", dynlib: dllname.}
proc ListView_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ListView_GetControlStyle", dynlib: dllname.}
proc ListView_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ListView_SetControlStyle", dynlib: dllname.}
proc ListView_GetFloating*(AObj: pointer): bool {.importc: "ListView_GetFloating", dynlib: dllname.}
proc ListView_GetParent*(AObj: pointer): pointer {.importc: "ListView_GetParent", dynlib: dllname.}
proc ListView_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetParent", dynlib: dllname.}
proc ListView_GetLeft*(AObj: pointer): int32 {.importc: "ListView_GetLeft", dynlib: dllname.}
proc ListView_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ListView_SetLeft", dynlib: dllname.}
proc ListView_GetTop*(AObj: pointer): int32 {.importc: "ListView_GetTop", dynlib: dllname.}
proc ListView_SetTop*(AObj: pointer, AValue: int32) {.importc: "ListView_SetTop", dynlib: dllname.}
proc ListView_GetWidth*(AObj: pointer): int32 {.importc: "ListView_GetWidth", dynlib: dllname.}
proc ListView_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ListView_SetWidth", dynlib: dllname.}
proc ListView_GetHeight*(AObj: pointer): int32 {.importc: "ListView_GetHeight", dynlib: dllname.}
proc ListView_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ListView_SetHeight", dynlib: dllname.}
proc ListView_GetCursor*(AObj: pointer): TCursor {.importc: "ListView_GetCursor", dynlib: dllname.}
proc ListView_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ListView_SetCursor", dynlib: dllname.}
proc ListView_GetHint*(AObj: pointer): cstring {.importc: "ListView_GetHint", dynlib: dllname.}
proc ListView_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ListView_SetHint", dynlib: dllname.}
proc ListView_GetComponentCount*(AObj: pointer): int32 {.importc: "ListView_GetComponentCount", dynlib: dllname.}
proc ListView_GetComponentIndex*(AObj: pointer): int32 {.importc: "ListView_GetComponentIndex", dynlib: dllname.}
proc ListView_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ListView_SetComponentIndex", dynlib: dllname.}
proc ListView_GetOwner*(AObj: pointer): pointer {.importc: "ListView_GetOwner", dynlib: dllname.}
proc ListView_GetName*(AObj: pointer): cstring {.importc: "ListView_GetName", dynlib: dllname.}
proc ListView_SetName*(AObj: pointer, AValue: cstring) {.importc: "ListView_SetName", dynlib: dllname.}
proc ListView_GetTag*(AObj: pointer): int {.importc: "ListView_GetTag", dynlib: dllname.}
proc ListView_SetTag*(AObj: pointer, AValue: int) {.importc: "ListView_SetTag", dynlib: dllname.}
proc ListView_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ListView_GetAnchorSideLeft", dynlib: dllname.}
proc ListView_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetAnchorSideLeft", dynlib: dllname.}
proc ListView_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ListView_GetAnchorSideTop", dynlib: dllname.}
proc ListView_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetAnchorSideTop", dynlib: dllname.}
proc ListView_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ListView_GetAnchorSideRight", dynlib: dllname.}
proc ListView_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetAnchorSideRight", dynlib: dllname.}
proc ListView_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ListView_GetAnchorSideBottom", dynlib: dllname.}
proc ListView_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetAnchorSideBottom", dynlib: dllname.}
proc ListView_GetChildSizing*(AObj: pointer): pointer {.importc: "ListView_GetChildSizing", dynlib: dllname.}
proc ListView_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetChildSizing", dynlib: dllname.}
proc ListView_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ListView_GetBorderSpacing", dynlib: dllname.}
proc ListView_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ListView_SetBorderSpacing", dynlib: dllname.}
proc ListView_GetColumn*(AObj: pointer, Index: int32): pointer {.importc: "ListView_GetColumn", dynlib: dllname.}
proc ListView_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ListView_GetDockClients", dynlib: dllname.}
proc ListView_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ListView_GetControls", dynlib: dllname.}
proc ListView_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ListView_GetComponents", dynlib: dllname.}
proc ListView_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ListView_GetAnchorSide", dynlib: dllname.}
proc ListView_StaticClassType*(): TClass {.importc: "ListView_StaticClassType", dynlib: dllname.}
# ----------------- TTreeView ----------------------
proc TreeView_Create*(AOwner: pointer): pointer {.importc: "TreeView_Create", dynlib: dllname.}
proc TreeView_Free*(AObj: pointer) {.importc: "TreeView_Free", dynlib: dllname.}
proc TreeView_AlphaSort*(AObj: pointer, ARecurse: bool): bool {.importc: "TreeView_AlphaSort", dynlib: dllname.}
proc TreeView_FullCollapse*(AObj: pointer) {.importc: "TreeView_FullCollapse", dynlib: dllname.}
proc TreeView_FullExpand*(AObj: pointer) {.importc: "TreeView_FullExpand", dynlib: dllname.}
proc TreeView_GetNodeAt*(AObj: pointer, X: int32, Y: int32): pointer {.importc: "TreeView_GetNodeAt", dynlib: dllname.}
proc TreeView_IsEditing*(AObj: pointer): bool {.importc: "TreeView_IsEditing", dynlib: dllname.}
proc TreeView_LoadFromFile*(AObj: pointer, FileName: cstring) {.importc: "TreeView_LoadFromFile", dynlib: dllname.}
proc TreeView_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "TreeView_LoadFromStream", dynlib: dllname.}
proc TreeView_SaveToFile*(AObj: pointer, FileName: cstring) {.importc: "TreeView_SaveToFile", dynlib: dllname.}
proc TreeView_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "TreeView_SaveToStream", dynlib: dllname.}
proc TreeView_ClearSelection*(AObj: pointer, KeepPrimary: bool) {.importc: "TreeView_ClearSelection", dynlib: dllname.}
proc TreeView_CustomSort*(AObj: pointer, SortProc: PFNTVCOMPARE, Data: int, ARecurse: bool): bool {.importc: "TreeView_CustomSort", dynlib: dllname.}
proc TreeView_CanFocus*(AObj: pointer): bool {.importc: "TreeView_CanFocus", dynlib: dllname.}
proc TreeView_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "TreeView_ContainsControl", dynlib: dllname.}
proc TreeView_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "TreeView_ControlAtPos", dynlib: dllname.}
proc TreeView_DisableAlign*(AObj: pointer) {.importc: "TreeView_DisableAlign", dynlib: dllname.}
proc TreeView_EnableAlign*(AObj: pointer) {.importc: "TreeView_EnableAlign", dynlib: dllname.}
proc TreeView_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "TreeView_FindChildControl", dynlib: dllname.}
proc TreeView_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "TreeView_FlipChildren", dynlib: dllname.}
proc TreeView_Focused*(AObj: pointer): bool {.importc: "TreeView_Focused", dynlib: dllname.}
proc TreeView_HandleAllocated*(AObj: pointer): bool {.importc: "TreeView_HandleAllocated", dynlib: dllname.}
proc TreeView_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "TreeView_InsertControl", dynlib: dllname.}
proc TreeView_Invalidate*(AObj: pointer) {.importc: "TreeView_Invalidate", dynlib: dllname.}
proc TreeView_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "TreeView_PaintTo", dynlib: dllname.}
proc TreeView_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "TreeView_RemoveControl", dynlib: dllname.}
proc TreeView_Realign*(AObj: pointer) {.importc: "TreeView_Realign", dynlib: dllname.}
proc TreeView_Repaint*(AObj: pointer) {.importc: "TreeView_Repaint", dynlib: dllname.}
proc TreeView_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "TreeView_ScaleBy", dynlib: dllname.}
proc TreeView_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "TreeView_ScrollBy", dynlib: dllname.}
proc TreeView_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "TreeView_SetBounds", dynlib: dllname.}
proc TreeView_SetFocus*(AObj: pointer) {.importc: "TreeView_SetFocus", dynlib: dllname.}
proc TreeView_Update*(AObj: pointer) {.importc: "TreeView_Update", dynlib: dllname.}
proc TreeView_BringToFront*(AObj: pointer) {.importc: "TreeView_BringToFront", dynlib: dllname.}
proc TreeView_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "TreeView_ClientToScreen", dynlib: dllname.}
proc TreeView_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "TreeView_ClientToParent", dynlib: dllname.}
proc TreeView_Dragging*(AObj: pointer): bool {.importc: "TreeView_Dragging", dynlib: dllname.}
proc TreeView_HasParent*(AObj: pointer): bool {.importc: "TreeView_HasParent", dynlib: dllname.}
proc TreeView_Hide*(AObj: pointer) {.importc: "TreeView_Hide", dynlib: dllname.}
proc TreeView_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "TreeView_Perform", dynlib: dllname.}
proc TreeView_Refresh*(AObj: pointer) {.importc: "TreeView_Refresh", dynlib: dllname.}
proc TreeView_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "TreeView_ScreenToClient", dynlib: dllname.}
proc TreeView_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "TreeView_ParentToClient", dynlib: dllname.}
proc TreeView_SendToBack*(AObj: pointer) {.importc: "TreeView_SendToBack", dynlib: dllname.}
proc TreeView_Show*(AObj: pointer) {.importc: "TreeView_Show", dynlib: dllname.}
proc TreeView_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "TreeView_GetTextBuf", dynlib: dllname.}
proc TreeView_GetTextLen*(AObj: pointer): int32 {.importc: "TreeView_GetTextLen", dynlib: dllname.}
proc TreeView_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "TreeView_SetTextBuf", dynlib: dllname.}
proc TreeView_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "TreeView_FindComponent", dynlib: dllname.}
proc TreeView_GetNamePath*(AObj: pointer): cstring {.importc: "TreeView_GetNamePath", dynlib: dllname.}
proc TreeView_Assign*(AObj: pointer, Source: pointer) {.importc: "TreeView_Assign", dynlib: dllname.}
proc TreeView_ClassType*(AObj: pointer): TClass {.importc: "TreeView_ClassType", dynlib: dllname.}
proc TreeView_ClassName*(AObj: pointer): cstring {.importc: "TreeView_ClassName", dynlib: dllname.}
proc TreeView_InstanceSize*(AObj: pointer): int32 {.importc: "TreeView_InstanceSize", dynlib: dllname.}
proc TreeView_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TreeView_InheritsFrom", dynlib: dllname.}
proc TreeView_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TreeView_Equals", dynlib: dllname.}
proc TreeView_GetHashCode*(AObj: pointer): int32 {.importc: "TreeView_GetHashCode", dynlib: dllname.}
proc TreeView_ToString*(AObj: pointer): cstring {.importc: "TreeView_ToString", dynlib: dllname.}
proc TreeView_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "TreeView_AnchorToNeighbour", dynlib: dllname.}
proc TreeView_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "TreeView_AnchorParallel", dynlib: dllname.}
proc TreeView_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "TreeView_AnchorHorizontalCenterTo", dynlib: dllname.}
proc TreeView_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "TreeView_AnchorVerticalCenterTo", dynlib: dllname.}
proc TreeView_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "TreeView_AnchorSame", dynlib: dllname.}
proc TreeView_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "TreeView_AnchorAsAlign", dynlib: dllname.}
proc TreeView_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "TreeView_AnchorClient", dynlib: dllname.}
proc TreeView_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_ScaleDesignToForm", dynlib: dllname.}
proc TreeView_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_ScaleFormToDesign", dynlib: dllname.}
proc TreeView_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_Scale96ToForm", dynlib: dllname.}
proc TreeView_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_ScaleFormTo96", dynlib: dllname.}
proc TreeView_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_Scale96ToFont", dynlib: dllname.}
proc TreeView_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_ScaleFontTo96", dynlib: dllname.}
proc TreeView_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_ScaleScreenToFont", dynlib: dllname.}
proc TreeView_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_ScaleFontToScreen", dynlib: dllname.}
proc TreeView_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_Scale96ToScreen", dynlib: dllname.}
proc TreeView_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TreeView_ScaleScreenTo96", dynlib: dllname.}
proc TreeView_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "TreeView_AutoAdjustLayout", dynlib: dllname.}
proc TreeView_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "TreeView_FixDesignFontsPPI", dynlib: dllname.}
proc TreeView_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "TreeView_ScaleFontsPPI", dynlib: dllname.}
proc TreeView_GetDefaultItemHeight*(AObj: pointer): int32 {.importc: "TreeView_GetDefaultItemHeight", dynlib: dllname.}
proc TreeView_SetDefaultItemHeight*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetDefaultItemHeight", dynlib: dllname.}
proc TreeView_GetExpandSignColor*(AObj: pointer): TColor {.importc: "TreeView_GetExpandSignColor", dynlib: dllname.}
proc TreeView_SetExpandSignColor*(AObj: pointer, AValue: TColor) {.importc: "TreeView_SetExpandSignColor", dynlib: dllname.}
proc TreeView_GetExpandSignSize*(AObj: pointer): int32 {.importc: "TreeView_GetExpandSignSize", dynlib: dllname.}
proc TreeView_SetExpandSignSize*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetExpandSignSize", dynlib: dllname.}
proc TreeView_GetExpandSignType*(AObj: pointer): TTreeViewExpandSignType {.importc: "TreeView_GetExpandSignType", dynlib: dllname.}
proc TreeView_SetExpandSignType*(AObj: pointer, AValue: TTreeViewExpandSignType) {.importc: "TreeView_SetExpandSignType", dynlib: dllname.}
proc TreeView_GetHotTrackColor*(AObj: pointer): TColor {.importc: "TreeView_GetHotTrackColor", dynlib: dllname.}
proc TreeView_SetHotTrackColor*(AObj: pointer, AValue: TColor) {.importc: "TreeView_SetHotTrackColor", dynlib: dllname.}
proc TreeView_GetImagesWidth*(AObj: pointer): int32 {.importc: "TreeView_GetImagesWidth", dynlib: dllname.}
proc TreeView_SetImagesWidth*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetImagesWidth", dynlib: dllname.}
proc TreeView_GetOptions*(AObj: pointer): TTreeViewOptions {.importc: "TreeView_GetOptions", dynlib: dllname.}
proc TreeView_SetOptions*(AObj: pointer, AValue: TTreeViewOptions) {.importc: "TreeView_SetOptions", dynlib: dllname.}
proc TreeView_GetScrollBars*(AObj: pointer): TScrollStyle {.importc: "TreeView_GetScrollBars", dynlib: dllname.}
proc TreeView_SetScrollBars*(AObj: pointer, AValue: TScrollStyle) {.importc: "TreeView_SetScrollBars", dynlib: dllname.}
proc TreeView_GetSelectionColor*(AObj: pointer): TColor {.importc: "TreeView_GetSelectionColor", dynlib: dllname.}
proc TreeView_SetSelectionColor*(AObj: pointer, AValue: TColor) {.importc: "TreeView_SetSelectionColor", dynlib: dllname.}
proc TreeView_GetSelectionFontColor*(AObj: pointer): TColor {.importc: "TreeView_GetSelectionFontColor", dynlib: dllname.}
proc TreeView_SetSelectionFontColor*(AObj: pointer, AValue: TColor) {.importc: "TreeView_SetSelectionFontColor", dynlib: dllname.}
proc TreeView_GetSelectionFontColorUsed*(AObj: pointer): bool {.importc: "TreeView_GetSelectionFontColorUsed", dynlib: dllname.}
proc TreeView_SetSelectionFontColorUsed*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetSelectionFontColorUsed", dynlib: dllname.}
proc TreeView_GetSeparatorColor*(AObj: pointer): TColor {.importc: "TreeView_GetSeparatorColor", dynlib: dllname.}
proc TreeView_SetSeparatorColor*(AObj: pointer, AValue: TColor) {.importc: "TreeView_SetSeparatorColor", dynlib: dllname.}
proc TreeView_GetStateImagesWidth*(AObj: pointer): int32 {.importc: "TreeView_GetStateImagesWidth", dynlib: dllname.}
proc TreeView_SetStateImagesWidth*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetStateImagesWidth", dynlib: dllname.}
proc TreeView_GetToolTips*(AObj: pointer): bool {.importc: "TreeView_GetToolTips", dynlib: dllname.}
proc TreeView_SetToolTips*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetToolTips", dynlib: dllname.}
proc TreeView_GetTreeLineColor*(AObj: pointer): TColor {.importc: "TreeView_GetTreeLineColor", dynlib: dllname.}
proc TreeView_SetTreeLineColor*(AObj: pointer, AValue: TColor) {.importc: "TreeView_SetTreeLineColor", dynlib: dllname.}
proc TreeView_GetTreeLinePenStyle*(AObj: pointer): TPenStyle {.importc: "TreeView_GetTreeLinePenStyle", dynlib: dllname.}
proc TreeView_SetTreeLinePenStyle*(AObj: pointer, AValue: TPenStyle) {.importc: "TreeView_SetTreeLinePenStyle", dynlib: dllname.}
proc TreeView_GetAlign*(AObj: pointer): TAlign {.importc: "TreeView_GetAlign", dynlib: dllname.}
proc TreeView_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "TreeView_SetAlign", dynlib: dllname.}
proc TreeView_GetAnchors*(AObj: pointer): TAnchors {.importc: "TreeView_GetAnchors", dynlib: dllname.}
proc TreeView_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "TreeView_SetAnchors", dynlib: dllname.}
proc TreeView_GetAutoExpand*(AObj: pointer): bool {.importc: "TreeView_GetAutoExpand", dynlib: dllname.}
proc TreeView_SetAutoExpand*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetAutoExpand", dynlib: dllname.}
proc TreeView_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "TreeView_GetBiDiMode", dynlib: dllname.}
proc TreeView_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "TreeView_SetBiDiMode", dynlib: dllname.}
proc TreeView_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "TreeView_GetBorderStyle", dynlib: dllname.}
proc TreeView_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "TreeView_SetBorderStyle", dynlib: dllname.}
proc TreeView_GetBorderWidth*(AObj: pointer): int32 {.importc: "TreeView_GetBorderWidth", dynlib: dllname.}
proc TreeView_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetBorderWidth", dynlib: dllname.}
proc TreeView_GetColor*(AObj: pointer): TColor {.importc: "TreeView_GetColor", dynlib: dllname.}
proc TreeView_SetColor*(AObj: pointer, AValue: TColor) {.importc: "TreeView_SetColor", dynlib: dllname.}
proc TreeView_GetConstraints*(AObj: pointer): pointer {.importc: "TreeView_GetConstraints", dynlib: dllname.}
proc TreeView_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetConstraints", dynlib: dllname.}
proc TreeView_GetDoubleBuffered*(AObj: pointer): bool {.importc: "TreeView_GetDoubleBuffered", dynlib: dllname.}
proc TreeView_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetDoubleBuffered", dynlib: dllname.}
proc TreeView_GetDragKind*(AObj: pointer): TDragKind {.importc: "TreeView_GetDragKind", dynlib: dllname.}
proc TreeView_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "TreeView_SetDragKind", dynlib: dllname.}
proc TreeView_GetDragCursor*(AObj: pointer): TCursor {.importc: "TreeView_GetDragCursor", dynlib: dllname.}
proc TreeView_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "TreeView_SetDragCursor", dynlib: dllname.}
proc TreeView_GetDragMode*(AObj: pointer): TDragMode {.importc: "TreeView_GetDragMode", dynlib: dllname.}
proc TreeView_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "TreeView_SetDragMode", dynlib: dllname.}
proc TreeView_GetEnabled*(AObj: pointer): bool {.importc: "TreeView_GetEnabled", dynlib: dllname.}
proc TreeView_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetEnabled", dynlib: dllname.}
proc TreeView_GetFont*(AObj: pointer): pointer {.importc: "TreeView_GetFont", dynlib: dllname.}
proc TreeView_SetFont*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetFont", dynlib: dllname.}
proc TreeView_GetHideSelection*(AObj: pointer): bool {.importc: "TreeView_GetHideSelection", dynlib: dllname.}
proc TreeView_SetHideSelection*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetHideSelection", dynlib: dllname.}
proc TreeView_GetHotTrack*(AObj: pointer): bool {.importc: "TreeView_GetHotTrack", dynlib: dllname.}
proc TreeView_SetHotTrack*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetHotTrack", dynlib: dllname.}
proc TreeView_GetImages*(AObj: pointer): pointer {.importc: "TreeView_GetImages", dynlib: dllname.}
proc TreeView_SetImages*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetImages", dynlib: dllname.}
proc TreeView_GetIndent*(AObj: pointer): int32 {.importc: "TreeView_GetIndent", dynlib: dllname.}
proc TreeView_SetIndent*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetIndent", dynlib: dllname.}
proc TreeView_GetMultiSelect*(AObj: pointer): bool {.importc: "TreeView_GetMultiSelect", dynlib: dllname.}
proc TreeView_SetMultiSelect*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetMultiSelect", dynlib: dllname.}
proc TreeView_GetMultiSelectStyle*(AObj: pointer): TMultiSelectStyle {.importc: "TreeView_GetMultiSelectStyle", dynlib: dllname.}
proc TreeView_SetMultiSelectStyle*(AObj: pointer, AValue: TMultiSelectStyle) {.importc: "TreeView_SetMultiSelectStyle", dynlib: dllname.}
proc TreeView_GetParentColor*(AObj: pointer): bool {.importc: "TreeView_GetParentColor", dynlib: dllname.}
proc TreeView_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetParentColor", dynlib: dllname.}
proc TreeView_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "TreeView_GetParentDoubleBuffered", dynlib: dllname.}
proc TreeView_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetParentDoubleBuffered", dynlib: dllname.}
proc TreeView_GetParentFont*(AObj: pointer): bool {.importc: "TreeView_GetParentFont", dynlib: dllname.}
proc TreeView_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetParentFont", dynlib: dllname.}
proc TreeView_GetParentShowHint*(AObj: pointer): bool {.importc: "TreeView_GetParentShowHint", dynlib: dllname.}
proc TreeView_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetParentShowHint", dynlib: dllname.}
proc TreeView_GetPopupMenu*(AObj: pointer): pointer {.importc: "TreeView_GetPopupMenu", dynlib: dllname.}
proc TreeView_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetPopupMenu", dynlib: dllname.}
proc TreeView_GetReadOnly*(AObj: pointer): bool {.importc: "TreeView_GetReadOnly", dynlib: dllname.}
proc TreeView_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetReadOnly", dynlib: dllname.}
proc TreeView_GetRightClickSelect*(AObj: pointer): bool {.importc: "TreeView_GetRightClickSelect", dynlib: dllname.}
proc TreeView_SetRightClickSelect*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetRightClickSelect", dynlib: dllname.}
proc TreeView_GetRowSelect*(AObj: pointer): bool {.importc: "TreeView_GetRowSelect", dynlib: dllname.}
proc TreeView_SetRowSelect*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetRowSelect", dynlib: dllname.}
proc TreeView_GetShowButtons*(AObj: pointer): bool {.importc: "TreeView_GetShowButtons", dynlib: dllname.}
proc TreeView_SetShowButtons*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetShowButtons", dynlib: dllname.}
proc TreeView_GetShowHint*(AObj: pointer): bool {.importc: "TreeView_GetShowHint", dynlib: dllname.}
proc TreeView_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetShowHint", dynlib: dllname.}
proc TreeView_GetShowLines*(AObj: pointer): bool {.importc: "TreeView_GetShowLines", dynlib: dllname.}
proc TreeView_SetShowLines*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetShowLines", dynlib: dllname.}
proc TreeView_GetShowRoot*(AObj: pointer): bool {.importc: "TreeView_GetShowRoot", dynlib: dllname.}
proc TreeView_SetShowRoot*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetShowRoot", dynlib: dllname.}
proc TreeView_GetSortType*(AObj: pointer): TSortType {.importc: "TreeView_GetSortType", dynlib: dllname.}
proc TreeView_SetSortType*(AObj: pointer, AValue: TSortType) {.importc: "TreeView_SetSortType", dynlib: dllname.}
proc TreeView_GetStateImages*(AObj: pointer): pointer {.importc: "TreeView_GetStateImages", dynlib: dllname.}
proc TreeView_SetStateImages*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetStateImages", dynlib: dllname.}
proc TreeView_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "TreeView_GetTabOrder", dynlib: dllname.}
proc TreeView_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "TreeView_SetTabOrder", dynlib: dllname.}
proc TreeView_GetTabStop*(AObj: pointer): bool {.importc: "TreeView_GetTabStop", dynlib: dllname.}
proc TreeView_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetTabStop", dynlib: dllname.}
proc TreeView_GetVisible*(AObj: pointer): bool {.importc: "TreeView_GetVisible", dynlib: dllname.}
proc TreeView_SetVisible*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetVisible", dynlib: dllname.}
proc TreeView_SetOnAddition*(AObj: pointer, AEventId: TTVExpandedEvent) {.importc: "TreeView_SetOnAddition", dynlib: dllname.}
proc TreeView_SetOnAdvancedCustomDraw*(AObj: pointer, AEventId: TTVAdvancedCustomDrawEvent) {.importc: "TreeView_SetOnAdvancedCustomDraw", dynlib: dllname.}
proc TreeView_SetOnAdvancedCustomDrawItem*(AObj: pointer, AEventId: TTVAdvancedCustomDrawItemEvent) {.importc: "TreeView_SetOnAdvancedCustomDrawItem", dynlib: dllname.}
proc TreeView_SetOnChange*(AObj: pointer, AEventId: TTVChangedEvent) {.importc: "TreeView_SetOnChange", dynlib: dllname.}
proc TreeView_SetOnChanging*(AObj: pointer, AEventId: TTVChangingEvent) {.importc: "TreeView_SetOnChanging", dynlib: dllname.}
proc TreeView_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TreeView_SetOnClick", dynlib: dllname.}
proc TreeView_SetOnCollapsed*(AObj: pointer, AEventId: TTVExpandedEvent) {.importc: "TreeView_SetOnCollapsed", dynlib: dllname.}
proc TreeView_SetOnCollapsing*(AObj: pointer, AEventId: TTVCollapsingEvent) {.importc: "TreeView_SetOnCollapsing", dynlib: dllname.}
proc TreeView_SetOnCompare*(AObj: pointer, AEventId: TTVCompareEvent) {.importc: "TreeView_SetOnCompare", dynlib: dllname.}
proc TreeView_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "TreeView_SetOnContextPopup", dynlib: dllname.}
proc TreeView_SetOnCustomDraw*(AObj: pointer, AEventId: TTVCustomDrawEvent) {.importc: "TreeView_SetOnCustomDraw", dynlib: dllname.}
proc TreeView_SetOnCustomDrawItem*(AObj: pointer, AEventId: TTVCustomDrawItemEvent) {.importc: "TreeView_SetOnCustomDrawItem", dynlib: dllname.}
proc TreeView_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TreeView_SetOnDblClick", dynlib: dllname.}
proc TreeView_SetOnDeletion*(AObj: pointer, AEventId: TTVExpandedEvent) {.importc: "TreeView_SetOnDeletion", dynlib: dllname.}
proc TreeView_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "TreeView_SetOnDragDrop", dynlib: dllname.}
proc TreeView_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "TreeView_SetOnDragOver", dynlib: dllname.}
proc TreeView_SetOnEdited*(AObj: pointer, AEventId: TTVEditedEvent) {.importc: "TreeView_SetOnEdited", dynlib: dllname.}
proc TreeView_SetOnEditing*(AObj: pointer, AEventId: TTVEditingEvent) {.importc: "TreeView_SetOnEditing", dynlib: dllname.}
proc TreeView_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "TreeView_SetOnEndDrag", dynlib: dllname.}
proc TreeView_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TreeView_SetOnEnter", dynlib: dllname.}
proc TreeView_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TreeView_SetOnExit", dynlib: dllname.}
proc TreeView_SetOnExpanding*(AObj: pointer, AEventId: TTVExpandingEvent) {.importc: "TreeView_SetOnExpanding", dynlib: dllname.}
proc TreeView_SetOnExpanded*(AObj: pointer, AEventId: TTVExpandedEvent) {.importc: "TreeView_SetOnExpanded", dynlib: dllname.}
proc TreeView_SetOnGetSelectedIndex*(AObj: pointer, AEventId: TTVExpandedEvent) {.importc: "TreeView_SetOnGetSelectedIndex", dynlib: dllname.}
proc TreeView_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "TreeView_SetOnKeyDown", dynlib: dllname.}
proc TreeView_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "TreeView_SetOnKeyPress", dynlib: dllname.}
proc TreeView_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "TreeView_SetOnKeyUp", dynlib: dllname.}
proc TreeView_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "TreeView_SetOnMouseDown", dynlib: dllname.}
proc TreeView_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TreeView_SetOnMouseEnter", dynlib: dllname.}
proc TreeView_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TreeView_SetOnMouseLeave", dynlib: dllname.}
proc TreeView_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "TreeView_SetOnMouseMove", dynlib: dllname.}
proc TreeView_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "TreeView_SetOnMouseUp", dynlib: dllname.}
proc TreeView_GetItems*(AObj: pointer): pointer {.importc: "TreeView_GetItems", dynlib: dllname.}
proc TreeView_SetItems*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetItems", dynlib: dllname.}
proc TreeView_GetCanvas*(AObj: pointer): pointer {.importc: "TreeView_GetCanvas", dynlib: dllname.}
proc TreeView_GetDropTarget*(AObj: pointer): pointer {.importc: "TreeView_GetDropTarget", dynlib: dllname.}
proc TreeView_SetDropTarget*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetDropTarget", dynlib: dllname.}
proc TreeView_GetSelected*(AObj: pointer): pointer {.importc: "TreeView_GetSelected", dynlib: dllname.}
proc TreeView_SetSelected*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetSelected", dynlib: dllname.}
proc TreeView_GetTopItem*(AObj: pointer): pointer {.importc: "TreeView_GetTopItem", dynlib: dllname.}
proc TreeView_SetTopItem*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetTopItem", dynlib: dllname.}
proc TreeView_GetSelectionCount*(AObj: pointer): uint32 {.importc: "TreeView_GetSelectionCount", dynlib: dllname.}
proc TreeView_GetDockClientCount*(AObj: pointer): int32 {.importc: "TreeView_GetDockClientCount", dynlib: dllname.}
proc TreeView_GetDockSite*(AObj: pointer): bool {.importc: "TreeView_GetDockSite", dynlib: dllname.}
proc TreeView_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetDockSite", dynlib: dllname.}
proc TreeView_GetMouseInClient*(AObj: pointer): bool {.importc: "TreeView_GetMouseInClient", dynlib: dllname.}
proc TreeView_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "TreeView_GetVisibleDockClientCount", dynlib: dllname.}
proc TreeView_GetBrush*(AObj: pointer): pointer {.importc: "TreeView_GetBrush", dynlib: dllname.}
proc TreeView_GetControlCount*(AObj: pointer): int32 {.importc: "TreeView_GetControlCount", dynlib: dllname.}
proc TreeView_GetHandle*(AObj: pointer): HWND {.importc: "TreeView_GetHandle", dynlib: dllname.}
proc TreeView_GetParentWindow*(AObj: pointer): HWND {.importc: "TreeView_GetParentWindow", dynlib: dllname.}
proc TreeView_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "TreeView_SetParentWindow", dynlib: dllname.}
proc TreeView_GetShowing*(AObj: pointer): bool {.importc: "TreeView_GetShowing", dynlib: dllname.}
proc TreeView_GetUseDockManager*(AObj: pointer): bool {.importc: "TreeView_GetUseDockManager", dynlib: dllname.}
proc TreeView_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "TreeView_SetUseDockManager", dynlib: dllname.}
proc TreeView_GetAction*(AObj: pointer): pointer {.importc: "TreeView_GetAction", dynlib: dllname.}
proc TreeView_SetAction*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetAction", dynlib: dllname.}
proc TreeView_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "TreeView_GetBoundsRect", dynlib: dllname.}
proc TreeView_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "TreeView_SetBoundsRect", dynlib: dllname.}
proc TreeView_GetClientHeight*(AObj: pointer): int32 {.importc: "TreeView_GetClientHeight", dynlib: dllname.}
proc TreeView_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetClientHeight", dynlib: dllname.}
proc TreeView_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "TreeView_GetClientOrigin", dynlib: dllname.}
proc TreeView_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "TreeView_GetClientRect", dynlib: dllname.}
proc TreeView_GetClientWidth*(AObj: pointer): int32 {.importc: "TreeView_GetClientWidth", dynlib: dllname.}
proc TreeView_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetClientWidth", dynlib: dllname.}
proc TreeView_GetControlState*(AObj: pointer): TControlState {.importc: "TreeView_GetControlState", dynlib: dllname.}
proc TreeView_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "TreeView_SetControlState", dynlib: dllname.}
proc TreeView_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "TreeView_GetControlStyle", dynlib: dllname.}
proc TreeView_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "TreeView_SetControlStyle", dynlib: dllname.}
proc TreeView_GetFloating*(AObj: pointer): bool {.importc: "TreeView_GetFloating", dynlib: dllname.}
proc TreeView_GetParent*(AObj: pointer): pointer {.importc: "TreeView_GetParent", dynlib: dllname.}
proc TreeView_SetParent*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetParent", dynlib: dllname.}
proc TreeView_GetLeft*(AObj: pointer): int32 {.importc: "TreeView_GetLeft", dynlib: dllname.}
proc TreeView_SetLeft*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetLeft", dynlib: dllname.}
proc TreeView_GetTop*(AObj: pointer): int32 {.importc: "TreeView_GetTop", dynlib: dllname.}
proc TreeView_SetTop*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetTop", dynlib: dllname.}
proc TreeView_GetWidth*(AObj: pointer): int32 {.importc: "TreeView_GetWidth", dynlib: dllname.}
proc TreeView_SetWidth*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetWidth", dynlib: dllname.}
proc TreeView_GetHeight*(AObj: pointer): int32 {.importc: "TreeView_GetHeight", dynlib: dllname.}
proc TreeView_SetHeight*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetHeight", dynlib: dllname.}
proc TreeView_GetCursor*(AObj: pointer): TCursor {.importc: "TreeView_GetCursor", dynlib: dllname.}
proc TreeView_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "TreeView_SetCursor", dynlib: dllname.}
proc TreeView_GetHint*(AObj: pointer): cstring {.importc: "TreeView_GetHint", dynlib: dllname.}
proc TreeView_SetHint*(AObj: pointer, AValue: cstring) {.importc: "TreeView_SetHint", dynlib: dllname.}
proc TreeView_GetComponentCount*(AObj: pointer): int32 {.importc: "TreeView_GetComponentCount", dynlib: dllname.}
proc TreeView_GetComponentIndex*(AObj: pointer): int32 {.importc: "TreeView_GetComponentIndex", dynlib: dllname.}
proc TreeView_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "TreeView_SetComponentIndex", dynlib: dllname.}
proc TreeView_GetOwner*(AObj: pointer): pointer {.importc: "TreeView_GetOwner", dynlib: dllname.}
proc TreeView_GetName*(AObj: pointer): cstring {.importc: "TreeView_GetName", dynlib: dllname.}
proc TreeView_SetName*(AObj: pointer, AValue: cstring) {.importc: "TreeView_SetName", dynlib: dllname.}
proc TreeView_GetTag*(AObj: pointer): int {.importc: "TreeView_GetTag", dynlib: dllname.}
proc TreeView_SetTag*(AObj: pointer, AValue: int) {.importc: "TreeView_SetTag", dynlib: dllname.}
proc TreeView_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "TreeView_GetAnchorSideLeft", dynlib: dllname.}
proc TreeView_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetAnchorSideLeft", dynlib: dllname.}
proc TreeView_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "TreeView_GetAnchorSideTop", dynlib: dllname.}
proc TreeView_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetAnchorSideTop", dynlib: dllname.}
proc TreeView_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "TreeView_GetAnchorSideRight", dynlib: dllname.}
proc TreeView_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetAnchorSideRight", dynlib: dllname.}
proc TreeView_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "TreeView_GetAnchorSideBottom", dynlib: dllname.}
proc TreeView_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetAnchorSideBottom", dynlib: dllname.}
proc TreeView_GetChildSizing*(AObj: pointer): pointer {.importc: "TreeView_GetChildSizing", dynlib: dllname.}
proc TreeView_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetChildSizing", dynlib: dllname.}
proc TreeView_GetBorderSpacing*(AObj: pointer): pointer {.importc: "TreeView_GetBorderSpacing", dynlib: dllname.}
proc TreeView_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "TreeView_SetBorderSpacing", dynlib: dllname.}
proc TreeView_GetSelections*(AObj: pointer, Index: int32): pointer {.importc: "TreeView_GetSelections", dynlib: dllname.}
proc TreeView_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "TreeView_GetDockClients", dynlib: dllname.}
proc TreeView_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "TreeView_GetControls", dynlib: dllname.}
proc TreeView_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "TreeView_GetComponents", dynlib: dllname.}
proc TreeView_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "TreeView_GetAnchorSide", dynlib: dllname.}
proc TreeView_StaticClassType*(): TClass {.importc: "TreeView_StaticClassType", dynlib: dllname.}
# ----------------- TStatusBar ----------------------
proc StatusBar_Create*(AOwner: pointer): pointer {.importc: "StatusBar_Create", dynlib: dllname.}
proc StatusBar_Free*(AObj: pointer) {.importc: "StatusBar_Free", dynlib: dllname.}
proc StatusBar_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "StatusBar_FlipChildren", dynlib: dllname.}
proc StatusBar_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "StatusBar_SetBounds", dynlib: dllname.}
proc StatusBar_CanFocus*(AObj: pointer): bool {.importc: "StatusBar_CanFocus", dynlib: dllname.}
proc StatusBar_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "StatusBar_ContainsControl", dynlib: dllname.}
proc StatusBar_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "StatusBar_ControlAtPos", dynlib: dllname.}
proc StatusBar_DisableAlign*(AObj: pointer) {.importc: "StatusBar_DisableAlign", dynlib: dllname.}
proc StatusBar_EnableAlign*(AObj: pointer) {.importc: "StatusBar_EnableAlign", dynlib: dllname.}
proc StatusBar_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "StatusBar_FindChildControl", dynlib: dllname.}
proc StatusBar_Focused*(AObj: pointer): bool {.importc: "StatusBar_Focused", dynlib: dllname.}
proc StatusBar_HandleAllocated*(AObj: pointer): bool {.importc: "StatusBar_HandleAllocated", dynlib: dllname.}
proc StatusBar_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "StatusBar_InsertControl", dynlib: dllname.}
proc StatusBar_Invalidate*(AObj: pointer) {.importc: "StatusBar_Invalidate", dynlib: dllname.}
proc StatusBar_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "StatusBar_PaintTo", dynlib: dllname.}
proc StatusBar_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "StatusBar_RemoveControl", dynlib: dllname.}
proc StatusBar_Realign*(AObj: pointer) {.importc: "StatusBar_Realign", dynlib: dllname.}
proc StatusBar_Repaint*(AObj: pointer) {.importc: "StatusBar_Repaint", dynlib: dllname.}
proc StatusBar_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "StatusBar_ScaleBy", dynlib: dllname.}
proc StatusBar_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "StatusBar_ScrollBy", dynlib: dllname.}
proc StatusBar_SetFocus*(AObj: pointer) {.importc: "StatusBar_SetFocus", dynlib: dllname.}
proc StatusBar_Update*(AObj: pointer) {.importc: "StatusBar_Update", dynlib: dllname.}
proc StatusBar_BringToFront*(AObj: pointer) {.importc: "StatusBar_BringToFront", dynlib: dllname.}
proc StatusBar_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "StatusBar_ClientToScreen", dynlib: dllname.}
proc StatusBar_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "StatusBar_ClientToParent", dynlib: dllname.}
proc StatusBar_Dragging*(AObj: pointer): bool {.importc: "StatusBar_Dragging", dynlib: dllname.}
proc StatusBar_HasParent*(AObj: pointer): bool {.importc: "StatusBar_HasParent", dynlib: dllname.}
proc StatusBar_Hide*(AObj: pointer) {.importc: "StatusBar_Hide", dynlib: dllname.}
proc StatusBar_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "StatusBar_Perform", dynlib: dllname.}
proc StatusBar_Refresh*(AObj: pointer) {.importc: "StatusBar_Refresh", dynlib: dllname.}
proc StatusBar_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "StatusBar_ScreenToClient", dynlib: dllname.}
proc StatusBar_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "StatusBar_ParentToClient", dynlib: dllname.}
proc StatusBar_SendToBack*(AObj: pointer) {.importc: "StatusBar_SendToBack", dynlib: dllname.}
proc StatusBar_Show*(AObj: pointer) {.importc: "StatusBar_Show", dynlib: dllname.}
proc StatusBar_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "StatusBar_GetTextBuf", dynlib: dllname.}
proc StatusBar_GetTextLen*(AObj: pointer): int32 {.importc: "StatusBar_GetTextLen", dynlib: dllname.}
proc StatusBar_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "StatusBar_SetTextBuf", dynlib: dllname.}
proc StatusBar_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "StatusBar_FindComponent", dynlib: dllname.}
proc StatusBar_GetNamePath*(AObj: pointer): cstring {.importc: "StatusBar_GetNamePath", dynlib: dllname.}
proc StatusBar_Assign*(AObj: pointer, Source: pointer) {.importc: "StatusBar_Assign", dynlib: dllname.}
proc StatusBar_ClassType*(AObj: pointer): TClass {.importc: "StatusBar_ClassType", dynlib: dllname.}
proc StatusBar_ClassName*(AObj: pointer): cstring {.importc: "StatusBar_ClassName", dynlib: dllname.}
proc StatusBar_InstanceSize*(AObj: pointer): int32 {.importc: "StatusBar_InstanceSize", dynlib: dllname.}
proc StatusBar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "StatusBar_InheritsFrom", dynlib: dllname.}
proc StatusBar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "StatusBar_Equals", dynlib: dllname.}
proc StatusBar_GetHashCode*(AObj: pointer): int32 {.importc: "StatusBar_GetHashCode", dynlib: dllname.}
proc StatusBar_ToString*(AObj: pointer): cstring {.importc: "StatusBar_ToString", dynlib: dllname.}
proc StatusBar_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "StatusBar_AnchorToNeighbour", dynlib: dllname.}
proc StatusBar_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "StatusBar_AnchorParallel", dynlib: dllname.}
proc StatusBar_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "StatusBar_AnchorHorizontalCenterTo", dynlib: dllname.}
proc StatusBar_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "StatusBar_AnchorVerticalCenterTo", dynlib: dllname.}
proc StatusBar_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "StatusBar_AnchorSame", dynlib: dllname.}
proc StatusBar_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "StatusBar_AnchorAsAlign", dynlib: dllname.}
proc StatusBar_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "StatusBar_AnchorClient", dynlib: dllname.}
proc StatusBar_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_ScaleDesignToForm", dynlib: dllname.}
proc StatusBar_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_ScaleFormToDesign", dynlib: dllname.}
proc StatusBar_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_Scale96ToForm", dynlib: dllname.}
proc StatusBar_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_ScaleFormTo96", dynlib: dllname.}
proc StatusBar_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_Scale96ToFont", dynlib: dllname.}
proc StatusBar_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_ScaleFontTo96", dynlib: dllname.}
proc StatusBar_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_ScaleScreenToFont", dynlib: dllname.}
proc StatusBar_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_ScaleFontToScreen", dynlib: dllname.}
proc StatusBar_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_Scale96ToScreen", dynlib: dllname.}
proc StatusBar_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StatusBar_ScaleScreenTo96", dynlib: dllname.}
proc StatusBar_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "StatusBar_AutoAdjustLayout", dynlib: dllname.}
proc StatusBar_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "StatusBar_FixDesignFontsPPI", dynlib: dllname.}
proc StatusBar_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "StatusBar_ScaleFontsPPI", dynlib: dllname.}
proc StatusBar_GetAction*(AObj: pointer): pointer {.importc: "StatusBar_GetAction", dynlib: dllname.}
proc StatusBar_SetAction*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetAction", dynlib: dllname.}
proc StatusBar_GetAutoHint*(AObj: pointer): bool {.importc: "StatusBar_GetAutoHint", dynlib: dllname.}
proc StatusBar_SetAutoHint*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetAutoHint", dynlib: dllname.}
proc StatusBar_GetAlign*(AObj: pointer): TAlign {.importc: "StatusBar_GetAlign", dynlib: dllname.}
proc StatusBar_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "StatusBar_SetAlign", dynlib: dllname.}
proc StatusBar_GetAnchors*(AObj: pointer): TAnchors {.importc: "StatusBar_GetAnchors", dynlib: dllname.}
proc StatusBar_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "StatusBar_SetAnchors", dynlib: dllname.}
proc StatusBar_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "StatusBar_GetBiDiMode", dynlib: dllname.}
proc StatusBar_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "StatusBar_SetBiDiMode", dynlib: dllname.}
proc StatusBar_GetBorderWidth*(AObj: pointer): int32 {.importc: "StatusBar_GetBorderWidth", dynlib: dllname.}
proc StatusBar_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetBorderWidth", dynlib: dllname.}
proc StatusBar_GetColor*(AObj: pointer): TColor {.importc: "StatusBar_GetColor", dynlib: dllname.}
proc StatusBar_SetColor*(AObj: pointer, AValue: TColor) {.importc: "StatusBar_SetColor", dynlib: dllname.}
proc StatusBar_GetDoubleBuffered*(AObj: pointer): bool {.importc: "StatusBar_GetDoubleBuffered", dynlib: dllname.}
proc StatusBar_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetDoubleBuffered", dynlib: dllname.}
proc StatusBar_GetDragCursor*(AObj: pointer): TCursor {.importc: "StatusBar_GetDragCursor", dynlib: dllname.}
proc StatusBar_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "StatusBar_SetDragCursor", dynlib: dllname.}
proc StatusBar_GetDragKind*(AObj: pointer): TDragKind {.importc: "StatusBar_GetDragKind", dynlib: dllname.}
proc StatusBar_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "StatusBar_SetDragKind", dynlib: dllname.}
proc StatusBar_GetDragMode*(AObj: pointer): TDragMode {.importc: "StatusBar_GetDragMode", dynlib: dllname.}
proc StatusBar_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "StatusBar_SetDragMode", dynlib: dllname.}
proc StatusBar_GetEnabled*(AObj: pointer): bool {.importc: "StatusBar_GetEnabled", dynlib: dllname.}
proc StatusBar_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetEnabled", dynlib: dllname.}
proc StatusBar_GetFont*(AObj: pointer): pointer {.importc: "StatusBar_GetFont", dynlib: dllname.}
proc StatusBar_SetFont*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetFont", dynlib: dllname.}
proc StatusBar_GetConstraints*(AObj: pointer): pointer {.importc: "StatusBar_GetConstraints", dynlib: dllname.}
proc StatusBar_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetConstraints", dynlib: dllname.}
proc StatusBar_GetPanels*(AObj: pointer): pointer {.importc: "StatusBar_GetPanels", dynlib: dllname.}
proc StatusBar_SetPanels*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetPanels", dynlib: dllname.}
proc StatusBar_GetParentColor*(AObj: pointer): bool {.importc: "StatusBar_GetParentColor", dynlib: dllname.}
proc StatusBar_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetParentColor", dynlib: dllname.}
proc StatusBar_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "StatusBar_GetParentDoubleBuffered", dynlib: dllname.}
proc StatusBar_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetParentDoubleBuffered", dynlib: dllname.}
proc StatusBar_GetParentFont*(AObj: pointer): bool {.importc: "StatusBar_GetParentFont", dynlib: dllname.}
proc StatusBar_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetParentFont", dynlib: dllname.}
proc StatusBar_GetParentShowHint*(AObj: pointer): bool {.importc: "StatusBar_GetParentShowHint", dynlib: dllname.}
proc StatusBar_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetParentShowHint", dynlib: dllname.}
proc StatusBar_GetPopupMenu*(AObj: pointer): pointer {.importc: "StatusBar_GetPopupMenu", dynlib: dllname.}
proc StatusBar_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetPopupMenu", dynlib: dllname.}
proc StatusBar_GetShowHint*(AObj: pointer): bool {.importc: "StatusBar_GetShowHint", dynlib: dllname.}
proc StatusBar_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetShowHint", dynlib: dllname.}
proc StatusBar_GetSimplePanel*(AObj: pointer): bool {.importc: "StatusBar_GetSimplePanel", dynlib: dllname.}
proc StatusBar_SetSimplePanel*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetSimplePanel", dynlib: dllname.}
proc StatusBar_GetSimpleText*(AObj: pointer): cstring {.importc: "StatusBar_GetSimpleText", dynlib: dllname.}
proc StatusBar_SetSimpleText*(AObj: pointer, AValue: cstring) {.importc: "StatusBar_SetSimpleText", dynlib: dllname.}
proc StatusBar_GetSizeGrip*(AObj: pointer): bool {.importc: "StatusBar_GetSizeGrip", dynlib: dllname.}
proc StatusBar_SetSizeGrip*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetSizeGrip", dynlib: dllname.}
proc StatusBar_GetUseSystemFont*(AObj: pointer): bool {.importc: "StatusBar_GetUseSystemFont", dynlib: dllname.}
proc StatusBar_SetUseSystemFont*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetUseSystemFont", dynlib: dllname.}
proc StatusBar_GetVisible*(AObj: pointer): bool {.importc: "StatusBar_GetVisible", dynlib: dllname.}
proc StatusBar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetVisible", dynlib: dllname.}
proc StatusBar_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StatusBar_SetOnClick", dynlib: dllname.}
proc StatusBar_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "StatusBar_SetOnContextPopup", dynlib: dllname.}
proc StatusBar_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StatusBar_SetOnDblClick", dynlib: dllname.}
proc StatusBar_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "StatusBar_SetOnDragDrop", dynlib: dllname.}
proc StatusBar_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "StatusBar_SetOnDragOver", dynlib: dllname.}
proc StatusBar_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "StatusBar_SetOnEndDock", dynlib: dllname.}
proc StatusBar_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "StatusBar_SetOnEndDrag", dynlib: dllname.}
proc StatusBar_SetOnHint*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StatusBar_SetOnHint", dynlib: dllname.}
proc StatusBar_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "StatusBar_SetOnMouseDown", dynlib: dllname.}
proc StatusBar_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StatusBar_SetOnMouseEnter", dynlib: dllname.}
proc StatusBar_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StatusBar_SetOnMouseLeave", dynlib: dllname.}
proc StatusBar_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "StatusBar_SetOnMouseMove", dynlib: dllname.}
proc StatusBar_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "StatusBar_SetOnMouseUp", dynlib: dllname.}
proc StatusBar_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StatusBar_SetOnResize", dynlib: dllname.}
proc StatusBar_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "StatusBar_SetOnStartDock", dynlib: dllname.}
proc StatusBar_GetCanvas*(AObj: pointer): pointer {.importc: "StatusBar_GetCanvas", dynlib: dllname.}
proc StatusBar_GetDockClientCount*(AObj: pointer): int32 {.importc: "StatusBar_GetDockClientCount", dynlib: dllname.}
proc StatusBar_GetDockSite*(AObj: pointer): bool {.importc: "StatusBar_GetDockSite", dynlib: dllname.}
proc StatusBar_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetDockSite", dynlib: dllname.}
proc StatusBar_GetMouseInClient*(AObj: pointer): bool {.importc: "StatusBar_GetMouseInClient", dynlib: dllname.}
proc StatusBar_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "StatusBar_GetVisibleDockClientCount", dynlib: dllname.}
proc StatusBar_GetBrush*(AObj: pointer): pointer {.importc: "StatusBar_GetBrush", dynlib: dllname.}
proc StatusBar_GetControlCount*(AObj: pointer): int32 {.importc: "StatusBar_GetControlCount", dynlib: dllname.}
proc StatusBar_GetHandle*(AObj: pointer): HWND {.importc: "StatusBar_GetHandle", dynlib: dllname.}
proc StatusBar_GetParentWindow*(AObj: pointer): HWND {.importc: "StatusBar_GetParentWindow", dynlib: dllname.}
proc StatusBar_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "StatusBar_SetParentWindow", dynlib: dllname.}
proc StatusBar_GetShowing*(AObj: pointer): bool {.importc: "StatusBar_GetShowing", dynlib: dllname.}
proc StatusBar_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "StatusBar_GetTabOrder", dynlib: dllname.}
proc StatusBar_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "StatusBar_SetTabOrder", dynlib: dllname.}
proc StatusBar_GetTabStop*(AObj: pointer): bool {.importc: "StatusBar_GetTabStop", dynlib: dllname.}
proc StatusBar_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetTabStop", dynlib: dllname.}
proc StatusBar_GetUseDockManager*(AObj: pointer): bool {.importc: "StatusBar_GetUseDockManager", dynlib: dllname.}
proc StatusBar_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "StatusBar_SetUseDockManager", dynlib: dllname.}
proc StatusBar_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "StatusBar_GetBoundsRect", dynlib: dllname.}
proc StatusBar_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "StatusBar_SetBoundsRect", dynlib: dllname.}
proc StatusBar_GetClientHeight*(AObj: pointer): int32 {.importc: "StatusBar_GetClientHeight", dynlib: dllname.}
proc StatusBar_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetClientHeight", dynlib: dllname.}
proc StatusBar_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "StatusBar_GetClientOrigin", dynlib: dllname.}
proc StatusBar_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "StatusBar_GetClientRect", dynlib: dllname.}
proc StatusBar_GetClientWidth*(AObj: pointer): int32 {.importc: "StatusBar_GetClientWidth", dynlib: dllname.}
proc StatusBar_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetClientWidth", dynlib: dllname.}
proc StatusBar_GetControlState*(AObj: pointer): TControlState {.importc: "StatusBar_GetControlState", dynlib: dllname.}
proc StatusBar_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "StatusBar_SetControlState", dynlib: dllname.}
proc StatusBar_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "StatusBar_GetControlStyle", dynlib: dllname.}
proc StatusBar_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "StatusBar_SetControlStyle", dynlib: dllname.}
proc StatusBar_GetFloating*(AObj: pointer): bool {.importc: "StatusBar_GetFloating", dynlib: dllname.}
proc StatusBar_GetParent*(AObj: pointer): pointer {.importc: "StatusBar_GetParent", dynlib: dllname.}
proc StatusBar_SetParent*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetParent", dynlib: dllname.}
proc StatusBar_GetLeft*(AObj: pointer): int32 {.importc: "StatusBar_GetLeft", dynlib: dllname.}
proc StatusBar_SetLeft*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetLeft", dynlib: dllname.}
proc StatusBar_GetTop*(AObj: pointer): int32 {.importc: "StatusBar_GetTop", dynlib: dllname.}
proc StatusBar_SetTop*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetTop", dynlib: dllname.}
proc StatusBar_GetWidth*(AObj: pointer): int32 {.importc: "StatusBar_GetWidth", dynlib: dllname.}
proc StatusBar_SetWidth*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetWidth", dynlib: dllname.}
proc StatusBar_GetHeight*(AObj: pointer): int32 {.importc: "StatusBar_GetHeight", dynlib: dllname.}
proc StatusBar_SetHeight*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetHeight", dynlib: dllname.}
proc StatusBar_GetCursor*(AObj: pointer): TCursor {.importc: "StatusBar_GetCursor", dynlib: dllname.}
proc StatusBar_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "StatusBar_SetCursor", dynlib: dllname.}
proc StatusBar_GetHint*(AObj: pointer): cstring {.importc: "StatusBar_GetHint", dynlib: dllname.}
proc StatusBar_SetHint*(AObj: pointer, AValue: cstring) {.importc: "StatusBar_SetHint", dynlib: dllname.}
proc StatusBar_GetComponentCount*(AObj: pointer): int32 {.importc: "StatusBar_GetComponentCount", dynlib: dllname.}
proc StatusBar_GetComponentIndex*(AObj: pointer): int32 {.importc: "StatusBar_GetComponentIndex", dynlib: dllname.}
proc StatusBar_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "StatusBar_SetComponentIndex", dynlib: dllname.}
proc StatusBar_GetOwner*(AObj: pointer): pointer {.importc: "StatusBar_GetOwner", dynlib: dllname.}
proc StatusBar_GetName*(AObj: pointer): cstring {.importc: "StatusBar_GetName", dynlib: dllname.}
proc StatusBar_SetName*(AObj: pointer, AValue: cstring) {.importc: "StatusBar_SetName", dynlib: dllname.}
proc StatusBar_GetTag*(AObj: pointer): int {.importc: "StatusBar_GetTag", dynlib: dllname.}
proc StatusBar_SetTag*(AObj: pointer, AValue: int) {.importc: "StatusBar_SetTag", dynlib: dllname.}
proc StatusBar_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "StatusBar_GetAnchorSideLeft", dynlib: dllname.}
proc StatusBar_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetAnchorSideLeft", dynlib: dllname.}
proc StatusBar_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "StatusBar_GetAnchorSideTop", dynlib: dllname.}
proc StatusBar_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetAnchorSideTop", dynlib: dllname.}
proc StatusBar_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "StatusBar_GetAnchorSideRight", dynlib: dllname.}
proc StatusBar_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetAnchorSideRight", dynlib: dllname.}
proc StatusBar_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "StatusBar_GetAnchorSideBottom", dynlib: dllname.}
proc StatusBar_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetAnchorSideBottom", dynlib: dllname.}
proc StatusBar_GetChildSizing*(AObj: pointer): pointer {.importc: "StatusBar_GetChildSizing", dynlib: dllname.}
proc StatusBar_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetChildSizing", dynlib: dllname.}
proc StatusBar_GetBorderSpacing*(AObj: pointer): pointer {.importc: "StatusBar_GetBorderSpacing", dynlib: dllname.}
proc StatusBar_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "StatusBar_SetBorderSpacing", dynlib: dllname.}
proc StatusBar_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "StatusBar_GetDockClients", dynlib: dllname.}
proc StatusBar_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "StatusBar_GetControls", dynlib: dllname.}
proc StatusBar_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "StatusBar_GetComponents", dynlib: dllname.}
proc StatusBar_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "StatusBar_GetAnchorSide", dynlib: dllname.}
proc StatusBar_StaticClassType*(): TClass {.importc: "StatusBar_StaticClassType", dynlib: dllname.}
# ----------------- TToolBar ----------------------
proc ToolBar_Create*(AOwner: pointer): pointer {.importc: "ToolBar_Create", dynlib: dllname.}
proc ToolBar_Free*(AObj: pointer) {.importc: "ToolBar_Free", dynlib: dllname.}
proc ToolBar_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ToolBar_FlipChildren", dynlib: dllname.}
proc ToolBar_CanFocus*(AObj: pointer): bool {.importc: "ToolBar_CanFocus", dynlib: dllname.}
proc ToolBar_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ToolBar_ContainsControl", dynlib: dllname.}
proc ToolBar_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ToolBar_ControlAtPos", dynlib: dllname.}
proc ToolBar_DisableAlign*(AObj: pointer) {.importc: "ToolBar_DisableAlign", dynlib: dllname.}
proc ToolBar_EnableAlign*(AObj: pointer) {.importc: "ToolBar_EnableAlign", dynlib: dllname.}
proc ToolBar_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ToolBar_FindChildControl", dynlib: dllname.}
proc ToolBar_Focused*(AObj: pointer): bool {.importc: "ToolBar_Focused", dynlib: dllname.}
proc ToolBar_HandleAllocated*(AObj: pointer): bool {.importc: "ToolBar_HandleAllocated", dynlib: dllname.}
proc ToolBar_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ToolBar_InsertControl", dynlib: dllname.}
proc ToolBar_Invalidate*(AObj: pointer) {.importc: "ToolBar_Invalidate", dynlib: dllname.}
proc ToolBar_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ToolBar_PaintTo", dynlib: dllname.}
proc ToolBar_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ToolBar_RemoveControl", dynlib: dllname.}
proc ToolBar_Realign*(AObj: pointer) {.importc: "ToolBar_Realign", dynlib: dllname.}
proc ToolBar_Repaint*(AObj: pointer) {.importc: "ToolBar_Repaint", dynlib: dllname.}
proc ToolBar_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ToolBar_ScaleBy", dynlib: dllname.}
proc ToolBar_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ToolBar_ScrollBy", dynlib: dllname.}
proc ToolBar_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ToolBar_SetBounds", dynlib: dllname.}
proc ToolBar_SetFocus*(AObj: pointer) {.importc: "ToolBar_SetFocus", dynlib: dllname.}
proc ToolBar_Update*(AObj: pointer) {.importc: "ToolBar_Update", dynlib: dllname.}
proc ToolBar_BringToFront*(AObj: pointer) {.importc: "ToolBar_BringToFront", dynlib: dllname.}
proc ToolBar_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ToolBar_ClientToScreen", dynlib: dllname.}
proc ToolBar_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ToolBar_ClientToParent", dynlib: dllname.}
proc ToolBar_Dragging*(AObj: pointer): bool {.importc: "ToolBar_Dragging", dynlib: dllname.}
proc ToolBar_HasParent*(AObj: pointer): bool {.importc: "ToolBar_HasParent", dynlib: dllname.}
proc ToolBar_Hide*(AObj: pointer) {.importc: "ToolBar_Hide", dynlib: dllname.}
proc ToolBar_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ToolBar_Perform", dynlib: dllname.}
proc ToolBar_Refresh*(AObj: pointer) {.importc: "ToolBar_Refresh", dynlib: dllname.}
proc ToolBar_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ToolBar_ScreenToClient", dynlib: dllname.}
proc ToolBar_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ToolBar_ParentToClient", dynlib: dllname.}
proc ToolBar_SendToBack*(AObj: pointer) {.importc: "ToolBar_SendToBack", dynlib: dllname.}
proc ToolBar_Show*(AObj: pointer) {.importc: "ToolBar_Show", dynlib: dllname.}
proc ToolBar_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ToolBar_GetTextBuf", dynlib: dllname.}
proc ToolBar_GetTextLen*(AObj: pointer): int32 {.importc: "ToolBar_GetTextLen", dynlib: dllname.}
proc ToolBar_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ToolBar_SetTextBuf", dynlib: dllname.}
proc ToolBar_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ToolBar_FindComponent", dynlib: dllname.}
proc ToolBar_GetNamePath*(AObj: pointer): cstring {.importc: "ToolBar_GetNamePath", dynlib: dllname.}
proc ToolBar_Assign*(AObj: pointer, Source: pointer) {.importc: "ToolBar_Assign", dynlib: dllname.}
proc ToolBar_ClassType*(AObj: pointer): TClass {.importc: "ToolBar_ClassType", dynlib: dllname.}
proc ToolBar_ClassName*(AObj: pointer): cstring {.importc: "ToolBar_ClassName", dynlib: dllname.}
proc ToolBar_InstanceSize*(AObj: pointer): int32 {.importc: "ToolBar_InstanceSize", dynlib: dllname.}
proc ToolBar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ToolBar_InheritsFrom", dynlib: dllname.}
proc ToolBar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ToolBar_Equals", dynlib: dllname.}
proc ToolBar_GetHashCode*(AObj: pointer): int32 {.importc: "ToolBar_GetHashCode", dynlib: dllname.}
proc ToolBar_ToString*(AObj: pointer): cstring {.importc: "ToolBar_ToString", dynlib: dllname.}
proc ToolBar_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ToolBar_AnchorToNeighbour", dynlib: dllname.}
proc ToolBar_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ToolBar_AnchorParallel", dynlib: dllname.}
proc ToolBar_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ToolBar_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ToolBar_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ToolBar_AnchorVerticalCenterTo", dynlib: dllname.}
proc ToolBar_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ToolBar_AnchorSame", dynlib: dllname.}
proc ToolBar_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ToolBar_AnchorAsAlign", dynlib: dllname.}
proc ToolBar_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ToolBar_AnchorClient", dynlib: dllname.}
proc ToolBar_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_ScaleDesignToForm", dynlib: dllname.}
proc ToolBar_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_ScaleFormToDesign", dynlib: dllname.}
proc ToolBar_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_Scale96ToForm", dynlib: dllname.}
proc ToolBar_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_ScaleFormTo96", dynlib: dllname.}
proc ToolBar_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_Scale96ToFont", dynlib: dllname.}
proc ToolBar_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_ScaleFontTo96", dynlib: dllname.}
proc ToolBar_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_ScaleScreenToFont", dynlib: dllname.}
proc ToolBar_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_ScaleFontToScreen", dynlib: dllname.}
proc ToolBar_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_Scale96ToScreen", dynlib: dllname.}
proc ToolBar_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToolBar_ScaleScreenTo96", dynlib: dllname.}
proc ToolBar_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ToolBar_AutoAdjustLayout", dynlib: dllname.}
proc ToolBar_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ToolBar_FixDesignFontsPPI", dynlib: dllname.}
proc ToolBar_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ToolBar_ScaleFontsPPI", dynlib: dllname.}
proc ToolBar_GetButtonCount*(AObj: pointer): int32 {.importc: "ToolBar_GetButtonCount", dynlib: dllname.}
proc ToolBar_GetCanvas*(AObj: pointer): pointer {.importc: "ToolBar_GetCanvas", dynlib: dllname.}
proc ToolBar_GetRowCount*(AObj: pointer): int32 {.importc: "ToolBar_GetRowCount", dynlib: dllname.}
proc ToolBar_GetAlign*(AObj: pointer): TAlign {.importc: "ToolBar_GetAlign", dynlib: dllname.}
proc ToolBar_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ToolBar_SetAlign", dynlib: dllname.}
proc ToolBar_GetAnchors*(AObj: pointer): TAnchors {.importc: "ToolBar_GetAnchors", dynlib: dllname.}
proc ToolBar_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ToolBar_SetAnchors", dynlib: dllname.}
proc ToolBar_GetAutoSize*(AObj: pointer): bool {.importc: "ToolBar_GetAutoSize", dynlib: dllname.}
proc ToolBar_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetAutoSize", dynlib: dllname.}
proc ToolBar_GetBorderWidth*(AObj: pointer): int32 {.importc: "ToolBar_GetBorderWidth", dynlib: dllname.}
proc ToolBar_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetBorderWidth", dynlib: dllname.}
proc ToolBar_GetButtonHeight*(AObj: pointer): int32 {.importc: "ToolBar_GetButtonHeight", dynlib: dllname.}
proc ToolBar_SetButtonHeight*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetButtonHeight", dynlib: dllname.}
proc ToolBar_GetButtonWidth*(AObj: pointer): int32 {.importc: "ToolBar_GetButtonWidth", dynlib: dllname.}
proc ToolBar_SetButtonWidth*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetButtonWidth", dynlib: dllname.}
proc ToolBar_GetCaption*(AObj: pointer): cstring {.importc: "ToolBar_GetCaption", dynlib: dllname.}
proc ToolBar_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "ToolBar_SetCaption", dynlib: dllname.}
proc ToolBar_GetColor*(AObj: pointer): TColor {.importc: "ToolBar_GetColor", dynlib: dllname.}
proc ToolBar_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ToolBar_SetColor", dynlib: dllname.}
proc ToolBar_GetConstraints*(AObj: pointer): pointer {.importc: "ToolBar_GetConstraints", dynlib: dllname.}
proc ToolBar_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetConstraints", dynlib: dllname.}
proc ToolBar_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ToolBar_GetDoubleBuffered", dynlib: dllname.}
proc ToolBar_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetDoubleBuffered", dynlib: dllname.}
proc ToolBar_GetDockSite*(AObj: pointer): bool {.importc: "ToolBar_GetDockSite", dynlib: dllname.}
proc ToolBar_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetDockSite", dynlib: dllname.}
proc ToolBar_GetDragCursor*(AObj: pointer): TCursor {.importc: "ToolBar_GetDragCursor", dynlib: dllname.}
proc ToolBar_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ToolBar_SetDragCursor", dynlib: dllname.}
proc ToolBar_GetDragKind*(AObj: pointer): TDragKind {.importc: "ToolBar_GetDragKind", dynlib: dllname.}
proc ToolBar_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ToolBar_SetDragKind", dynlib: dllname.}
proc ToolBar_GetDragMode*(AObj: pointer): TDragMode {.importc: "ToolBar_GetDragMode", dynlib: dllname.}
proc ToolBar_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ToolBar_SetDragMode", dynlib: dllname.}
proc ToolBar_GetEdgeBorders*(AObj: pointer): TEdgeBorders {.importc: "ToolBar_GetEdgeBorders", dynlib: dllname.}
proc ToolBar_SetEdgeBorders*(AObj: pointer, AValue: TEdgeBorders) {.importc: "ToolBar_SetEdgeBorders", dynlib: dllname.}
proc ToolBar_GetEdgeInner*(AObj: pointer): TEdgeStyle {.importc: "ToolBar_GetEdgeInner", dynlib: dllname.}
proc ToolBar_SetEdgeInner*(AObj: pointer, AValue: TEdgeStyle) {.importc: "ToolBar_SetEdgeInner", dynlib: dllname.}
proc ToolBar_GetEdgeOuter*(AObj: pointer): TEdgeStyle {.importc: "ToolBar_GetEdgeOuter", dynlib: dllname.}
proc ToolBar_SetEdgeOuter*(AObj: pointer, AValue: TEdgeStyle) {.importc: "ToolBar_SetEdgeOuter", dynlib: dllname.}
proc ToolBar_GetEnabled*(AObj: pointer): bool {.importc: "ToolBar_GetEnabled", dynlib: dllname.}
proc ToolBar_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetEnabled", dynlib: dllname.}
proc ToolBar_GetFlat*(AObj: pointer): bool {.importc: "ToolBar_GetFlat", dynlib: dllname.}
proc ToolBar_SetFlat*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetFlat", dynlib: dllname.}
proc ToolBar_GetFont*(AObj: pointer): pointer {.importc: "ToolBar_GetFont", dynlib: dllname.}
proc ToolBar_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetFont", dynlib: dllname.}
proc ToolBar_GetHeight*(AObj: pointer): int32 {.importc: "ToolBar_GetHeight", dynlib: dllname.}
proc ToolBar_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetHeight", dynlib: dllname.}
proc ToolBar_GetHotImages*(AObj: pointer): pointer {.importc: "ToolBar_GetHotImages", dynlib: dllname.}
proc ToolBar_SetHotImages*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetHotImages", dynlib: dllname.}
proc ToolBar_GetImages*(AObj: pointer): pointer {.importc: "ToolBar_GetImages", dynlib: dllname.}
proc ToolBar_SetImages*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetImages", dynlib: dllname.}
proc ToolBar_GetIndent*(AObj: pointer): int32 {.importc: "ToolBar_GetIndent", dynlib: dllname.}
proc ToolBar_SetIndent*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetIndent", dynlib: dllname.}
proc ToolBar_GetList*(AObj: pointer): bool {.importc: "ToolBar_GetList", dynlib: dllname.}
proc ToolBar_SetList*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetList", dynlib: dllname.}
proc ToolBar_GetParentColor*(AObj: pointer): bool {.importc: "ToolBar_GetParentColor", dynlib: dllname.}
proc ToolBar_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetParentColor", dynlib: dllname.}
proc ToolBar_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ToolBar_GetParentDoubleBuffered", dynlib: dllname.}
proc ToolBar_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetParentDoubleBuffered", dynlib: dllname.}
proc ToolBar_GetParentFont*(AObj: pointer): bool {.importc: "ToolBar_GetParentFont", dynlib: dllname.}
proc ToolBar_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetParentFont", dynlib: dllname.}
proc ToolBar_GetParentShowHint*(AObj: pointer): bool {.importc: "ToolBar_GetParentShowHint", dynlib: dllname.}
proc ToolBar_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetParentShowHint", dynlib: dllname.}
proc ToolBar_GetPopupMenu*(AObj: pointer): pointer {.importc: "ToolBar_GetPopupMenu", dynlib: dllname.}
proc ToolBar_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetPopupMenu", dynlib: dllname.}
proc ToolBar_GetShowCaptions*(AObj: pointer): bool {.importc: "ToolBar_GetShowCaptions", dynlib: dllname.}
proc ToolBar_SetShowCaptions*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetShowCaptions", dynlib: dllname.}
proc ToolBar_GetShowHint*(AObj: pointer): bool {.importc: "ToolBar_GetShowHint", dynlib: dllname.}
proc ToolBar_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetShowHint", dynlib: dllname.}
proc ToolBar_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ToolBar_GetTabOrder", dynlib: dllname.}
proc ToolBar_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ToolBar_SetTabOrder", dynlib: dllname.}
proc ToolBar_GetTabStop*(AObj: pointer): bool {.importc: "ToolBar_GetTabStop", dynlib: dllname.}
proc ToolBar_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetTabStop", dynlib: dllname.}
proc ToolBar_GetTransparent*(AObj: pointer): bool {.importc: "ToolBar_GetTransparent", dynlib: dllname.}
proc ToolBar_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetTransparent", dynlib: dllname.}
proc ToolBar_GetVisible*(AObj: pointer): bool {.importc: "ToolBar_GetVisible", dynlib: dllname.}
proc ToolBar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetVisible", dynlib: dllname.}
proc ToolBar_GetWrapable*(AObj: pointer): bool {.importc: "ToolBar_GetWrapable", dynlib: dllname.}
proc ToolBar_SetWrapable*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetWrapable", dynlib: dllname.}
proc ToolBar_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolBar_SetOnClick", dynlib: dllname.}
proc ToolBar_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ToolBar_SetOnContextPopup", dynlib: dllname.}
proc ToolBar_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolBar_SetOnDblClick", dynlib: dllname.}
proc ToolBar_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "ToolBar_SetOnDockDrop", dynlib: dllname.}
proc ToolBar_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ToolBar_SetOnDragDrop", dynlib: dllname.}
proc ToolBar_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ToolBar_SetOnDragOver", dynlib: dllname.}
proc ToolBar_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ToolBar_SetOnEndDrag", dynlib: dllname.}
proc ToolBar_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolBar_SetOnEnter", dynlib: dllname.}
proc ToolBar_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolBar_SetOnExit", dynlib: dllname.}
proc ToolBar_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ToolBar_SetOnMouseDown", dynlib: dllname.}
proc ToolBar_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolBar_SetOnMouseEnter", dynlib: dllname.}
proc ToolBar_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolBar_SetOnMouseLeave", dynlib: dllname.}
proc ToolBar_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ToolBar_SetOnMouseMove", dynlib: dllname.}
proc ToolBar_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ToolBar_SetOnMouseUp", dynlib: dllname.}
proc ToolBar_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolBar_SetOnResize", dynlib: dllname.}
proc ToolBar_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "ToolBar_SetOnUnDock", dynlib: dllname.}
proc ToolBar_GetDockClientCount*(AObj: pointer): int32 {.importc: "ToolBar_GetDockClientCount", dynlib: dllname.}
proc ToolBar_GetMouseInClient*(AObj: pointer): bool {.importc: "ToolBar_GetMouseInClient", dynlib: dllname.}
proc ToolBar_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ToolBar_GetVisibleDockClientCount", dynlib: dllname.}
proc ToolBar_GetBrush*(AObj: pointer): pointer {.importc: "ToolBar_GetBrush", dynlib: dllname.}
proc ToolBar_GetControlCount*(AObj: pointer): int32 {.importc: "ToolBar_GetControlCount", dynlib: dllname.}
proc ToolBar_GetHandle*(AObj: pointer): HWND {.importc: "ToolBar_GetHandle", dynlib: dllname.}
proc ToolBar_GetParentWindow*(AObj: pointer): HWND {.importc: "ToolBar_GetParentWindow", dynlib: dllname.}
proc ToolBar_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ToolBar_SetParentWindow", dynlib: dllname.}
proc ToolBar_GetShowing*(AObj: pointer): bool {.importc: "ToolBar_GetShowing", dynlib: dllname.}
proc ToolBar_GetUseDockManager*(AObj: pointer): bool {.importc: "ToolBar_GetUseDockManager", dynlib: dllname.}
proc ToolBar_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ToolBar_SetUseDockManager", dynlib: dllname.}
proc ToolBar_GetAction*(AObj: pointer): pointer {.importc: "ToolBar_GetAction", dynlib: dllname.}
proc ToolBar_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetAction", dynlib: dllname.}
proc ToolBar_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ToolBar_GetBiDiMode", dynlib: dllname.}
proc ToolBar_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ToolBar_SetBiDiMode", dynlib: dllname.}
proc ToolBar_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ToolBar_GetBoundsRect", dynlib: dllname.}
proc ToolBar_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ToolBar_SetBoundsRect", dynlib: dllname.}
proc ToolBar_GetClientHeight*(AObj: pointer): int32 {.importc: "ToolBar_GetClientHeight", dynlib: dllname.}
proc ToolBar_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetClientHeight", dynlib: dllname.}
proc ToolBar_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ToolBar_GetClientOrigin", dynlib: dllname.}
proc ToolBar_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ToolBar_GetClientRect", dynlib: dllname.}
proc ToolBar_GetClientWidth*(AObj: pointer): int32 {.importc: "ToolBar_GetClientWidth", dynlib: dllname.}
proc ToolBar_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetClientWidth", dynlib: dllname.}
proc ToolBar_GetControlState*(AObj: pointer): TControlState {.importc: "ToolBar_GetControlState", dynlib: dllname.}
proc ToolBar_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ToolBar_SetControlState", dynlib: dllname.}
proc ToolBar_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ToolBar_GetControlStyle", dynlib: dllname.}
proc ToolBar_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ToolBar_SetControlStyle", dynlib: dllname.}
proc ToolBar_GetFloating*(AObj: pointer): bool {.importc: "ToolBar_GetFloating", dynlib: dllname.}
proc ToolBar_GetParent*(AObj: pointer): pointer {.importc: "ToolBar_GetParent", dynlib: dllname.}
proc ToolBar_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetParent", dynlib: dllname.}
proc ToolBar_GetLeft*(AObj: pointer): int32 {.importc: "ToolBar_GetLeft", dynlib: dllname.}
proc ToolBar_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetLeft", dynlib: dllname.}
proc ToolBar_GetTop*(AObj: pointer): int32 {.importc: "ToolBar_GetTop", dynlib: dllname.}
proc ToolBar_SetTop*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetTop", dynlib: dllname.}
proc ToolBar_GetWidth*(AObj: pointer): int32 {.importc: "ToolBar_GetWidth", dynlib: dllname.}
proc ToolBar_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetWidth", dynlib: dllname.}
proc ToolBar_GetCursor*(AObj: pointer): TCursor {.importc: "ToolBar_GetCursor", dynlib: dllname.}
proc ToolBar_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ToolBar_SetCursor", dynlib: dllname.}
proc ToolBar_GetHint*(AObj: pointer): cstring {.importc: "ToolBar_GetHint", dynlib: dllname.}
proc ToolBar_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ToolBar_SetHint", dynlib: dllname.}
proc ToolBar_GetComponentCount*(AObj: pointer): int32 {.importc: "ToolBar_GetComponentCount", dynlib: dllname.}
proc ToolBar_GetComponentIndex*(AObj: pointer): int32 {.importc: "ToolBar_GetComponentIndex", dynlib: dllname.}
proc ToolBar_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ToolBar_SetComponentIndex", dynlib: dllname.}
proc ToolBar_GetOwner*(AObj: pointer): pointer {.importc: "ToolBar_GetOwner", dynlib: dllname.}
proc ToolBar_GetName*(AObj: pointer): cstring {.importc: "ToolBar_GetName", dynlib: dllname.}
proc ToolBar_SetName*(AObj: pointer, AValue: cstring) {.importc: "ToolBar_SetName", dynlib: dllname.}
proc ToolBar_GetTag*(AObj: pointer): int {.importc: "ToolBar_GetTag", dynlib: dllname.}
proc ToolBar_SetTag*(AObj: pointer, AValue: int) {.importc: "ToolBar_SetTag", dynlib: dllname.}
proc ToolBar_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ToolBar_GetAnchorSideLeft", dynlib: dllname.}
proc ToolBar_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetAnchorSideLeft", dynlib: dllname.}
proc ToolBar_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ToolBar_GetAnchorSideTop", dynlib: dllname.}
proc ToolBar_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetAnchorSideTop", dynlib: dllname.}
proc ToolBar_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ToolBar_GetAnchorSideRight", dynlib: dllname.}
proc ToolBar_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetAnchorSideRight", dynlib: dllname.}
proc ToolBar_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ToolBar_GetAnchorSideBottom", dynlib: dllname.}
proc ToolBar_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetAnchorSideBottom", dynlib: dllname.}
proc ToolBar_GetChildSizing*(AObj: pointer): pointer {.importc: "ToolBar_GetChildSizing", dynlib: dllname.}
proc ToolBar_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetChildSizing", dynlib: dllname.}
proc ToolBar_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ToolBar_GetBorderSpacing", dynlib: dllname.}
proc ToolBar_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ToolBar_SetBorderSpacing", dynlib: dllname.}
proc ToolBar_GetButtons*(AObj: pointer, Index: int32): pointer {.importc: "ToolBar_GetButtons", dynlib: dllname.}
proc ToolBar_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ToolBar_GetDockClients", dynlib: dllname.}
proc ToolBar_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ToolBar_GetControls", dynlib: dllname.}
proc ToolBar_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ToolBar_GetComponents", dynlib: dllname.}
proc ToolBar_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ToolBar_GetAnchorSide", dynlib: dllname.}
proc ToolBar_StaticClassType*(): TClass {.importc: "ToolBar_StaticClassType", dynlib: dllname.}
# ----------------- TBitBtn ----------------------
proc BitBtn_Create*(AOwner: pointer): pointer {.importc: "BitBtn_Create", dynlib: dllname.}
proc BitBtn_Free*(AObj: pointer) {.importc: "BitBtn_Free", dynlib: dllname.}
proc BitBtn_Click*(AObj: pointer) {.importc: "BitBtn_Click", dynlib: dllname.}
proc BitBtn_CanFocus*(AObj: pointer): bool {.importc: "BitBtn_CanFocus", dynlib: dllname.}
proc BitBtn_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "BitBtn_ContainsControl", dynlib: dllname.}
proc BitBtn_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "BitBtn_ControlAtPos", dynlib: dllname.}
proc BitBtn_DisableAlign*(AObj: pointer) {.importc: "BitBtn_DisableAlign", dynlib: dllname.}
proc BitBtn_EnableAlign*(AObj: pointer) {.importc: "BitBtn_EnableAlign", dynlib: dllname.}
proc BitBtn_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "BitBtn_FindChildControl", dynlib: dllname.}
proc BitBtn_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "BitBtn_FlipChildren", dynlib: dllname.}
proc BitBtn_Focused*(AObj: pointer): bool {.importc: "BitBtn_Focused", dynlib: dllname.}
proc BitBtn_HandleAllocated*(AObj: pointer): bool {.importc: "BitBtn_HandleAllocated", dynlib: dllname.}
proc BitBtn_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "BitBtn_InsertControl", dynlib: dllname.}
proc BitBtn_Invalidate*(AObj: pointer) {.importc: "BitBtn_Invalidate", dynlib: dllname.}
proc BitBtn_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "BitBtn_PaintTo", dynlib: dllname.}
proc BitBtn_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "BitBtn_RemoveControl", dynlib: dllname.}
proc BitBtn_Realign*(AObj: pointer) {.importc: "BitBtn_Realign", dynlib: dllname.}
proc BitBtn_Repaint*(AObj: pointer) {.importc: "BitBtn_Repaint", dynlib: dllname.}
proc BitBtn_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "BitBtn_ScaleBy", dynlib: dllname.}
proc BitBtn_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "BitBtn_ScrollBy", dynlib: dllname.}
proc BitBtn_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "BitBtn_SetBounds", dynlib: dllname.}
proc BitBtn_SetFocus*(AObj: pointer) {.importc: "BitBtn_SetFocus", dynlib: dllname.}
proc BitBtn_Update*(AObj: pointer) {.importc: "BitBtn_Update", dynlib: dllname.}
proc BitBtn_BringToFront*(AObj: pointer) {.importc: "BitBtn_BringToFront", dynlib: dllname.}
proc BitBtn_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "BitBtn_ClientToScreen", dynlib: dllname.}
proc BitBtn_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "BitBtn_ClientToParent", dynlib: dllname.}
proc BitBtn_Dragging*(AObj: pointer): bool {.importc: "BitBtn_Dragging", dynlib: dllname.}
proc BitBtn_HasParent*(AObj: pointer): bool {.importc: "BitBtn_HasParent", dynlib: dllname.}
proc BitBtn_Hide*(AObj: pointer) {.importc: "BitBtn_Hide", dynlib: dllname.}
proc BitBtn_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "BitBtn_Perform", dynlib: dllname.}
proc BitBtn_Refresh*(AObj: pointer) {.importc: "BitBtn_Refresh", dynlib: dllname.}
proc BitBtn_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "BitBtn_ScreenToClient", dynlib: dllname.}
proc BitBtn_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "BitBtn_ParentToClient", dynlib: dllname.}
proc BitBtn_SendToBack*(AObj: pointer) {.importc: "BitBtn_SendToBack", dynlib: dllname.}
proc BitBtn_Show*(AObj: pointer) {.importc: "BitBtn_Show", dynlib: dllname.}
proc BitBtn_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "BitBtn_GetTextBuf", dynlib: dllname.}
proc BitBtn_GetTextLen*(AObj: pointer): int32 {.importc: "BitBtn_GetTextLen", dynlib: dllname.}
proc BitBtn_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "BitBtn_SetTextBuf", dynlib: dllname.}
proc BitBtn_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "BitBtn_FindComponent", dynlib: dllname.}
proc BitBtn_GetNamePath*(AObj: pointer): cstring {.importc: "BitBtn_GetNamePath", dynlib: dllname.}
proc BitBtn_Assign*(AObj: pointer, Source: pointer) {.importc: "BitBtn_Assign", dynlib: dllname.}
proc BitBtn_ClassType*(AObj: pointer): TClass {.importc: "BitBtn_ClassType", dynlib: dllname.}
proc BitBtn_ClassName*(AObj: pointer): cstring {.importc: "BitBtn_ClassName", dynlib: dllname.}
proc BitBtn_InstanceSize*(AObj: pointer): int32 {.importc: "BitBtn_InstanceSize", dynlib: dllname.}
proc BitBtn_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "BitBtn_InheritsFrom", dynlib: dllname.}
proc BitBtn_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "BitBtn_Equals", dynlib: dllname.}
proc BitBtn_GetHashCode*(AObj: pointer): int32 {.importc: "BitBtn_GetHashCode", dynlib: dllname.}
proc BitBtn_ToString*(AObj: pointer): cstring {.importc: "BitBtn_ToString", dynlib: dllname.}
proc BitBtn_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "BitBtn_AnchorToNeighbour", dynlib: dllname.}
proc BitBtn_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "BitBtn_AnchorParallel", dynlib: dllname.}
proc BitBtn_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "BitBtn_AnchorHorizontalCenterTo", dynlib: dllname.}
proc BitBtn_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "BitBtn_AnchorVerticalCenterTo", dynlib: dllname.}
proc BitBtn_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "BitBtn_AnchorSame", dynlib: dllname.}
proc BitBtn_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "BitBtn_AnchorAsAlign", dynlib: dllname.}
proc BitBtn_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "BitBtn_AnchorClient", dynlib: dllname.}
proc BitBtn_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_ScaleDesignToForm", dynlib: dllname.}
proc BitBtn_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_ScaleFormToDesign", dynlib: dllname.}
proc BitBtn_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_Scale96ToForm", dynlib: dllname.}
proc BitBtn_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_ScaleFormTo96", dynlib: dllname.}
proc BitBtn_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_Scale96ToFont", dynlib: dllname.}
proc BitBtn_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_ScaleFontTo96", dynlib: dllname.}
proc BitBtn_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_ScaleScreenToFont", dynlib: dllname.}
proc BitBtn_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_ScaleFontToScreen", dynlib: dllname.}
proc BitBtn_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_Scale96ToScreen", dynlib: dllname.}
proc BitBtn_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "BitBtn_ScaleScreenTo96", dynlib: dllname.}
proc BitBtn_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "BitBtn_AutoAdjustLayout", dynlib: dllname.}
proc BitBtn_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "BitBtn_FixDesignFontsPPI", dynlib: dllname.}
proc BitBtn_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "BitBtn_ScaleFontsPPI", dynlib: dllname.}
proc BitBtn_GetDefaultCaption*(AObj: pointer): bool {.importc: "BitBtn_GetDefaultCaption", dynlib: dllname.}
proc BitBtn_SetDefaultCaption*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetDefaultCaption", dynlib: dllname.}
proc BitBtn_GetGlyphShowMode*(AObj: pointer): TGlyphShowMode {.importc: "BitBtn_GetGlyphShowMode", dynlib: dllname.}
proc BitBtn_SetGlyphShowMode*(AObj: pointer, AValue: TGlyphShowMode) {.importc: "BitBtn_SetGlyphShowMode", dynlib: dllname.}
proc BitBtn_GetImageWidth*(AObj: pointer): int32 {.importc: "BitBtn_GetImageWidth", dynlib: dllname.}
proc BitBtn_SetImageWidth*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetImageWidth", dynlib: dllname.}
proc BitBtn_GetAction*(AObj: pointer): pointer {.importc: "BitBtn_GetAction", dynlib: dllname.}
proc BitBtn_SetAction*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetAction", dynlib: dllname.}
proc BitBtn_GetAlign*(AObj: pointer): TAlign {.importc: "BitBtn_GetAlign", dynlib: dllname.}
proc BitBtn_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "BitBtn_SetAlign", dynlib: dllname.}
proc BitBtn_GetAnchors*(AObj: pointer): TAnchors {.importc: "BitBtn_GetAnchors", dynlib: dllname.}
proc BitBtn_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "BitBtn_SetAnchors", dynlib: dllname.}
proc BitBtn_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "BitBtn_GetBiDiMode", dynlib: dllname.}
proc BitBtn_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "BitBtn_SetBiDiMode", dynlib: dllname.}
proc BitBtn_GetCancel*(AObj: pointer): bool {.importc: "BitBtn_GetCancel", dynlib: dllname.}
proc BitBtn_SetCancel*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetCancel", dynlib: dllname.}
proc BitBtn_GetCaption*(AObj: pointer): cstring {.importc: "BitBtn_GetCaption", dynlib: dllname.}
proc BitBtn_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "BitBtn_SetCaption", dynlib: dllname.}
proc BitBtn_GetConstraints*(AObj: pointer): pointer {.importc: "BitBtn_GetConstraints", dynlib: dllname.}
proc BitBtn_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetConstraints", dynlib: dllname.}
proc BitBtn_GetDefault*(AObj: pointer): bool {.importc: "BitBtn_GetDefault", dynlib: dllname.}
proc BitBtn_SetDefault*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetDefault", dynlib: dllname.}
proc BitBtn_GetDoubleBuffered*(AObj: pointer): bool {.importc: "BitBtn_GetDoubleBuffered", dynlib: dllname.}
proc BitBtn_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetDoubleBuffered", dynlib: dllname.}
proc BitBtn_GetEnabled*(AObj: pointer): bool {.importc: "BitBtn_GetEnabled", dynlib: dllname.}
proc BitBtn_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetEnabled", dynlib: dllname.}
proc BitBtn_GetFont*(AObj: pointer): pointer {.importc: "BitBtn_GetFont", dynlib: dllname.}
proc BitBtn_SetFont*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetFont", dynlib: dllname.}
proc BitBtn_GetGlyph*(AObj: pointer): pointer {.importc: "BitBtn_GetGlyph", dynlib: dllname.}
proc BitBtn_SetGlyph*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetGlyph", dynlib: dllname.}
proc BitBtn_GetLayout*(AObj: pointer): TButtonLayout {.importc: "BitBtn_GetLayout", dynlib: dllname.}
proc BitBtn_SetLayout*(AObj: pointer, AValue: TButtonLayout) {.importc: "BitBtn_SetLayout", dynlib: dllname.}
proc BitBtn_GetModalResult*(AObj: pointer): TModalResult {.importc: "BitBtn_GetModalResult", dynlib: dllname.}
proc BitBtn_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "BitBtn_SetModalResult", dynlib: dllname.}
proc BitBtn_GetNumGlyphs*(AObj: pointer): TNumGlyphs {.importc: "BitBtn_GetNumGlyphs", dynlib: dllname.}
proc BitBtn_SetNumGlyphs*(AObj: pointer, AValue: TNumGlyphs) {.importc: "BitBtn_SetNumGlyphs", dynlib: dllname.}
proc BitBtn_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "BitBtn_GetParentDoubleBuffered", dynlib: dllname.}
proc BitBtn_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetParentDoubleBuffered", dynlib: dllname.}
proc BitBtn_GetParentFont*(AObj: pointer): bool {.importc: "BitBtn_GetParentFont", dynlib: dllname.}
proc BitBtn_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetParentFont", dynlib: dllname.}
proc BitBtn_GetParentShowHint*(AObj: pointer): bool {.importc: "BitBtn_GetParentShowHint", dynlib: dllname.}
proc BitBtn_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetParentShowHint", dynlib: dllname.}
proc BitBtn_GetPopupMenu*(AObj: pointer): pointer {.importc: "BitBtn_GetPopupMenu", dynlib: dllname.}
proc BitBtn_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetPopupMenu", dynlib: dllname.}
proc BitBtn_GetShowHint*(AObj: pointer): bool {.importc: "BitBtn_GetShowHint", dynlib: dllname.}
proc BitBtn_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetShowHint", dynlib: dllname.}
proc BitBtn_GetSpacing*(AObj: pointer): int32 {.importc: "BitBtn_GetSpacing", dynlib: dllname.}
proc BitBtn_SetSpacing*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetSpacing", dynlib: dllname.}
proc BitBtn_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "BitBtn_GetTabOrder", dynlib: dllname.}
proc BitBtn_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "BitBtn_SetTabOrder", dynlib: dllname.}
proc BitBtn_GetTabStop*(AObj: pointer): bool {.importc: "BitBtn_GetTabStop", dynlib: dllname.}
proc BitBtn_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetTabStop", dynlib: dllname.}
proc BitBtn_GetVisible*(AObj: pointer): bool {.importc: "BitBtn_GetVisible", dynlib: dllname.}
proc BitBtn_SetVisible*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetVisible", dynlib: dllname.}
proc BitBtn_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "BitBtn_SetOnClick", dynlib: dllname.}
proc BitBtn_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "BitBtn_SetOnContextPopup", dynlib: dllname.}
proc BitBtn_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "BitBtn_SetOnDragDrop", dynlib: dllname.}
proc BitBtn_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "BitBtn_SetOnDragOver", dynlib: dllname.}
proc BitBtn_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "BitBtn_SetOnEndDrag", dynlib: dllname.}
proc BitBtn_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "BitBtn_SetOnEnter", dynlib: dllname.}
proc BitBtn_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "BitBtn_SetOnExit", dynlib: dllname.}
proc BitBtn_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "BitBtn_SetOnKeyDown", dynlib: dllname.}
proc BitBtn_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "BitBtn_SetOnKeyPress", dynlib: dllname.}
proc BitBtn_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "BitBtn_SetOnKeyUp", dynlib: dllname.}
proc BitBtn_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "BitBtn_SetOnMouseDown", dynlib: dllname.}
proc BitBtn_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "BitBtn_SetOnMouseEnter", dynlib: dllname.}
proc BitBtn_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "BitBtn_SetOnMouseLeave", dynlib: dllname.}
proc BitBtn_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "BitBtn_SetOnMouseMove", dynlib: dllname.}
proc BitBtn_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "BitBtn_SetOnMouseUp", dynlib: dllname.}
proc BitBtn_GetDockClientCount*(AObj: pointer): int32 {.importc: "BitBtn_GetDockClientCount", dynlib: dllname.}
proc BitBtn_GetDockSite*(AObj: pointer): bool {.importc: "BitBtn_GetDockSite", dynlib: dllname.}
proc BitBtn_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetDockSite", dynlib: dllname.}
proc BitBtn_GetMouseInClient*(AObj: pointer): bool {.importc: "BitBtn_GetMouseInClient", dynlib: dllname.}
proc BitBtn_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "BitBtn_GetVisibleDockClientCount", dynlib: dllname.}
proc BitBtn_GetBrush*(AObj: pointer): pointer {.importc: "BitBtn_GetBrush", dynlib: dllname.}
proc BitBtn_GetControlCount*(AObj: pointer): int32 {.importc: "BitBtn_GetControlCount", dynlib: dllname.}
proc BitBtn_GetHandle*(AObj: pointer): HWND {.importc: "BitBtn_GetHandle", dynlib: dllname.}
proc BitBtn_GetParentWindow*(AObj: pointer): HWND {.importc: "BitBtn_GetParentWindow", dynlib: dllname.}
proc BitBtn_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "BitBtn_SetParentWindow", dynlib: dllname.}
proc BitBtn_GetShowing*(AObj: pointer): bool {.importc: "BitBtn_GetShowing", dynlib: dllname.}
proc BitBtn_GetUseDockManager*(AObj: pointer): bool {.importc: "BitBtn_GetUseDockManager", dynlib: dllname.}
proc BitBtn_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "BitBtn_SetUseDockManager", dynlib: dllname.}
proc BitBtn_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "BitBtn_GetBoundsRect", dynlib: dllname.}
proc BitBtn_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "BitBtn_SetBoundsRect", dynlib: dllname.}
proc BitBtn_GetClientHeight*(AObj: pointer): int32 {.importc: "BitBtn_GetClientHeight", dynlib: dllname.}
proc BitBtn_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetClientHeight", dynlib: dllname.}
proc BitBtn_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "BitBtn_GetClientOrigin", dynlib: dllname.}
proc BitBtn_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "BitBtn_GetClientRect", dynlib: dllname.}
proc BitBtn_GetClientWidth*(AObj: pointer): int32 {.importc: "BitBtn_GetClientWidth", dynlib: dllname.}
proc BitBtn_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetClientWidth", dynlib: dllname.}
proc BitBtn_GetControlState*(AObj: pointer): TControlState {.importc: "BitBtn_GetControlState", dynlib: dllname.}
proc BitBtn_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "BitBtn_SetControlState", dynlib: dllname.}
proc BitBtn_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "BitBtn_GetControlStyle", dynlib: dllname.}
proc BitBtn_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "BitBtn_SetControlStyle", dynlib: dllname.}
proc BitBtn_GetFloating*(AObj: pointer): bool {.importc: "BitBtn_GetFloating", dynlib: dllname.}
proc BitBtn_GetParent*(AObj: pointer): pointer {.importc: "BitBtn_GetParent", dynlib: dllname.}
proc BitBtn_SetParent*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetParent", dynlib: dllname.}
proc BitBtn_GetLeft*(AObj: pointer): int32 {.importc: "BitBtn_GetLeft", dynlib: dllname.}
proc BitBtn_SetLeft*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetLeft", dynlib: dllname.}
proc BitBtn_GetTop*(AObj: pointer): int32 {.importc: "BitBtn_GetTop", dynlib: dllname.}
proc BitBtn_SetTop*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetTop", dynlib: dllname.}
proc BitBtn_GetWidth*(AObj: pointer): int32 {.importc: "BitBtn_GetWidth", dynlib: dllname.}
proc BitBtn_SetWidth*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetWidth", dynlib: dllname.}
proc BitBtn_GetHeight*(AObj: pointer): int32 {.importc: "BitBtn_GetHeight", dynlib: dllname.}
proc BitBtn_SetHeight*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetHeight", dynlib: dllname.}
proc BitBtn_GetCursor*(AObj: pointer): TCursor {.importc: "BitBtn_GetCursor", dynlib: dllname.}
proc BitBtn_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "BitBtn_SetCursor", dynlib: dllname.}
proc BitBtn_GetHint*(AObj: pointer): cstring {.importc: "BitBtn_GetHint", dynlib: dllname.}
proc BitBtn_SetHint*(AObj: pointer, AValue: cstring) {.importc: "BitBtn_SetHint", dynlib: dllname.}
proc BitBtn_GetComponentCount*(AObj: pointer): int32 {.importc: "BitBtn_GetComponentCount", dynlib: dllname.}
proc BitBtn_GetComponentIndex*(AObj: pointer): int32 {.importc: "BitBtn_GetComponentIndex", dynlib: dllname.}
proc BitBtn_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "BitBtn_SetComponentIndex", dynlib: dllname.}
proc BitBtn_GetOwner*(AObj: pointer): pointer {.importc: "BitBtn_GetOwner", dynlib: dllname.}
proc BitBtn_GetName*(AObj: pointer): cstring {.importc: "BitBtn_GetName", dynlib: dllname.}
proc BitBtn_SetName*(AObj: pointer, AValue: cstring) {.importc: "BitBtn_SetName", dynlib: dllname.}
proc BitBtn_GetTag*(AObj: pointer): int {.importc: "BitBtn_GetTag", dynlib: dllname.}
proc BitBtn_SetTag*(AObj: pointer, AValue: int) {.importc: "BitBtn_SetTag", dynlib: dllname.}
proc BitBtn_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "BitBtn_GetAnchorSideLeft", dynlib: dllname.}
proc BitBtn_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetAnchorSideLeft", dynlib: dllname.}
proc BitBtn_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "BitBtn_GetAnchorSideTop", dynlib: dllname.}
proc BitBtn_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetAnchorSideTop", dynlib: dllname.}
proc BitBtn_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "BitBtn_GetAnchorSideRight", dynlib: dllname.}
proc BitBtn_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetAnchorSideRight", dynlib: dllname.}
proc BitBtn_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "BitBtn_GetAnchorSideBottom", dynlib: dllname.}
proc BitBtn_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetAnchorSideBottom", dynlib: dllname.}
proc BitBtn_GetChildSizing*(AObj: pointer): pointer {.importc: "BitBtn_GetChildSizing", dynlib: dllname.}
proc BitBtn_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetChildSizing", dynlib: dllname.}
proc BitBtn_GetBorderSpacing*(AObj: pointer): pointer {.importc: "BitBtn_GetBorderSpacing", dynlib: dllname.}
proc BitBtn_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "BitBtn_SetBorderSpacing", dynlib: dllname.}
proc BitBtn_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "BitBtn_GetDockClients", dynlib: dllname.}
proc BitBtn_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "BitBtn_GetControls", dynlib: dllname.}
proc BitBtn_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "BitBtn_GetComponents", dynlib: dllname.}
proc BitBtn_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "BitBtn_GetAnchorSide", dynlib: dllname.}
proc BitBtn_StaticClassType*(): TClass {.importc: "BitBtn_StaticClassType", dynlib: dllname.}
# ----------------- TIcon ----------------------
proc Icon_Create*(): pointer {.importc: "Icon_Create", dynlib: dllname.}
proc Icon_Free*(AObj: pointer) {.importc: "Icon_Free", dynlib: dllname.}
proc Icon_Assign*(AObj: pointer, Source: pointer) {.importc: "Icon_Assign", dynlib: dllname.}
proc Icon_HandleAllocated*(AObj: pointer): bool {.importc: "Icon_HandleAllocated", dynlib: dllname.}
proc Icon_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "Icon_LoadFromStream", dynlib: dllname.}
proc Icon_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "Icon_SaveToStream", dynlib: dllname.}
proc Icon_SetSize*(AObj: pointer, AWidth: int32, AHeight: int32) {.importc: "Icon_SetSize", dynlib: dllname.}
proc Icon_LoadFromResourceName*(AObj: pointer, Instance: uint, ResName: cstring) {.importc: "Icon_LoadFromResourceName", dynlib: dllname.}
proc Icon_LoadFromResourceID*(AObj: pointer, Instance: uint, ResID: int32) {.importc: "Icon_LoadFromResourceID", dynlib: dllname.}
proc Icon_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Icon_Equals", dynlib: dllname.}
proc Icon_LoadFromFile*(AObj: pointer, Filename: cstring) {.importc: "Icon_LoadFromFile", dynlib: dllname.}
proc Icon_SaveToFile*(AObj: pointer, Filename: cstring) {.importc: "Icon_SaveToFile", dynlib: dllname.}
proc Icon_GetNamePath*(AObj: pointer): cstring {.importc: "Icon_GetNamePath", dynlib: dllname.}
proc Icon_ClassType*(AObj: pointer): TClass {.importc: "Icon_ClassType", dynlib: dllname.}
proc Icon_ClassName*(AObj: pointer): cstring {.importc: "Icon_ClassName", dynlib: dllname.}
proc Icon_InstanceSize*(AObj: pointer): int32 {.importc: "Icon_InstanceSize", dynlib: dllname.}
proc Icon_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Icon_InheritsFrom", dynlib: dllname.}
proc Icon_GetHashCode*(AObj: pointer): int32 {.importc: "Icon_GetHashCode", dynlib: dllname.}
proc Icon_ToString*(AObj: pointer): cstring {.importc: "Icon_ToString", dynlib: dllname.}
proc Icon_GetHandle*(AObj: pointer): HICON {.importc: "Icon_GetHandle", dynlib: dllname.}
proc Icon_SetHandle*(AObj: pointer, AValue: HICON) {.importc: "Icon_SetHandle", dynlib: dllname.}
proc Icon_GetEmpty*(AObj: pointer): bool {.importc: "Icon_GetEmpty", dynlib: dllname.}
proc Icon_GetHeight*(AObj: pointer): int32 {.importc: "Icon_GetHeight", dynlib: dllname.}
proc Icon_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Icon_SetHeight", dynlib: dllname.}
proc Icon_GetModified*(AObj: pointer): bool {.importc: "Icon_GetModified", dynlib: dllname.}
proc Icon_SetModified*(AObj: pointer, AValue: bool) {.importc: "Icon_SetModified", dynlib: dllname.}
proc Icon_GetPalette*(AObj: pointer): HPALETTE {.importc: "Icon_GetPalette", dynlib: dllname.}
proc Icon_SetPalette*(AObj: pointer, AValue: HPALETTE) {.importc: "Icon_SetPalette", dynlib: dllname.}
proc Icon_GetPaletteModified*(AObj: pointer): bool {.importc: "Icon_GetPaletteModified", dynlib: dllname.}
proc Icon_SetPaletteModified*(AObj: pointer, AValue: bool) {.importc: "Icon_SetPaletteModified", dynlib: dllname.}
proc Icon_GetTransparent*(AObj: pointer): bool {.importc: "Icon_GetTransparent", dynlib: dllname.}
proc Icon_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "Icon_SetTransparent", dynlib: dllname.}
proc Icon_GetWidth*(AObj: pointer): int32 {.importc: "Icon_GetWidth", dynlib: dllname.}
proc Icon_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Icon_SetWidth", dynlib: dllname.}
proc Icon_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Icon_SetOnChange", dynlib: dllname.}
proc Icon_StaticClassType*(): TClass {.importc: "Icon_StaticClassType", dynlib: dllname.}
# ----------------- TBitmap ----------------------
proc Bitmap_Create*(): pointer {.importc: "Bitmap_Create", dynlib: dllname.}
proc Bitmap_Free*(AObj: pointer) {.importc: "Bitmap_Free", dynlib: dllname.}
proc Bitmap_Assign*(AObj: pointer, Source: pointer) {.importc: "Bitmap_Assign", dynlib: dllname.}
proc Bitmap_FreeImage*(AObj: pointer) {.importc: "Bitmap_FreeImage", dynlib: dllname.}
proc Bitmap_HandleAllocated*(AObj: pointer): bool {.importc: "Bitmap_HandleAllocated", dynlib: dllname.}
proc Bitmap_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "Bitmap_LoadFromStream", dynlib: dllname.}
proc Bitmap_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "Bitmap_SaveToStream", dynlib: dllname.}
proc Bitmap_SetSize*(AObj: pointer, AWidth: int32, AHeight: int32) {.importc: "Bitmap_SetSize", dynlib: dllname.}
proc Bitmap_LoadFromResourceName*(AObj: pointer, Instance: uint, ResName: cstring) {.importc: "Bitmap_LoadFromResourceName", dynlib: dllname.}
proc Bitmap_LoadFromResourceID*(AObj: pointer, Instance: uint, ResID: int32) {.importc: "Bitmap_LoadFromResourceID", dynlib: dllname.}
proc Bitmap_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Bitmap_Equals", dynlib: dllname.}
proc Bitmap_LoadFromFile*(AObj: pointer, Filename: cstring) {.importc: "Bitmap_LoadFromFile", dynlib: dllname.}
proc Bitmap_SaveToFile*(AObj: pointer, Filename: cstring) {.importc: "Bitmap_SaveToFile", dynlib: dllname.}
proc Bitmap_GetNamePath*(AObj: pointer): cstring {.importc: "Bitmap_GetNamePath", dynlib: dllname.}
proc Bitmap_ClassType*(AObj: pointer): TClass {.importc: "Bitmap_ClassType", dynlib: dllname.}
proc Bitmap_ClassName*(AObj: pointer): cstring {.importc: "Bitmap_ClassName", dynlib: dllname.}
proc Bitmap_InstanceSize*(AObj: pointer): int32 {.importc: "Bitmap_InstanceSize", dynlib: dllname.}
proc Bitmap_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Bitmap_InheritsFrom", dynlib: dllname.}
proc Bitmap_GetHashCode*(AObj: pointer): int32 {.importc: "Bitmap_GetHashCode", dynlib: dllname.}
proc Bitmap_ToString*(AObj: pointer): cstring {.importc: "Bitmap_ToString", dynlib: dllname.}
proc Bitmap_GetCanvas*(AObj: pointer): pointer {.importc: "Bitmap_GetCanvas", dynlib: dllname.}
proc Bitmap_GetHandle*(AObj: pointer): HBITMAP {.importc: "Bitmap_GetHandle", dynlib: dllname.}
proc Bitmap_SetHandle*(AObj: pointer, AValue: HBITMAP) {.importc: "Bitmap_SetHandle", dynlib: dllname.}
proc Bitmap_GetHandleType*(AObj: pointer): TBitmapHandleType {.importc: "Bitmap_GetHandleType", dynlib: dllname.}
proc Bitmap_SetHandleType*(AObj: pointer, AValue: TBitmapHandleType) {.importc: "Bitmap_SetHandleType", dynlib: dllname.}
proc Bitmap_GetMaskHandle*(AObj: pointer): HBITMAP {.importc: "Bitmap_GetMaskHandle", dynlib: dllname.}
proc Bitmap_SetMaskHandle*(AObj: pointer, AValue: HBITMAP) {.importc: "Bitmap_SetMaskHandle", dynlib: dllname.}
proc Bitmap_GetPixelFormat*(AObj: pointer): TPixelFormat {.importc: "Bitmap_GetPixelFormat", dynlib: dllname.}
proc Bitmap_SetPixelFormat*(AObj: pointer, AValue: TPixelFormat) {.importc: "Bitmap_SetPixelFormat", dynlib: dllname.}
proc Bitmap_GetTransparentMode*(AObj: pointer): TTransparentMode {.importc: "Bitmap_GetTransparentMode", dynlib: dllname.}
proc Bitmap_SetTransparentMode*(AObj: pointer, AValue: TTransparentMode) {.importc: "Bitmap_SetTransparentMode", dynlib: dllname.}
proc Bitmap_GetEmpty*(AObj: pointer): bool {.importc: "Bitmap_GetEmpty", dynlib: dllname.}
proc Bitmap_GetHeight*(AObj: pointer): int32 {.importc: "Bitmap_GetHeight", dynlib: dllname.}
proc Bitmap_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Bitmap_SetHeight", dynlib: dllname.}
proc Bitmap_GetModified*(AObj: pointer): bool {.importc: "Bitmap_GetModified", dynlib: dllname.}
proc Bitmap_SetModified*(AObj: pointer, AValue: bool) {.importc: "Bitmap_SetModified", dynlib: dllname.}
proc Bitmap_GetPalette*(AObj: pointer): HPALETTE {.importc: "Bitmap_GetPalette", dynlib: dllname.}
proc Bitmap_SetPalette*(AObj: pointer, AValue: HPALETTE) {.importc: "Bitmap_SetPalette", dynlib: dllname.}
proc Bitmap_GetPaletteModified*(AObj: pointer): bool {.importc: "Bitmap_GetPaletteModified", dynlib: dllname.}
proc Bitmap_SetPaletteModified*(AObj: pointer, AValue: bool) {.importc: "Bitmap_SetPaletteModified", dynlib: dllname.}
proc Bitmap_GetTransparent*(AObj: pointer): bool {.importc: "Bitmap_GetTransparent", dynlib: dllname.}
proc Bitmap_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "Bitmap_SetTransparent", dynlib: dllname.}
proc Bitmap_GetWidth*(AObj: pointer): int32 {.importc: "Bitmap_GetWidth", dynlib: dllname.}
proc Bitmap_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Bitmap_SetWidth", dynlib: dllname.}
proc Bitmap_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Bitmap_SetOnChange", dynlib: dllname.}
proc Bitmap_GetScanLine*(AObj: pointer, Row: int32): pointer {.importc: "Bitmap_GetScanLine", dynlib: dllname.}
proc Bitmap_StaticClassType*(): TClass {.importc: "Bitmap_StaticClassType", dynlib: dllname.}
proc Bitmap_Clear*(AObj: pointer) {.importc: "Bitmap_Clear", dynlib: dllname.}
proc Bitmap_BeginUpdate*(AObj: pointer, ACanvasOnly: bool) {.importc: "Bitmap_BeginUpdate", dynlib: dllname.}
proc Bitmap_EndUpdate*(AObj: pointer, AStreamIsValid: bool) {.importc: "Bitmap_EndUpdate", dynlib: dllname.}
proc Bitmap_LoadFromDevice*(AObj: pointer, ADc: HDC) {.importc: "Bitmap_LoadFromDevice", dynlib: dllname.}
# ----------------- TMemo ----------------------
proc Memo_Create*(AOwner: pointer): pointer {.importc: "Memo_Create", dynlib: dllname.}
proc Memo_Free*(AObj: pointer) {.importc: "Memo_Free", dynlib: dllname.}
proc Memo_Append*(AObj: pointer, Value: cstring) {.importc: "Memo_Append", dynlib: dllname.}
proc Memo_Clear*(AObj: pointer) {.importc: "Memo_Clear", dynlib: dllname.}
proc Memo_ClearSelection*(AObj: pointer) {.importc: "Memo_ClearSelection", dynlib: dllname.}
proc Memo_CopyToClipboard*(AObj: pointer) {.importc: "Memo_CopyToClipboard", dynlib: dllname.}
proc Memo_CutToClipboard*(AObj: pointer) {.importc: "Memo_CutToClipboard", dynlib: dllname.}
proc Memo_PasteFromClipboard*(AObj: pointer) {.importc: "Memo_PasteFromClipboard", dynlib: dllname.}
proc Memo_Undo*(AObj: pointer) {.importc: "Memo_Undo", dynlib: dllname.}
proc Memo_SelectAll*(AObj: pointer) {.importc: "Memo_SelectAll", dynlib: dllname.}
proc Memo_CanFocus*(AObj: pointer): bool {.importc: "Memo_CanFocus", dynlib: dllname.}
proc Memo_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "Memo_ContainsControl", dynlib: dllname.}
proc Memo_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "Memo_ControlAtPos", dynlib: dllname.}
proc Memo_DisableAlign*(AObj: pointer) {.importc: "Memo_DisableAlign", dynlib: dllname.}
proc Memo_EnableAlign*(AObj: pointer) {.importc: "Memo_EnableAlign", dynlib: dllname.}
proc Memo_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "Memo_FindChildControl", dynlib: dllname.}
proc Memo_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "Memo_FlipChildren", dynlib: dllname.}
proc Memo_Focused*(AObj: pointer): bool {.importc: "Memo_Focused", dynlib: dllname.}
proc Memo_HandleAllocated*(AObj: pointer): bool {.importc: "Memo_HandleAllocated", dynlib: dllname.}
proc Memo_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "Memo_InsertControl", dynlib: dllname.}
proc Memo_Invalidate*(AObj: pointer) {.importc: "Memo_Invalidate", dynlib: dllname.}
proc Memo_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "Memo_PaintTo", dynlib: dllname.}
proc Memo_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "Memo_RemoveControl", dynlib: dllname.}
proc Memo_Realign*(AObj: pointer) {.importc: "Memo_Realign", dynlib: dllname.}
proc Memo_Repaint*(AObj: pointer) {.importc: "Memo_Repaint", dynlib: dllname.}
proc Memo_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "Memo_ScaleBy", dynlib: dllname.}
proc Memo_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "Memo_ScrollBy", dynlib: dllname.}
proc Memo_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Memo_SetBounds", dynlib: dllname.}
proc Memo_SetFocus*(AObj: pointer) {.importc: "Memo_SetFocus", dynlib: dllname.}
proc Memo_Update*(AObj: pointer) {.importc: "Memo_Update", dynlib: dllname.}
proc Memo_BringToFront*(AObj: pointer) {.importc: "Memo_BringToFront", dynlib: dllname.}
proc Memo_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Memo_ClientToScreen", dynlib: dllname.}
proc Memo_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Memo_ClientToParent", dynlib: dllname.}
proc Memo_Dragging*(AObj: pointer): bool {.importc: "Memo_Dragging", dynlib: dllname.}
proc Memo_HasParent*(AObj: pointer): bool {.importc: "Memo_HasParent", dynlib: dllname.}
proc Memo_Hide*(AObj: pointer) {.importc: "Memo_Hide", dynlib: dllname.}
proc Memo_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Memo_Perform", dynlib: dllname.}
proc Memo_Refresh*(AObj: pointer) {.importc: "Memo_Refresh", dynlib: dllname.}
proc Memo_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Memo_ScreenToClient", dynlib: dllname.}
proc Memo_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Memo_ParentToClient", dynlib: dllname.}
proc Memo_SendToBack*(AObj: pointer) {.importc: "Memo_SendToBack", dynlib: dllname.}
proc Memo_Show*(AObj: pointer) {.importc: "Memo_Show", dynlib: dllname.}
proc Memo_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Memo_GetTextBuf", dynlib: dllname.}
proc Memo_GetTextLen*(AObj: pointer): int32 {.importc: "Memo_GetTextLen", dynlib: dllname.}
proc Memo_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Memo_SetTextBuf", dynlib: dllname.}
proc Memo_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Memo_FindComponent", dynlib: dllname.}
proc Memo_GetNamePath*(AObj: pointer): cstring {.importc: "Memo_GetNamePath", dynlib: dllname.}
proc Memo_Assign*(AObj: pointer, Source: pointer) {.importc: "Memo_Assign", dynlib: dllname.}
proc Memo_ClassType*(AObj: pointer): TClass {.importc: "Memo_ClassType", dynlib: dllname.}
proc Memo_ClassName*(AObj: pointer): cstring {.importc: "Memo_ClassName", dynlib: dllname.}
proc Memo_InstanceSize*(AObj: pointer): int32 {.importc: "Memo_InstanceSize", dynlib: dllname.}
proc Memo_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Memo_InheritsFrom", dynlib: dllname.}
proc Memo_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Memo_Equals", dynlib: dllname.}
proc Memo_GetHashCode*(AObj: pointer): int32 {.importc: "Memo_GetHashCode", dynlib: dllname.}
proc Memo_ToString*(AObj: pointer): cstring {.importc: "Memo_ToString", dynlib: dllname.}
proc Memo_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Memo_AnchorToNeighbour", dynlib: dllname.}
proc Memo_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Memo_AnchorParallel", dynlib: dllname.}
proc Memo_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Memo_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Memo_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Memo_AnchorVerticalCenterTo", dynlib: dllname.}
proc Memo_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Memo_AnchorSame", dynlib: dllname.}
proc Memo_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Memo_AnchorAsAlign", dynlib: dllname.}
proc Memo_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Memo_AnchorClient", dynlib: dllname.}
proc Memo_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_ScaleDesignToForm", dynlib: dllname.}
proc Memo_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_ScaleFormToDesign", dynlib: dllname.}
proc Memo_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_Scale96ToForm", dynlib: dllname.}
proc Memo_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_ScaleFormTo96", dynlib: dllname.}
proc Memo_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_Scale96ToFont", dynlib: dllname.}
proc Memo_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_ScaleFontTo96", dynlib: dllname.}
proc Memo_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_ScaleScreenToFont", dynlib: dllname.}
proc Memo_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_ScaleFontToScreen", dynlib: dllname.}
proc Memo_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_Scale96ToScreen", dynlib: dllname.}
proc Memo_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Memo_ScaleScreenTo96", dynlib: dllname.}
proc Memo_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Memo_AutoAdjustLayout", dynlib: dllname.}
proc Memo_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Memo_FixDesignFontsPPI", dynlib: dllname.}
proc Memo_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Memo_ScaleFontsPPI", dynlib: dllname.}
proc Memo_GetAlign*(AObj: pointer): TAlign {.importc: "Memo_GetAlign", dynlib: dllname.}
proc Memo_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Memo_SetAlign", dynlib: dllname.}
proc Memo_GetAlignment*(AObj: pointer): TAlignment {.importc: "Memo_GetAlignment", dynlib: dllname.}
proc Memo_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "Memo_SetAlignment", dynlib: dllname.}
proc Memo_GetAnchors*(AObj: pointer): TAnchors {.importc: "Memo_GetAnchors", dynlib: dllname.}
proc Memo_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Memo_SetAnchors", dynlib: dllname.}
proc Memo_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Memo_GetBiDiMode", dynlib: dllname.}
proc Memo_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Memo_SetBiDiMode", dynlib: dllname.}
proc Memo_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "Memo_GetBorderStyle", dynlib: dllname.}
proc Memo_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "Memo_SetBorderStyle", dynlib: dllname.}
proc Memo_GetCharCase*(AObj: pointer): TEditCharCase {.importc: "Memo_GetCharCase", dynlib: dllname.}
proc Memo_SetCharCase*(AObj: pointer, AValue: TEditCharCase) {.importc: "Memo_SetCharCase", dynlib: dllname.}
proc Memo_GetColor*(AObj: pointer): TColor {.importc: "Memo_GetColor", dynlib: dllname.}
proc Memo_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Memo_SetColor", dynlib: dllname.}
proc Memo_GetConstraints*(AObj: pointer): pointer {.importc: "Memo_GetConstraints", dynlib: dllname.}
proc Memo_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetConstraints", dynlib: dllname.}
proc Memo_GetDoubleBuffered*(AObj: pointer): bool {.importc: "Memo_GetDoubleBuffered", dynlib: dllname.}
proc Memo_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Memo_SetDoubleBuffered", dynlib: dllname.}
proc Memo_GetDragCursor*(AObj: pointer): TCursor {.importc: "Memo_GetDragCursor", dynlib: dllname.}
proc Memo_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Memo_SetDragCursor", dynlib: dllname.}
proc Memo_GetDragKind*(AObj: pointer): TDragKind {.importc: "Memo_GetDragKind", dynlib: dllname.}
proc Memo_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Memo_SetDragKind", dynlib: dllname.}
proc Memo_GetDragMode*(AObj: pointer): TDragMode {.importc: "Memo_GetDragMode", dynlib: dllname.}
proc Memo_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Memo_SetDragMode", dynlib: dllname.}
proc Memo_GetEnabled*(AObj: pointer): bool {.importc: "Memo_GetEnabled", dynlib: dllname.}
proc Memo_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Memo_SetEnabled", dynlib: dllname.}
proc Memo_GetFont*(AObj: pointer): pointer {.importc: "Memo_GetFont", dynlib: dllname.}
proc Memo_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetFont", dynlib: dllname.}
proc Memo_GetHideSelection*(AObj: pointer): bool {.importc: "Memo_GetHideSelection", dynlib: dllname.}
proc Memo_SetHideSelection*(AObj: pointer, AValue: bool) {.importc: "Memo_SetHideSelection", dynlib: dllname.}
proc Memo_GetLines*(AObj: pointer): pointer {.importc: "Memo_GetLines", dynlib: dllname.}
proc Memo_SetLines*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetLines", dynlib: dllname.}
proc Memo_GetMaxLength*(AObj: pointer): int32 {.importc: "Memo_GetMaxLength", dynlib: dllname.}
proc Memo_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "Memo_SetMaxLength", dynlib: dllname.}
proc Memo_GetParentColor*(AObj: pointer): bool {.importc: "Memo_GetParentColor", dynlib: dllname.}
proc Memo_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "Memo_SetParentColor", dynlib: dllname.}
proc Memo_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "Memo_GetParentDoubleBuffered", dynlib: dllname.}
proc Memo_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Memo_SetParentDoubleBuffered", dynlib: dllname.}
proc Memo_GetParentFont*(AObj: pointer): bool {.importc: "Memo_GetParentFont", dynlib: dllname.}
proc Memo_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Memo_SetParentFont", dynlib: dllname.}
proc Memo_GetParentShowHint*(AObj: pointer): bool {.importc: "Memo_GetParentShowHint", dynlib: dllname.}
proc Memo_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Memo_SetParentShowHint", dynlib: dllname.}
proc Memo_GetPopupMenu*(AObj: pointer): pointer {.importc: "Memo_GetPopupMenu", dynlib: dllname.}
proc Memo_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetPopupMenu", dynlib: dllname.}
proc Memo_GetReadOnly*(AObj: pointer): bool {.importc: "Memo_GetReadOnly", dynlib: dllname.}
proc Memo_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "Memo_SetReadOnly", dynlib: dllname.}
proc Memo_GetScrollBars*(AObj: pointer): TScrollStyle {.importc: "Memo_GetScrollBars", dynlib: dllname.}
proc Memo_SetScrollBars*(AObj: pointer, AValue: TScrollStyle) {.importc: "Memo_SetScrollBars", dynlib: dllname.}
proc Memo_GetShowHint*(AObj: pointer): bool {.importc: "Memo_GetShowHint", dynlib: dllname.}
proc Memo_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Memo_SetShowHint", dynlib: dllname.}
proc Memo_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "Memo_GetTabOrder", dynlib: dllname.}
proc Memo_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "Memo_SetTabOrder", dynlib: dllname.}
proc Memo_GetTabStop*(AObj: pointer): bool {.importc: "Memo_GetTabStop", dynlib: dllname.}
proc Memo_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "Memo_SetTabStop", dynlib: dllname.}
proc Memo_GetVisible*(AObj: pointer): bool {.importc: "Memo_GetVisible", dynlib: dllname.}
proc Memo_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Memo_SetVisible", dynlib: dllname.}
proc Memo_GetWantReturns*(AObj: pointer): bool {.importc: "Memo_GetWantReturns", dynlib: dllname.}
proc Memo_SetWantReturns*(AObj: pointer, AValue: bool) {.importc: "Memo_SetWantReturns", dynlib: dllname.}
proc Memo_GetWantTabs*(AObj: pointer): bool {.importc: "Memo_GetWantTabs", dynlib: dllname.}
proc Memo_SetWantTabs*(AObj: pointer, AValue: bool) {.importc: "Memo_SetWantTabs", dynlib: dllname.}
proc Memo_GetWordWrap*(AObj: pointer): bool {.importc: "Memo_GetWordWrap", dynlib: dllname.}
proc Memo_SetWordWrap*(AObj: pointer, AValue: bool) {.importc: "Memo_SetWordWrap", dynlib: dllname.}
proc Memo_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Memo_SetOnChange", dynlib: dllname.}
proc Memo_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Memo_SetOnClick", dynlib: dllname.}
proc Memo_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "Memo_SetOnContextPopup", dynlib: dllname.}
proc Memo_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Memo_SetOnDblClick", dynlib: dllname.}
proc Memo_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Memo_SetOnDragDrop", dynlib: dllname.}
proc Memo_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Memo_SetOnDragOver", dynlib: dllname.}
proc Memo_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Memo_SetOnEndDrag", dynlib: dllname.}
proc Memo_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Memo_SetOnEnter", dynlib: dllname.}
proc Memo_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Memo_SetOnExit", dynlib: dllname.}
proc Memo_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Memo_SetOnKeyDown", dynlib: dllname.}
proc Memo_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "Memo_SetOnKeyPress", dynlib: dllname.}
proc Memo_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Memo_SetOnKeyUp", dynlib: dllname.}
proc Memo_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Memo_SetOnMouseDown", dynlib: dllname.}
proc Memo_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Memo_SetOnMouseEnter", dynlib: dllname.}
proc Memo_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Memo_SetOnMouseLeave", dynlib: dllname.}
proc Memo_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Memo_SetOnMouseMove", dynlib: dllname.}
proc Memo_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Memo_SetOnMouseUp", dynlib: dllname.}
proc Memo_GetCaretPos*(AObj: pointer, Result: var TPoint) {.importc: "Memo_GetCaretPos", dynlib: dllname.}
proc Memo_SetCaretPos*(AObj: pointer, AValue: var TPoint) {.importc: "Memo_SetCaretPos", dynlib: dllname.}
proc Memo_GetCanUndo*(AObj: pointer): bool {.importc: "Memo_GetCanUndo", dynlib: dllname.}
proc Memo_GetModified*(AObj: pointer): bool {.importc: "Memo_GetModified", dynlib: dllname.}
proc Memo_SetModified*(AObj: pointer, AValue: bool) {.importc: "Memo_SetModified", dynlib: dllname.}
proc Memo_GetSelLength*(AObj: pointer): int32 {.importc: "Memo_GetSelLength", dynlib: dllname.}
proc Memo_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "Memo_SetSelLength", dynlib: dllname.}
proc Memo_GetSelStart*(AObj: pointer): int32 {.importc: "Memo_GetSelStart", dynlib: dllname.}
proc Memo_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "Memo_SetSelStart", dynlib: dllname.}
proc Memo_GetSelText*(AObj: pointer): cstring {.importc: "Memo_GetSelText", dynlib: dllname.}
proc Memo_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "Memo_SetSelText", dynlib: dllname.}
proc Memo_GetText*(AObj: pointer): cstring {.importc: "Memo_GetText", dynlib: dllname.}
proc Memo_SetText*(AObj: pointer, AValue: cstring) {.importc: "Memo_SetText", dynlib: dllname.}
proc Memo_GetTextHint*(AObj: pointer): cstring {.importc: "Memo_GetTextHint", dynlib: dllname.}
proc Memo_SetTextHint*(AObj: pointer, AValue: cstring) {.importc: "Memo_SetTextHint", dynlib: dllname.}
proc Memo_GetDockClientCount*(AObj: pointer): int32 {.importc: "Memo_GetDockClientCount", dynlib: dllname.}
proc Memo_GetDockSite*(AObj: pointer): bool {.importc: "Memo_GetDockSite", dynlib: dllname.}
proc Memo_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "Memo_SetDockSite", dynlib: dllname.}
proc Memo_GetMouseInClient*(AObj: pointer): bool {.importc: "Memo_GetMouseInClient", dynlib: dllname.}
proc Memo_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "Memo_GetVisibleDockClientCount", dynlib: dllname.}
proc Memo_GetBrush*(AObj: pointer): pointer {.importc: "Memo_GetBrush", dynlib: dllname.}
proc Memo_GetControlCount*(AObj: pointer): int32 {.importc: "Memo_GetControlCount", dynlib: dllname.}
proc Memo_GetHandle*(AObj: pointer): HWND {.importc: "Memo_GetHandle", dynlib: dllname.}
proc Memo_GetParentWindow*(AObj: pointer): HWND {.importc: "Memo_GetParentWindow", dynlib: dllname.}
proc Memo_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "Memo_SetParentWindow", dynlib: dllname.}
proc Memo_GetShowing*(AObj: pointer): bool {.importc: "Memo_GetShowing", dynlib: dllname.}
proc Memo_GetUseDockManager*(AObj: pointer): bool {.importc: "Memo_GetUseDockManager", dynlib: dllname.}
proc Memo_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "Memo_SetUseDockManager", dynlib: dllname.}
proc Memo_GetAction*(AObj: pointer): pointer {.importc: "Memo_GetAction", dynlib: dllname.}
proc Memo_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetAction", dynlib: dllname.}
proc Memo_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Memo_GetBoundsRect", dynlib: dllname.}
proc Memo_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Memo_SetBoundsRect", dynlib: dllname.}
proc Memo_GetClientHeight*(AObj: pointer): int32 {.importc: "Memo_GetClientHeight", dynlib: dllname.}
proc Memo_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Memo_SetClientHeight", dynlib: dllname.}
proc Memo_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Memo_GetClientOrigin", dynlib: dllname.}
proc Memo_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Memo_GetClientRect", dynlib: dllname.}
proc Memo_GetClientWidth*(AObj: pointer): int32 {.importc: "Memo_GetClientWidth", dynlib: dllname.}
proc Memo_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Memo_SetClientWidth", dynlib: dllname.}
proc Memo_GetControlState*(AObj: pointer): TControlState {.importc: "Memo_GetControlState", dynlib: dllname.}
proc Memo_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Memo_SetControlState", dynlib: dllname.}
proc Memo_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Memo_GetControlStyle", dynlib: dllname.}
proc Memo_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Memo_SetControlStyle", dynlib: dllname.}
proc Memo_GetFloating*(AObj: pointer): bool {.importc: "Memo_GetFloating", dynlib: dllname.}
proc Memo_GetParent*(AObj: pointer): pointer {.importc: "Memo_GetParent", dynlib: dllname.}
proc Memo_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetParent", dynlib: dllname.}
proc Memo_GetLeft*(AObj: pointer): int32 {.importc: "Memo_GetLeft", dynlib: dllname.}
proc Memo_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Memo_SetLeft", dynlib: dllname.}
proc Memo_GetTop*(AObj: pointer): int32 {.importc: "Memo_GetTop", dynlib: dllname.}
proc Memo_SetTop*(AObj: pointer, AValue: int32) {.importc: "Memo_SetTop", dynlib: dllname.}
proc Memo_GetWidth*(AObj: pointer): int32 {.importc: "Memo_GetWidth", dynlib: dllname.}
proc Memo_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Memo_SetWidth", dynlib: dllname.}
proc Memo_GetHeight*(AObj: pointer): int32 {.importc: "Memo_GetHeight", dynlib: dllname.}
proc Memo_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Memo_SetHeight", dynlib: dllname.}
proc Memo_GetCursor*(AObj: pointer): TCursor {.importc: "Memo_GetCursor", dynlib: dllname.}
proc Memo_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Memo_SetCursor", dynlib: dllname.}
proc Memo_GetHint*(AObj: pointer): cstring {.importc: "Memo_GetHint", dynlib: dllname.}
proc Memo_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Memo_SetHint", dynlib: dllname.}
proc Memo_GetComponentCount*(AObj: pointer): int32 {.importc: "Memo_GetComponentCount", dynlib: dllname.}
proc Memo_GetComponentIndex*(AObj: pointer): int32 {.importc: "Memo_GetComponentIndex", dynlib: dllname.}
proc Memo_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Memo_SetComponentIndex", dynlib: dllname.}
proc Memo_GetOwner*(AObj: pointer): pointer {.importc: "Memo_GetOwner", dynlib: dllname.}
proc Memo_GetName*(AObj: pointer): cstring {.importc: "Memo_GetName", dynlib: dllname.}
proc Memo_SetName*(AObj: pointer, AValue: cstring) {.importc: "Memo_SetName", dynlib: dllname.}
proc Memo_GetTag*(AObj: pointer): int {.importc: "Memo_GetTag", dynlib: dllname.}
proc Memo_SetTag*(AObj: pointer, AValue: int) {.importc: "Memo_SetTag", dynlib: dllname.}
proc Memo_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Memo_GetAnchorSideLeft", dynlib: dllname.}
proc Memo_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetAnchorSideLeft", dynlib: dllname.}
proc Memo_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Memo_GetAnchorSideTop", dynlib: dllname.}
proc Memo_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetAnchorSideTop", dynlib: dllname.}
proc Memo_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Memo_GetAnchorSideRight", dynlib: dllname.}
proc Memo_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetAnchorSideRight", dynlib: dllname.}
proc Memo_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Memo_GetAnchorSideBottom", dynlib: dllname.}
proc Memo_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetAnchorSideBottom", dynlib: dllname.}
proc Memo_GetChildSizing*(AObj: pointer): pointer {.importc: "Memo_GetChildSizing", dynlib: dllname.}
proc Memo_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetChildSizing", dynlib: dllname.}
proc Memo_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Memo_GetBorderSpacing", dynlib: dllname.}
proc Memo_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Memo_SetBorderSpacing", dynlib: dllname.}
proc Memo_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "Memo_GetDockClients", dynlib: dllname.}
proc Memo_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "Memo_GetControls", dynlib: dllname.}
proc Memo_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Memo_GetComponents", dynlib: dllname.}
proc Memo_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Memo_GetAnchorSide", dynlib: dllname.}
proc Memo_StaticClassType*(): TClass {.importc: "Memo_StaticClassType", dynlib: dllname.}
# ----------------- TMemoryStream ----------------------
proc MemoryStream_Create*(): pointer {.importc: "MemoryStream_Create", dynlib: dllname.}
proc MemoryStream_Free*(AObj: pointer) {.importc: "MemoryStream_Free", dynlib: dllname.}
proc MemoryStream_Clear*(AObj: pointer) {.importc: "MemoryStream_Clear", dynlib: dllname.}
proc MemoryStream_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "MemoryStream_LoadFromStream", dynlib: dllname.}
proc MemoryStream_LoadFromFile*(AObj: pointer, FileName: cstring) {.importc: "MemoryStream_LoadFromFile", dynlib: dllname.}
proc MemoryStream_Seek*(AObj: pointer, Offset: var int64, Origin: TSeekOrigin, Result: var int64) {.importc: "MemoryStream_Seek", dynlib: dllname.}
proc MemoryStream_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "MemoryStream_SaveToStream", dynlib: dllname.}
proc MemoryStream_SaveToFile*(AObj: pointer, FileName: cstring) {.importc: "MemoryStream_SaveToFile", dynlib: dllname.}
proc MemoryStream_CopyFrom*(AObj: pointer, Source: pointer, Count: var int64, Result: var int64) {.importc: "MemoryStream_CopyFrom", dynlib: dllname.}
proc MemoryStream_ClassType*(AObj: pointer): TClass {.importc: "MemoryStream_ClassType", dynlib: dllname.}
proc MemoryStream_ClassName*(AObj: pointer): cstring {.importc: "MemoryStream_ClassName", dynlib: dllname.}
proc MemoryStream_InstanceSize*(AObj: pointer): int32 {.importc: "MemoryStream_InstanceSize", dynlib: dllname.}
proc MemoryStream_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "MemoryStream_InheritsFrom", dynlib: dllname.}
proc MemoryStream_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "MemoryStream_Equals", dynlib: dllname.}
proc MemoryStream_GetHashCode*(AObj: pointer): int32 {.importc: "MemoryStream_GetHashCode", dynlib: dllname.}
proc MemoryStream_ToString*(AObj: pointer): cstring {.importc: "MemoryStream_ToString", dynlib: dllname.}
proc MemoryStream_GetMemory*(AObj: pointer): pointer {.importc: "MemoryStream_GetMemory", dynlib: dllname.}
proc MemoryStream_GetPosition*(AObj: pointer, Result: var int64) {.importc: "MemoryStream_GetPosition", dynlib: dllname.}
proc MemoryStream_SetPosition*(AObj: pointer, AValue: var int64) {.importc: "MemoryStream_SetPosition", dynlib: dllname.}
proc MemoryStream_GetSize*(AObj: pointer, Result: var int64) {.importc: "MemoryStream_GetSize", dynlib: dllname.}
proc MemoryStream_SetSize*(AObj: pointer, AValue: var int64) {.importc: "MemoryStream_SetSize", dynlib: dllname.}
proc MemoryStream_StaticClassType*(): TClass {.importc: "MemoryStream_StaticClassType", dynlib: dllname.}
proc MemoryStream_Write*(AObj: pointer, Buffer: pointer, Count: int32): int32 {.importc: "MemoryStream_Write", dynlib: dllname.}
proc MemoryStream_Read*(AObj: pointer, Buffer: pointer, Count: int32): int32 {.importc: "MemoryStream_Read", dynlib: dllname.}
# ----------------- TFont ----------------------
proc Font_Create*(): pointer {.importc: "Font_Create", dynlib: dllname.}
proc Font_Free*(AObj: pointer) {.importc: "Font_Free", dynlib: dllname.}
proc Font_Assign*(AObj: pointer, Source: pointer) {.importc: "Font_Assign", dynlib: dllname.}
proc Font_HandleAllocated*(AObj: pointer): bool {.importc: "Font_HandleAllocated", dynlib: dllname.}
proc Font_GetNamePath*(AObj: pointer): cstring {.importc: "Font_GetNamePath", dynlib: dllname.}
proc Font_ClassType*(AObj: pointer): TClass {.importc: "Font_ClassType", dynlib: dllname.}
proc Font_ClassName*(AObj: pointer): cstring {.importc: "Font_ClassName", dynlib: dllname.}
proc Font_InstanceSize*(AObj: pointer): int32 {.importc: "Font_InstanceSize", dynlib: dllname.}
proc Font_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Font_InheritsFrom", dynlib: dllname.}
proc Font_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Font_Equals", dynlib: dllname.}
proc Font_GetHashCode*(AObj: pointer): int32 {.importc: "Font_GetHashCode", dynlib: dllname.}
proc Font_ToString*(AObj: pointer): cstring {.importc: "Font_ToString", dynlib: dllname.}
proc Font_GetHandle*(AObj: pointer): HFONT {.importc: "Font_GetHandle", dynlib: dllname.}
proc Font_SetHandle*(AObj: pointer, AValue: HFONT) {.importc: "Font_SetHandle", dynlib: dllname.}
proc Font_GetPixelsPerInch*(AObj: pointer): int32 {.importc: "Font_GetPixelsPerInch", dynlib: dllname.}
proc Font_SetPixelsPerInch*(AObj: pointer, AValue: int32) {.importc: "Font_SetPixelsPerInch", dynlib: dllname.}
proc Font_GetCharset*(AObj: pointer): TFontCharset {.importc: "Font_GetCharset", dynlib: dllname.}
proc Font_SetCharset*(AObj: pointer, AValue: TFontCharset) {.importc: "Font_SetCharset", dynlib: dllname.}
proc Font_GetColor*(AObj: pointer): TColor {.importc: "Font_GetColor", dynlib: dllname.}
proc Font_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Font_SetColor", dynlib: dllname.}
proc Font_GetHeight*(AObj: pointer): int32 {.importc: "Font_GetHeight", dynlib: dllname.}
proc Font_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Font_SetHeight", dynlib: dllname.}
proc Font_GetName*(AObj: pointer): cstring {.importc: "Font_GetName", dynlib: dllname.}
proc Font_SetName*(AObj: pointer, AValue: cstring) {.importc: "Font_SetName", dynlib: dllname.}
proc Font_GetOrientation*(AObj: pointer): int32 {.importc: "Font_GetOrientation", dynlib: dllname.}
proc Font_SetOrientation*(AObj: pointer, AValue: int32) {.importc: "Font_SetOrientation", dynlib: dllname.}
proc Font_GetPitch*(AObj: pointer): TFontPitch {.importc: "Font_GetPitch", dynlib: dllname.}
proc Font_SetPitch*(AObj: pointer, AValue: TFontPitch) {.importc: "Font_SetPitch", dynlib: dllname.}
proc Font_GetSize*(AObj: pointer): int32 {.importc: "Font_GetSize", dynlib: dllname.}
proc Font_SetSize*(AObj: pointer, AValue: int32) {.importc: "Font_SetSize", dynlib: dllname.}
proc Font_GetStyle*(AObj: pointer): TFontStyles {.importc: "Font_GetStyle", dynlib: dllname.}
proc Font_SetStyle*(AObj: pointer, AValue: TFontStyles) {.importc: "Font_SetStyle", dynlib: dllname.}
proc Font_GetQuality*(AObj: pointer): TFontQuality {.importc: "Font_GetQuality", dynlib: dllname.}
proc Font_SetQuality*(AObj: pointer, AValue: TFontQuality) {.importc: "Font_SetQuality", dynlib: dllname.}
proc Font_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Font_SetOnChange", dynlib: dllname.}
proc Font_StaticClassType*(): TClass {.importc: "Font_StaticClassType", dynlib: dllname.}
# ----------------- TPopupMenu ----------------------
proc PopupMenu_Create*(AOwner: pointer): pointer {.importc: "PopupMenu_Create", dynlib: dllname.}
proc PopupMenu_Free*(AObj: pointer) {.importc: "PopupMenu_Free", dynlib: dllname.}
proc PopupMenu_CloseMenu*(AObj: pointer) {.importc: "PopupMenu_CloseMenu", dynlib: dllname.}
proc PopupMenu_Popup*(AObj: pointer, X: int32, Y: int32) {.importc: "PopupMenu_Popup", dynlib: dllname.}
proc PopupMenu_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "PopupMenu_FindComponent", dynlib: dllname.}
proc PopupMenu_GetNamePath*(AObj: pointer): cstring {.importc: "PopupMenu_GetNamePath", dynlib: dllname.}
proc PopupMenu_HasParent*(AObj: pointer): bool {.importc: "PopupMenu_HasParent", dynlib: dllname.}
proc PopupMenu_Assign*(AObj: pointer, Source: pointer) {.importc: "PopupMenu_Assign", dynlib: dllname.}
proc PopupMenu_ClassType*(AObj: pointer): TClass {.importc: "PopupMenu_ClassType", dynlib: dllname.}
proc PopupMenu_ClassName*(AObj: pointer): cstring {.importc: "PopupMenu_ClassName", dynlib: dllname.}
proc PopupMenu_InstanceSize*(AObj: pointer): int32 {.importc: "PopupMenu_InstanceSize", dynlib: dllname.}
proc PopupMenu_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "PopupMenu_InheritsFrom", dynlib: dllname.}
proc PopupMenu_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "PopupMenu_Equals", dynlib: dllname.}
proc PopupMenu_GetHashCode*(AObj: pointer): int32 {.importc: "PopupMenu_GetHashCode", dynlib: dllname.}
proc PopupMenu_ToString*(AObj: pointer): cstring {.importc: "PopupMenu_ToString", dynlib: dllname.}
proc PopupMenu_GetImagesWidth*(AObj: pointer): int32 {.importc: "PopupMenu_GetImagesWidth", dynlib: dllname.}
proc PopupMenu_SetImagesWidth*(AObj: pointer, AValue: int32) {.importc: "PopupMenu_SetImagesWidth", dynlib: dllname.}
proc PopupMenu_GetPopupComponent*(AObj: pointer): pointer {.importc: "PopupMenu_GetPopupComponent", dynlib: dllname.}
proc PopupMenu_SetPopupComponent*(AObj: pointer, AValue: pointer) {.importc: "PopupMenu_SetPopupComponent", dynlib: dllname.}
proc PopupMenu_GetPopupPoint*(AObj: pointer, Result: var TPoint) {.importc: "PopupMenu_GetPopupPoint", dynlib: dllname.}
proc PopupMenu_GetAlignment*(AObj: pointer): TPopupAlignment {.importc: "PopupMenu_GetAlignment", dynlib: dllname.}
proc PopupMenu_SetAlignment*(AObj: pointer, AValue: TPopupAlignment) {.importc: "PopupMenu_SetAlignment", dynlib: dllname.}
proc PopupMenu_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "PopupMenu_GetBiDiMode", dynlib: dllname.}
proc PopupMenu_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "PopupMenu_SetBiDiMode", dynlib: dllname.}
proc PopupMenu_GetImages*(AObj: pointer): pointer {.importc: "PopupMenu_GetImages", dynlib: dllname.}
proc PopupMenu_SetImages*(AObj: pointer, AValue: pointer) {.importc: "PopupMenu_SetImages", dynlib: dllname.}
proc PopupMenu_GetOwnerDraw*(AObj: pointer): bool {.importc: "PopupMenu_GetOwnerDraw", dynlib: dllname.}
proc PopupMenu_SetOwnerDraw*(AObj: pointer, AValue: bool) {.importc: "PopupMenu_SetOwnerDraw", dynlib: dllname.}
proc PopupMenu_SetOnPopup*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PopupMenu_SetOnPopup", dynlib: dllname.}
proc PopupMenu_GetHandle*(AObj: pointer): HMENU {.importc: "PopupMenu_GetHandle", dynlib: dllname.}
proc PopupMenu_GetItems*(AObj: pointer): pointer {.importc: "PopupMenu_GetItems", dynlib: dllname.}
proc PopupMenu_GetComponentCount*(AObj: pointer): int32 {.importc: "PopupMenu_GetComponentCount", dynlib: dllname.}
proc PopupMenu_GetComponentIndex*(AObj: pointer): int32 {.importc: "PopupMenu_GetComponentIndex", dynlib: dllname.}
proc PopupMenu_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "PopupMenu_SetComponentIndex", dynlib: dllname.}
proc PopupMenu_GetOwner*(AObj: pointer): pointer {.importc: "PopupMenu_GetOwner", dynlib: dllname.}
proc PopupMenu_GetName*(AObj: pointer): cstring {.importc: "PopupMenu_GetName", dynlib: dllname.}
proc PopupMenu_SetName*(AObj: pointer, AValue: cstring) {.importc: "PopupMenu_SetName", dynlib: dllname.}
proc PopupMenu_GetTag*(AObj: pointer): int {.importc: "PopupMenu_GetTag", dynlib: dllname.}
proc PopupMenu_SetTag*(AObj: pointer, AValue: int) {.importc: "PopupMenu_SetTag", dynlib: dllname.}
proc PopupMenu_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "PopupMenu_GetComponents", dynlib: dllname.}
proc PopupMenu_StaticClassType*(): TClass {.importc: "PopupMenu_StaticClassType", dynlib: dllname.}
# ----------------- TStringList ----------------------
proc StringList_Create*(): pointer {.importc: "StringList_Create", dynlib: dllname.}
proc StringList_Free*(AObj: pointer) {.importc: "StringList_Free", dynlib: dllname.}
proc StringList_Add*(AObj: pointer, S: cstring): int32 {.importc: "StringList_Add", dynlib: dllname.}
proc StringList_AddObject*(AObj: pointer, S: cstring, AObject: pointer): int32 {.importc: "StringList_AddObject", dynlib: dllname.}
proc StringList_Assign*(AObj: pointer, Source: pointer) {.importc: "StringList_Assign", dynlib: dllname.}
proc StringList_Clear*(AObj: pointer) {.importc: "StringList_Clear", dynlib: dllname.}
proc StringList_Delete*(AObj: pointer, Index: int32) {.importc: "StringList_Delete", dynlib: dllname.}
proc StringList_IndexOf*(AObj: pointer, S: cstring): int32 {.importc: "StringList_IndexOf", dynlib: dllname.}
proc StringList_Insert*(AObj: pointer, Index: int32, S: cstring) {.importc: "StringList_Insert", dynlib: dllname.}
proc StringList_InsertObject*(AObj: pointer, Index: int32, S: cstring, AObject: pointer) {.importc: "StringList_InsertObject", dynlib: dllname.}
proc StringList_Append*(AObj: pointer, S: cstring) {.importc: "StringList_Append", dynlib: dllname.}
proc StringList_BeginUpdate*(AObj: pointer) {.importc: "StringList_BeginUpdate", dynlib: dllname.}
proc StringList_EndUpdate*(AObj: pointer) {.importc: "StringList_EndUpdate", dynlib: dllname.}
proc StringList_Equals*(AObj: pointer, Strings: pointer): bool {.importc: "StringList_Equals", dynlib: dllname.}
proc StringList_IndexOfName*(AObj: pointer, Name: cstring): int32 {.importc: "StringList_IndexOfName", dynlib: dllname.}
proc StringList_IndexOfObject*(AObj: pointer, AObject: pointer): int32 {.importc: "StringList_IndexOfObject", dynlib: dllname.}
proc StringList_LoadFromFile*(AObj: pointer, FileName: cstring) {.importc: "StringList_LoadFromFile", dynlib: dllname.}
proc StringList_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "StringList_LoadFromStream", dynlib: dllname.}
proc StringList_Move*(AObj: pointer, CurIndex: int32, NewIndex: int32) {.importc: "StringList_Move", dynlib: dllname.}
proc StringList_SaveToFile*(AObj: pointer, FileName: cstring) {.importc: "StringList_SaveToFile", dynlib: dllname.}
proc StringList_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "StringList_SaveToStream", dynlib: dllname.}
proc StringList_GetNamePath*(AObj: pointer): cstring {.importc: "StringList_GetNamePath", dynlib: dllname.}
proc StringList_ClassType*(AObj: pointer): TClass {.importc: "StringList_ClassType", dynlib: dllname.}
proc StringList_ClassName*(AObj: pointer): cstring {.importc: "StringList_ClassName", dynlib: dllname.}
proc StringList_InstanceSize*(AObj: pointer): int32 {.importc: "StringList_InstanceSize", dynlib: dllname.}
proc StringList_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "StringList_InheritsFrom", dynlib: dllname.}
proc StringList_GetHashCode*(AObj: pointer): int32 {.importc: "StringList_GetHashCode", dynlib: dllname.}
proc StringList_ToString*(AObj: pointer): cstring {.importc: "StringList_ToString", dynlib: dllname.}
proc StringList_GetSorted*(AObj: pointer): bool {.importc: "StringList_GetSorted", dynlib: dllname.}
proc StringList_SetSorted*(AObj: pointer, AValue: bool) {.importc: "StringList_SetSorted", dynlib: dllname.}
proc StringList_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringList_SetOnChange", dynlib: dllname.}
proc StringList_SetOnChanging*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringList_SetOnChanging", dynlib: dllname.}
proc StringList_GetCapacity*(AObj: pointer): int32 {.importc: "StringList_GetCapacity", dynlib: dllname.}
proc StringList_SetCapacity*(AObj: pointer, AValue: int32) {.importc: "StringList_SetCapacity", dynlib: dllname.}
proc StringList_GetCommaText*(AObj: pointer): cstring {.importc: "StringList_GetCommaText", dynlib: dllname.}
proc StringList_SetCommaText*(AObj: pointer, AValue: cstring) {.importc: "StringList_SetCommaText", dynlib: dllname.}
proc StringList_GetCount*(AObj: pointer): int32 {.importc: "StringList_GetCount", dynlib: dllname.}
proc StringList_GetDelimiter*(AObj: pointer): Char {.importc: "StringList_GetDelimiter", dynlib: dllname.}
proc StringList_SetDelimiter*(AObj: pointer, AValue: Char) {.importc: "StringList_SetDelimiter", dynlib: dllname.}
proc StringList_GetNameValueSeparator*(AObj: pointer): Char {.importc: "StringList_GetNameValueSeparator", dynlib: dllname.}
proc StringList_SetNameValueSeparator*(AObj: pointer, AValue: Char) {.importc: "StringList_SetNameValueSeparator", dynlib: dllname.}
proc StringList_GetText*(AObj: pointer): cstring {.importc: "StringList_GetText", dynlib: dllname.}
proc StringList_SetText*(AObj: pointer, AValue: cstring) {.importc: "StringList_SetText", dynlib: dllname.}
proc StringList_GetObjects*(AObj: pointer, Index: int32): pointer {.importc: "StringList_GetObjects", dynlib: dllname.}
proc StringList_SetObjects*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "StringList_SetObjects", dynlib: dllname.}
proc StringList_GetValues*(AObj: pointer, Name: cstring): cstring {.importc: "StringList_GetValues", dynlib: dllname.}
proc StringList_SetValues*(AObj: pointer, Name: cstring, AValue: cstring) {.importc: "StringList_SetValues", dynlib: dllname.}
proc StringList_GetValueFromIndex*(AObj: pointer, Index: int32): cstring {.importc: "StringList_GetValueFromIndex", dynlib: dllname.}
proc StringList_SetValueFromIndex*(AObj: pointer, Index: int32, AValue: cstring) {.importc: "StringList_SetValueFromIndex", dynlib: dllname.}
proc StringList_GetStrings*(AObj: pointer, Index: int32): cstring {.importc: "StringList_GetStrings", dynlib: dllname.}
proc StringList_SetStrings*(AObj: pointer, Index: int32, AValue: cstring) {.importc: "StringList_SetStrings", dynlib: dllname.}
proc StringList_StaticClassType*(): TClass {.importc: "StringList_StaticClassType", dynlib: dllname.}
# ----------------- TBrush ----------------------
proc Brush_Create*(): pointer {.importc: "Brush_Create", dynlib: dllname.}
proc Brush_Free*(AObj: pointer) {.importc: "Brush_Free", dynlib: dllname.}
proc Brush_Assign*(AObj: pointer, Source: pointer) {.importc: "Brush_Assign", dynlib: dllname.}
proc Brush_GetNamePath*(AObj: pointer): cstring {.importc: "Brush_GetNamePath", dynlib: dllname.}
proc Brush_ClassType*(AObj: pointer): TClass {.importc: "Brush_ClassType", dynlib: dllname.}
proc Brush_ClassName*(AObj: pointer): cstring {.importc: "Brush_ClassName", dynlib: dllname.}
proc Brush_InstanceSize*(AObj: pointer): int32 {.importc: "Brush_InstanceSize", dynlib: dllname.}
proc Brush_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Brush_InheritsFrom", dynlib: dllname.}
proc Brush_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Brush_Equals", dynlib: dllname.}
proc Brush_GetHashCode*(AObj: pointer): int32 {.importc: "Brush_GetHashCode", dynlib: dllname.}
proc Brush_ToString*(AObj: pointer): cstring {.importc: "Brush_ToString", dynlib: dllname.}
proc Brush_GetBitmap*(AObj: pointer): pointer {.importc: "Brush_GetBitmap", dynlib: dllname.}
proc Brush_SetBitmap*(AObj: pointer, AValue: pointer) {.importc: "Brush_SetBitmap", dynlib: dllname.}
proc Brush_GetHandle*(AObj: pointer): HBRUSH {.importc: "Brush_GetHandle", dynlib: dllname.}
proc Brush_SetHandle*(AObj: pointer, AValue: HBRUSH) {.importc: "Brush_SetHandle", dynlib: dllname.}
proc Brush_GetColor*(AObj: pointer): TColor {.importc: "Brush_GetColor", dynlib: dllname.}
proc Brush_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Brush_SetColor", dynlib: dllname.}
proc Brush_GetStyle*(AObj: pointer): TBrushStyle {.importc: "Brush_GetStyle", dynlib: dllname.}
proc Brush_SetStyle*(AObj: pointer, AValue: TBrushStyle) {.importc: "Brush_SetStyle", dynlib: dllname.}
proc Brush_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Brush_SetOnChange", dynlib: dllname.}
proc Brush_StaticClassType*(): TClass {.importc: "Brush_StaticClassType", dynlib: dllname.}
# ----------------- TPen ----------------------
proc Pen_Create*(): pointer {.importc: "Pen_Create", dynlib: dllname.}
proc Pen_Free*(AObj: pointer) {.importc: "Pen_Free", dynlib: dllname.}
proc Pen_Assign*(AObj: pointer, Source: pointer) {.importc: "Pen_Assign", dynlib: dllname.}
proc Pen_GetNamePath*(AObj: pointer): cstring {.importc: "Pen_GetNamePath", dynlib: dllname.}
proc Pen_ClassType*(AObj: pointer): TClass {.importc: "Pen_ClassType", dynlib: dllname.}
proc Pen_ClassName*(AObj: pointer): cstring {.importc: "Pen_ClassName", dynlib: dllname.}
proc Pen_InstanceSize*(AObj: pointer): int32 {.importc: "Pen_InstanceSize", dynlib: dllname.}
proc Pen_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Pen_InheritsFrom", dynlib: dllname.}
proc Pen_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Pen_Equals", dynlib: dllname.}
proc Pen_GetHashCode*(AObj: pointer): int32 {.importc: "Pen_GetHashCode", dynlib: dllname.}
proc Pen_ToString*(AObj: pointer): cstring {.importc: "Pen_ToString", dynlib: dllname.}
proc Pen_GetHandle*(AObj: pointer): HPEN {.importc: "Pen_GetHandle", dynlib: dllname.}
proc Pen_SetHandle*(AObj: pointer, AValue: HPEN) {.importc: "Pen_SetHandle", dynlib: dllname.}
proc Pen_GetColor*(AObj: pointer): TColor {.importc: "Pen_GetColor", dynlib: dllname.}
proc Pen_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Pen_SetColor", dynlib: dllname.}
proc Pen_GetMode*(AObj: pointer): TPenMode {.importc: "Pen_GetMode", dynlib: dllname.}
proc Pen_SetMode*(AObj: pointer, AValue: TPenMode) {.importc: "Pen_SetMode", dynlib: dllname.}
proc Pen_GetStyle*(AObj: pointer): TPenStyle {.importc: "Pen_GetStyle", dynlib: dllname.}
proc Pen_SetStyle*(AObj: pointer, AValue: TPenStyle) {.importc: "Pen_SetStyle", dynlib: dllname.}
proc Pen_GetWidth*(AObj: pointer): int32 {.importc: "Pen_GetWidth", dynlib: dllname.}
proc Pen_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Pen_SetWidth", dynlib: dllname.}
proc Pen_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Pen_SetOnChange", dynlib: dllname.}
proc Pen_StaticClassType*(): TClass {.importc: "Pen_StaticClassType", dynlib: dllname.}
# ----------------- TMenuItem ----------------------
proc MenuItem_Create*(AOwner: pointer): pointer {.importc: "MenuItem_Create", dynlib: dllname.}
proc MenuItem_Free*(AObj: pointer) {.importc: "MenuItem_Free", dynlib: dllname.}
proc MenuItem_Insert*(AObj: pointer, Index: int32, Item: pointer) {.importc: "MenuItem_Insert", dynlib: dllname.}
proc MenuItem_Delete*(AObj: pointer, Index: int32) {.importc: "MenuItem_Delete", dynlib: dllname.}
proc MenuItem_Clear*(AObj: pointer) {.importc: "MenuItem_Clear", dynlib: dllname.}
proc MenuItem_Click*(AObj: pointer) {.importc: "MenuItem_Click", dynlib: dllname.}
proc MenuItem_IndexOf*(AObj: pointer, Item: pointer): int32 {.importc: "MenuItem_IndexOf", dynlib: dllname.}
proc MenuItem_HasParent*(AObj: pointer): bool {.importc: "MenuItem_HasParent", dynlib: dllname.}
proc MenuItem_Add*(AObj: pointer, Item: pointer) {.importc: "MenuItem_Add", dynlib: dllname.}
proc MenuItem_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "MenuItem_FindComponent", dynlib: dllname.}
proc MenuItem_GetNamePath*(AObj: pointer): cstring {.importc: "MenuItem_GetNamePath", dynlib: dllname.}
proc MenuItem_Assign*(AObj: pointer, Source: pointer) {.importc: "MenuItem_Assign", dynlib: dllname.}
proc MenuItem_ClassType*(AObj: pointer): TClass {.importc: "MenuItem_ClassType", dynlib: dllname.}
proc MenuItem_ClassName*(AObj: pointer): cstring {.importc: "MenuItem_ClassName", dynlib: dllname.}
proc MenuItem_InstanceSize*(AObj: pointer): int32 {.importc: "MenuItem_InstanceSize", dynlib: dllname.}
proc MenuItem_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "MenuItem_InheritsFrom", dynlib: dllname.}
proc MenuItem_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "MenuItem_Equals", dynlib: dllname.}
proc MenuItem_GetHashCode*(AObj: pointer): int32 {.importc: "MenuItem_GetHashCode", dynlib: dllname.}
proc MenuItem_ToString*(AObj: pointer): cstring {.importc: "MenuItem_ToString", dynlib: dllname.}
proc MenuItem_GetHandle*(AObj: pointer): HMENU {.importc: "MenuItem_GetHandle", dynlib: dllname.}
proc MenuItem_GetCount*(AObj: pointer): int32 {.importc: "MenuItem_GetCount", dynlib: dllname.}
proc MenuItem_GetParent*(AObj: pointer): pointer {.importc: "MenuItem_GetParent", dynlib: dllname.}
proc MenuItem_GetAction*(AObj: pointer): pointer {.importc: "MenuItem_GetAction", dynlib: dllname.}
proc MenuItem_SetAction*(AObj: pointer, AValue: pointer) {.importc: "MenuItem_SetAction", dynlib: dllname.}
proc MenuItem_GetAutoCheck*(AObj: pointer): bool {.importc: "MenuItem_GetAutoCheck", dynlib: dllname.}
proc MenuItem_SetAutoCheck*(AObj: pointer, AValue: bool) {.importc: "MenuItem_SetAutoCheck", dynlib: dllname.}
proc MenuItem_GetBitmap*(AObj: pointer): pointer {.importc: "MenuItem_GetBitmap", dynlib: dllname.}
proc MenuItem_SetBitmap*(AObj: pointer, AValue: pointer) {.importc: "MenuItem_SetBitmap", dynlib: dllname.}
proc MenuItem_GetCaption*(AObj: pointer): cstring {.importc: "MenuItem_GetCaption", dynlib: dllname.}
proc MenuItem_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "MenuItem_SetCaption", dynlib: dllname.}
proc MenuItem_GetChecked*(AObj: pointer): bool {.importc: "MenuItem_GetChecked", dynlib: dllname.}
proc MenuItem_SetChecked*(AObj: pointer, AValue: bool) {.importc: "MenuItem_SetChecked", dynlib: dllname.}
proc MenuItem_GetDefault*(AObj: pointer): bool {.importc: "MenuItem_GetDefault", dynlib: dllname.}
proc MenuItem_SetDefault*(AObj: pointer, AValue: bool) {.importc: "MenuItem_SetDefault", dynlib: dllname.}
proc MenuItem_GetEnabled*(AObj: pointer): bool {.importc: "MenuItem_GetEnabled", dynlib: dllname.}
proc MenuItem_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "MenuItem_SetEnabled", dynlib: dllname.}
proc MenuItem_GetGroupIndex*(AObj: pointer): int8 {.importc: "MenuItem_GetGroupIndex", dynlib: dllname.}
proc MenuItem_SetGroupIndex*(AObj: pointer, AValue: int8) {.importc: "MenuItem_SetGroupIndex", dynlib: dllname.}
proc MenuItem_GetHint*(AObj: pointer): cstring {.importc: "MenuItem_GetHint", dynlib: dllname.}
proc MenuItem_SetHint*(AObj: pointer, AValue: cstring) {.importc: "MenuItem_SetHint", dynlib: dllname.}
proc MenuItem_GetImageIndex*(AObj: pointer): int32 {.importc: "MenuItem_GetImageIndex", dynlib: dllname.}
proc MenuItem_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "MenuItem_SetImageIndex", dynlib: dllname.}
proc MenuItem_GetRadioItem*(AObj: pointer): bool {.importc: "MenuItem_GetRadioItem", dynlib: dllname.}
proc MenuItem_SetRadioItem*(AObj: pointer, AValue: bool) {.importc: "MenuItem_SetRadioItem", dynlib: dllname.}
proc MenuItem_GetShortCut*(AObj: pointer): TShortCut {.importc: "MenuItem_GetShortCut", dynlib: dllname.}
proc MenuItem_SetShortCut*(AObj: pointer, AValue: TShortCut) {.importc: "MenuItem_SetShortCut", dynlib: dllname.}
proc MenuItem_GetVisible*(AObj: pointer): bool {.importc: "MenuItem_GetVisible", dynlib: dllname.}
proc MenuItem_SetVisible*(AObj: pointer, AValue: bool) {.importc: "MenuItem_SetVisible", dynlib: dllname.}
proc MenuItem_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MenuItem_SetOnClick", dynlib: dllname.}
proc MenuItem_SetOnMeasureItem*(AObj: pointer, AEventId: TMenuMeasureItemEvent) {.importc: "MenuItem_SetOnMeasureItem", dynlib: dllname.}
proc MenuItem_GetComponentCount*(AObj: pointer): int32 {.importc: "MenuItem_GetComponentCount", dynlib: dllname.}
proc MenuItem_GetComponentIndex*(AObj: pointer): int32 {.importc: "MenuItem_GetComponentIndex", dynlib: dllname.}
proc MenuItem_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "MenuItem_SetComponentIndex", dynlib: dllname.}
proc MenuItem_GetOwner*(AObj: pointer): pointer {.importc: "MenuItem_GetOwner", dynlib: dllname.}
proc MenuItem_GetName*(AObj: pointer): cstring {.importc: "MenuItem_GetName", dynlib: dllname.}
proc MenuItem_SetName*(AObj: pointer, AValue: cstring) {.importc: "MenuItem_SetName", dynlib: dllname.}
proc MenuItem_GetTag*(AObj: pointer): int {.importc: "MenuItem_GetTag", dynlib: dllname.}
proc MenuItem_SetTag*(AObj: pointer, AValue: int) {.importc: "MenuItem_SetTag", dynlib: dllname.}
proc MenuItem_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "MenuItem_GetItems", dynlib: dllname.}
proc MenuItem_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "MenuItem_GetComponents", dynlib: dllname.}
proc MenuItem_StaticClassType*(): TClass {.importc: "MenuItem_StaticClassType", dynlib: dllname.}
proc MenuItem_GetShortCutText*(AObj: pointer): cstring {.importc: "MenuItem_GetShortCutText", dynlib: dllname.}
proc MenuItem_SetShortCutText*(AObj: pointer, Value: cstring) {.importc: "MenuItem_SetShortCutText", dynlib: dllname.}
# ----------------- TPicture ----------------------
proc Picture_Create*(): pointer {.importc: "Picture_Create", dynlib: dllname.}
proc Picture_Free*(AObj: pointer) {.importc: "Picture_Free", dynlib: dllname.}
proc Picture_LoadFromFile*(AObj: pointer, Filename: cstring) {.importc: "Picture_LoadFromFile", dynlib: dllname.}
proc Picture_SaveToFile*(AObj: pointer, Filename: cstring) {.importc: "Picture_SaveToFile", dynlib: dllname.}
proc Picture_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "Picture_LoadFromStream", dynlib: dllname.}
proc Picture_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "Picture_SaveToStream", dynlib: dllname.}
proc Picture_Assign*(AObj: pointer, Source: pointer) {.importc: "Picture_Assign", dynlib: dllname.}
proc Picture_GetNamePath*(AObj: pointer): cstring {.importc: "Picture_GetNamePath", dynlib: dllname.}
proc Picture_ClassType*(AObj: pointer): TClass {.importc: "Picture_ClassType", dynlib: dllname.}
proc Picture_ClassName*(AObj: pointer): cstring {.importc: "Picture_ClassName", dynlib: dllname.}
proc Picture_InstanceSize*(AObj: pointer): int32 {.importc: "Picture_InstanceSize", dynlib: dllname.}
proc Picture_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Picture_InheritsFrom", dynlib: dllname.}
proc Picture_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Picture_Equals", dynlib: dllname.}
proc Picture_GetHashCode*(AObj: pointer): int32 {.importc: "Picture_GetHashCode", dynlib: dllname.}
proc Picture_ToString*(AObj: pointer): cstring {.importc: "Picture_ToString", dynlib: dllname.}
proc Picture_GetBitmap*(AObj: pointer): pointer {.importc: "Picture_GetBitmap", dynlib: dllname.}
proc Picture_SetBitmap*(AObj: pointer, AValue: pointer) {.importc: "Picture_SetBitmap", dynlib: dllname.}
proc Picture_GetGraphic*(AObj: pointer): pointer {.importc: "Picture_GetGraphic", dynlib: dllname.}
proc Picture_SetGraphic*(AObj: pointer, AValue: pointer) {.importc: "Picture_SetGraphic", dynlib: dllname.}
proc Picture_GetHeight*(AObj: pointer): int32 {.importc: "Picture_GetHeight", dynlib: dllname.}
proc Picture_GetIcon*(AObj: pointer): pointer {.importc: "Picture_GetIcon", dynlib: dllname.}
proc Picture_SetIcon*(AObj: pointer, AValue: pointer) {.importc: "Picture_SetIcon", dynlib: dllname.}
proc Picture_GetWidth*(AObj: pointer): int32 {.importc: "Picture_GetWidth", dynlib: dllname.}
proc Picture_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Picture_SetOnChange", dynlib: dllname.}
proc Picture_StaticClassType*(): TClass {.importc: "Picture_StaticClassType", dynlib: dllname.}
# ----------------- TListColumns ----------------------
proc ListColumns_Create*(AOwner: pointer): pointer {.importc: "ListColumns_Create", dynlib: dllname.}
proc ListColumns_Free*(AObj: pointer) {.importc: "ListColumns_Free", dynlib: dllname.}
proc ListColumns_Add*(AObj: pointer): pointer {.importc: "ListColumns_Add", dynlib: dllname.}
proc ListColumns_Owner*(AObj: pointer): pointer {.importc: "ListColumns_Owner", dynlib: dllname.}
proc ListColumns_Assign*(AObj: pointer, Source: pointer) {.importc: "ListColumns_Assign", dynlib: dllname.}
proc ListColumns_BeginUpdate*(AObj: pointer) {.importc: "ListColumns_BeginUpdate", dynlib: dllname.}
proc ListColumns_Clear*(AObj: pointer) {.importc: "ListColumns_Clear", dynlib: dllname.}
proc ListColumns_Delete*(AObj: pointer, Index: int32) {.importc: "ListColumns_Delete", dynlib: dllname.}
proc ListColumns_EndUpdate*(AObj: pointer) {.importc: "ListColumns_EndUpdate", dynlib: dllname.}
proc ListColumns_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "ListColumns_FindItemID", dynlib: dllname.}
proc ListColumns_GetNamePath*(AObj: pointer): cstring {.importc: "ListColumns_GetNamePath", dynlib: dllname.}
proc ListColumns_Insert*(AObj: pointer, Index: int32): pointer {.importc: "ListColumns_Insert", dynlib: dllname.}
proc ListColumns_ClassType*(AObj: pointer): TClass {.importc: "ListColumns_ClassType", dynlib: dllname.}
proc ListColumns_ClassName*(AObj: pointer): cstring {.importc: "ListColumns_ClassName", dynlib: dllname.}
proc ListColumns_InstanceSize*(AObj: pointer): int32 {.importc: "ListColumns_InstanceSize", dynlib: dllname.}
proc ListColumns_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ListColumns_InheritsFrom", dynlib: dllname.}
proc ListColumns_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ListColumns_Equals", dynlib: dllname.}
proc ListColumns_GetHashCode*(AObj: pointer): int32 {.importc: "ListColumns_GetHashCode", dynlib: dllname.}
proc ListColumns_ToString*(AObj: pointer): cstring {.importc: "ListColumns_ToString", dynlib: dllname.}
proc ListColumns_GetCount*(AObj: pointer): int32 {.importc: "ListColumns_GetCount", dynlib: dllname.}
proc ListColumns_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "ListColumns_GetItems", dynlib: dllname.}
proc ListColumns_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "ListColumns_SetItems", dynlib: dllname.}
proc ListColumns_StaticClassType*(): TClass {.importc: "ListColumns_StaticClassType", dynlib: dllname.}
# ----------------- TListItems ----------------------
proc ListItems_Create*(AOwner: pointer): pointer {.importc: "ListItems_Create", dynlib: dllname.}
proc ListItems_Free*(AObj: pointer) {.importc: "ListItems_Free", dynlib: dllname.}
proc ListItems_Add*(AObj: pointer): pointer {.importc: "ListItems_Add", dynlib: dllname.}
proc ListItems_Assign*(AObj: pointer, Source: pointer) {.importc: "ListItems_Assign", dynlib: dllname.}
proc ListItems_BeginUpdate*(AObj: pointer) {.importc: "ListItems_BeginUpdate", dynlib: dllname.}
proc ListItems_Clear*(AObj: pointer) {.importc: "ListItems_Clear", dynlib: dllname.}
proc ListItems_Delete*(AObj: pointer, Index: int32) {.importc: "ListItems_Delete", dynlib: dllname.}
proc ListItems_EndUpdate*(AObj: pointer) {.importc: "ListItems_EndUpdate", dynlib: dllname.}
proc ListItems_IndexOf*(AObj: pointer, Value: pointer): int32 {.importc: "ListItems_IndexOf", dynlib: dllname.}
proc ListItems_Insert*(AObj: pointer, Index: int32): pointer {.importc: "ListItems_Insert", dynlib: dllname.}
proc ListItems_GetNamePath*(AObj: pointer): cstring {.importc: "ListItems_GetNamePath", dynlib: dllname.}
proc ListItems_ClassType*(AObj: pointer): TClass {.importc: "ListItems_ClassType", dynlib: dllname.}
proc ListItems_ClassName*(AObj: pointer): cstring {.importc: "ListItems_ClassName", dynlib: dllname.}
proc ListItems_InstanceSize*(AObj: pointer): int32 {.importc: "ListItems_InstanceSize", dynlib: dllname.}
proc ListItems_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ListItems_InheritsFrom", dynlib: dllname.}
proc ListItems_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ListItems_Equals", dynlib: dllname.}
proc ListItems_GetHashCode*(AObj: pointer): int32 {.importc: "ListItems_GetHashCode", dynlib: dllname.}
proc ListItems_ToString*(AObj: pointer): cstring {.importc: "ListItems_ToString", dynlib: dllname.}
proc ListItems_GetCount*(AObj: pointer): int32 {.importc: "ListItems_GetCount", dynlib: dllname.}
proc ListItems_SetCount*(AObj: pointer, AValue: int32) {.importc: "ListItems_SetCount", dynlib: dllname.}
proc ListItems_GetOwner*(AObj: pointer): pointer {.importc: "ListItems_GetOwner", dynlib: dllname.}
proc ListItems_GetItem*(AObj: pointer, Index: int32): pointer {.importc: "ListItems_GetItem", dynlib: dllname.}
proc ListItems_SetItem*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "ListItems_SetItem", dynlib: dllname.}
proc ListItems_StaticClassType*(): TClass {.importc: "ListItems_StaticClassType", dynlib: dllname.}
# ----------------- TTreeNodes ----------------------
proc TreeNodes_Create*(AOwner: pointer): pointer {.importc: "TreeNodes_Create", dynlib: dllname.}
proc TreeNodes_Free*(AObj: pointer) {.importc: "TreeNodes_Free", dynlib: dllname.}
proc TreeNodes_AddChildFirst*(AObj: pointer, Parent: pointer, S: cstring): pointer {.importc: "TreeNodes_AddChildFirst", dynlib: dllname.}
proc TreeNodes_AddChild*(AObj: pointer, Parent: pointer, S: cstring): pointer {.importc: "TreeNodes_AddChild", dynlib: dllname.}
proc TreeNodes_AddChildObjectFirst*(AObj: pointer, Parent: pointer, S: cstring, Ptr: pointer): pointer {.importc: "TreeNodes_AddChildObjectFirst", dynlib: dllname.}
proc TreeNodes_AddChildObject*(AObj: pointer, Parent: pointer, S: cstring, Ptr: pointer): pointer {.importc: "TreeNodes_AddChildObject", dynlib: dllname.}
proc TreeNodes_AddObjectFirst*(AObj: pointer, Sibling: pointer, S: cstring, Ptr: pointer): pointer {.importc: "TreeNodes_AddObjectFirst", dynlib: dllname.}
proc TreeNodes_AddObject*(AObj: pointer, Sibling: pointer, S: cstring, Ptr: pointer): pointer {.importc: "TreeNodes_AddObject", dynlib: dllname.}
proc TreeNodes_AddNode*(AObj: pointer, Node: pointer, Relative: pointer, S: cstring, Ptr: pointer, Method: TNodeAttachMode): pointer {.importc: "TreeNodes_AddNode", dynlib: dllname.}
proc TreeNodes_AddFirst*(AObj: pointer, Sibling: pointer, S: cstring): pointer {.importc: "TreeNodes_AddFirst", dynlib: dllname.}
proc TreeNodes_Add*(AObj: pointer, Sibling: pointer, S: cstring): pointer {.importc: "TreeNodes_Add", dynlib: dllname.}
proc TreeNodes_Assign*(AObj: pointer, Source: pointer) {.importc: "TreeNodes_Assign", dynlib: dllname.}
proc TreeNodes_BeginUpdate*(AObj: pointer) {.importc: "TreeNodes_BeginUpdate", dynlib: dllname.}
proc TreeNodes_Clear*(AObj: pointer) {.importc: "TreeNodes_Clear", dynlib: dllname.}
proc TreeNodes_Delete*(AObj: pointer, Node: pointer) {.importc: "TreeNodes_Delete", dynlib: dllname.}
proc TreeNodes_EndUpdate*(AObj: pointer) {.importc: "TreeNodes_EndUpdate", dynlib: dllname.}
proc TreeNodes_GetFirstNode*(AObj: pointer): pointer {.importc: "TreeNodes_GetFirstNode", dynlib: dllname.}
proc TreeNodes_Insert*(AObj: pointer, Sibling: pointer, S: cstring): pointer {.importc: "TreeNodes_Insert", dynlib: dllname.}
proc TreeNodes_InsertObject*(AObj: pointer, Sibling: pointer, S: cstring, Ptr: pointer): pointer {.importc: "TreeNodes_InsertObject", dynlib: dllname.}
proc TreeNodes_CustomSort*(AObj: pointer, SortProc: PFNTVCOMPARE, Data: int, ARecurse: bool): bool {.importc: "TreeNodes_CustomSort", dynlib: dllname.}
proc TreeNodes_GetNamePath*(AObj: pointer): cstring {.importc: "TreeNodes_GetNamePath", dynlib: dllname.}
proc TreeNodes_ClassType*(AObj: pointer): TClass {.importc: "TreeNodes_ClassType", dynlib: dllname.}
proc TreeNodes_ClassName*(AObj: pointer): cstring {.importc: "TreeNodes_ClassName", dynlib: dllname.}
proc TreeNodes_InstanceSize*(AObj: pointer): int32 {.importc: "TreeNodes_InstanceSize", dynlib: dllname.}
proc TreeNodes_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TreeNodes_InheritsFrom", dynlib: dllname.}
proc TreeNodes_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TreeNodes_Equals", dynlib: dllname.}
proc TreeNodes_GetHashCode*(AObj: pointer): int32 {.importc: "TreeNodes_GetHashCode", dynlib: dllname.}
proc TreeNodes_ToString*(AObj: pointer): cstring {.importc: "TreeNodes_ToString", dynlib: dllname.}
proc TreeNodes_GetCount*(AObj: pointer): int32 {.importc: "TreeNodes_GetCount", dynlib: dllname.}
proc TreeNodes_GetOwner*(AObj: pointer): pointer {.importc: "TreeNodes_GetOwner", dynlib: dllname.}
proc TreeNodes_GetItem*(AObj: pointer, Index: int32): pointer {.importc: "TreeNodes_GetItem", dynlib: dllname.}
proc TreeNodes_StaticClassType*(): TClass {.importc: "TreeNodes_StaticClassType", dynlib: dllname.}
# ----------------- TListItem ----------------------
proc ListItem_Create*(AOwner: pointer): pointer {.importc: "ListItem_Create", dynlib: dllname.}
proc ListItem_Free*(AObj: pointer) {.importc: "ListItem_Free", dynlib: dllname.}
proc ListItem_DisplayRectSubItem*(AObj: pointer, subItem: int32, Code: TDisplayCode, Result: var TRect) {.importc: "ListItem_DisplayRectSubItem", dynlib: dllname.}
proc ListItem_Assign*(AObj: pointer, Source: pointer) {.importc: "ListItem_Assign", dynlib: dllname.}
proc ListItem_Delete*(AObj: pointer) {.importc: "ListItem_Delete", dynlib: dllname.}
proc ListItem_DisplayRect*(AObj: pointer, Code: TDisplayCode, Result: var TRect) {.importc: "ListItem_DisplayRect", dynlib: dllname.}
proc ListItem_EditCaption*(AObj: pointer): bool {.importc: "ListItem_EditCaption", dynlib: dllname.}
proc ListItem_MakeVisible*(AObj: pointer, PartialOK: bool) {.importc: "ListItem_MakeVisible", dynlib: dllname.}
proc ListItem_GetNamePath*(AObj: pointer): cstring {.importc: "ListItem_GetNamePath", dynlib: dllname.}
proc ListItem_ClassType*(AObj: pointer): TClass {.importc: "ListItem_ClassType", dynlib: dllname.}
proc ListItem_ClassName*(AObj: pointer): cstring {.importc: "ListItem_ClassName", dynlib: dllname.}
proc ListItem_InstanceSize*(AObj: pointer): int32 {.importc: "ListItem_InstanceSize", dynlib: dllname.}
proc ListItem_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ListItem_InheritsFrom", dynlib: dllname.}
proc ListItem_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ListItem_Equals", dynlib: dllname.}
proc ListItem_GetHashCode*(AObj: pointer): int32 {.importc: "ListItem_GetHashCode", dynlib: dllname.}
proc ListItem_ToString*(AObj: pointer): cstring {.importc: "ListItem_ToString", dynlib: dllname.}
proc ListItem_GetDropTarget*(AObj: pointer): bool {.importc: "ListItem_GetDropTarget", dynlib: dllname.}
proc ListItem_SetDropTarget*(AObj: pointer, AValue: bool) {.importc: "ListItem_SetDropTarget", dynlib: dllname.}
proc ListItem_GetCaption*(AObj: pointer): cstring {.importc: "ListItem_GetCaption", dynlib: dllname.}
proc ListItem_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "ListItem_SetCaption", dynlib: dllname.}
proc ListItem_GetChecked*(AObj: pointer): bool {.importc: "ListItem_GetChecked", dynlib: dllname.}
proc ListItem_SetChecked*(AObj: pointer, AValue: bool) {.importc: "ListItem_SetChecked", dynlib: dllname.}
proc ListItem_GetCut*(AObj: pointer): bool {.importc: "ListItem_GetCut", dynlib: dllname.}
proc ListItem_SetCut*(AObj: pointer, AValue: bool) {.importc: "ListItem_SetCut", dynlib: dllname.}
proc ListItem_GetData*(AObj: pointer): pointer {.importc: "ListItem_GetData", dynlib: dllname.}
proc ListItem_SetData*(AObj: pointer, AValue: pointer) {.importc: "ListItem_SetData", dynlib: dllname.}
proc ListItem_GetFocused*(AObj: pointer): bool {.importc: "ListItem_GetFocused", dynlib: dllname.}
proc ListItem_SetFocused*(AObj: pointer, AValue: bool) {.importc: "ListItem_SetFocused", dynlib: dllname.}
proc ListItem_GetImageIndex*(AObj: pointer): int32 {.importc: "ListItem_GetImageIndex", dynlib: dllname.}
proc ListItem_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "ListItem_SetImageIndex", dynlib: dllname.}
proc ListItem_GetIndex*(AObj: pointer): int32 {.importc: "ListItem_GetIndex", dynlib: dllname.}
proc ListItem_GetLeft*(AObj: pointer): int32 {.importc: "ListItem_GetLeft", dynlib: dllname.}
proc ListItem_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ListItem_SetLeft", dynlib: dllname.}
proc ListItem_GetListView*(AObj: pointer): pointer {.importc: "ListItem_GetListView", dynlib: dllname.}
proc ListItem_GetOwner*(AObj: pointer): pointer {.importc: "ListItem_GetOwner", dynlib: dllname.}
proc ListItem_GetPosition*(AObj: pointer, Result: var TPoint) {.importc: "ListItem_GetPosition", dynlib: dllname.}
proc ListItem_SetPosition*(AObj: pointer, AValue: var TPoint) {.importc: "ListItem_SetPosition", dynlib: dllname.}
proc ListItem_GetSelected*(AObj: pointer): bool {.importc: "ListItem_GetSelected", dynlib: dllname.}
proc ListItem_SetSelected*(AObj: pointer, AValue: bool) {.importc: "ListItem_SetSelected", dynlib: dllname.}
proc ListItem_GetStateIndex*(AObj: pointer): int32 {.importc: "ListItem_GetStateIndex", dynlib: dllname.}
proc ListItem_SetStateIndex*(AObj: pointer, AValue: int32) {.importc: "ListItem_SetStateIndex", dynlib: dllname.}
proc ListItem_GetSubItems*(AObj: pointer): pointer {.importc: "ListItem_GetSubItems", dynlib: dllname.}
proc ListItem_SetSubItems*(AObj: pointer, AValue: pointer) {.importc: "ListItem_SetSubItems", dynlib: dllname.}
proc ListItem_GetTop*(AObj: pointer): int32 {.importc: "ListItem_GetTop", dynlib: dllname.}
proc ListItem_SetTop*(AObj: pointer, AValue: int32) {.importc: "ListItem_SetTop", dynlib: dllname.}
proc ListItem_GetSubItemImages*(AObj: pointer, Index: int32): int32 {.importc: "ListItem_GetSubItemImages", dynlib: dllname.}
proc ListItem_SetSubItemImages*(AObj: pointer, Index: int32, AValue: int32) {.importc: "ListItem_SetSubItemImages", dynlib: dllname.}
proc ListItem_StaticClassType*(): TClass {.importc: "ListItem_StaticClassType", dynlib: dllname.}
# ----------------- TTreeNode ----------------------
proc TreeNode_Create*(AOwner: pointer): pointer {.importc: "TreeNode_Create", dynlib: dllname.}
proc TreeNode_Free*(AObj: pointer) {.importc: "TreeNode_Free", dynlib: dllname.}
proc TreeNode_Assign*(AObj: pointer, Source: pointer) {.importc: "TreeNode_Assign", dynlib: dllname.}
proc TreeNode_Collapse*(AObj: pointer, Recurse: bool) {.importc: "TreeNode_Collapse", dynlib: dllname.}
proc TreeNode_Delete*(AObj: pointer) {.importc: "TreeNode_Delete", dynlib: dllname.}
proc TreeNode_DisplayRect*(AObj: pointer, TextOnly: bool, Result: var TRect) {.importc: "TreeNode_DisplayRect", dynlib: dllname.}
proc TreeNode_EditText*(AObj: pointer): bool {.importc: "TreeNode_EditText", dynlib: dllname.}
proc TreeNode_Expand*(AObj: pointer, Recurse: bool) {.importc: "TreeNode_Expand", dynlib: dllname.}
proc TreeNode_IndexOf*(AObj: pointer, Value: pointer): int32 {.importc: "TreeNode_IndexOf", dynlib: dllname.}
proc TreeNode_MakeVisible*(AObj: pointer) {.importc: "TreeNode_MakeVisible", dynlib: dllname.}
proc TreeNode_MoveTo*(AObj: pointer, Destination: pointer, Mode: TNodeAttachMode) {.importc: "TreeNode_MoveTo", dynlib: dllname.}
proc TreeNode_CustomSort*(AObj: pointer, SortProc: PFNTVCOMPARE, Data: int, ARecurse: bool): bool {.importc: "TreeNode_CustomSort", dynlib: dllname.}
proc TreeNode_GetNamePath*(AObj: pointer): cstring {.importc: "TreeNode_GetNamePath", dynlib: dllname.}
proc TreeNode_ClassType*(AObj: pointer): TClass {.importc: "TreeNode_ClassType", dynlib: dllname.}
proc TreeNode_ClassName*(AObj: pointer): cstring {.importc: "TreeNode_ClassName", dynlib: dllname.}
proc TreeNode_InstanceSize*(AObj: pointer): int32 {.importc: "TreeNode_InstanceSize", dynlib: dllname.}
proc TreeNode_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TreeNode_InheritsFrom", dynlib: dllname.}
proc TreeNode_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TreeNode_Equals", dynlib: dllname.}
proc TreeNode_GetHashCode*(AObj: pointer): int32 {.importc: "TreeNode_GetHashCode", dynlib: dllname.}
proc TreeNode_ToString*(AObj: pointer): cstring {.importc: "TreeNode_ToString", dynlib: dllname.}
proc TreeNode_GetAbsoluteIndex*(AObj: pointer): int32 {.importc: "TreeNode_GetAbsoluteIndex", dynlib: dllname.}
proc TreeNode_GetCount*(AObj: pointer): int32 {.importc: "TreeNode_GetCount", dynlib: dllname.}
proc TreeNode_GetCut*(AObj: pointer): bool {.importc: "TreeNode_GetCut", dynlib: dllname.}
proc TreeNode_SetCut*(AObj: pointer, AValue: bool) {.importc: "TreeNode_SetCut", dynlib: dllname.}
proc TreeNode_GetData*(AObj: pointer): pointer {.importc: "TreeNode_GetData", dynlib: dllname.}
proc TreeNode_SetData*(AObj: pointer, AValue: pointer) {.importc: "TreeNode_SetData", dynlib: dllname.}
proc TreeNode_GetDeleting*(AObj: pointer): bool {.importc: "TreeNode_GetDeleting", dynlib: dllname.}
proc TreeNode_GetFocused*(AObj: pointer): bool {.importc: "TreeNode_GetFocused", dynlib: dllname.}
proc TreeNode_SetFocused*(AObj: pointer, AValue: bool) {.importc: "TreeNode_SetFocused", dynlib: dllname.}
proc TreeNode_GetDropTarget*(AObj: pointer): bool {.importc: "TreeNode_GetDropTarget", dynlib: dllname.}
proc TreeNode_SetDropTarget*(AObj: pointer, AValue: bool) {.importc: "TreeNode_SetDropTarget", dynlib: dllname.}
proc TreeNode_GetSelected*(AObj: pointer): bool {.importc: "TreeNode_GetSelected", dynlib: dllname.}
proc TreeNode_SetSelected*(AObj: pointer, AValue: bool) {.importc: "TreeNode_SetSelected", dynlib: dllname.}
proc TreeNode_GetExpanded*(AObj: pointer): bool {.importc: "TreeNode_GetExpanded", dynlib: dllname.}
proc TreeNode_SetExpanded*(AObj: pointer, AValue: bool) {.importc: "TreeNode_SetExpanded", dynlib: dllname.}
proc TreeNode_GetHandle*(AObj: pointer): HWND {.importc: "TreeNode_GetHandle", dynlib: dllname.}
proc TreeNode_GetHasChildren*(AObj: pointer): bool {.importc: "TreeNode_GetHasChildren", dynlib: dllname.}
proc TreeNode_SetHasChildren*(AObj: pointer, AValue: bool) {.importc: "TreeNode_SetHasChildren", dynlib: dllname.}
proc TreeNode_GetImageIndex*(AObj: pointer): int32 {.importc: "TreeNode_GetImageIndex", dynlib: dllname.}
proc TreeNode_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "TreeNode_SetImageIndex", dynlib: dllname.}
proc TreeNode_GetIndex*(AObj: pointer): int32 {.importc: "TreeNode_GetIndex", dynlib: dllname.}
proc TreeNode_GetIsVisible*(AObj: pointer): bool {.importc: "TreeNode_GetIsVisible", dynlib: dllname.}
proc TreeNode_GetLevel*(AObj: pointer): int32 {.importc: "TreeNode_GetLevel", dynlib: dllname.}
proc TreeNode_GetOwner*(AObj: pointer): pointer {.importc: "TreeNode_GetOwner", dynlib: dllname.}
proc TreeNode_GetParent*(AObj: pointer): pointer {.importc: "TreeNode_GetParent", dynlib: dllname.}
proc TreeNode_GetSelectedIndex*(AObj: pointer): int32 {.importc: "TreeNode_GetSelectedIndex", dynlib: dllname.}
proc TreeNode_SetSelectedIndex*(AObj: pointer, AValue: int32) {.importc: "TreeNode_SetSelectedIndex", dynlib: dllname.}
proc TreeNode_GetStateIndex*(AObj: pointer): int32 {.importc: "TreeNode_GetStateIndex", dynlib: dllname.}
proc TreeNode_SetStateIndex*(AObj: pointer, AValue: int32) {.importc: "TreeNode_SetStateIndex", dynlib: dllname.}
proc TreeNode_GetText*(AObj: pointer): cstring {.importc: "TreeNode_GetText", dynlib: dllname.}
proc TreeNode_SetText*(AObj: pointer, AValue: cstring) {.importc: "TreeNode_SetText", dynlib: dllname.}
proc TreeNode_GetTreeView*(AObj: pointer): pointer {.importc: "TreeNode_GetTreeView", dynlib: dllname.}
proc TreeNode_GetItem*(AObj: pointer, Index: int32): pointer {.importc: "TreeNode_GetItem", dynlib: dllname.}
proc TreeNode_SetItem*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "TreeNode_SetItem", dynlib: dllname.}
proc TreeNode_StaticClassType*(): TClass {.importc: "TreeNode_StaticClassType", dynlib: dllname.}
# ----------------- TPageControl ----------------------
proc PageControl_Create*(AOwner: pointer): pointer {.importc: "PageControl_Create", dynlib: dllname.}
proc PageControl_Free*(AObj: pointer) {.importc: "PageControl_Free", dynlib: dllname.}
proc PageControl_SelectNextPage*(AObj: pointer, GoForward: bool, CheckTabVisible: bool) {.importc: "PageControl_SelectNextPage", dynlib: dllname.}
proc PageControl_TabRect*(AObj: pointer, Index: int32, Result: var TRect) {.importc: "PageControl_TabRect", dynlib: dllname.}
proc PageControl_CanFocus*(AObj: pointer): bool {.importc: "PageControl_CanFocus", dynlib: dllname.}
proc PageControl_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "PageControl_ContainsControl", dynlib: dllname.}
proc PageControl_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "PageControl_ControlAtPos", dynlib: dllname.}
proc PageControl_DisableAlign*(AObj: pointer) {.importc: "PageControl_DisableAlign", dynlib: dllname.}
proc PageControl_EnableAlign*(AObj: pointer) {.importc: "PageControl_EnableAlign", dynlib: dllname.}
proc PageControl_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "PageControl_FindChildControl", dynlib: dllname.}
proc PageControl_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "PageControl_FlipChildren", dynlib: dllname.}
proc PageControl_Focused*(AObj: pointer): bool {.importc: "PageControl_Focused", dynlib: dllname.}
proc PageControl_HandleAllocated*(AObj: pointer): bool {.importc: "PageControl_HandleAllocated", dynlib: dllname.}
proc PageControl_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "PageControl_InsertControl", dynlib: dllname.}
proc PageControl_Invalidate*(AObj: pointer) {.importc: "PageControl_Invalidate", dynlib: dllname.}
proc PageControl_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "PageControl_PaintTo", dynlib: dllname.}
proc PageControl_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "PageControl_RemoveControl", dynlib: dllname.}
proc PageControl_Realign*(AObj: pointer) {.importc: "PageControl_Realign", dynlib: dllname.}
proc PageControl_Repaint*(AObj: pointer) {.importc: "PageControl_Repaint", dynlib: dllname.}
proc PageControl_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "PageControl_ScaleBy", dynlib: dllname.}
proc PageControl_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "PageControl_ScrollBy", dynlib: dllname.}
proc PageControl_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "PageControl_SetBounds", dynlib: dllname.}
proc PageControl_SetFocus*(AObj: pointer) {.importc: "PageControl_SetFocus", dynlib: dllname.}
proc PageControl_Update*(AObj: pointer) {.importc: "PageControl_Update", dynlib: dllname.}
proc PageControl_BringToFront*(AObj: pointer) {.importc: "PageControl_BringToFront", dynlib: dllname.}
proc PageControl_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "PageControl_ClientToScreen", dynlib: dllname.}
proc PageControl_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "PageControl_ClientToParent", dynlib: dllname.}
proc PageControl_Dragging*(AObj: pointer): bool {.importc: "PageControl_Dragging", dynlib: dllname.}
proc PageControl_HasParent*(AObj: pointer): bool {.importc: "PageControl_HasParent", dynlib: dllname.}
proc PageControl_Hide*(AObj: pointer) {.importc: "PageControl_Hide", dynlib: dllname.}
proc PageControl_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "PageControl_Perform", dynlib: dllname.}
proc PageControl_Refresh*(AObj: pointer) {.importc: "PageControl_Refresh", dynlib: dllname.}
proc PageControl_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "PageControl_ScreenToClient", dynlib: dllname.}
proc PageControl_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "PageControl_ParentToClient", dynlib: dllname.}
proc PageControl_SendToBack*(AObj: pointer) {.importc: "PageControl_SendToBack", dynlib: dllname.}
proc PageControl_Show*(AObj: pointer) {.importc: "PageControl_Show", dynlib: dllname.}
proc PageControl_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "PageControl_GetTextBuf", dynlib: dllname.}
proc PageControl_GetTextLen*(AObj: pointer): int32 {.importc: "PageControl_GetTextLen", dynlib: dllname.}
proc PageControl_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "PageControl_SetTextBuf", dynlib: dllname.}
proc PageControl_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "PageControl_FindComponent", dynlib: dllname.}
proc PageControl_GetNamePath*(AObj: pointer): cstring {.importc: "PageControl_GetNamePath", dynlib: dllname.}
proc PageControl_Assign*(AObj: pointer, Source: pointer) {.importc: "PageControl_Assign", dynlib: dllname.}
proc PageControl_ClassType*(AObj: pointer): TClass {.importc: "PageControl_ClassType", dynlib: dllname.}
proc PageControl_ClassName*(AObj: pointer): cstring {.importc: "PageControl_ClassName", dynlib: dllname.}
proc PageControl_InstanceSize*(AObj: pointer): int32 {.importc: "PageControl_InstanceSize", dynlib: dllname.}
proc PageControl_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "PageControl_InheritsFrom", dynlib: dllname.}
proc PageControl_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "PageControl_Equals", dynlib: dllname.}
proc PageControl_GetHashCode*(AObj: pointer): int32 {.importc: "PageControl_GetHashCode", dynlib: dllname.}
proc PageControl_ToString*(AObj: pointer): cstring {.importc: "PageControl_ToString", dynlib: dllname.}
proc PageControl_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "PageControl_AnchorToNeighbour", dynlib: dllname.}
proc PageControl_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "PageControl_AnchorParallel", dynlib: dllname.}
proc PageControl_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "PageControl_AnchorHorizontalCenterTo", dynlib: dllname.}
proc PageControl_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "PageControl_AnchorVerticalCenterTo", dynlib: dllname.}
proc PageControl_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "PageControl_AnchorSame", dynlib: dllname.}
proc PageControl_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "PageControl_AnchorAsAlign", dynlib: dllname.}
proc PageControl_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "PageControl_AnchorClient", dynlib: dllname.}
proc PageControl_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_ScaleDesignToForm", dynlib: dllname.}
proc PageControl_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_ScaleFormToDesign", dynlib: dllname.}
proc PageControl_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_Scale96ToForm", dynlib: dllname.}
proc PageControl_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_ScaleFormTo96", dynlib: dllname.}
proc PageControl_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_Scale96ToFont", dynlib: dllname.}
proc PageControl_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_ScaleFontTo96", dynlib: dllname.}
proc PageControl_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_ScaleScreenToFont", dynlib: dllname.}
proc PageControl_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_ScaleFontToScreen", dynlib: dllname.}
proc PageControl_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_Scale96ToScreen", dynlib: dllname.}
proc PageControl_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "PageControl_ScaleScreenTo96", dynlib: dllname.}
proc PageControl_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "PageControl_AutoAdjustLayout", dynlib: dllname.}
proc PageControl_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "PageControl_FixDesignFontsPPI", dynlib: dllname.}
proc PageControl_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "PageControl_ScaleFontsPPI", dynlib: dllname.}
proc PageControl_GetOptions*(AObj: pointer): TCTabControlOptions {.importc: "PageControl_GetOptions", dynlib: dllname.}
proc PageControl_SetOptions*(AObj: pointer, AValue: TCTabControlOptions) {.importc: "PageControl_SetOptions", dynlib: dllname.}
proc PageControl_GetActivePageIndex*(AObj: pointer): int32 {.importc: "PageControl_GetActivePageIndex", dynlib: dllname.}
proc PageControl_SetActivePageIndex*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetActivePageIndex", dynlib: dllname.}
proc PageControl_GetPageCount*(AObj: pointer): int32 {.importc: "PageControl_GetPageCount", dynlib: dllname.}
proc PageControl_GetAlign*(AObj: pointer): TAlign {.importc: "PageControl_GetAlign", dynlib: dllname.}
proc PageControl_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "PageControl_SetAlign", dynlib: dllname.}
proc PageControl_GetAnchors*(AObj: pointer): TAnchors {.importc: "PageControl_GetAnchors", dynlib: dllname.}
proc PageControl_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "PageControl_SetAnchors", dynlib: dllname.}
proc PageControl_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "PageControl_GetBiDiMode", dynlib: dllname.}
proc PageControl_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "PageControl_SetBiDiMode", dynlib: dllname.}
proc PageControl_GetConstraints*(AObj: pointer): pointer {.importc: "PageControl_GetConstraints", dynlib: dllname.}
proc PageControl_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetConstraints", dynlib: dllname.}
proc PageControl_GetDockSite*(AObj: pointer): bool {.importc: "PageControl_GetDockSite", dynlib: dllname.}
proc PageControl_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetDockSite", dynlib: dllname.}
proc PageControl_GetDoubleBuffered*(AObj: pointer): bool {.importc: "PageControl_GetDoubleBuffered", dynlib: dllname.}
proc PageControl_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetDoubleBuffered", dynlib: dllname.}
proc PageControl_GetDragCursor*(AObj: pointer): TCursor {.importc: "PageControl_GetDragCursor", dynlib: dllname.}
proc PageControl_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "PageControl_SetDragCursor", dynlib: dllname.}
proc PageControl_GetDragKind*(AObj: pointer): TDragKind {.importc: "PageControl_GetDragKind", dynlib: dllname.}
proc PageControl_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "PageControl_SetDragKind", dynlib: dllname.}
proc PageControl_GetDragMode*(AObj: pointer): TDragMode {.importc: "PageControl_GetDragMode", dynlib: dllname.}
proc PageControl_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "PageControl_SetDragMode", dynlib: dllname.}
proc PageControl_GetEnabled*(AObj: pointer): bool {.importc: "PageControl_GetEnabled", dynlib: dllname.}
proc PageControl_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetEnabled", dynlib: dllname.}
proc PageControl_GetFont*(AObj: pointer): pointer {.importc: "PageControl_GetFont", dynlib: dllname.}
proc PageControl_SetFont*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetFont", dynlib: dllname.}
proc PageControl_GetImages*(AObj: pointer): pointer {.importc: "PageControl_GetImages", dynlib: dllname.}
proc PageControl_SetImages*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetImages", dynlib: dllname.}
proc PageControl_GetMultiLine*(AObj: pointer): bool {.importc: "PageControl_GetMultiLine", dynlib: dllname.}
proc PageControl_SetMultiLine*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetMultiLine", dynlib: dllname.}
proc PageControl_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "PageControl_GetParentDoubleBuffered", dynlib: dllname.}
proc PageControl_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetParentDoubleBuffered", dynlib: dllname.}
proc PageControl_GetParentFont*(AObj: pointer): bool {.importc: "PageControl_GetParentFont", dynlib: dllname.}
proc PageControl_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetParentFont", dynlib: dllname.}
proc PageControl_GetParentShowHint*(AObj: pointer): bool {.importc: "PageControl_GetParentShowHint", dynlib: dllname.}
proc PageControl_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetParentShowHint", dynlib: dllname.}
proc PageControl_GetPopupMenu*(AObj: pointer): pointer {.importc: "PageControl_GetPopupMenu", dynlib: dllname.}
proc PageControl_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetPopupMenu", dynlib: dllname.}
proc PageControl_GetShowHint*(AObj: pointer): bool {.importc: "PageControl_GetShowHint", dynlib: dllname.}
proc PageControl_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetShowHint", dynlib: dllname.}
proc PageControl_GetTabHeight*(AObj: pointer): int16 {.importc: "PageControl_GetTabHeight", dynlib: dllname.}
proc PageControl_SetTabHeight*(AObj: pointer, AValue: int16) {.importc: "PageControl_SetTabHeight", dynlib: dllname.}
proc PageControl_GetTabIndex*(AObj: pointer): int32 {.importc: "PageControl_GetTabIndex", dynlib: dllname.}
proc PageControl_SetTabIndex*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetTabIndex", dynlib: dllname.}
proc PageControl_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "PageControl_GetTabOrder", dynlib: dllname.}
proc PageControl_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "PageControl_SetTabOrder", dynlib: dllname.}
proc PageControl_GetTabPosition*(AObj: pointer): TTabPosition {.importc: "PageControl_GetTabPosition", dynlib: dllname.}
proc PageControl_SetTabPosition*(AObj: pointer, AValue: TTabPosition) {.importc: "PageControl_SetTabPosition", dynlib: dllname.}
proc PageControl_GetTabStop*(AObj: pointer): bool {.importc: "PageControl_GetTabStop", dynlib: dllname.}
proc PageControl_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetTabStop", dynlib: dllname.}
proc PageControl_GetTabWidth*(AObj: pointer): int16 {.importc: "PageControl_GetTabWidth", dynlib: dllname.}
proc PageControl_SetTabWidth*(AObj: pointer, AValue: int16) {.importc: "PageControl_SetTabWidth", dynlib: dllname.}
proc PageControl_GetVisible*(AObj: pointer): bool {.importc: "PageControl_GetVisible", dynlib: dllname.}
proc PageControl_SetVisible*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetVisible", dynlib: dllname.}
proc PageControl_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageControl_SetOnChange", dynlib: dllname.}
proc PageControl_SetOnChanging*(AObj: pointer, AEventId: TTabChangingEvent) {.importc: "PageControl_SetOnChanging", dynlib: dllname.}
proc PageControl_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "PageControl_SetOnContextPopup", dynlib: dllname.}
proc PageControl_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "PageControl_SetOnDockDrop", dynlib: dllname.}
proc PageControl_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "PageControl_SetOnDragDrop", dynlib: dllname.}
proc PageControl_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "PageControl_SetOnDragOver", dynlib: dllname.}
proc PageControl_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "PageControl_SetOnEndDock", dynlib: dllname.}
proc PageControl_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "PageControl_SetOnEndDrag", dynlib: dllname.}
proc PageControl_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageControl_SetOnEnter", dynlib: dllname.}
proc PageControl_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageControl_SetOnExit", dynlib: dllname.}
proc PageControl_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "PageControl_SetOnGetSiteInfo", dynlib: dllname.}
proc PageControl_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "PageControl_SetOnMouseDown", dynlib: dllname.}
proc PageControl_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageControl_SetOnMouseEnter", dynlib: dllname.}
proc PageControl_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageControl_SetOnMouseLeave", dynlib: dllname.}
proc PageControl_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "PageControl_SetOnMouseMove", dynlib: dllname.}
proc PageControl_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "PageControl_SetOnMouseUp", dynlib: dllname.}
proc PageControl_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageControl_SetOnResize", dynlib: dllname.}
proc PageControl_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "PageControl_SetOnStartDock", dynlib: dllname.}
proc PageControl_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "PageControl_SetOnUnDock", dynlib: dllname.}
proc PageControl_GetDockClientCount*(AObj: pointer): int32 {.importc: "PageControl_GetDockClientCount", dynlib: dllname.}
proc PageControl_GetMouseInClient*(AObj: pointer): bool {.importc: "PageControl_GetMouseInClient", dynlib: dllname.}
proc PageControl_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "PageControl_GetVisibleDockClientCount", dynlib: dllname.}
proc PageControl_GetBrush*(AObj: pointer): pointer {.importc: "PageControl_GetBrush", dynlib: dllname.}
proc PageControl_GetControlCount*(AObj: pointer): int32 {.importc: "PageControl_GetControlCount", dynlib: dllname.}
proc PageControl_GetHandle*(AObj: pointer): HWND {.importc: "PageControl_GetHandle", dynlib: dllname.}
proc PageControl_GetParentWindow*(AObj: pointer): HWND {.importc: "PageControl_GetParentWindow", dynlib: dllname.}
proc PageControl_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "PageControl_SetParentWindow", dynlib: dllname.}
proc PageControl_GetShowing*(AObj: pointer): bool {.importc: "PageControl_GetShowing", dynlib: dllname.}
proc PageControl_GetUseDockManager*(AObj: pointer): bool {.importc: "PageControl_GetUseDockManager", dynlib: dllname.}
proc PageControl_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "PageControl_SetUseDockManager", dynlib: dllname.}
proc PageControl_GetAction*(AObj: pointer): pointer {.importc: "PageControl_GetAction", dynlib: dllname.}
proc PageControl_SetAction*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetAction", dynlib: dllname.}
proc PageControl_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "PageControl_GetBoundsRect", dynlib: dllname.}
proc PageControl_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "PageControl_SetBoundsRect", dynlib: dllname.}
proc PageControl_GetClientHeight*(AObj: pointer): int32 {.importc: "PageControl_GetClientHeight", dynlib: dllname.}
proc PageControl_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetClientHeight", dynlib: dllname.}
proc PageControl_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "PageControl_GetClientOrigin", dynlib: dllname.}
proc PageControl_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "PageControl_GetClientRect", dynlib: dllname.}
proc PageControl_GetClientWidth*(AObj: pointer): int32 {.importc: "PageControl_GetClientWidth", dynlib: dllname.}
proc PageControl_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetClientWidth", dynlib: dllname.}
proc PageControl_GetControlState*(AObj: pointer): TControlState {.importc: "PageControl_GetControlState", dynlib: dllname.}
proc PageControl_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "PageControl_SetControlState", dynlib: dllname.}
proc PageControl_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "PageControl_GetControlStyle", dynlib: dllname.}
proc PageControl_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "PageControl_SetControlStyle", dynlib: dllname.}
proc PageControl_GetFloating*(AObj: pointer): bool {.importc: "PageControl_GetFloating", dynlib: dllname.}
proc PageControl_GetParent*(AObj: pointer): pointer {.importc: "PageControl_GetParent", dynlib: dllname.}
proc PageControl_SetParent*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetParent", dynlib: dllname.}
proc PageControl_GetLeft*(AObj: pointer): int32 {.importc: "PageControl_GetLeft", dynlib: dllname.}
proc PageControl_SetLeft*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetLeft", dynlib: dllname.}
proc PageControl_GetTop*(AObj: pointer): int32 {.importc: "PageControl_GetTop", dynlib: dllname.}
proc PageControl_SetTop*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetTop", dynlib: dllname.}
proc PageControl_GetWidth*(AObj: pointer): int32 {.importc: "PageControl_GetWidth", dynlib: dllname.}
proc PageControl_SetWidth*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetWidth", dynlib: dllname.}
proc PageControl_GetHeight*(AObj: pointer): int32 {.importc: "PageControl_GetHeight", dynlib: dllname.}
proc PageControl_SetHeight*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetHeight", dynlib: dllname.}
proc PageControl_GetCursor*(AObj: pointer): TCursor {.importc: "PageControl_GetCursor", dynlib: dllname.}
proc PageControl_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "PageControl_SetCursor", dynlib: dllname.}
proc PageControl_GetHint*(AObj: pointer): cstring {.importc: "PageControl_GetHint", dynlib: dllname.}
proc PageControl_SetHint*(AObj: pointer, AValue: cstring) {.importc: "PageControl_SetHint", dynlib: dllname.}
proc PageControl_GetComponentCount*(AObj: pointer): int32 {.importc: "PageControl_GetComponentCount", dynlib: dllname.}
proc PageControl_GetComponentIndex*(AObj: pointer): int32 {.importc: "PageControl_GetComponentIndex", dynlib: dllname.}
proc PageControl_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "PageControl_SetComponentIndex", dynlib: dllname.}
proc PageControl_GetOwner*(AObj: pointer): pointer {.importc: "PageControl_GetOwner", dynlib: dllname.}
proc PageControl_GetName*(AObj: pointer): cstring {.importc: "PageControl_GetName", dynlib: dllname.}
proc PageControl_SetName*(AObj: pointer, AValue: cstring) {.importc: "PageControl_SetName", dynlib: dllname.}
proc PageControl_GetTag*(AObj: pointer): int {.importc: "PageControl_GetTag", dynlib: dllname.}
proc PageControl_SetTag*(AObj: pointer, AValue: int) {.importc: "PageControl_SetTag", dynlib: dllname.}
proc PageControl_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "PageControl_GetAnchorSideLeft", dynlib: dllname.}
proc PageControl_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetAnchorSideLeft", dynlib: dllname.}
proc PageControl_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "PageControl_GetAnchorSideTop", dynlib: dllname.}
proc PageControl_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetAnchorSideTop", dynlib: dllname.}
proc PageControl_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "PageControl_GetAnchorSideRight", dynlib: dllname.}
proc PageControl_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetAnchorSideRight", dynlib: dllname.}
proc PageControl_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "PageControl_GetAnchorSideBottom", dynlib: dllname.}
proc PageControl_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetAnchorSideBottom", dynlib: dllname.}
proc PageControl_GetChildSizing*(AObj: pointer): pointer {.importc: "PageControl_GetChildSizing", dynlib: dllname.}
proc PageControl_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetChildSizing", dynlib: dllname.}
proc PageControl_GetBorderSpacing*(AObj: pointer): pointer {.importc: "PageControl_GetBorderSpacing", dynlib: dllname.}
proc PageControl_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "PageControl_SetBorderSpacing", dynlib: dllname.}
proc PageControl_GetPages*(AObj: pointer, Index: int32): pointer {.importc: "PageControl_GetPages", dynlib: dllname.}
proc PageControl_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "PageControl_GetDockClients", dynlib: dllname.}
proc PageControl_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "PageControl_GetControls", dynlib: dllname.}
proc PageControl_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "PageControl_GetComponents", dynlib: dllname.}
proc PageControl_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "PageControl_GetAnchorSide", dynlib: dllname.}
proc PageControl_StaticClassType*(): TClass {.importc: "PageControl_StaticClassType", dynlib: dllname.}
# ----------------- TTabSheet ----------------------
proc TabSheet_Create*(AOwner: pointer): pointer {.importc: "TabSheet_Create", dynlib: dllname.}
proc TabSheet_Free*(AObj: pointer) {.importc: "TabSheet_Free", dynlib: dllname.}
proc TabSheet_CanFocus*(AObj: pointer): bool {.importc: "TabSheet_CanFocus", dynlib: dllname.}
proc TabSheet_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "TabSheet_ContainsControl", dynlib: dllname.}
proc TabSheet_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "TabSheet_ControlAtPos", dynlib: dllname.}
proc TabSheet_DisableAlign*(AObj: pointer) {.importc: "TabSheet_DisableAlign", dynlib: dllname.}
proc TabSheet_EnableAlign*(AObj: pointer) {.importc: "TabSheet_EnableAlign", dynlib: dllname.}
proc TabSheet_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "TabSheet_FindChildControl", dynlib: dllname.}
proc TabSheet_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "TabSheet_FlipChildren", dynlib: dllname.}
proc TabSheet_Focused*(AObj: pointer): bool {.importc: "TabSheet_Focused", dynlib: dllname.}
proc TabSheet_HandleAllocated*(AObj: pointer): bool {.importc: "TabSheet_HandleAllocated", dynlib: dllname.}
proc TabSheet_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "TabSheet_InsertControl", dynlib: dllname.}
proc TabSheet_Invalidate*(AObj: pointer) {.importc: "TabSheet_Invalidate", dynlib: dllname.}
proc TabSheet_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "TabSheet_PaintTo", dynlib: dllname.}
proc TabSheet_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "TabSheet_RemoveControl", dynlib: dllname.}
proc TabSheet_Realign*(AObj: pointer) {.importc: "TabSheet_Realign", dynlib: dllname.}
proc TabSheet_Repaint*(AObj: pointer) {.importc: "TabSheet_Repaint", dynlib: dllname.}
proc TabSheet_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "TabSheet_ScaleBy", dynlib: dllname.}
proc TabSheet_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "TabSheet_ScrollBy", dynlib: dllname.}
proc TabSheet_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "TabSheet_SetBounds", dynlib: dllname.}
proc TabSheet_SetFocus*(AObj: pointer) {.importc: "TabSheet_SetFocus", dynlib: dllname.}
proc TabSheet_Update*(AObj: pointer) {.importc: "TabSheet_Update", dynlib: dllname.}
proc TabSheet_BringToFront*(AObj: pointer) {.importc: "TabSheet_BringToFront", dynlib: dllname.}
proc TabSheet_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "TabSheet_ClientToScreen", dynlib: dllname.}
proc TabSheet_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "TabSheet_ClientToParent", dynlib: dllname.}
proc TabSheet_Dragging*(AObj: pointer): bool {.importc: "TabSheet_Dragging", dynlib: dllname.}
proc TabSheet_HasParent*(AObj: pointer): bool {.importc: "TabSheet_HasParent", dynlib: dllname.}
proc TabSheet_Hide*(AObj: pointer) {.importc: "TabSheet_Hide", dynlib: dllname.}
proc TabSheet_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "TabSheet_Perform", dynlib: dllname.}
proc TabSheet_Refresh*(AObj: pointer) {.importc: "TabSheet_Refresh", dynlib: dllname.}
proc TabSheet_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "TabSheet_ScreenToClient", dynlib: dllname.}
proc TabSheet_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "TabSheet_ParentToClient", dynlib: dllname.}
proc TabSheet_SendToBack*(AObj: pointer) {.importc: "TabSheet_SendToBack", dynlib: dllname.}
proc TabSheet_Show*(AObj: pointer) {.importc: "TabSheet_Show", dynlib: dllname.}
proc TabSheet_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "TabSheet_GetTextBuf", dynlib: dllname.}
proc TabSheet_GetTextLen*(AObj: pointer): int32 {.importc: "TabSheet_GetTextLen", dynlib: dllname.}
proc TabSheet_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "TabSheet_SetTextBuf", dynlib: dllname.}
proc TabSheet_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "TabSheet_FindComponent", dynlib: dllname.}
proc TabSheet_GetNamePath*(AObj: pointer): cstring {.importc: "TabSheet_GetNamePath", dynlib: dllname.}
proc TabSheet_Assign*(AObj: pointer, Source: pointer) {.importc: "TabSheet_Assign", dynlib: dllname.}
proc TabSheet_ClassType*(AObj: pointer): TClass {.importc: "TabSheet_ClassType", dynlib: dllname.}
proc TabSheet_ClassName*(AObj: pointer): cstring {.importc: "TabSheet_ClassName", dynlib: dllname.}
proc TabSheet_InstanceSize*(AObj: pointer): int32 {.importc: "TabSheet_InstanceSize", dynlib: dllname.}
proc TabSheet_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TabSheet_InheritsFrom", dynlib: dllname.}
proc TabSheet_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TabSheet_Equals", dynlib: dllname.}
proc TabSheet_GetHashCode*(AObj: pointer): int32 {.importc: "TabSheet_GetHashCode", dynlib: dllname.}
proc TabSheet_ToString*(AObj: pointer): cstring {.importc: "TabSheet_ToString", dynlib: dllname.}
proc TabSheet_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "TabSheet_AnchorToNeighbour", dynlib: dllname.}
proc TabSheet_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "TabSheet_AnchorParallel", dynlib: dllname.}
proc TabSheet_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "TabSheet_AnchorHorizontalCenterTo", dynlib: dllname.}
proc TabSheet_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "TabSheet_AnchorVerticalCenterTo", dynlib: dllname.}
proc TabSheet_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "TabSheet_AnchorSame", dynlib: dllname.}
proc TabSheet_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "TabSheet_AnchorAsAlign", dynlib: dllname.}
proc TabSheet_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "TabSheet_AnchorClient", dynlib: dllname.}
proc TabSheet_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_ScaleDesignToForm", dynlib: dllname.}
proc TabSheet_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_ScaleFormToDesign", dynlib: dllname.}
proc TabSheet_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_Scale96ToForm", dynlib: dllname.}
proc TabSheet_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_ScaleFormTo96", dynlib: dllname.}
proc TabSheet_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_Scale96ToFont", dynlib: dllname.}
proc TabSheet_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_ScaleFontTo96", dynlib: dllname.}
proc TabSheet_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_ScaleScreenToFont", dynlib: dllname.}
proc TabSheet_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_ScaleFontToScreen", dynlib: dllname.}
proc TabSheet_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_Scale96ToScreen", dynlib: dllname.}
proc TabSheet_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "TabSheet_ScaleScreenTo96", dynlib: dllname.}
proc TabSheet_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "TabSheet_AutoAdjustLayout", dynlib: dllname.}
proc TabSheet_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "TabSheet_FixDesignFontsPPI", dynlib: dllname.}
proc TabSheet_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "TabSheet_ScaleFontsPPI", dynlib: dllname.}
proc TabSheet_GetPageControl*(AObj: pointer): pointer {.importc: "TabSheet_GetPageControl", dynlib: dllname.}
proc TabSheet_SetPageControl*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetPageControl", dynlib: dllname.}
proc TabSheet_GetTabIndex*(AObj: pointer): int32 {.importc: "TabSheet_GetTabIndex", dynlib: dllname.}
proc TabSheet_GetBorderWidth*(AObj: pointer): int32 {.importc: "TabSheet_GetBorderWidth", dynlib: dllname.}
proc TabSheet_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetBorderWidth", dynlib: dllname.}
proc TabSheet_GetCaption*(AObj: pointer): cstring {.importc: "TabSheet_GetCaption", dynlib: dllname.}
proc TabSheet_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "TabSheet_SetCaption", dynlib: dllname.}
proc TabSheet_GetDoubleBuffered*(AObj: pointer): bool {.importc: "TabSheet_GetDoubleBuffered", dynlib: dllname.}
proc TabSheet_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetDoubleBuffered", dynlib: dllname.}
proc TabSheet_GetEnabled*(AObj: pointer): bool {.importc: "TabSheet_GetEnabled", dynlib: dllname.}
proc TabSheet_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetEnabled", dynlib: dllname.}
proc TabSheet_GetFont*(AObj: pointer): pointer {.importc: "TabSheet_GetFont", dynlib: dllname.}
proc TabSheet_SetFont*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetFont", dynlib: dllname.}
proc TabSheet_GetHeight*(AObj: pointer): int32 {.importc: "TabSheet_GetHeight", dynlib: dllname.}
proc TabSheet_SetHeight*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetHeight", dynlib: dllname.}
proc TabSheet_GetImageIndex*(AObj: pointer): int32 {.importc: "TabSheet_GetImageIndex", dynlib: dllname.}
proc TabSheet_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetImageIndex", dynlib: dllname.}
proc TabSheet_GetLeft*(AObj: pointer): int32 {.importc: "TabSheet_GetLeft", dynlib: dllname.}
proc TabSheet_SetLeft*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetLeft", dynlib: dllname.}
proc TabSheet_GetConstraints*(AObj: pointer): pointer {.importc: "TabSheet_GetConstraints", dynlib: dllname.}
proc TabSheet_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetConstraints", dynlib: dllname.}
proc TabSheet_GetPageIndex*(AObj: pointer): int32 {.importc: "TabSheet_GetPageIndex", dynlib: dllname.}
proc TabSheet_SetPageIndex*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetPageIndex", dynlib: dllname.}
proc TabSheet_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "TabSheet_GetParentDoubleBuffered", dynlib: dllname.}
proc TabSheet_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetParentDoubleBuffered", dynlib: dllname.}
proc TabSheet_GetParentFont*(AObj: pointer): bool {.importc: "TabSheet_GetParentFont", dynlib: dllname.}
proc TabSheet_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetParentFont", dynlib: dllname.}
proc TabSheet_GetParentShowHint*(AObj: pointer): bool {.importc: "TabSheet_GetParentShowHint", dynlib: dllname.}
proc TabSheet_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetParentShowHint", dynlib: dllname.}
proc TabSheet_GetPopupMenu*(AObj: pointer): pointer {.importc: "TabSheet_GetPopupMenu", dynlib: dllname.}
proc TabSheet_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetPopupMenu", dynlib: dllname.}
proc TabSheet_GetShowHint*(AObj: pointer): bool {.importc: "TabSheet_GetShowHint", dynlib: dllname.}
proc TabSheet_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetShowHint", dynlib: dllname.}
proc TabSheet_GetTabVisible*(AObj: pointer): bool {.importc: "TabSheet_GetTabVisible", dynlib: dllname.}
proc TabSheet_SetTabVisible*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetTabVisible", dynlib: dllname.}
proc TabSheet_GetTop*(AObj: pointer): int32 {.importc: "TabSheet_GetTop", dynlib: dllname.}
proc TabSheet_SetTop*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetTop", dynlib: dllname.}
proc TabSheet_GetVisible*(AObj: pointer): bool {.importc: "TabSheet_GetVisible", dynlib: dllname.}
proc TabSheet_SetVisible*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetVisible", dynlib: dllname.}
proc TabSheet_GetWidth*(AObj: pointer): int32 {.importc: "TabSheet_GetWidth", dynlib: dllname.}
proc TabSheet_SetWidth*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetWidth", dynlib: dllname.}
proc TabSheet_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "TabSheet_SetOnContextPopup", dynlib: dllname.}
proc TabSheet_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "TabSheet_SetOnDragDrop", dynlib: dllname.}
proc TabSheet_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "TabSheet_SetOnDragOver", dynlib: dllname.}
proc TabSheet_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "TabSheet_SetOnEndDrag", dynlib: dllname.}
proc TabSheet_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TabSheet_SetOnEnter", dynlib: dllname.}
proc TabSheet_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TabSheet_SetOnExit", dynlib: dllname.}
proc TabSheet_SetOnHide*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TabSheet_SetOnHide", dynlib: dllname.}
proc TabSheet_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "TabSheet_SetOnMouseDown", dynlib: dllname.}
proc TabSheet_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TabSheet_SetOnMouseEnter", dynlib: dllname.}
proc TabSheet_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TabSheet_SetOnMouseLeave", dynlib: dllname.}
proc TabSheet_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "TabSheet_SetOnMouseMove", dynlib: dllname.}
proc TabSheet_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "TabSheet_SetOnMouseUp", dynlib: dllname.}
proc TabSheet_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TabSheet_SetOnResize", dynlib: dllname.}
proc TabSheet_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "TabSheet_SetOnShow", dynlib: dllname.}
proc TabSheet_GetDockClientCount*(AObj: pointer): int32 {.importc: "TabSheet_GetDockClientCount", dynlib: dllname.}
proc TabSheet_GetDockSite*(AObj: pointer): bool {.importc: "TabSheet_GetDockSite", dynlib: dllname.}
proc TabSheet_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetDockSite", dynlib: dllname.}
proc TabSheet_GetMouseInClient*(AObj: pointer): bool {.importc: "TabSheet_GetMouseInClient", dynlib: dllname.}
proc TabSheet_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "TabSheet_GetVisibleDockClientCount", dynlib: dllname.}
proc TabSheet_GetBrush*(AObj: pointer): pointer {.importc: "TabSheet_GetBrush", dynlib: dllname.}
proc TabSheet_GetControlCount*(AObj: pointer): int32 {.importc: "TabSheet_GetControlCount", dynlib: dllname.}
proc TabSheet_GetHandle*(AObj: pointer): HWND {.importc: "TabSheet_GetHandle", dynlib: dllname.}
proc TabSheet_GetParentWindow*(AObj: pointer): HWND {.importc: "TabSheet_GetParentWindow", dynlib: dllname.}
proc TabSheet_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "TabSheet_SetParentWindow", dynlib: dllname.}
proc TabSheet_GetShowing*(AObj: pointer): bool {.importc: "TabSheet_GetShowing", dynlib: dllname.}
proc TabSheet_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "TabSheet_GetTabOrder", dynlib: dllname.}
proc TabSheet_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "TabSheet_SetTabOrder", dynlib: dllname.}
proc TabSheet_GetTabStop*(AObj: pointer): bool {.importc: "TabSheet_GetTabStop", dynlib: dllname.}
proc TabSheet_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetTabStop", dynlib: dllname.}
proc TabSheet_GetUseDockManager*(AObj: pointer): bool {.importc: "TabSheet_GetUseDockManager", dynlib: dllname.}
proc TabSheet_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "TabSheet_SetUseDockManager", dynlib: dllname.}
proc TabSheet_GetAction*(AObj: pointer): pointer {.importc: "TabSheet_GetAction", dynlib: dllname.}
proc TabSheet_SetAction*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetAction", dynlib: dllname.}
proc TabSheet_GetAlign*(AObj: pointer): TAlign {.importc: "TabSheet_GetAlign", dynlib: dllname.}
proc TabSheet_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "TabSheet_SetAlign", dynlib: dllname.}
proc TabSheet_GetAnchors*(AObj: pointer): TAnchors {.importc: "TabSheet_GetAnchors", dynlib: dllname.}
proc TabSheet_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "TabSheet_SetAnchors", dynlib: dllname.}
proc TabSheet_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "TabSheet_GetBiDiMode", dynlib: dllname.}
proc TabSheet_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "TabSheet_SetBiDiMode", dynlib: dllname.}
proc TabSheet_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "TabSheet_GetBoundsRect", dynlib: dllname.}
proc TabSheet_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "TabSheet_SetBoundsRect", dynlib: dllname.}
proc TabSheet_GetClientHeight*(AObj: pointer): int32 {.importc: "TabSheet_GetClientHeight", dynlib: dllname.}
proc TabSheet_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetClientHeight", dynlib: dllname.}
proc TabSheet_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "TabSheet_GetClientOrigin", dynlib: dllname.}
proc TabSheet_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "TabSheet_GetClientRect", dynlib: dllname.}
proc TabSheet_GetClientWidth*(AObj: pointer): int32 {.importc: "TabSheet_GetClientWidth", dynlib: dllname.}
proc TabSheet_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetClientWidth", dynlib: dllname.}
proc TabSheet_GetControlState*(AObj: pointer): TControlState {.importc: "TabSheet_GetControlState", dynlib: dllname.}
proc TabSheet_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "TabSheet_SetControlState", dynlib: dllname.}
proc TabSheet_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "TabSheet_GetControlStyle", dynlib: dllname.}
proc TabSheet_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "TabSheet_SetControlStyle", dynlib: dllname.}
proc TabSheet_GetFloating*(AObj: pointer): bool {.importc: "TabSheet_GetFloating", dynlib: dllname.}
proc TabSheet_GetParent*(AObj: pointer): pointer {.importc: "TabSheet_GetParent", dynlib: dllname.}
proc TabSheet_SetParent*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetParent", dynlib: dllname.}
proc TabSheet_GetCursor*(AObj: pointer): TCursor {.importc: "TabSheet_GetCursor", dynlib: dllname.}
proc TabSheet_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "TabSheet_SetCursor", dynlib: dllname.}
proc TabSheet_GetHint*(AObj: pointer): cstring {.importc: "TabSheet_GetHint", dynlib: dllname.}
proc TabSheet_SetHint*(AObj: pointer, AValue: cstring) {.importc: "TabSheet_SetHint", dynlib: dllname.}
proc TabSheet_GetComponentCount*(AObj: pointer): int32 {.importc: "TabSheet_GetComponentCount", dynlib: dllname.}
proc TabSheet_GetComponentIndex*(AObj: pointer): int32 {.importc: "TabSheet_GetComponentIndex", dynlib: dllname.}
proc TabSheet_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "TabSheet_SetComponentIndex", dynlib: dllname.}
proc TabSheet_GetOwner*(AObj: pointer): pointer {.importc: "TabSheet_GetOwner", dynlib: dllname.}
proc TabSheet_GetName*(AObj: pointer): cstring {.importc: "TabSheet_GetName", dynlib: dllname.}
proc TabSheet_SetName*(AObj: pointer, AValue: cstring) {.importc: "TabSheet_SetName", dynlib: dllname.}
proc TabSheet_GetTag*(AObj: pointer): int {.importc: "TabSheet_GetTag", dynlib: dllname.}
proc TabSheet_SetTag*(AObj: pointer, AValue: int) {.importc: "TabSheet_SetTag", dynlib: dllname.}
proc TabSheet_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "TabSheet_GetAnchorSideLeft", dynlib: dllname.}
proc TabSheet_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetAnchorSideLeft", dynlib: dllname.}
proc TabSheet_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "TabSheet_GetAnchorSideTop", dynlib: dllname.}
proc TabSheet_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetAnchorSideTop", dynlib: dllname.}
proc TabSheet_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "TabSheet_GetAnchorSideRight", dynlib: dllname.}
proc TabSheet_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetAnchorSideRight", dynlib: dllname.}
proc TabSheet_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "TabSheet_GetAnchorSideBottom", dynlib: dllname.}
proc TabSheet_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetAnchorSideBottom", dynlib: dllname.}
proc TabSheet_GetChildSizing*(AObj: pointer): pointer {.importc: "TabSheet_GetChildSizing", dynlib: dllname.}
proc TabSheet_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetChildSizing", dynlib: dllname.}
proc TabSheet_GetBorderSpacing*(AObj: pointer): pointer {.importc: "TabSheet_GetBorderSpacing", dynlib: dllname.}
proc TabSheet_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "TabSheet_SetBorderSpacing", dynlib: dllname.}
proc TabSheet_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "TabSheet_GetDockClients", dynlib: dllname.}
proc TabSheet_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "TabSheet_GetControls", dynlib: dllname.}
proc TabSheet_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "TabSheet_GetComponents", dynlib: dllname.}
proc TabSheet_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "TabSheet_GetAnchorSide", dynlib: dllname.}
proc TabSheet_StaticClassType*(): TClass {.importc: "TabSheet_StaticClassType", dynlib: dllname.}
# ----------------- TButton ----------------------
proc Button_Create*(AOwner: pointer): pointer {.importc: "Button_Create", dynlib: dllname.}
proc Button_Free*(AObj: pointer) {.importc: "Button_Free", dynlib: dllname.}
proc Button_Click*(AObj: pointer) {.importc: "Button_Click", dynlib: dllname.}
proc Button_CanFocus*(AObj: pointer): bool {.importc: "Button_CanFocus", dynlib: dllname.}
proc Button_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "Button_ContainsControl", dynlib: dllname.}
proc Button_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "Button_ControlAtPos", dynlib: dllname.}
proc Button_DisableAlign*(AObj: pointer) {.importc: "Button_DisableAlign", dynlib: dllname.}
proc Button_EnableAlign*(AObj: pointer) {.importc: "Button_EnableAlign", dynlib: dllname.}
proc Button_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "Button_FindChildControl", dynlib: dllname.}
proc Button_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "Button_FlipChildren", dynlib: dllname.}
proc Button_Focused*(AObj: pointer): bool {.importc: "Button_Focused", dynlib: dllname.}
proc Button_HandleAllocated*(AObj: pointer): bool {.importc: "Button_HandleAllocated", dynlib: dllname.}
proc Button_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "Button_InsertControl", dynlib: dllname.}
proc Button_Invalidate*(AObj: pointer) {.importc: "Button_Invalidate", dynlib: dllname.}
proc Button_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "Button_PaintTo", dynlib: dllname.}
proc Button_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "Button_RemoveControl", dynlib: dllname.}
proc Button_Realign*(AObj: pointer) {.importc: "Button_Realign", dynlib: dllname.}
proc Button_Repaint*(AObj: pointer) {.importc: "Button_Repaint", dynlib: dllname.}
proc Button_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "Button_ScaleBy", dynlib: dllname.}
proc Button_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "Button_ScrollBy", dynlib: dllname.}
proc Button_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Button_SetBounds", dynlib: dllname.}
proc Button_SetFocus*(AObj: pointer) {.importc: "Button_SetFocus", dynlib: dllname.}
proc Button_Update*(AObj: pointer) {.importc: "Button_Update", dynlib: dllname.}
proc Button_BringToFront*(AObj: pointer) {.importc: "Button_BringToFront", dynlib: dllname.}
proc Button_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Button_ClientToScreen", dynlib: dllname.}
proc Button_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Button_ClientToParent", dynlib: dllname.}
proc Button_Dragging*(AObj: pointer): bool {.importc: "Button_Dragging", dynlib: dllname.}
proc Button_HasParent*(AObj: pointer): bool {.importc: "Button_HasParent", dynlib: dllname.}
proc Button_Hide*(AObj: pointer) {.importc: "Button_Hide", dynlib: dllname.}
proc Button_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Button_Perform", dynlib: dllname.}
proc Button_Refresh*(AObj: pointer) {.importc: "Button_Refresh", dynlib: dllname.}
proc Button_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Button_ScreenToClient", dynlib: dllname.}
proc Button_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Button_ParentToClient", dynlib: dllname.}
proc Button_SendToBack*(AObj: pointer) {.importc: "Button_SendToBack", dynlib: dllname.}
proc Button_Show*(AObj: pointer) {.importc: "Button_Show", dynlib: dllname.}
proc Button_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Button_GetTextBuf", dynlib: dllname.}
proc Button_GetTextLen*(AObj: pointer): int32 {.importc: "Button_GetTextLen", dynlib: dllname.}
proc Button_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Button_SetTextBuf", dynlib: dllname.}
proc Button_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Button_FindComponent", dynlib: dllname.}
proc Button_GetNamePath*(AObj: pointer): cstring {.importc: "Button_GetNamePath", dynlib: dllname.}
proc Button_Assign*(AObj: pointer, Source: pointer) {.importc: "Button_Assign", dynlib: dllname.}
proc Button_ClassType*(AObj: pointer): TClass {.importc: "Button_ClassType", dynlib: dllname.}
proc Button_ClassName*(AObj: pointer): cstring {.importc: "Button_ClassName", dynlib: dllname.}
proc Button_InstanceSize*(AObj: pointer): int32 {.importc: "Button_InstanceSize", dynlib: dllname.}
proc Button_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Button_InheritsFrom", dynlib: dllname.}
proc Button_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Button_Equals", dynlib: dllname.}
proc Button_GetHashCode*(AObj: pointer): int32 {.importc: "Button_GetHashCode", dynlib: dllname.}
proc Button_ToString*(AObj: pointer): cstring {.importc: "Button_ToString", dynlib: dllname.}
proc Button_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Button_AnchorToNeighbour", dynlib: dllname.}
proc Button_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Button_AnchorParallel", dynlib: dllname.}
proc Button_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Button_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Button_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Button_AnchorVerticalCenterTo", dynlib: dllname.}
proc Button_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Button_AnchorSame", dynlib: dllname.}
proc Button_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Button_AnchorAsAlign", dynlib: dllname.}
proc Button_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Button_AnchorClient", dynlib: dllname.}
proc Button_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Button_ScaleDesignToForm", dynlib: dllname.}
proc Button_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Button_ScaleFormToDesign", dynlib: dllname.}
proc Button_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Button_Scale96ToForm", dynlib: dllname.}
proc Button_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Button_ScaleFormTo96", dynlib: dllname.}
proc Button_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Button_Scale96ToFont", dynlib: dllname.}
proc Button_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Button_ScaleFontTo96", dynlib: dllname.}
proc Button_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Button_ScaleScreenToFont", dynlib: dllname.}
proc Button_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Button_ScaleFontToScreen", dynlib: dllname.}
proc Button_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Button_Scale96ToScreen", dynlib: dllname.}
proc Button_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Button_ScaleScreenTo96", dynlib: dllname.}
proc Button_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Button_AutoAdjustLayout", dynlib: dllname.}
proc Button_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Button_FixDesignFontsPPI", dynlib: dllname.}
proc Button_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Button_ScaleFontsPPI", dynlib: dllname.}
proc Button_GetAction*(AObj: pointer): pointer {.importc: "Button_GetAction", dynlib: dllname.}
proc Button_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Button_SetAction", dynlib: dllname.}
proc Button_GetAlign*(AObj: pointer): TAlign {.importc: "Button_GetAlign", dynlib: dllname.}
proc Button_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Button_SetAlign", dynlib: dllname.}
proc Button_GetAnchors*(AObj: pointer): TAnchors {.importc: "Button_GetAnchors", dynlib: dllname.}
proc Button_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Button_SetAnchors", dynlib: dllname.}
proc Button_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Button_GetBiDiMode", dynlib: dllname.}
proc Button_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Button_SetBiDiMode", dynlib: dllname.}
proc Button_GetCancel*(AObj: pointer): bool {.importc: "Button_GetCancel", dynlib: dllname.}
proc Button_SetCancel*(AObj: pointer, AValue: bool) {.importc: "Button_SetCancel", dynlib: dllname.}
proc Button_GetCaption*(AObj: pointer): cstring {.importc: "Button_GetCaption", dynlib: dllname.}
proc Button_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "Button_SetCaption", dynlib: dllname.}
proc Button_GetConstraints*(AObj: pointer): pointer {.importc: "Button_GetConstraints", dynlib: dllname.}
proc Button_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Button_SetConstraints", dynlib: dllname.}
proc Button_GetDefault*(AObj: pointer): bool {.importc: "Button_GetDefault", dynlib: dllname.}
proc Button_SetDefault*(AObj: pointer, AValue: bool) {.importc: "Button_SetDefault", dynlib: dllname.}
proc Button_GetDoubleBuffered*(AObj: pointer): bool {.importc: "Button_GetDoubleBuffered", dynlib: dllname.}
proc Button_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Button_SetDoubleBuffered", dynlib: dllname.}
proc Button_GetDragCursor*(AObj: pointer): TCursor {.importc: "Button_GetDragCursor", dynlib: dllname.}
proc Button_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Button_SetDragCursor", dynlib: dllname.}
proc Button_GetDragKind*(AObj: pointer): TDragKind {.importc: "Button_GetDragKind", dynlib: dllname.}
proc Button_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Button_SetDragKind", dynlib: dllname.}
proc Button_GetDragMode*(AObj: pointer): TDragMode {.importc: "Button_GetDragMode", dynlib: dllname.}
proc Button_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Button_SetDragMode", dynlib: dllname.}
proc Button_GetEnabled*(AObj: pointer): bool {.importc: "Button_GetEnabled", dynlib: dllname.}
proc Button_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Button_SetEnabled", dynlib: dllname.}
proc Button_GetFont*(AObj: pointer): pointer {.importc: "Button_GetFont", dynlib: dllname.}
proc Button_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Button_SetFont", dynlib: dllname.}
proc Button_GetModalResult*(AObj: pointer): TModalResult {.importc: "Button_GetModalResult", dynlib: dllname.}
proc Button_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "Button_SetModalResult", dynlib: dllname.}
proc Button_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "Button_GetParentDoubleBuffered", dynlib: dllname.}
proc Button_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Button_SetParentDoubleBuffered", dynlib: dllname.}
proc Button_GetParentFont*(AObj: pointer): bool {.importc: "Button_GetParentFont", dynlib: dllname.}
proc Button_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Button_SetParentFont", dynlib: dllname.}
proc Button_GetParentShowHint*(AObj: pointer): bool {.importc: "Button_GetParentShowHint", dynlib: dllname.}
proc Button_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Button_SetParentShowHint", dynlib: dllname.}
proc Button_GetPopupMenu*(AObj: pointer): pointer {.importc: "Button_GetPopupMenu", dynlib: dllname.}
proc Button_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Button_SetPopupMenu", dynlib: dllname.}
proc Button_GetShowHint*(AObj: pointer): bool {.importc: "Button_GetShowHint", dynlib: dllname.}
proc Button_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Button_SetShowHint", dynlib: dllname.}
proc Button_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "Button_GetTabOrder", dynlib: dllname.}
proc Button_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "Button_SetTabOrder", dynlib: dllname.}
proc Button_GetTabStop*(AObj: pointer): bool {.importc: "Button_GetTabStop", dynlib: dllname.}
proc Button_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "Button_SetTabStop", dynlib: dllname.}
proc Button_GetVisible*(AObj: pointer): bool {.importc: "Button_GetVisible", dynlib: dllname.}
proc Button_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Button_SetVisible", dynlib: dllname.}
proc Button_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Button_SetOnClick", dynlib: dllname.}
proc Button_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "Button_SetOnContextPopup", dynlib: dllname.}
proc Button_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Button_SetOnDragDrop", dynlib: dllname.}
proc Button_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Button_SetOnDragOver", dynlib: dllname.}
proc Button_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Button_SetOnEndDrag", dynlib: dllname.}
proc Button_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Button_SetOnEnter", dynlib: dllname.}
proc Button_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Button_SetOnExit", dynlib: dllname.}
proc Button_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Button_SetOnKeyDown", dynlib: dllname.}
proc Button_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "Button_SetOnKeyPress", dynlib: dllname.}
proc Button_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Button_SetOnKeyUp", dynlib: dllname.}
proc Button_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Button_SetOnMouseDown", dynlib: dllname.}
proc Button_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Button_SetOnMouseEnter", dynlib: dllname.}
proc Button_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Button_SetOnMouseLeave", dynlib: dllname.}
proc Button_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Button_SetOnMouseMove", dynlib: dllname.}
proc Button_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Button_SetOnMouseUp", dynlib: dllname.}
proc Button_GetDockClientCount*(AObj: pointer): int32 {.importc: "Button_GetDockClientCount", dynlib: dllname.}
proc Button_GetDockSite*(AObj: pointer): bool {.importc: "Button_GetDockSite", dynlib: dllname.}
proc Button_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "Button_SetDockSite", dynlib: dllname.}
proc Button_GetMouseInClient*(AObj: pointer): bool {.importc: "Button_GetMouseInClient", dynlib: dllname.}
proc Button_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "Button_GetVisibleDockClientCount", dynlib: dllname.}
proc Button_GetBrush*(AObj: pointer): pointer {.importc: "Button_GetBrush", dynlib: dllname.}
proc Button_GetControlCount*(AObj: pointer): int32 {.importc: "Button_GetControlCount", dynlib: dllname.}
proc Button_GetHandle*(AObj: pointer): HWND {.importc: "Button_GetHandle", dynlib: dllname.}
proc Button_GetParentWindow*(AObj: pointer): HWND {.importc: "Button_GetParentWindow", dynlib: dllname.}
proc Button_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "Button_SetParentWindow", dynlib: dllname.}
proc Button_GetShowing*(AObj: pointer): bool {.importc: "Button_GetShowing", dynlib: dllname.}
proc Button_GetUseDockManager*(AObj: pointer): bool {.importc: "Button_GetUseDockManager", dynlib: dllname.}
proc Button_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "Button_SetUseDockManager", dynlib: dllname.}
proc Button_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Button_GetBoundsRect", dynlib: dllname.}
proc Button_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Button_SetBoundsRect", dynlib: dllname.}
proc Button_GetClientHeight*(AObj: pointer): int32 {.importc: "Button_GetClientHeight", dynlib: dllname.}
proc Button_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Button_SetClientHeight", dynlib: dllname.}
proc Button_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Button_GetClientOrigin", dynlib: dllname.}
proc Button_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Button_GetClientRect", dynlib: dllname.}
proc Button_GetClientWidth*(AObj: pointer): int32 {.importc: "Button_GetClientWidth", dynlib: dllname.}
proc Button_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Button_SetClientWidth", dynlib: dllname.}
proc Button_GetControlState*(AObj: pointer): TControlState {.importc: "Button_GetControlState", dynlib: dllname.}
proc Button_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Button_SetControlState", dynlib: dllname.}
proc Button_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Button_GetControlStyle", dynlib: dllname.}
proc Button_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Button_SetControlStyle", dynlib: dllname.}
proc Button_GetFloating*(AObj: pointer): bool {.importc: "Button_GetFloating", dynlib: dllname.}
proc Button_GetParent*(AObj: pointer): pointer {.importc: "Button_GetParent", dynlib: dllname.}
proc Button_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Button_SetParent", dynlib: dllname.}
proc Button_GetLeft*(AObj: pointer): int32 {.importc: "Button_GetLeft", dynlib: dllname.}
proc Button_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Button_SetLeft", dynlib: dllname.}
proc Button_GetTop*(AObj: pointer): int32 {.importc: "Button_GetTop", dynlib: dllname.}
proc Button_SetTop*(AObj: pointer, AValue: int32) {.importc: "Button_SetTop", dynlib: dllname.}
proc Button_GetWidth*(AObj: pointer): int32 {.importc: "Button_GetWidth", dynlib: dllname.}
proc Button_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Button_SetWidth", dynlib: dllname.}
proc Button_GetHeight*(AObj: pointer): int32 {.importc: "Button_GetHeight", dynlib: dllname.}
proc Button_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Button_SetHeight", dynlib: dllname.}
proc Button_GetCursor*(AObj: pointer): TCursor {.importc: "Button_GetCursor", dynlib: dllname.}
proc Button_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Button_SetCursor", dynlib: dllname.}
proc Button_GetHint*(AObj: pointer): cstring {.importc: "Button_GetHint", dynlib: dllname.}
proc Button_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Button_SetHint", dynlib: dllname.}
proc Button_GetComponentCount*(AObj: pointer): int32 {.importc: "Button_GetComponentCount", dynlib: dllname.}
proc Button_GetComponentIndex*(AObj: pointer): int32 {.importc: "Button_GetComponentIndex", dynlib: dllname.}
proc Button_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Button_SetComponentIndex", dynlib: dllname.}
proc Button_GetOwner*(AObj: pointer): pointer {.importc: "Button_GetOwner", dynlib: dllname.}
proc Button_GetName*(AObj: pointer): cstring {.importc: "Button_GetName", dynlib: dllname.}
proc Button_SetName*(AObj: pointer, AValue: cstring) {.importc: "Button_SetName", dynlib: dllname.}
proc Button_GetTag*(AObj: pointer): int {.importc: "Button_GetTag", dynlib: dllname.}
proc Button_SetTag*(AObj: pointer, AValue: int) {.importc: "Button_SetTag", dynlib: dllname.}
proc Button_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Button_GetAnchorSideLeft", dynlib: dllname.}
proc Button_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Button_SetAnchorSideLeft", dynlib: dllname.}
proc Button_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Button_GetAnchorSideTop", dynlib: dllname.}
proc Button_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Button_SetAnchorSideTop", dynlib: dllname.}
proc Button_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Button_GetAnchorSideRight", dynlib: dllname.}
proc Button_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Button_SetAnchorSideRight", dynlib: dllname.}
proc Button_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Button_GetAnchorSideBottom", dynlib: dllname.}
proc Button_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Button_SetAnchorSideBottom", dynlib: dllname.}
proc Button_GetChildSizing*(AObj: pointer): pointer {.importc: "Button_GetChildSizing", dynlib: dllname.}
proc Button_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "Button_SetChildSizing", dynlib: dllname.}
proc Button_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Button_GetBorderSpacing", dynlib: dllname.}
proc Button_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Button_SetBorderSpacing", dynlib: dllname.}
proc Button_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "Button_GetDockClients", dynlib: dllname.}
proc Button_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "Button_GetControls", dynlib: dllname.}
proc Button_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Button_GetComponents", dynlib: dllname.}
proc Button_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Button_GetAnchorSide", dynlib: dllname.}
proc Button_StaticClassType*(): TClass {.importc: "Button_StaticClassType", dynlib: dllname.}
# ----------------- TEdit ----------------------
proc Edit_Create*(AOwner: pointer): pointer {.importc: "Edit_Create", dynlib: dllname.}
proc Edit_Free*(AObj: pointer) {.importc: "Edit_Free", dynlib: dllname.}
proc Edit_Clear*(AObj: pointer) {.importc: "Edit_Clear", dynlib: dllname.}
proc Edit_ClearSelection*(AObj: pointer) {.importc: "Edit_ClearSelection", dynlib: dllname.}
proc Edit_CopyToClipboard*(AObj: pointer) {.importc: "Edit_CopyToClipboard", dynlib: dllname.}
proc Edit_CutToClipboard*(AObj: pointer) {.importc: "Edit_CutToClipboard", dynlib: dllname.}
proc Edit_PasteFromClipboard*(AObj: pointer) {.importc: "Edit_PasteFromClipboard", dynlib: dllname.}
proc Edit_Undo*(AObj: pointer) {.importc: "Edit_Undo", dynlib: dllname.}
proc Edit_SelectAll*(AObj: pointer) {.importc: "Edit_SelectAll", dynlib: dllname.}
proc Edit_CanFocus*(AObj: pointer): bool {.importc: "Edit_CanFocus", dynlib: dllname.}
proc Edit_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "Edit_ContainsControl", dynlib: dllname.}
proc Edit_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "Edit_ControlAtPos", dynlib: dllname.}
proc Edit_DisableAlign*(AObj: pointer) {.importc: "Edit_DisableAlign", dynlib: dllname.}
proc Edit_EnableAlign*(AObj: pointer) {.importc: "Edit_EnableAlign", dynlib: dllname.}
proc Edit_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "Edit_FindChildControl", dynlib: dllname.}
proc Edit_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "Edit_FlipChildren", dynlib: dllname.}
proc Edit_Focused*(AObj: pointer): bool {.importc: "Edit_Focused", dynlib: dllname.}
proc Edit_HandleAllocated*(AObj: pointer): bool {.importc: "Edit_HandleAllocated", dynlib: dllname.}
proc Edit_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "Edit_InsertControl", dynlib: dllname.}
proc Edit_Invalidate*(AObj: pointer) {.importc: "Edit_Invalidate", dynlib: dllname.}
proc Edit_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "Edit_PaintTo", dynlib: dllname.}
proc Edit_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "Edit_RemoveControl", dynlib: dllname.}
proc Edit_Realign*(AObj: pointer) {.importc: "Edit_Realign", dynlib: dllname.}
proc Edit_Repaint*(AObj: pointer) {.importc: "Edit_Repaint", dynlib: dllname.}
proc Edit_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "Edit_ScaleBy", dynlib: dllname.}
proc Edit_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "Edit_ScrollBy", dynlib: dllname.}
proc Edit_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Edit_SetBounds", dynlib: dllname.}
proc Edit_SetFocus*(AObj: pointer) {.importc: "Edit_SetFocus", dynlib: dllname.}
proc Edit_Update*(AObj: pointer) {.importc: "Edit_Update", dynlib: dllname.}
proc Edit_BringToFront*(AObj: pointer) {.importc: "Edit_BringToFront", dynlib: dllname.}
proc Edit_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Edit_ClientToScreen", dynlib: dllname.}
proc Edit_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Edit_ClientToParent", dynlib: dllname.}
proc Edit_Dragging*(AObj: pointer): bool {.importc: "Edit_Dragging", dynlib: dllname.}
proc Edit_HasParent*(AObj: pointer): bool {.importc: "Edit_HasParent", dynlib: dllname.}
proc Edit_Hide*(AObj: pointer) {.importc: "Edit_Hide", dynlib: dllname.}
proc Edit_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Edit_Perform", dynlib: dllname.}
proc Edit_Refresh*(AObj: pointer) {.importc: "Edit_Refresh", dynlib: dllname.}
proc Edit_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Edit_ScreenToClient", dynlib: dllname.}
proc Edit_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Edit_ParentToClient", dynlib: dllname.}
proc Edit_SendToBack*(AObj: pointer) {.importc: "Edit_SendToBack", dynlib: dllname.}
proc Edit_Show*(AObj: pointer) {.importc: "Edit_Show", dynlib: dllname.}
proc Edit_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Edit_GetTextBuf", dynlib: dllname.}
proc Edit_GetTextLen*(AObj: pointer): int32 {.importc: "Edit_GetTextLen", dynlib: dllname.}
proc Edit_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Edit_SetTextBuf", dynlib: dllname.}
proc Edit_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Edit_FindComponent", dynlib: dllname.}
proc Edit_GetNamePath*(AObj: pointer): cstring {.importc: "Edit_GetNamePath", dynlib: dllname.}
proc Edit_Assign*(AObj: pointer, Source: pointer) {.importc: "Edit_Assign", dynlib: dllname.}
proc Edit_ClassType*(AObj: pointer): TClass {.importc: "Edit_ClassType", dynlib: dllname.}
proc Edit_ClassName*(AObj: pointer): cstring {.importc: "Edit_ClassName", dynlib: dllname.}
proc Edit_InstanceSize*(AObj: pointer): int32 {.importc: "Edit_InstanceSize", dynlib: dllname.}
proc Edit_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Edit_InheritsFrom", dynlib: dllname.}
proc Edit_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Edit_Equals", dynlib: dllname.}
proc Edit_GetHashCode*(AObj: pointer): int32 {.importc: "Edit_GetHashCode", dynlib: dllname.}
proc Edit_ToString*(AObj: pointer): cstring {.importc: "Edit_ToString", dynlib: dllname.}
proc Edit_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Edit_AnchorToNeighbour", dynlib: dllname.}
proc Edit_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Edit_AnchorParallel", dynlib: dllname.}
proc Edit_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Edit_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Edit_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Edit_AnchorVerticalCenterTo", dynlib: dllname.}
proc Edit_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Edit_AnchorSame", dynlib: dllname.}
proc Edit_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Edit_AnchorAsAlign", dynlib: dllname.}
proc Edit_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Edit_AnchorClient", dynlib: dllname.}
proc Edit_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_ScaleDesignToForm", dynlib: dllname.}
proc Edit_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_ScaleFormToDesign", dynlib: dllname.}
proc Edit_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_Scale96ToForm", dynlib: dllname.}
proc Edit_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_ScaleFormTo96", dynlib: dllname.}
proc Edit_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_Scale96ToFont", dynlib: dllname.}
proc Edit_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_ScaleFontTo96", dynlib: dllname.}
proc Edit_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_ScaleScreenToFont", dynlib: dllname.}
proc Edit_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_ScaleFontToScreen", dynlib: dllname.}
proc Edit_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_Scale96ToScreen", dynlib: dllname.}
proc Edit_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Edit_ScaleScreenTo96", dynlib: dllname.}
proc Edit_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Edit_AutoAdjustLayout", dynlib: dllname.}
proc Edit_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Edit_FixDesignFontsPPI", dynlib: dllname.}
proc Edit_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Edit_ScaleFontsPPI", dynlib: dllname.}
proc Edit_GetAlign*(AObj: pointer): TAlign {.importc: "Edit_GetAlign", dynlib: dllname.}
proc Edit_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Edit_SetAlign", dynlib: dllname.}
proc Edit_GetAlignment*(AObj: pointer): TAlignment {.importc: "Edit_GetAlignment", dynlib: dllname.}
proc Edit_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "Edit_SetAlignment", dynlib: dllname.}
proc Edit_GetAnchors*(AObj: pointer): TAnchors {.importc: "Edit_GetAnchors", dynlib: dllname.}
proc Edit_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Edit_SetAnchors", dynlib: dllname.}
proc Edit_GetAutoSelect*(AObj: pointer): bool {.importc: "Edit_GetAutoSelect", dynlib: dllname.}
proc Edit_SetAutoSelect*(AObj: pointer, AValue: bool) {.importc: "Edit_SetAutoSelect", dynlib: dllname.}
proc Edit_GetAutoSize*(AObj: pointer): bool {.importc: "Edit_GetAutoSize", dynlib: dllname.}
proc Edit_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "Edit_SetAutoSize", dynlib: dllname.}
proc Edit_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Edit_GetBiDiMode", dynlib: dllname.}
proc Edit_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Edit_SetBiDiMode", dynlib: dllname.}
proc Edit_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "Edit_GetBorderStyle", dynlib: dllname.}
proc Edit_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "Edit_SetBorderStyle", dynlib: dllname.}
proc Edit_GetCharCase*(AObj: pointer): TEditCharCase {.importc: "Edit_GetCharCase", dynlib: dllname.}
proc Edit_SetCharCase*(AObj: pointer, AValue: TEditCharCase) {.importc: "Edit_SetCharCase", dynlib: dllname.}
proc Edit_GetColor*(AObj: pointer): TColor {.importc: "Edit_GetColor", dynlib: dllname.}
proc Edit_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Edit_SetColor", dynlib: dllname.}
proc Edit_GetConstraints*(AObj: pointer): pointer {.importc: "Edit_GetConstraints", dynlib: dllname.}
proc Edit_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetConstraints", dynlib: dllname.}
proc Edit_GetDoubleBuffered*(AObj: pointer): bool {.importc: "Edit_GetDoubleBuffered", dynlib: dllname.}
proc Edit_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Edit_SetDoubleBuffered", dynlib: dllname.}
proc Edit_GetDragCursor*(AObj: pointer): TCursor {.importc: "Edit_GetDragCursor", dynlib: dllname.}
proc Edit_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Edit_SetDragCursor", dynlib: dllname.}
proc Edit_GetDragKind*(AObj: pointer): TDragKind {.importc: "Edit_GetDragKind", dynlib: dllname.}
proc Edit_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Edit_SetDragKind", dynlib: dllname.}
proc Edit_GetDragMode*(AObj: pointer): TDragMode {.importc: "Edit_GetDragMode", dynlib: dllname.}
proc Edit_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Edit_SetDragMode", dynlib: dllname.}
proc Edit_GetEnabled*(AObj: pointer): bool {.importc: "Edit_GetEnabled", dynlib: dllname.}
proc Edit_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Edit_SetEnabled", dynlib: dllname.}
proc Edit_GetFont*(AObj: pointer): pointer {.importc: "Edit_GetFont", dynlib: dllname.}
proc Edit_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetFont", dynlib: dllname.}
proc Edit_GetHideSelection*(AObj: pointer): bool {.importc: "Edit_GetHideSelection", dynlib: dllname.}
proc Edit_SetHideSelection*(AObj: pointer, AValue: bool) {.importc: "Edit_SetHideSelection", dynlib: dllname.}
proc Edit_GetMaxLength*(AObj: pointer): int32 {.importc: "Edit_GetMaxLength", dynlib: dllname.}
proc Edit_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "Edit_SetMaxLength", dynlib: dllname.}
proc Edit_GetNumbersOnly*(AObj: pointer): bool {.importc: "Edit_GetNumbersOnly", dynlib: dllname.}
proc Edit_SetNumbersOnly*(AObj: pointer, AValue: bool) {.importc: "Edit_SetNumbersOnly", dynlib: dllname.}
proc Edit_GetParentColor*(AObj: pointer): bool {.importc: "Edit_GetParentColor", dynlib: dllname.}
proc Edit_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "Edit_SetParentColor", dynlib: dllname.}
proc Edit_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "Edit_GetParentDoubleBuffered", dynlib: dllname.}
proc Edit_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Edit_SetParentDoubleBuffered", dynlib: dllname.}
proc Edit_GetParentFont*(AObj: pointer): bool {.importc: "Edit_GetParentFont", dynlib: dllname.}
proc Edit_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Edit_SetParentFont", dynlib: dllname.}
proc Edit_GetParentShowHint*(AObj: pointer): bool {.importc: "Edit_GetParentShowHint", dynlib: dllname.}
proc Edit_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Edit_SetParentShowHint", dynlib: dllname.}
proc Edit_GetPasswordChar*(AObj: pointer): Char {.importc: "Edit_GetPasswordChar", dynlib: dllname.}
proc Edit_SetPasswordChar*(AObj: pointer, AValue: Char) {.importc: "Edit_SetPasswordChar", dynlib: dllname.}
proc Edit_GetPopupMenu*(AObj: pointer): pointer {.importc: "Edit_GetPopupMenu", dynlib: dllname.}
proc Edit_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetPopupMenu", dynlib: dllname.}
proc Edit_GetReadOnly*(AObj: pointer): bool {.importc: "Edit_GetReadOnly", dynlib: dllname.}
proc Edit_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "Edit_SetReadOnly", dynlib: dllname.}
proc Edit_GetShowHint*(AObj: pointer): bool {.importc: "Edit_GetShowHint", dynlib: dllname.}
proc Edit_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Edit_SetShowHint", dynlib: dllname.}
proc Edit_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "Edit_GetTabOrder", dynlib: dllname.}
proc Edit_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "Edit_SetTabOrder", dynlib: dllname.}
proc Edit_GetTabStop*(AObj: pointer): bool {.importc: "Edit_GetTabStop", dynlib: dllname.}
proc Edit_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "Edit_SetTabStop", dynlib: dllname.}
proc Edit_GetText*(AObj: pointer): cstring {.importc: "Edit_GetText", dynlib: dllname.}
proc Edit_SetText*(AObj: pointer, AValue: cstring) {.importc: "Edit_SetText", dynlib: dllname.}
proc Edit_GetTextHint*(AObj: pointer): cstring {.importc: "Edit_GetTextHint", dynlib: dllname.}
proc Edit_SetTextHint*(AObj: pointer, AValue: cstring) {.importc: "Edit_SetTextHint", dynlib: dllname.}
proc Edit_GetVisible*(AObj: pointer): bool {.importc: "Edit_GetVisible", dynlib: dllname.}
proc Edit_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Edit_SetVisible", dynlib: dllname.}
proc Edit_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Edit_SetOnChange", dynlib: dllname.}
proc Edit_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Edit_SetOnClick", dynlib: dllname.}
proc Edit_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "Edit_SetOnContextPopup", dynlib: dllname.}
proc Edit_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Edit_SetOnDblClick", dynlib: dllname.}
proc Edit_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Edit_SetOnDragDrop", dynlib: dllname.}
proc Edit_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Edit_SetOnDragOver", dynlib: dllname.}
proc Edit_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Edit_SetOnEndDrag", dynlib: dllname.}
proc Edit_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Edit_SetOnEnter", dynlib: dllname.}
proc Edit_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Edit_SetOnExit", dynlib: dllname.}
proc Edit_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Edit_SetOnKeyDown", dynlib: dllname.}
proc Edit_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "Edit_SetOnKeyPress", dynlib: dllname.}
proc Edit_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Edit_SetOnKeyUp", dynlib: dllname.}
proc Edit_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Edit_SetOnMouseDown", dynlib: dllname.}
proc Edit_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Edit_SetOnMouseEnter", dynlib: dllname.}
proc Edit_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Edit_SetOnMouseLeave", dynlib: dllname.}
proc Edit_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Edit_SetOnMouseMove", dynlib: dllname.}
proc Edit_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Edit_SetOnMouseUp", dynlib: dllname.}
proc Edit_GetCanUndo*(AObj: pointer): bool {.importc: "Edit_GetCanUndo", dynlib: dllname.}
proc Edit_GetModified*(AObj: pointer): bool {.importc: "Edit_GetModified", dynlib: dllname.}
proc Edit_SetModified*(AObj: pointer, AValue: bool) {.importc: "Edit_SetModified", dynlib: dllname.}
proc Edit_GetSelLength*(AObj: pointer): int32 {.importc: "Edit_GetSelLength", dynlib: dllname.}
proc Edit_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "Edit_SetSelLength", dynlib: dllname.}
proc Edit_GetSelStart*(AObj: pointer): int32 {.importc: "Edit_GetSelStart", dynlib: dllname.}
proc Edit_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "Edit_SetSelStart", dynlib: dllname.}
proc Edit_GetSelText*(AObj: pointer): cstring {.importc: "Edit_GetSelText", dynlib: dllname.}
proc Edit_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "Edit_SetSelText", dynlib: dllname.}
proc Edit_GetDockClientCount*(AObj: pointer): int32 {.importc: "Edit_GetDockClientCount", dynlib: dllname.}
proc Edit_GetDockSite*(AObj: pointer): bool {.importc: "Edit_GetDockSite", dynlib: dllname.}
proc Edit_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "Edit_SetDockSite", dynlib: dllname.}
proc Edit_GetMouseInClient*(AObj: pointer): bool {.importc: "Edit_GetMouseInClient", dynlib: dllname.}
proc Edit_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "Edit_GetVisibleDockClientCount", dynlib: dllname.}
proc Edit_GetBrush*(AObj: pointer): pointer {.importc: "Edit_GetBrush", dynlib: dllname.}
proc Edit_GetControlCount*(AObj: pointer): int32 {.importc: "Edit_GetControlCount", dynlib: dllname.}
proc Edit_GetHandle*(AObj: pointer): HWND {.importc: "Edit_GetHandle", dynlib: dllname.}
proc Edit_GetParentWindow*(AObj: pointer): HWND {.importc: "Edit_GetParentWindow", dynlib: dllname.}
proc Edit_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "Edit_SetParentWindow", dynlib: dllname.}
proc Edit_GetShowing*(AObj: pointer): bool {.importc: "Edit_GetShowing", dynlib: dllname.}
proc Edit_GetUseDockManager*(AObj: pointer): bool {.importc: "Edit_GetUseDockManager", dynlib: dllname.}
proc Edit_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "Edit_SetUseDockManager", dynlib: dllname.}
proc Edit_GetAction*(AObj: pointer): pointer {.importc: "Edit_GetAction", dynlib: dllname.}
proc Edit_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetAction", dynlib: dllname.}
proc Edit_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Edit_GetBoundsRect", dynlib: dllname.}
proc Edit_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Edit_SetBoundsRect", dynlib: dllname.}
proc Edit_GetClientHeight*(AObj: pointer): int32 {.importc: "Edit_GetClientHeight", dynlib: dllname.}
proc Edit_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Edit_SetClientHeight", dynlib: dllname.}
proc Edit_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Edit_GetClientOrigin", dynlib: dllname.}
proc Edit_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Edit_GetClientRect", dynlib: dllname.}
proc Edit_GetClientWidth*(AObj: pointer): int32 {.importc: "Edit_GetClientWidth", dynlib: dllname.}
proc Edit_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Edit_SetClientWidth", dynlib: dllname.}
proc Edit_GetControlState*(AObj: pointer): TControlState {.importc: "Edit_GetControlState", dynlib: dllname.}
proc Edit_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Edit_SetControlState", dynlib: dllname.}
proc Edit_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Edit_GetControlStyle", dynlib: dllname.}
proc Edit_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Edit_SetControlStyle", dynlib: dllname.}
proc Edit_GetFloating*(AObj: pointer): bool {.importc: "Edit_GetFloating", dynlib: dllname.}
proc Edit_GetParent*(AObj: pointer): pointer {.importc: "Edit_GetParent", dynlib: dllname.}
proc Edit_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetParent", dynlib: dllname.}
proc Edit_GetLeft*(AObj: pointer): int32 {.importc: "Edit_GetLeft", dynlib: dllname.}
proc Edit_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Edit_SetLeft", dynlib: dllname.}
proc Edit_GetTop*(AObj: pointer): int32 {.importc: "Edit_GetTop", dynlib: dllname.}
proc Edit_SetTop*(AObj: pointer, AValue: int32) {.importc: "Edit_SetTop", dynlib: dllname.}
proc Edit_GetWidth*(AObj: pointer): int32 {.importc: "Edit_GetWidth", dynlib: dllname.}
proc Edit_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Edit_SetWidth", dynlib: dllname.}
proc Edit_GetHeight*(AObj: pointer): int32 {.importc: "Edit_GetHeight", dynlib: dllname.}
proc Edit_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Edit_SetHeight", dynlib: dllname.}
proc Edit_GetCursor*(AObj: pointer): TCursor {.importc: "Edit_GetCursor", dynlib: dllname.}
proc Edit_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Edit_SetCursor", dynlib: dllname.}
proc Edit_GetHint*(AObj: pointer): cstring {.importc: "Edit_GetHint", dynlib: dllname.}
proc Edit_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Edit_SetHint", dynlib: dllname.}
proc Edit_GetComponentCount*(AObj: pointer): int32 {.importc: "Edit_GetComponentCount", dynlib: dllname.}
proc Edit_GetComponentIndex*(AObj: pointer): int32 {.importc: "Edit_GetComponentIndex", dynlib: dllname.}
proc Edit_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Edit_SetComponentIndex", dynlib: dllname.}
proc Edit_GetOwner*(AObj: pointer): pointer {.importc: "Edit_GetOwner", dynlib: dllname.}
proc Edit_GetName*(AObj: pointer): cstring {.importc: "Edit_GetName", dynlib: dllname.}
proc Edit_SetName*(AObj: pointer, AValue: cstring) {.importc: "Edit_SetName", dynlib: dllname.}
proc Edit_GetTag*(AObj: pointer): int {.importc: "Edit_GetTag", dynlib: dllname.}
proc Edit_SetTag*(AObj: pointer, AValue: int) {.importc: "Edit_SetTag", dynlib: dllname.}
proc Edit_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Edit_GetAnchorSideLeft", dynlib: dllname.}
proc Edit_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetAnchorSideLeft", dynlib: dllname.}
proc Edit_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Edit_GetAnchorSideTop", dynlib: dllname.}
proc Edit_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetAnchorSideTop", dynlib: dllname.}
proc Edit_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Edit_GetAnchorSideRight", dynlib: dllname.}
proc Edit_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetAnchorSideRight", dynlib: dllname.}
proc Edit_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Edit_GetAnchorSideBottom", dynlib: dllname.}
proc Edit_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetAnchorSideBottom", dynlib: dllname.}
proc Edit_GetChildSizing*(AObj: pointer): pointer {.importc: "Edit_GetChildSizing", dynlib: dllname.}
proc Edit_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetChildSizing", dynlib: dllname.}
proc Edit_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Edit_GetBorderSpacing", dynlib: dllname.}
proc Edit_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Edit_SetBorderSpacing", dynlib: dllname.}
proc Edit_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "Edit_GetDockClients", dynlib: dllname.}
proc Edit_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "Edit_GetControls", dynlib: dllname.}
proc Edit_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Edit_GetComponents", dynlib: dllname.}
proc Edit_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Edit_GetAnchorSide", dynlib: dllname.}
proc Edit_StaticClassType*(): TClass {.importc: "Edit_StaticClassType", dynlib: dllname.}
# ----------------- TScreen ----------------------
proc Screen_Create*(AOwner: pointer): pointer {.importc: "Screen_Create", dynlib: dllname.}
proc Screen_Free*(AObj: pointer) {.importc: "Screen_Free", dynlib: dllname.}
proc Screen_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Screen_FindComponent", dynlib: dllname.}
proc Screen_GetNamePath*(AObj: pointer): cstring {.importc: "Screen_GetNamePath", dynlib: dllname.}
proc Screen_HasParent*(AObj: pointer): bool {.importc: "Screen_HasParent", dynlib: dllname.}
proc Screen_Assign*(AObj: pointer, Source: pointer) {.importc: "Screen_Assign", dynlib: dllname.}
proc Screen_ClassType*(AObj: pointer): TClass {.importc: "Screen_ClassType", dynlib: dllname.}
proc Screen_ClassName*(AObj: pointer): cstring {.importc: "Screen_ClassName", dynlib: dllname.}
proc Screen_InstanceSize*(AObj: pointer): int32 {.importc: "Screen_InstanceSize", dynlib: dllname.}
proc Screen_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Screen_InheritsFrom", dynlib: dllname.}
proc Screen_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Screen_Equals", dynlib: dllname.}
proc Screen_GetHashCode*(AObj: pointer): int32 {.importc: "Screen_GetHashCode", dynlib: dllname.}
proc Screen_ToString*(AObj: pointer): cstring {.importc: "Screen_ToString", dynlib: dllname.}
proc Screen_GetActiveControl*(AObj: pointer): pointer {.importc: "Screen_GetActiveControl", dynlib: dllname.}
proc Screen_GetActiveForm*(AObj: pointer): pointer {.importc: "Screen_GetActiveForm", dynlib: dllname.}
proc Screen_GetCustomFormCount*(AObj: pointer): int32 {.importc: "Screen_GetCustomFormCount", dynlib: dllname.}
proc Screen_GetCursor*(AObj: pointer): TCursor {.importc: "Screen_GetCursor", dynlib: dllname.}
proc Screen_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Screen_SetCursor", dynlib: dllname.}
proc Screen_GetFocusedForm*(AObj: pointer): pointer {.importc: "Screen_GetFocusedForm", dynlib: dllname.}
proc Screen_GetMonitorCount*(AObj: pointer): int32 {.importc: "Screen_GetMonitorCount", dynlib: dllname.}
proc Screen_GetDesktopRect*(AObj: pointer, Result: var TRect) {.importc: "Screen_GetDesktopRect", dynlib: dllname.}
proc Screen_GetDesktopHeight*(AObj: pointer): int32 {.importc: "Screen_GetDesktopHeight", dynlib: dllname.}
proc Screen_GetDesktopLeft*(AObj: pointer): int32 {.importc: "Screen_GetDesktopLeft", dynlib: dllname.}
proc Screen_GetDesktopTop*(AObj: pointer): int32 {.importc: "Screen_GetDesktopTop", dynlib: dllname.}
proc Screen_GetDesktopWidth*(AObj: pointer): int32 {.importc: "Screen_GetDesktopWidth", dynlib: dllname.}
proc Screen_GetWorkAreaRect*(AObj: pointer, Result: var TRect) {.importc: "Screen_GetWorkAreaRect", dynlib: dllname.}
proc Screen_GetWorkAreaHeight*(AObj: pointer): int32 {.importc: "Screen_GetWorkAreaHeight", dynlib: dllname.}
proc Screen_GetWorkAreaLeft*(AObj: pointer): int32 {.importc: "Screen_GetWorkAreaLeft", dynlib: dllname.}
proc Screen_GetWorkAreaTop*(AObj: pointer): int32 {.importc: "Screen_GetWorkAreaTop", dynlib: dllname.}
proc Screen_GetWorkAreaWidth*(AObj: pointer): int32 {.importc: "Screen_GetWorkAreaWidth", dynlib: dllname.}
proc Screen_GetFonts*(AObj: pointer): pointer {.importc: "Screen_GetFonts", dynlib: dllname.}
proc Screen_GetFormCount*(AObj: pointer): int32 {.importc: "Screen_GetFormCount", dynlib: dllname.}
proc Screen_GetHeight*(AObj: pointer): int32 {.importc: "Screen_GetHeight", dynlib: dllname.}
proc Screen_GetPixelsPerInch*(AObj: pointer): int32 {.importc: "Screen_GetPixelsPerInch", dynlib: dllname.}
proc Screen_GetPrimaryMonitor*(AObj: pointer): pointer {.importc: "Screen_GetPrimaryMonitor", dynlib: dllname.}
proc Screen_GetWidth*(AObj: pointer): int32 {.importc: "Screen_GetWidth", dynlib: dllname.}
proc Screen_GetComponentCount*(AObj: pointer): int32 {.importc: "Screen_GetComponentCount", dynlib: dllname.}
proc Screen_GetComponentIndex*(AObj: pointer): int32 {.importc: "Screen_GetComponentIndex", dynlib: dllname.}
proc Screen_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Screen_SetComponentIndex", dynlib: dllname.}
proc Screen_GetOwner*(AObj: pointer): pointer {.importc: "Screen_GetOwner", dynlib: dllname.}
proc Screen_GetName*(AObj: pointer): cstring {.importc: "Screen_GetName", dynlib: dllname.}
proc Screen_SetName*(AObj: pointer, AValue: cstring) {.importc: "Screen_SetName", dynlib: dllname.}
proc Screen_GetTag*(AObj: pointer): int {.importc: "Screen_GetTag", dynlib: dllname.}
proc Screen_SetTag*(AObj: pointer, AValue: int) {.importc: "Screen_SetTag", dynlib: dllname.}
proc Screen_GetCursors*(AObj: pointer, Index: int32): HICON {.importc: "Screen_GetCursors", dynlib: dllname.}
proc Screen_SetCursors*(AObj: pointer, Index: int32, AValue: HICON) {.importc: "Screen_SetCursors", dynlib: dllname.}
proc Screen_GetMonitors*(AObj: pointer, Index: int32): pointer {.importc: "Screen_GetMonitors", dynlib: dllname.}
proc Screen_GetForms*(AObj: pointer, Index: int32): pointer {.importc: "Screen_GetForms", dynlib: dllname.}
proc Screen_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Screen_GetComponents", dynlib: dllname.}
proc Screen_StaticClassType*(): TClass {.importc: "Screen_StaticClassType", dynlib: dllname.}
# ----------------- TMouse ----------------------
proc Mouse_Create*(): pointer {.importc: "Mouse_Create", dynlib: dllname.}
proc Mouse_Free*(AObj: pointer) {.importc: "Mouse_Free", dynlib: dllname.}
proc Mouse_ClassType*(AObj: pointer): TClass {.importc: "Mouse_ClassType", dynlib: dllname.}
proc Mouse_ClassName*(AObj: pointer): cstring {.importc: "Mouse_ClassName", dynlib: dllname.}
proc Mouse_InstanceSize*(AObj: pointer): int32 {.importc: "Mouse_InstanceSize", dynlib: dllname.}
proc Mouse_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Mouse_InheritsFrom", dynlib: dllname.}
proc Mouse_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Mouse_Equals", dynlib: dllname.}
proc Mouse_GetHashCode*(AObj: pointer): int32 {.importc: "Mouse_GetHashCode", dynlib: dllname.}
proc Mouse_ToString*(AObj: pointer): cstring {.importc: "Mouse_ToString", dynlib: dllname.}
proc Mouse_GetCapture*(AObj: pointer): HWND {.importc: "Mouse_GetCapture", dynlib: dllname.}
proc Mouse_SetCapture*(AObj: pointer, AValue: HWND) {.importc: "Mouse_SetCapture", dynlib: dllname.}
proc Mouse_GetCursorPos*(AObj: pointer, Result: var TPoint) {.importc: "Mouse_GetCursorPos", dynlib: dllname.}
proc Mouse_SetCursorPos*(AObj: pointer, AValue: var TPoint) {.importc: "Mouse_SetCursorPos", dynlib: dllname.}
proc Mouse_GetIsDragging*(AObj: pointer): bool {.importc: "Mouse_GetIsDragging", dynlib: dllname.}
proc Mouse_GetWheelScrollLines*(AObj: pointer): int32 {.importc: "Mouse_GetWheelScrollLines", dynlib: dllname.}
proc Mouse_StaticClassType*(): TClass {.importc: "Mouse_StaticClassType", dynlib: dllname.}
# ----------------- TListColumn ----------------------
proc ListColumn_Create*(AOwner: pointer): pointer {.importc: "ListColumn_Create", dynlib: dllname.}
proc ListColumn_Free*(AObj: pointer) {.importc: "ListColumn_Free", dynlib: dllname.}
proc ListColumn_Assign*(AObj: pointer, Source: pointer) {.importc: "ListColumn_Assign", dynlib: dllname.}
proc ListColumn_GetNamePath*(AObj: pointer): cstring {.importc: "ListColumn_GetNamePath", dynlib: dllname.}
proc ListColumn_ClassType*(AObj: pointer): TClass {.importc: "ListColumn_ClassType", dynlib: dllname.}
proc ListColumn_ClassName*(AObj: pointer): cstring {.importc: "ListColumn_ClassName", dynlib: dllname.}
proc ListColumn_InstanceSize*(AObj: pointer): int32 {.importc: "ListColumn_InstanceSize", dynlib: dllname.}
proc ListColumn_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ListColumn_InheritsFrom", dynlib: dllname.}
proc ListColumn_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ListColumn_Equals", dynlib: dllname.}
proc ListColumn_GetHashCode*(AObj: pointer): int32 {.importc: "ListColumn_GetHashCode", dynlib: dllname.}
proc ListColumn_ToString*(AObj: pointer): cstring {.importc: "ListColumn_ToString", dynlib: dllname.}
proc ListColumn_GetSortIndicator*(AObj: pointer): TSortIndicator {.importc: "ListColumn_GetSortIndicator", dynlib: dllname.}
proc ListColumn_SetSortIndicator*(AObj: pointer, AValue: TSortIndicator) {.importc: "ListColumn_SetSortIndicator", dynlib: dllname.}
proc ListColumn_GetAlignment*(AObj: pointer): TAlignment {.importc: "ListColumn_GetAlignment", dynlib: dllname.}
proc ListColumn_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "ListColumn_SetAlignment", dynlib: dllname.}
proc ListColumn_GetAutoSize*(AObj: pointer): bool {.importc: "ListColumn_GetAutoSize", dynlib: dllname.}
proc ListColumn_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "ListColumn_SetAutoSize", dynlib: dllname.}
proc ListColumn_GetCaption*(AObj: pointer): cstring {.importc: "ListColumn_GetCaption", dynlib: dllname.}
proc ListColumn_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "ListColumn_SetCaption", dynlib: dllname.}
proc ListColumn_GetImageIndex*(AObj: pointer): int32 {.importc: "ListColumn_GetImageIndex", dynlib: dllname.}
proc ListColumn_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "ListColumn_SetImageIndex", dynlib: dllname.}
proc ListColumn_GetMaxWidth*(AObj: pointer): int32 {.importc: "ListColumn_GetMaxWidth", dynlib: dllname.}
proc ListColumn_SetMaxWidth*(AObj: pointer, AValue: int32) {.importc: "ListColumn_SetMaxWidth", dynlib: dllname.}
proc ListColumn_GetMinWidth*(AObj: pointer): int32 {.importc: "ListColumn_GetMinWidth", dynlib: dllname.}
proc ListColumn_SetMinWidth*(AObj: pointer, AValue: int32) {.importc: "ListColumn_SetMinWidth", dynlib: dllname.}
proc ListColumn_GetTag*(AObj: pointer): int32 {.importc: "ListColumn_GetTag", dynlib: dllname.}
proc ListColumn_SetTag*(AObj: pointer, AValue: int32) {.importc: "ListColumn_SetTag", dynlib: dllname.}
proc ListColumn_GetWidth*(AObj: pointer): int32 {.importc: "ListColumn_GetWidth", dynlib: dllname.}
proc ListColumn_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ListColumn_SetWidth", dynlib: dllname.}
proc ListColumn_GetCollection*(AObj: pointer): pointer {.importc: "ListColumn_GetCollection", dynlib: dllname.}
proc ListColumn_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "ListColumn_SetCollection", dynlib: dllname.}
proc ListColumn_GetIndex*(AObj: pointer): int32 {.importc: "ListColumn_GetIndex", dynlib: dllname.}
proc ListColumn_SetIndex*(AObj: pointer, AValue: int32) {.importc: "ListColumn_SetIndex", dynlib: dllname.}
proc ListColumn_GetDisplayName*(AObj: pointer): cstring {.importc: "ListColumn_GetDisplayName", dynlib: dllname.}
proc ListColumn_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "ListColumn_SetDisplayName", dynlib: dllname.}
proc ListColumn_StaticClassType*(): TClass {.importc: "ListColumn_StaticClassType", dynlib: dllname.}
# ----------------- TCollectionItem ----------------------
proc CollectionItem_Create*(AOwner: pointer): pointer {.importc: "CollectionItem_Create", dynlib: dllname.}
proc CollectionItem_Free*(AObj: pointer) {.importc: "CollectionItem_Free", dynlib: dllname.}
proc CollectionItem_GetNamePath*(AObj: pointer): cstring {.importc: "CollectionItem_GetNamePath", dynlib: dllname.}
proc CollectionItem_Assign*(AObj: pointer, Source: pointer) {.importc: "CollectionItem_Assign", dynlib: dllname.}
proc CollectionItem_ClassType*(AObj: pointer): TClass {.importc: "CollectionItem_ClassType", dynlib: dllname.}
proc CollectionItem_ClassName*(AObj: pointer): cstring {.importc: "CollectionItem_ClassName", dynlib: dllname.}
proc CollectionItem_InstanceSize*(AObj: pointer): int32 {.importc: "CollectionItem_InstanceSize", dynlib: dllname.}
proc CollectionItem_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "CollectionItem_InheritsFrom", dynlib: dllname.}
proc CollectionItem_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "CollectionItem_Equals", dynlib: dllname.}
proc CollectionItem_GetHashCode*(AObj: pointer): int32 {.importc: "CollectionItem_GetHashCode", dynlib: dllname.}
proc CollectionItem_ToString*(AObj: pointer): cstring {.importc: "CollectionItem_ToString", dynlib: dllname.}
proc CollectionItem_GetCollection*(AObj: pointer): pointer {.importc: "CollectionItem_GetCollection", dynlib: dllname.}
proc CollectionItem_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "CollectionItem_SetCollection", dynlib: dllname.}
proc CollectionItem_GetIndex*(AObj: pointer): int32 {.importc: "CollectionItem_GetIndex", dynlib: dllname.}
proc CollectionItem_SetIndex*(AObj: pointer, AValue: int32) {.importc: "CollectionItem_SetIndex", dynlib: dllname.}
proc CollectionItem_GetDisplayName*(AObj: pointer): cstring {.importc: "CollectionItem_GetDisplayName", dynlib: dllname.}
proc CollectionItem_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "CollectionItem_SetDisplayName", dynlib: dllname.}
proc CollectionItem_StaticClassType*(): TClass {.importc: "CollectionItem_StaticClassType", dynlib: dllname.}
# ----------------- TStatusPanels ----------------------
proc StatusPanels_Create*(AOwner: pointer): pointer {.importc: "StatusPanels_Create", dynlib: dllname.}
proc StatusPanels_Free*(AObj: pointer) {.importc: "StatusPanels_Free", dynlib: dllname.}
proc StatusPanels_Add*(AObj: pointer): pointer {.importc: "StatusPanels_Add", dynlib: dllname.}
proc StatusPanels_Insert*(AObj: pointer, Index: int32): pointer {.importc: "StatusPanels_Insert", dynlib: dllname.}
proc StatusPanels_Owner*(AObj: pointer): pointer {.importc: "StatusPanels_Owner", dynlib: dllname.}
proc StatusPanels_Assign*(AObj: pointer, Source: pointer) {.importc: "StatusPanels_Assign", dynlib: dllname.}
proc StatusPanels_BeginUpdate*(AObj: pointer) {.importc: "StatusPanels_BeginUpdate", dynlib: dllname.}
proc StatusPanels_Clear*(AObj: pointer) {.importc: "StatusPanels_Clear", dynlib: dllname.}
proc StatusPanels_Delete*(AObj: pointer, Index: int32) {.importc: "StatusPanels_Delete", dynlib: dllname.}
proc StatusPanels_EndUpdate*(AObj: pointer) {.importc: "StatusPanels_EndUpdate", dynlib: dllname.}
proc StatusPanels_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "StatusPanels_FindItemID", dynlib: dllname.}
proc StatusPanels_GetNamePath*(AObj: pointer): cstring {.importc: "StatusPanels_GetNamePath", dynlib: dllname.}
proc StatusPanels_ClassType*(AObj: pointer): TClass {.importc: "StatusPanels_ClassType", dynlib: dllname.}
proc StatusPanels_ClassName*(AObj: pointer): cstring {.importc: "StatusPanels_ClassName", dynlib: dllname.}
proc StatusPanels_InstanceSize*(AObj: pointer): int32 {.importc: "StatusPanels_InstanceSize", dynlib: dllname.}
proc StatusPanels_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "StatusPanels_InheritsFrom", dynlib: dllname.}
proc StatusPanels_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "StatusPanels_Equals", dynlib: dllname.}
proc StatusPanels_GetHashCode*(AObj: pointer): int32 {.importc: "StatusPanels_GetHashCode", dynlib: dllname.}
proc StatusPanels_ToString*(AObj: pointer): cstring {.importc: "StatusPanels_ToString", dynlib: dllname.}
proc StatusPanels_GetCapacity*(AObj: pointer): int32 {.importc: "StatusPanels_GetCapacity", dynlib: dllname.}
proc StatusPanels_SetCapacity*(AObj: pointer, AValue: int32) {.importc: "StatusPanels_SetCapacity", dynlib: dllname.}
proc StatusPanels_GetCount*(AObj: pointer): int32 {.importc: "StatusPanels_GetCount", dynlib: dllname.}
proc StatusPanels_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "StatusPanels_GetItems", dynlib: dllname.}
proc StatusPanels_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "StatusPanels_SetItems", dynlib: dllname.}
proc StatusPanels_StaticClassType*(): TClass {.importc: "StatusPanels_StaticClassType", dynlib: dllname.}
# ----------------- TStatusPanel ----------------------
proc StatusPanel_Create*(AOwner: pointer): pointer {.importc: "StatusPanel_Create", dynlib: dllname.}
proc StatusPanel_Free*(AObj: pointer) {.importc: "StatusPanel_Free", dynlib: dllname.}
proc StatusPanel_Assign*(AObj: pointer, Source: pointer) {.importc: "StatusPanel_Assign", dynlib: dllname.}
proc StatusPanel_GetNamePath*(AObj: pointer): cstring {.importc: "StatusPanel_GetNamePath", dynlib: dllname.}
proc StatusPanel_ClassType*(AObj: pointer): TClass {.importc: "StatusPanel_ClassType", dynlib: dllname.}
proc StatusPanel_ClassName*(AObj: pointer): cstring {.importc: "StatusPanel_ClassName", dynlib: dllname.}
proc StatusPanel_InstanceSize*(AObj: pointer): int32 {.importc: "StatusPanel_InstanceSize", dynlib: dllname.}
proc StatusPanel_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "StatusPanel_InheritsFrom", dynlib: dllname.}
proc StatusPanel_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "StatusPanel_Equals", dynlib: dllname.}
proc StatusPanel_GetHashCode*(AObj: pointer): int32 {.importc: "StatusPanel_GetHashCode", dynlib: dllname.}
proc StatusPanel_ToString*(AObj: pointer): cstring {.importc: "StatusPanel_ToString", dynlib: dllname.}
proc StatusPanel_GetAlignment*(AObj: pointer): TAlignment {.importc: "StatusPanel_GetAlignment", dynlib: dllname.}
proc StatusPanel_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "StatusPanel_SetAlignment", dynlib: dllname.}
proc StatusPanel_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "StatusPanel_GetBiDiMode", dynlib: dllname.}
proc StatusPanel_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "StatusPanel_SetBiDiMode", dynlib: dllname.}
proc StatusPanel_GetStyle*(AObj: pointer): TStatusPanelStyle {.importc: "StatusPanel_GetStyle", dynlib: dllname.}
proc StatusPanel_SetStyle*(AObj: pointer, AValue: TStatusPanelStyle) {.importc: "StatusPanel_SetStyle", dynlib: dllname.}
proc StatusPanel_GetText*(AObj: pointer): cstring {.importc: "StatusPanel_GetText", dynlib: dllname.}
proc StatusPanel_SetText*(AObj: pointer, AValue: cstring) {.importc: "StatusPanel_SetText", dynlib: dllname.}
proc StatusPanel_GetWidth*(AObj: pointer): int32 {.importc: "StatusPanel_GetWidth", dynlib: dllname.}
proc StatusPanel_SetWidth*(AObj: pointer, AValue: int32) {.importc: "StatusPanel_SetWidth", dynlib: dllname.}
proc StatusPanel_GetCollection*(AObj: pointer): pointer {.importc: "StatusPanel_GetCollection", dynlib: dllname.}
proc StatusPanel_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "StatusPanel_SetCollection", dynlib: dllname.}
proc StatusPanel_GetIndex*(AObj: pointer): int32 {.importc: "StatusPanel_GetIndex", dynlib: dllname.}
proc StatusPanel_SetIndex*(AObj: pointer, AValue: int32) {.importc: "StatusPanel_SetIndex", dynlib: dllname.}
proc StatusPanel_GetDisplayName*(AObj: pointer): cstring {.importc: "StatusPanel_GetDisplayName", dynlib: dllname.}
proc StatusPanel_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "StatusPanel_SetDisplayName", dynlib: dllname.}
proc StatusPanel_StaticClassType*(): TClass {.importc: "StatusPanel_StaticClassType", dynlib: dllname.}
# ----------------- TSpinEdit ----------------------
proc SpinEdit_Create*(AOwner: pointer): pointer {.importc: "SpinEdit_Create", dynlib: dllname.}
proc SpinEdit_Free*(AObj: pointer) {.importc: "SpinEdit_Free", dynlib: dllname.}
proc SpinEdit_Clear*(AObj: pointer) {.importc: "SpinEdit_Clear", dynlib: dllname.}
proc SpinEdit_ClearSelection*(AObj: pointer) {.importc: "SpinEdit_ClearSelection", dynlib: dllname.}
proc SpinEdit_CopyToClipboard*(AObj: pointer) {.importc: "SpinEdit_CopyToClipboard", dynlib: dllname.}
proc SpinEdit_CutToClipboard*(AObj: pointer) {.importc: "SpinEdit_CutToClipboard", dynlib: dllname.}
proc SpinEdit_PasteFromClipboard*(AObj: pointer) {.importc: "SpinEdit_PasteFromClipboard", dynlib: dllname.}
proc SpinEdit_Undo*(AObj: pointer) {.importc: "SpinEdit_Undo", dynlib: dllname.}
proc SpinEdit_SelectAll*(AObj: pointer) {.importc: "SpinEdit_SelectAll", dynlib: dllname.}
proc SpinEdit_CanFocus*(AObj: pointer): bool {.importc: "SpinEdit_CanFocus", dynlib: dllname.}
proc SpinEdit_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "SpinEdit_ContainsControl", dynlib: dllname.}
proc SpinEdit_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "SpinEdit_ControlAtPos", dynlib: dllname.}
proc SpinEdit_DisableAlign*(AObj: pointer) {.importc: "SpinEdit_DisableAlign", dynlib: dllname.}
proc SpinEdit_EnableAlign*(AObj: pointer) {.importc: "SpinEdit_EnableAlign", dynlib: dllname.}
proc SpinEdit_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "SpinEdit_FindChildControl", dynlib: dllname.}
proc SpinEdit_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "SpinEdit_FlipChildren", dynlib: dllname.}
proc SpinEdit_Focused*(AObj: pointer): bool {.importc: "SpinEdit_Focused", dynlib: dllname.}
proc SpinEdit_HandleAllocated*(AObj: pointer): bool {.importc: "SpinEdit_HandleAllocated", dynlib: dllname.}
proc SpinEdit_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "SpinEdit_InsertControl", dynlib: dllname.}
proc SpinEdit_Invalidate*(AObj: pointer) {.importc: "SpinEdit_Invalidate", dynlib: dllname.}
proc SpinEdit_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "SpinEdit_PaintTo", dynlib: dllname.}
proc SpinEdit_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "SpinEdit_RemoveControl", dynlib: dllname.}
proc SpinEdit_Realign*(AObj: pointer) {.importc: "SpinEdit_Realign", dynlib: dllname.}
proc SpinEdit_Repaint*(AObj: pointer) {.importc: "SpinEdit_Repaint", dynlib: dllname.}
proc SpinEdit_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "SpinEdit_ScaleBy", dynlib: dllname.}
proc SpinEdit_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "SpinEdit_ScrollBy", dynlib: dllname.}
proc SpinEdit_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "SpinEdit_SetBounds", dynlib: dllname.}
proc SpinEdit_SetFocus*(AObj: pointer) {.importc: "SpinEdit_SetFocus", dynlib: dllname.}
proc SpinEdit_Update*(AObj: pointer) {.importc: "SpinEdit_Update", dynlib: dllname.}
proc SpinEdit_BringToFront*(AObj: pointer) {.importc: "SpinEdit_BringToFront", dynlib: dllname.}
proc SpinEdit_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "SpinEdit_ClientToScreen", dynlib: dllname.}
proc SpinEdit_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "SpinEdit_ClientToParent", dynlib: dllname.}
proc SpinEdit_Dragging*(AObj: pointer): bool {.importc: "SpinEdit_Dragging", dynlib: dllname.}
proc SpinEdit_HasParent*(AObj: pointer): bool {.importc: "SpinEdit_HasParent", dynlib: dllname.}
proc SpinEdit_Hide*(AObj: pointer) {.importc: "SpinEdit_Hide", dynlib: dllname.}
proc SpinEdit_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "SpinEdit_Perform", dynlib: dllname.}
proc SpinEdit_Refresh*(AObj: pointer) {.importc: "SpinEdit_Refresh", dynlib: dllname.}
proc SpinEdit_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "SpinEdit_ScreenToClient", dynlib: dllname.}
proc SpinEdit_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "SpinEdit_ParentToClient", dynlib: dllname.}
proc SpinEdit_SendToBack*(AObj: pointer) {.importc: "SpinEdit_SendToBack", dynlib: dllname.}
proc SpinEdit_Show*(AObj: pointer) {.importc: "SpinEdit_Show", dynlib: dllname.}
proc SpinEdit_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "SpinEdit_GetTextBuf", dynlib: dllname.}
proc SpinEdit_GetTextLen*(AObj: pointer): int32 {.importc: "SpinEdit_GetTextLen", dynlib: dllname.}
proc SpinEdit_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "SpinEdit_SetTextBuf", dynlib: dllname.}
proc SpinEdit_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "SpinEdit_FindComponent", dynlib: dllname.}
proc SpinEdit_GetNamePath*(AObj: pointer): cstring {.importc: "SpinEdit_GetNamePath", dynlib: dllname.}
proc SpinEdit_Assign*(AObj: pointer, Source: pointer) {.importc: "SpinEdit_Assign", dynlib: dllname.}
proc SpinEdit_ClassType*(AObj: pointer): TClass {.importc: "SpinEdit_ClassType", dynlib: dllname.}
proc SpinEdit_ClassName*(AObj: pointer): cstring {.importc: "SpinEdit_ClassName", dynlib: dllname.}
proc SpinEdit_InstanceSize*(AObj: pointer): int32 {.importc: "SpinEdit_InstanceSize", dynlib: dllname.}
proc SpinEdit_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "SpinEdit_InheritsFrom", dynlib: dllname.}
proc SpinEdit_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "SpinEdit_Equals", dynlib: dllname.}
proc SpinEdit_GetHashCode*(AObj: pointer): int32 {.importc: "SpinEdit_GetHashCode", dynlib: dllname.}
proc SpinEdit_ToString*(AObj: pointer): cstring {.importc: "SpinEdit_ToString", dynlib: dllname.}
proc SpinEdit_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "SpinEdit_AnchorToNeighbour", dynlib: dllname.}
proc SpinEdit_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "SpinEdit_AnchorParallel", dynlib: dllname.}
proc SpinEdit_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "SpinEdit_AnchorHorizontalCenterTo", dynlib: dllname.}
proc SpinEdit_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "SpinEdit_AnchorVerticalCenterTo", dynlib: dllname.}
proc SpinEdit_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "SpinEdit_AnchorSame", dynlib: dllname.}
proc SpinEdit_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "SpinEdit_AnchorAsAlign", dynlib: dllname.}
proc SpinEdit_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "SpinEdit_AnchorClient", dynlib: dllname.}
proc SpinEdit_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_ScaleDesignToForm", dynlib: dllname.}
proc SpinEdit_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_ScaleFormToDesign", dynlib: dllname.}
proc SpinEdit_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_Scale96ToForm", dynlib: dllname.}
proc SpinEdit_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_ScaleFormTo96", dynlib: dllname.}
proc SpinEdit_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_Scale96ToFont", dynlib: dllname.}
proc SpinEdit_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_ScaleFontTo96", dynlib: dllname.}
proc SpinEdit_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_ScaleScreenToFont", dynlib: dllname.}
proc SpinEdit_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_ScaleFontToScreen", dynlib: dllname.}
proc SpinEdit_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_Scale96ToScreen", dynlib: dllname.}
proc SpinEdit_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "SpinEdit_ScaleScreenTo96", dynlib: dllname.}
proc SpinEdit_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "SpinEdit_AutoAdjustLayout", dynlib: dllname.}
proc SpinEdit_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "SpinEdit_FixDesignFontsPPI", dynlib: dllname.}
proc SpinEdit_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "SpinEdit_ScaleFontsPPI", dynlib: dllname.}
proc SpinEdit_GetAnchors*(AObj: pointer): TAnchors {.importc: "SpinEdit_GetAnchors", dynlib: dllname.}
proc SpinEdit_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "SpinEdit_SetAnchors", dynlib: dllname.}
proc SpinEdit_GetAutoSelect*(AObj: pointer): bool {.importc: "SpinEdit_GetAutoSelect", dynlib: dllname.}
proc SpinEdit_SetAutoSelect*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetAutoSelect", dynlib: dllname.}
proc SpinEdit_GetAutoSize*(AObj: pointer): bool {.importc: "SpinEdit_GetAutoSize", dynlib: dllname.}
proc SpinEdit_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetAutoSize", dynlib: dllname.}
proc SpinEdit_GetColor*(AObj: pointer): TColor {.importc: "SpinEdit_GetColor", dynlib: dllname.}
proc SpinEdit_SetColor*(AObj: pointer, AValue: TColor) {.importc: "SpinEdit_SetColor", dynlib: dllname.}
proc SpinEdit_GetConstraints*(AObj: pointer): pointer {.importc: "SpinEdit_GetConstraints", dynlib: dllname.}
proc SpinEdit_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetConstraints", dynlib: dllname.}
proc SpinEdit_GetEnabled*(AObj: pointer): bool {.importc: "SpinEdit_GetEnabled", dynlib: dllname.}
proc SpinEdit_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetEnabled", dynlib: dllname.}
proc SpinEdit_GetFont*(AObj: pointer): pointer {.importc: "SpinEdit_GetFont", dynlib: dllname.}
proc SpinEdit_SetFont*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetFont", dynlib: dllname.}
proc SpinEdit_GetIncrement*(AObj: pointer): int32 {.importc: "SpinEdit_GetIncrement", dynlib: dllname.}
proc SpinEdit_SetIncrement*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetIncrement", dynlib: dllname.}
proc SpinEdit_GetMaxLength*(AObj: pointer): int32 {.importc: "SpinEdit_GetMaxLength", dynlib: dllname.}
proc SpinEdit_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetMaxLength", dynlib: dllname.}
proc SpinEdit_GetMaxValue*(AObj: pointer): int32 {.importc: "SpinEdit_GetMaxValue", dynlib: dllname.}
proc SpinEdit_SetMaxValue*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetMaxValue", dynlib: dllname.}
proc SpinEdit_GetMinValue*(AObj: pointer): int32 {.importc: "SpinEdit_GetMinValue", dynlib: dllname.}
proc SpinEdit_SetMinValue*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetMinValue", dynlib: dllname.}
proc SpinEdit_GetParentColor*(AObj: pointer): bool {.importc: "SpinEdit_GetParentColor", dynlib: dllname.}
proc SpinEdit_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetParentColor", dynlib: dllname.}
proc SpinEdit_GetParentFont*(AObj: pointer): bool {.importc: "SpinEdit_GetParentFont", dynlib: dllname.}
proc SpinEdit_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetParentFont", dynlib: dllname.}
proc SpinEdit_GetParentShowHint*(AObj: pointer): bool {.importc: "SpinEdit_GetParentShowHint", dynlib: dllname.}
proc SpinEdit_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetParentShowHint", dynlib: dllname.}
proc SpinEdit_GetPopupMenu*(AObj: pointer): pointer {.importc: "SpinEdit_GetPopupMenu", dynlib: dllname.}
proc SpinEdit_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetPopupMenu", dynlib: dllname.}
proc SpinEdit_GetReadOnly*(AObj: pointer): bool {.importc: "SpinEdit_GetReadOnly", dynlib: dllname.}
proc SpinEdit_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetReadOnly", dynlib: dllname.}
proc SpinEdit_GetShowHint*(AObj: pointer): bool {.importc: "SpinEdit_GetShowHint", dynlib: dllname.}
proc SpinEdit_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetShowHint", dynlib: dllname.}
proc SpinEdit_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "SpinEdit_GetTabOrder", dynlib: dllname.}
proc SpinEdit_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "SpinEdit_SetTabOrder", dynlib: dllname.}
proc SpinEdit_GetTabStop*(AObj: pointer): bool {.importc: "SpinEdit_GetTabStop", dynlib: dllname.}
proc SpinEdit_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetTabStop", dynlib: dllname.}
proc SpinEdit_GetValue*(AObj: pointer): int32 {.importc: "SpinEdit_GetValue", dynlib: dllname.}
proc SpinEdit_SetValue*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetValue", dynlib: dllname.}
proc SpinEdit_GetVisible*(AObj: pointer): bool {.importc: "SpinEdit_GetVisible", dynlib: dllname.}
proc SpinEdit_SetVisible*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetVisible", dynlib: dllname.}
proc SpinEdit_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpinEdit_SetOnChange", dynlib: dllname.}
proc SpinEdit_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpinEdit_SetOnClick", dynlib: dllname.}
proc SpinEdit_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpinEdit_SetOnEnter", dynlib: dllname.}
proc SpinEdit_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SpinEdit_SetOnExit", dynlib: dllname.}
proc SpinEdit_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "SpinEdit_SetOnKeyDown", dynlib: dllname.}
proc SpinEdit_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "SpinEdit_SetOnKeyPress", dynlib: dllname.}
proc SpinEdit_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "SpinEdit_SetOnKeyUp", dynlib: dllname.}
proc SpinEdit_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "SpinEdit_SetOnMouseDown", dynlib: dllname.}
proc SpinEdit_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "SpinEdit_SetOnMouseMove", dynlib: dllname.}
proc SpinEdit_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "SpinEdit_SetOnMouseUp", dynlib: dllname.}
proc SpinEdit_GetAlignment*(AObj: pointer): TAlignment {.importc: "SpinEdit_GetAlignment", dynlib: dllname.}
proc SpinEdit_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "SpinEdit_SetAlignment", dynlib: dllname.}
proc SpinEdit_GetCanUndo*(AObj: pointer): bool {.importc: "SpinEdit_GetCanUndo", dynlib: dllname.}
proc SpinEdit_GetModified*(AObj: pointer): bool {.importc: "SpinEdit_GetModified", dynlib: dllname.}
proc SpinEdit_SetModified*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetModified", dynlib: dllname.}
proc SpinEdit_GetSelLength*(AObj: pointer): int32 {.importc: "SpinEdit_GetSelLength", dynlib: dllname.}
proc SpinEdit_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetSelLength", dynlib: dllname.}
proc SpinEdit_GetSelStart*(AObj: pointer): int32 {.importc: "SpinEdit_GetSelStart", dynlib: dllname.}
proc SpinEdit_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetSelStart", dynlib: dllname.}
proc SpinEdit_GetSelText*(AObj: pointer): cstring {.importc: "SpinEdit_GetSelText", dynlib: dllname.}
proc SpinEdit_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "SpinEdit_SetSelText", dynlib: dllname.}
proc SpinEdit_GetText*(AObj: pointer): cstring {.importc: "SpinEdit_GetText", dynlib: dllname.}
proc SpinEdit_SetText*(AObj: pointer, AValue: cstring) {.importc: "SpinEdit_SetText", dynlib: dllname.}
proc SpinEdit_GetTextHint*(AObj: pointer): cstring {.importc: "SpinEdit_GetTextHint", dynlib: dllname.}
proc SpinEdit_SetTextHint*(AObj: pointer, AValue: cstring) {.importc: "SpinEdit_SetTextHint", dynlib: dllname.}
proc SpinEdit_GetDockClientCount*(AObj: pointer): int32 {.importc: "SpinEdit_GetDockClientCount", dynlib: dllname.}
proc SpinEdit_GetDockSite*(AObj: pointer): bool {.importc: "SpinEdit_GetDockSite", dynlib: dllname.}
proc SpinEdit_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetDockSite", dynlib: dllname.}
proc SpinEdit_GetDoubleBuffered*(AObj: pointer): bool {.importc: "SpinEdit_GetDoubleBuffered", dynlib: dllname.}
proc SpinEdit_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetDoubleBuffered", dynlib: dllname.}
proc SpinEdit_GetMouseInClient*(AObj: pointer): bool {.importc: "SpinEdit_GetMouseInClient", dynlib: dllname.}
proc SpinEdit_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "SpinEdit_GetVisibleDockClientCount", dynlib: dllname.}
proc SpinEdit_GetBrush*(AObj: pointer): pointer {.importc: "SpinEdit_GetBrush", dynlib: dllname.}
proc SpinEdit_GetControlCount*(AObj: pointer): int32 {.importc: "SpinEdit_GetControlCount", dynlib: dllname.}
proc SpinEdit_GetHandle*(AObj: pointer): HWND {.importc: "SpinEdit_GetHandle", dynlib: dllname.}
proc SpinEdit_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "SpinEdit_GetParentDoubleBuffered", dynlib: dllname.}
proc SpinEdit_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetParentDoubleBuffered", dynlib: dllname.}
proc SpinEdit_GetParentWindow*(AObj: pointer): HWND {.importc: "SpinEdit_GetParentWindow", dynlib: dllname.}
proc SpinEdit_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "SpinEdit_SetParentWindow", dynlib: dllname.}
proc SpinEdit_GetShowing*(AObj: pointer): bool {.importc: "SpinEdit_GetShowing", dynlib: dllname.}
proc SpinEdit_GetUseDockManager*(AObj: pointer): bool {.importc: "SpinEdit_GetUseDockManager", dynlib: dllname.}
proc SpinEdit_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "SpinEdit_SetUseDockManager", dynlib: dllname.}
proc SpinEdit_GetAction*(AObj: pointer): pointer {.importc: "SpinEdit_GetAction", dynlib: dllname.}
proc SpinEdit_SetAction*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetAction", dynlib: dllname.}
proc SpinEdit_GetAlign*(AObj: pointer): TAlign {.importc: "SpinEdit_GetAlign", dynlib: dllname.}
proc SpinEdit_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "SpinEdit_SetAlign", dynlib: dllname.}
proc SpinEdit_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "SpinEdit_GetBiDiMode", dynlib: dllname.}
proc SpinEdit_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "SpinEdit_SetBiDiMode", dynlib: dllname.}
proc SpinEdit_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "SpinEdit_GetBoundsRect", dynlib: dllname.}
proc SpinEdit_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "SpinEdit_SetBoundsRect", dynlib: dllname.}
proc SpinEdit_GetClientHeight*(AObj: pointer): int32 {.importc: "SpinEdit_GetClientHeight", dynlib: dllname.}
proc SpinEdit_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetClientHeight", dynlib: dllname.}
proc SpinEdit_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "SpinEdit_GetClientOrigin", dynlib: dllname.}
proc SpinEdit_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "SpinEdit_GetClientRect", dynlib: dllname.}
proc SpinEdit_GetClientWidth*(AObj: pointer): int32 {.importc: "SpinEdit_GetClientWidth", dynlib: dllname.}
proc SpinEdit_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetClientWidth", dynlib: dllname.}
proc SpinEdit_GetControlState*(AObj: pointer): TControlState {.importc: "SpinEdit_GetControlState", dynlib: dllname.}
proc SpinEdit_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "SpinEdit_SetControlState", dynlib: dllname.}
proc SpinEdit_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "SpinEdit_GetControlStyle", dynlib: dllname.}
proc SpinEdit_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "SpinEdit_SetControlStyle", dynlib: dllname.}
proc SpinEdit_GetFloating*(AObj: pointer): bool {.importc: "SpinEdit_GetFloating", dynlib: dllname.}
proc SpinEdit_GetParent*(AObj: pointer): pointer {.importc: "SpinEdit_GetParent", dynlib: dllname.}
proc SpinEdit_SetParent*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetParent", dynlib: dllname.}
proc SpinEdit_GetLeft*(AObj: pointer): int32 {.importc: "SpinEdit_GetLeft", dynlib: dllname.}
proc SpinEdit_SetLeft*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetLeft", dynlib: dllname.}
proc SpinEdit_GetTop*(AObj: pointer): int32 {.importc: "SpinEdit_GetTop", dynlib: dllname.}
proc SpinEdit_SetTop*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetTop", dynlib: dllname.}
proc SpinEdit_GetWidth*(AObj: pointer): int32 {.importc: "SpinEdit_GetWidth", dynlib: dllname.}
proc SpinEdit_SetWidth*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetWidth", dynlib: dllname.}
proc SpinEdit_GetHeight*(AObj: pointer): int32 {.importc: "SpinEdit_GetHeight", dynlib: dllname.}
proc SpinEdit_SetHeight*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetHeight", dynlib: dllname.}
proc SpinEdit_GetCursor*(AObj: pointer): TCursor {.importc: "SpinEdit_GetCursor", dynlib: dllname.}
proc SpinEdit_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "SpinEdit_SetCursor", dynlib: dllname.}
proc SpinEdit_GetHint*(AObj: pointer): cstring {.importc: "SpinEdit_GetHint", dynlib: dllname.}
proc SpinEdit_SetHint*(AObj: pointer, AValue: cstring) {.importc: "SpinEdit_SetHint", dynlib: dllname.}
proc SpinEdit_GetComponentCount*(AObj: pointer): int32 {.importc: "SpinEdit_GetComponentCount", dynlib: dllname.}
proc SpinEdit_GetComponentIndex*(AObj: pointer): int32 {.importc: "SpinEdit_GetComponentIndex", dynlib: dllname.}
proc SpinEdit_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "SpinEdit_SetComponentIndex", dynlib: dllname.}
proc SpinEdit_GetOwner*(AObj: pointer): pointer {.importc: "SpinEdit_GetOwner", dynlib: dllname.}
proc SpinEdit_GetName*(AObj: pointer): cstring {.importc: "SpinEdit_GetName", dynlib: dllname.}
proc SpinEdit_SetName*(AObj: pointer, AValue: cstring) {.importc: "SpinEdit_SetName", dynlib: dllname.}
proc SpinEdit_GetTag*(AObj: pointer): int {.importc: "SpinEdit_GetTag", dynlib: dllname.}
proc SpinEdit_SetTag*(AObj: pointer, AValue: int) {.importc: "SpinEdit_SetTag", dynlib: dllname.}
proc SpinEdit_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "SpinEdit_GetAnchorSideLeft", dynlib: dllname.}
proc SpinEdit_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetAnchorSideLeft", dynlib: dllname.}
proc SpinEdit_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "SpinEdit_GetAnchorSideTop", dynlib: dllname.}
proc SpinEdit_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetAnchorSideTop", dynlib: dllname.}
proc SpinEdit_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "SpinEdit_GetAnchorSideRight", dynlib: dllname.}
proc SpinEdit_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetAnchorSideRight", dynlib: dllname.}
proc SpinEdit_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "SpinEdit_GetAnchorSideBottom", dynlib: dllname.}
proc SpinEdit_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetAnchorSideBottom", dynlib: dllname.}
proc SpinEdit_GetChildSizing*(AObj: pointer): pointer {.importc: "SpinEdit_GetChildSizing", dynlib: dllname.}
proc SpinEdit_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetChildSizing", dynlib: dllname.}
proc SpinEdit_GetBorderSpacing*(AObj: pointer): pointer {.importc: "SpinEdit_GetBorderSpacing", dynlib: dllname.}
proc SpinEdit_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "SpinEdit_SetBorderSpacing", dynlib: dllname.}
proc SpinEdit_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "SpinEdit_GetDockClients", dynlib: dllname.}
proc SpinEdit_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "SpinEdit_GetControls", dynlib: dllname.}
proc SpinEdit_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "SpinEdit_GetComponents", dynlib: dllname.}
proc SpinEdit_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "SpinEdit_GetAnchorSide", dynlib: dllname.}
proc SpinEdit_StaticClassType*(): TClass {.importc: "SpinEdit_StaticClassType", dynlib: dllname.}
# ----------------- TMiniWebview ----------------------
proc MiniWebview_Create*(AOwner: pointer): pointer {.importc: "MiniWebview_Create", dynlib: dllname.}
proc MiniWebview_Free*(AObj: pointer) {.importc: "MiniWebview_Free", dynlib: dllname.}
proc MiniWebview_Navigate*(AObj: pointer, AURL: cstring) {.importc: "MiniWebview_Navigate", dynlib: dllname.}
proc MiniWebview_GoBack*(AObj: pointer) {.importc: "MiniWebview_GoBack", dynlib: dllname.}
proc MiniWebview_GoForward*(AObj: pointer) {.importc: "MiniWebview_GoForward", dynlib: dllname.}
proc MiniWebview_GoHome*(AObj: pointer) {.importc: "MiniWebview_GoHome", dynlib: dllname.}
proc MiniWebview_GoSearch*(AObj: pointer) {.importc: "MiniWebview_GoSearch", dynlib: dllname.}
proc MiniWebview_Refresh*(AObj: pointer) {.importc: "MiniWebview_Refresh", dynlib: dllname.}
proc MiniWebview_Stop*(AObj: pointer) {.importc: "MiniWebview_Stop", dynlib: dllname.}
proc MiniWebview_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "MiniWebview_SetBounds", dynlib: dllname.}
proc MiniWebview_ExecuteScript*(AObj: pointer, AScriptText: cstring, AScriptType: cstring): cstring {.importc: "MiniWebview_ExecuteScript", dynlib: dllname.}
proc MiniWebview_ExecuteJS*(AObj: pointer, AScriptText: cstring): cstring {.importc: "MiniWebview_ExecuteJS", dynlib: dllname.}
proc MiniWebview_LoadHTML*(AObj: pointer, AStr: cstring) {.importc: "MiniWebview_LoadHTML", dynlib: dllname.}
proc MiniWebview_CanFocus*(AObj: pointer): bool {.importc: "MiniWebview_CanFocus", dynlib: dllname.}
proc MiniWebview_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "MiniWebview_ContainsControl", dynlib: dllname.}
proc MiniWebview_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "MiniWebview_ControlAtPos", dynlib: dllname.}
proc MiniWebview_DisableAlign*(AObj: pointer) {.importc: "MiniWebview_DisableAlign", dynlib: dllname.}
proc MiniWebview_EnableAlign*(AObj: pointer) {.importc: "MiniWebview_EnableAlign", dynlib: dllname.}
proc MiniWebview_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "MiniWebview_FindChildControl", dynlib: dllname.}
proc MiniWebview_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "MiniWebview_FlipChildren", dynlib: dllname.}
proc MiniWebview_Focused*(AObj: pointer): bool {.importc: "MiniWebview_Focused", dynlib: dllname.}
proc MiniWebview_HandleAllocated*(AObj: pointer): bool {.importc: "MiniWebview_HandleAllocated", dynlib: dllname.}
proc MiniWebview_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "MiniWebview_InsertControl", dynlib: dllname.}
proc MiniWebview_Invalidate*(AObj: pointer) {.importc: "MiniWebview_Invalidate", dynlib: dllname.}
proc MiniWebview_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "MiniWebview_PaintTo", dynlib: dllname.}
proc MiniWebview_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "MiniWebview_RemoveControl", dynlib: dllname.}
proc MiniWebview_Realign*(AObj: pointer) {.importc: "MiniWebview_Realign", dynlib: dllname.}
proc MiniWebview_Repaint*(AObj: pointer) {.importc: "MiniWebview_Repaint", dynlib: dllname.}
proc MiniWebview_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "MiniWebview_ScaleBy", dynlib: dllname.}
proc MiniWebview_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "MiniWebview_ScrollBy", dynlib: dllname.}
proc MiniWebview_SetFocus*(AObj: pointer) {.importc: "MiniWebview_SetFocus", dynlib: dllname.}
proc MiniWebview_Update*(AObj: pointer) {.importc: "MiniWebview_Update", dynlib: dllname.}
proc MiniWebview_BringToFront*(AObj: pointer) {.importc: "MiniWebview_BringToFront", dynlib: dllname.}
proc MiniWebview_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "MiniWebview_ClientToScreen", dynlib: dllname.}
proc MiniWebview_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "MiniWebview_ClientToParent", dynlib: dllname.}
proc MiniWebview_Dragging*(AObj: pointer): bool {.importc: "MiniWebview_Dragging", dynlib: dllname.}
proc MiniWebview_HasParent*(AObj: pointer): bool {.importc: "MiniWebview_HasParent", dynlib: dllname.}
proc MiniWebview_Hide*(AObj: pointer) {.importc: "MiniWebview_Hide", dynlib: dllname.}
proc MiniWebview_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "MiniWebview_Perform", dynlib: dllname.}
proc MiniWebview_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "MiniWebview_ScreenToClient", dynlib: dllname.}
proc MiniWebview_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "MiniWebview_ParentToClient", dynlib: dllname.}
proc MiniWebview_SendToBack*(AObj: pointer) {.importc: "MiniWebview_SendToBack", dynlib: dllname.}
proc MiniWebview_Show*(AObj: pointer) {.importc: "MiniWebview_Show", dynlib: dllname.}
proc MiniWebview_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "MiniWebview_GetTextBuf", dynlib: dllname.}
proc MiniWebview_GetTextLen*(AObj: pointer): int32 {.importc: "MiniWebview_GetTextLen", dynlib: dllname.}
proc MiniWebview_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "MiniWebview_SetTextBuf", dynlib: dllname.}
proc MiniWebview_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "MiniWebview_FindComponent", dynlib: dllname.}
proc MiniWebview_GetNamePath*(AObj: pointer): cstring {.importc: "MiniWebview_GetNamePath", dynlib: dllname.}
proc MiniWebview_Assign*(AObj: pointer, Source: pointer) {.importc: "MiniWebview_Assign", dynlib: dllname.}
proc MiniWebview_ClassType*(AObj: pointer): TClass {.importc: "MiniWebview_ClassType", dynlib: dllname.}
proc MiniWebview_ClassName*(AObj: pointer): cstring {.importc: "MiniWebview_ClassName", dynlib: dllname.}
proc MiniWebview_InstanceSize*(AObj: pointer): int32 {.importc: "MiniWebview_InstanceSize", dynlib: dllname.}
proc MiniWebview_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "MiniWebview_InheritsFrom", dynlib: dllname.}
proc MiniWebview_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "MiniWebview_Equals", dynlib: dllname.}
proc MiniWebview_GetHashCode*(AObj: pointer): int32 {.importc: "MiniWebview_GetHashCode", dynlib: dllname.}
proc MiniWebview_ToString*(AObj: pointer): cstring {.importc: "MiniWebview_ToString", dynlib: dllname.}
proc MiniWebview_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "MiniWebview_AnchorToNeighbour", dynlib: dllname.}
proc MiniWebview_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "MiniWebview_AnchorParallel", dynlib: dllname.}
proc MiniWebview_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "MiniWebview_AnchorHorizontalCenterTo", dynlib: dllname.}
proc MiniWebview_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "MiniWebview_AnchorVerticalCenterTo", dynlib: dllname.}
proc MiniWebview_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "MiniWebview_AnchorSame", dynlib: dllname.}
proc MiniWebview_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "MiniWebview_AnchorAsAlign", dynlib: dllname.}
proc MiniWebview_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "MiniWebview_AnchorClient", dynlib: dllname.}
proc MiniWebview_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_ScaleDesignToForm", dynlib: dllname.}
proc MiniWebview_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_ScaleFormToDesign", dynlib: dllname.}
proc MiniWebview_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_Scale96ToForm", dynlib: dllname.}
proc MiniWebview_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_ScaleFormTo96", dynlib: dllname.}
proc MiniWebview_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_Scale96ToFont", dynlib: dllname.}
proc MiniWebview_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_ScaleFontTo96", dynlib: dllname.}
proc MiniWebview_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_ScaleScreenToFont", dynlib: dllname.}
proc MiniWebview_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_ScaleFontToScreen", dynlib: dllname.}
proc MiniWebview_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_Scale96ToScreen", dynlib: dllname.}
proc MiniWebview_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MiniWebview_ScaleScreenTo96", dynlib: dllname.}
proc MiniWebview_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "MiniWebview_AutoAdjustLayout", dynlib: dllname.}
proc MiniWebview_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "MiniWebview_FixDesignFontsPPI", dynlib: dllname.}
proc MiniWebview_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "MiniWebview_ScaleFontsPPI", dynlib: dllname.}
proc MiniWebview_GetReadyState*(AObj: pointer): TReadyState {.importc: "MiniWebview_GetReadyState", dynlib: dllname.}
proc MiniWebview_GetAlign*(AObj: pointer): TAlign {.importc: "MiniWebview_GetAlign", dynlib: dllname.}
proc MiniWebview_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "MiniWebview_SetAlign", dynlib: dllname.}
proc MiniWebview_GetAnchors*(AObj: pointer): TAnchors {.importc: "MiniWebview_GetAnchors", dynlib: dllname.}
proc MiniWebview_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "MiniWebview_SetAnchors", dynlib: dllname.}
proc MiniWebview_GetConstraints*(AObj: pointer): pointer {.importc: "MiniWebview_GetConstraints", dynlib: dllname.}
proc MiniWebview_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetConstraints", dynlib: dllname.}
proc MiniWebview_GetEnabled*(AObj: pointer): bool {.importc: "MiniWebview_GetEnabled", dynlib: dllname.}
proc MiniWebview_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetEnabled", dynlib: dllname.}
proc MiniWebview_GetVisible*(AObj: pointer): bool {.importc: "MiniWebview_GetVisible", dynlib: dllname.}
proc MiniWebview_SetVisible*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetVisible", dynlib: dllname.}
proc MiniWebview_SetOnTitleChange*(AObj: pointer, AEventId: TWebTitleChangeEvent) {.importc: "MiniWebview_SetOnTitleChange", dynlib: dllname.}
proc MiniWebview_SetOnJSExternal*(AObj: pointer, AEventId: TWebJSExternalEvent) {.importc: "MiniWebview_SetOnJSExternal", dynlib: dllname.}
proc MiniWebview_GetDockClientCount*(AObj: pointer): int32 {.importc: "MiniWebview_GetDockClientCount", dynlib: dllname.}
proc MiniWebview_GetDockSite*(AObj: pointer): bool {.importc: "MiniWebview_GetDockSite", dynlib: dllname.}
proc MiniWebview_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetDockSite", dynlib: dllname.}
proc MiniWebview_GetDoubleBuffered*(AObj: pointer): bool {.importc: "MiniWebview_GetDoubleBuffered", dynlib: dllname.}
proc MiniWebview_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetDoubleBuffered", dynlib: dllname.}
proc MiniWebview_GetMouseInClient*(AObj: pointer): bool {.importc: "MiniWebview_GetMouseInClient", dynlib: dllname.}
proc MiniWebview_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "MiniWebview_GetVisibleDockClientCount", dynlib: dllname.}
proc MiniWebview_GetBrush*(AObj: pointer): pointer {.importc: "MiniWebview_GetBrush", dynlib: dllname.}
proc MiniWebview_GetControlCount*(AObj: pointer): int32 {.importc: "MiniWebview_GetControlCount", dynlib: dllname.}
proc MiniWebview_GetHandle*(AObj: pointer): HWND {.importc: "MiniWebview_GetHandle", dynlib: dllname.}
proc MiniWebview_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "MiniWebview_GetParentDoubleBuffered", dynlib: dllname.}
proc MiniWebview_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetParentDoubleBuffered", dynlib: dllname.}
proc MiniWebview_GetParentWindow*(AObj: pointer): HWND {.importc: "MiniWebview_GetParentWindow", dynlib: dllname.}
proc MiniWebview_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "MiniWebview_SetParentWindow", dynlib: dllname.}
proc MiniWebview_GetShowing*(AObj: pointer): bool {.importc: "MiniWebview_GetShowing", dynlib: dllname.}
proc MiniWebview_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "MiniWebview_GetTabOrder", dynlib: dllname.}
proc MiniWebview_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "MiniWebview_SetTabOrder", dynlib: dllname.}
proc MiniWebview_GetTabStop*(AObj: pointer): bool {.importc: "MiniWebview_GetTabStop", dynlib: dllname.}
proc MiniWebview_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetTabStop", dynlib: dllname.}
proc MiniWebview_GetUseDockManager*(AObj: pointer): bool {.importc: "MiniWebview_GetUseDockManager", dynlib: dllname.}
proc MiniWebview_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetUseDockManager", dynlib: dllname.}
proc MiniWebview_GetAction*(AObj: pointer): pointer {.importc: "MiniWebview_GetAction", dynlib: dllname.}
proc MiniWebview_SetAction*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetAction", dynlib: dllname.}
proc MiniWebview_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "MiniWebview_GetBiDiMode", dynlib: dllname.}
proc MiniWebview_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "MiniWebview_SetBiDiMode", dynlib: dllname.}
proc MiniWebview_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "MiniWebview_GetBoundsRect", dynlib: dllname.}
proc MiniWebview_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "MiniWebview_SetBoundsRect", dynlib: dllname.}
proc MiniWebview_GetClientHeight*(AObj: pointer): int32 {.importc: "MiniWebview_GetClientHeight", dynlib: dllname.}
proc MiniWebview_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "MiniWebview_SetClientHeight", dynlib: dllname.}
proc MiniWebview_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "MiniWebview_GetClientOrigin", dynlib: dllname.}
proc MiniWebview_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "MiniWebview_GetClientRect", dynlib: dllname.}
proc MiniWebview_GetClientWidth*(AObj: pointer): int32 {.importc: "MiniWebview_GetClientWidth", dynlib: dllname.}
proc MiniWebview_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "MiniWebview_SetClientWidth", dynlib: dllname.}
proc MiniWebview_GetControlState*(AObj: pointer): TControlState {.importc: "MiniWebview_GetControlState", dynlib: dllname.}
proc MiniWebview_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "MiniWebview_SetControlState", dynlib: dllname.}
proc MiniWebview_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "MiniWebview_GetControlStyle", dynlib: dllname.}
proc MiniWebview_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "MiniWebview_SetControlStyle", dynlib: dllname.}
proc MiniWebview_GetFloating*(AObj: pointer): bool {.importc: "MiniWebview_GetFloating", dynlib: dllname.}
proc MiniWebview_GetShowHint*(AObj: pointer): bool {.importc: "MiniWebview_GetShowHint", dynlib: dllname.}
proc MiniWebview_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "MiniWebview_SetShowHint", dynlib: dllname.}
proc MiniWebview_GetParent*(AObj: pointer): pointer {.importc: "MiniWebview_GetParent", dynlib: dllname.}
proc MiniWebview_SetParent*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetParent", dynlib: dllname.}
proc MiniWebview_GetLeft*(AObj: pointer): int32 {.importc: "MiniWebview_GetLeft", dynlib: dllname.}
proc MiniWebview_SetLeft*(AObj: pointer, AValue: int32) {.importc: "MiniWebview_SetLeft", dynlib: dllname.}
proc MiniWebview_GetTop*(AObj: pointer): int32 {.importc: "MiniWebview_GetTop", dynlib: dllname.}
proc MiniWebview_SetTop*(AObj: pointer, AValue: int32) {.importc: "MiniWebview_SetTop", dynlib: dllname.}
proc MiniWebview_GetWidth*(AObj: pointer): int32 {.importc: "MiniWebview_GetWidth", dynlib: dllname.}
proc MiniWebview_SetWidth*(AObj: pointer, AValue: int32) {.importc: "MiniWebview_SetWidth", dynlib: dllname.}
proc MiniWebview_GetHeight*(AObj: pointer): int32 {.importc: "MiniWebview_GetHeight", dynlib: dllname.}
proc MiniWebview_SetHeight*(AObj: pointer, AValue: int32) {.importc: "MiniWebview_SetHeight", dynlib: dllname.}
proc MiniWebview_GetCursor*(AObj: pointer): TCursor {.importc: "MiniWebview_GetCursor", dynlib: dllname.}
proc MiniWebview_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "MiniWebview_SetCursor", dynlib: dllname.}
proc MiniWebview_GetHint*(AObj: pointer): cstring {.importc: "MiniWebview_GetHint", dynlib: dllname.}
proc MiniWebview_SetHint*(AObj: pointer, AValue: cstring) {.importc: "MiniWebview_SetHint", dynlib: dllname.}
proc MiniWebview_GetComponentCount*(AObj: pointer): int32 {.importc: "MiniWebview_GetComponentCount", dynlib: dllname.}
proc MiniWebview_GetComponentIndex*(AObj: pointer): int32 {.importc: "MiniWebview_GetComponentIndex", dynlib: dllname.}
proc MiniWebview_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "MiniWebview_SetComponentIndex", dynlib: dllname.}
proc MiniWebview_GetOwner*(AObj: pointer): pointer {.importc: "MiniWebview_GetOwner", dynlib: dllname.}
proc MiniWebview_GetName*(AObj: pointer): cstring {.importc: "MiniWebview_GetName", dynlib: dllname.}
proc MiniWebview_SetName*(AObj: pointer, AValue: cstring) {.importc: "MiniWebview_SetName", dynlib: dllname.}
proc MiniWebview_GetTag*(AObj: pointer): int {.importc: "MiniWebview_GetTag", dynlib: dllname.}
proc MiniWebview_SetTag*(AObj: pointer, AValue: int) {.importc: "MiniWebview_SetTag", dynlib: dllname.}
proc MiniWebview_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "MiniWebview_GetAnchorSideLeft", dynlib: dllname.}
proc MiniWebview_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetAnchorSideLeft", dynlib: dllname.}
proc MiniWebview_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "MiniWebview_GetAnchorSideTop", dynlib: dllname.}
proc MiniWebview_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetAnchorSideTop", dynlib: dllname.}
proc MiniWebview_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "MiniWebview_GetAnchorSideRight", dynlib: dllname.}
proc MiniWebview_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetAnchorSideRight", dynlib: dllname.}
proc MiniWebview_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "MiniWebview_GetAnchorSideBottom", dynlib: dllname.}
proc MiniWebview_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetAnchorSideBottom", dynlib: dllname.}
proc MiniWebview_GetChildSizing*(AObj: pointer): pointer {.importc: "MiniWebview_GetChildSizing", dynlib: dllname.}
proc MiniWebview_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetChildSizing", dynlib: dllname.}
proc MiniWebview_GetBorderSpacing*(AObj: pointer): pointer {.importc: "MiniWebview_GetBorderSpacing", dynlib: dllname.}
proc MiniWebview_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "MiniWebview_SetBorderSpacing", dynlib: dllname.}
proc MiniWebview_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "MiniWebview_GetDockClients", dynlib: dllname.}
proc MiniWebview_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "MiniWebview_GetControls", dynlib: dllname.}
proc MiniWebview_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "MiniWebview_GetComponents", dynlib: dllname.}
proc MiniWebview_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "MiniWebview_GetAnchorSide", dynlib: dllname.}
proc MiniWebview_StaticClassType*(): TClass {.importc: "MiniWebview_StaticClassType", dynlib: dllname.}
# ----------------- TCanvas ----------------------
proc Canvas_Create*(): pointer {.importc: "Canvas_Create", dynlib: dllname.}
proc Canvas_Free*(AObj: pointer) {.importc: "Canvas_Free", dynlib: dllname.}
proc Canvas_Arc*(AObj: pointer, X1: int32, Y1: int32, X2: int32, Y2: int32, X3: int32, Y3: int32, X4: int32, Y4: int32) {.importc: "Canvas_Arc", dynlib: dllname.}
proc Canvas_ArcTo*(AObj: pointer, X1: int32, Y1: int32, X2: int32, Y2: int32, X3: int32, Y3: int32, X4: int32, Y4: int32) {.importc: "Canvas_ArcTo", dynlib: dllname.}
proc Canvas_AngleArc*(AObj: pointer, X: int32, Y: int32, Radius: uint32, StartAngle: var float32, SweepAngle: var float32) {.importc: "Canvas_AngleArc", dynlib: dllname.}
proc Canvas_Chord*(AObj: pointer, X1: int32, Y1: int32, X2: int32, Y2: int32, X3: int32, Y3: int32, X4: int32, Y4: int32) {.importc: "Canvas_Chord", dynlib: dllname.}
proc Canvas_Ellipse*(AObj: pointer, X1: int32, Y1: int32, X2: int32, Y2: int32) {.importc: "Canvas_Ellipse", dynlib: dllname.}
proc Canvas_FloodFill*(AObj: pointer, X: int32, Y: int32, Color: TColor, FillStyle: TFillStyle) {.importc: "Canvas_FloodFill", dynlib: dllname.}
proc Canvas_HandleAllocated*(AObj: pointer): bool {.importc: "Canvas_HandleAllocated", dynlib: dllname.}
proc Canvas_LineTo*(AObj: pointer, X: int32, Y: int32) {.importc: "Canvas_LineTo", dynlib: dllname.}
proc Canvas_MoveTo*(AObj: pointer, X: int32, Y: int32) {.importc: "Canvas_MoveTo", dynlib: dllname.}
proc Canvas_Pie*(AObj: pointer, X1: int32, Y1: int32, X2: int32, Y2: int32, X3: int32, Y3: int32, X4: int32, Y4: int32) {.importc: "Canvas_Pie", dynlib: dllname.}
proc Canvas_Rectangle*(AObj: pointer, X1: int32, Y1: int32, X2: int32, Y2: int32) {.importc: "Canvas_Rectangle", dynlib: dllname.}
proc Canvas_Refresh*(AObj: pointer) {.importc: "Canvas_Refresh", dynlib: dllname.}
proc Canvas_RoundRect*(AObj: pointer, X1: int32, Y1: int32, X2: int32, Y2: int32, X3: int32, Y3: int32) {.importc: "Canvas_RoundRect", dynlib: dllname.}
proc Canvas_StretchDraw*(AObj: pointer, Rect: var TRect, Graphic: pointer) {.importc: "Canvas_StretchDraw", dynlib: dllname.}
proc Canvas_TextExtent*(AObj: pointer, Text: cstring, Result: var TSize) {.importc: "Canvas_TextExtent", dynlib: dllname.}
proc Canvas_TextOut*(AObj: pointer, X: int32, Y: int32, Text: cstring) {.importc: "Canvas_TextOut", dynlib: dllname.}
proc Canvas_Lock*(AObj: pointer) {.importc: "Canvas_Lock", dynlib: dllname.}
proc Canvas_TextHeight*(AObj: pointer, Text: cstring): int32 {.importc: "Canvas_TextHeight", dynlib: dllname.}
proc Canvas_TextWidth*(AObj: pointer, Text: cstring): int32 {.importc: "Canvas_TextWidth", dynlib: dllname.}
proc Canvas_Assign*(AObj: pointer, Source: pointer) {.importc: "Canvas_Assign", dynlib: dllname.}
proc Canvas_GetNamePath*(AObj: pointer): cstring {.importc: "Canvas_GetNamePath", dynlib: dllname.}
proc Canvas_ClassType*(AObj: pointer): TClass {.importc: "Canvas_ClassType", dynlib: dllname.}
proc Canvas_ClassName*(AObj: pointer): cstring {.importc: "Canvas_ClassName", dynlib: dllname.}
proc Canvas_InstanceSize*(AObj: pointer): int32 {.importc: "Canvas_InstanceSize", dynlib: dllname.}
proc Canvas_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Canvas_InheritsFrom", dynlib: dllname.}
proc Canvas_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Canvas_Equals", dynlib: dllname.}
proc Canvas_GetHashCode*(AObj: pointer): int32 {.importc: "Canvas_GetHashCode", dynlib: dllname.}
proc Canvas_ToString*(AObj: pointer): cstring {.importc: "Canvas_ToString", dynlib: dllname.}
proc Canvas_GetHandle*(AObj: pointer): HDC {.importc: "Canvas_GetHandle", dynlib: dllname.}
proc Canvas_SetHandle*(AObj: pointer, AValue: HDC) {.importc: "Canvas_SetHandle", dynlib: dllname.}
proc Canvas_GetBrush*(AObj: pointer): pointer {.importc: "Canvas_GetBrush", dynlib: dllname.}
proc Canvas_SetBrush*(AObj: pointer, AValue: pointer) {.importc: "Canvas_SetBrush", dynlib: dllname.}
proc Canvas_GetCopyMode*(AObj: pointer): int32 {.importc: "Canvas_GetCopyMode", dynlib: dllname.}
proc Canvas_SetCopyMode*(AObj: pointer, AValue: int32) {.importc: "Canvas_SetCopyMode", dynlib: dllname.}
proc Canvas_GetFont*(AObj: pointer): pointer {.importc: "Canvas_GetFont", dynlib: dllname.}
proc Canvas_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Canvas_SetFont", dynlib: dllname.}
proc Canvas_GetPen*(AObj: pointer): pointer {.importc: "Canvas_GetPen", dynlib: dllname.}
proc Canvas_SetPen*(AObj: pointer, AValue: pointer) {.importc: "Canvas_SetPen", dynlib: dllname.}
proc Canvas_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Canvas_SetOnChange", dynlib: dllname.}
proc Canvas_SetOnChanging*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Canvas_SetOnChanging", dynlib: dllname.}
proc Canvas_GetPixels*(AObj: pointer, X: int32, Y: int32): TColor {.importc: "Canvas_GetPixels", dynlib: dllname.}
proc Canvas_SetPixels*(AObj: pointer, X: int32, Y: int32, AValue: TColor) {.importc: "Canvas_SetPixels", dynlib: dllname.}
proc Canvas_StaticClassType*(): TClass {.importc: "Canvas_StaticClassType", dynlib: dllname.}
proc Canvas_BrushCopy*(AObj: pointer, Dest: var TRect, Bitmap: pointer, Source: var TRect, Color: TColor) {.importc: "Canvas_BrushCopy", dynlib: dllname.}
proc Canvas_CopyRect*(AObj: pointer, Dest: var TRect, Canvas: pointer, Source: var TRect) {.importc: "Canvas_CopyRect", dynlib: dllname.}
proc Canvas_Draw1*(AObj: pointer, X: int32, Y: int32, Graphic: pointer) {.importc: "Canvas_Draw1", dynlib: dllname.}
proc Canvas_Draw2*(AObj: pointer, X: int32, Y: int32, Graphic: pointer, Opacity: int8) {.importc: "Canvas_Draw2", dynlib: dllname.}
proc Canvas_DrawFocusRect*(AObj: pointer, ARect: var TRect) {.importc: "Canvas_DrawFocusRect", dynlib: dllname.}
proc Canvas_FillRect*(AObj: pointer, Rect: var TRect) {.importc: "Canvas_FillRect", dynlib: dllname.}
proc Canvas_FrameRect*(AObj: pointer, Rect: var TRect) {.importc: "Canvas_FrameRect", dynlib: dllname.}
proc Canvas_TextRect1*(AObj: pointer, Rect: var TRect, X: int32, Y: int32, Text: cstring) {.importc: "Canvas_TextRect1", dynlib: dllname.}
proc Canvas_TextRect2*(AObj: pointer, Rect: var TRect, Text: cstring, TextFormat: TTextFormat): int32 {.importc: "Canvas_TextRect2", dynlib: dllname.}
proc Canvas_Polygon*(AObj: pointer, APoints: var TPoint, ALen: int32) {.importc: "Canvas_Polygon", dynlib: dllname.}
proc Canvas_Polyline*(AObj: pointer, APoints: var TPoint, ALen: int32) {.importc: "Canvas_Polyline", dynlib: dllname.}
proc Canvas_PolyBezier*(AObj: pointer, APoints: var TPoint, ALen: int32) {.importc: "Canvas_PolyBezier", dynlib: dllname.}
# ----------------- TApplication ----------------------
proc Application_Create*(AOwner: pointer): pointer {.importc: "Application_Create", dynlib: dllname.}
proc Application_Free*(AObj: pointer) {.importc: "Application_Free", dynlib: dllname.}
proc Application_ActivateHint*(AObj: pointer, CursorPos: var TPoint) {.importc: "Application_ActivateHint", dynlib: dllname.}
proc Application_BringToFront*(AObj: pointer) {.importc: "Application_BringToFront", dynlib: dllname.}
proc Application_CancelHint*(AObj: pointer) {.importc: "Application_CancelHint", dynlib: dllname.}
proc Application_HandleMessage*(AObj: pointer) {.importc: "Application_HandleMessage", dynlib: dllname.}
proc Application_HideHint*(AObj: pointer) {.importc: "Application_HideHint", dynlib: dllname.}
proc Application_Minimize*(AObj: pointer) {.importc: "Application_Minimize", dynlib: dllname.}
proc Application_ModalStarted*(AObj: pointer) {.importc: "Application_ModalStarted", dynlib: dllname.}
proc Application_ModalFinished*(AObj: pointer) {.importc: "Application_ModalFinished", dynlib: dllname.}
proc Application_ProcessMessages*(AObj: pointer) {.importc: "Application_ProcessMessages", dynlib: dllname.}
proc Application_Restore*(AObj: pointer) {.importc: "Application_Restore", dynlib: dllname.}
proc Application_RestoreTopMosts*(AObj: pointer) {.importc: "Application_RestoreTopMosts", dynlib: dllname.}
proc Application_Terminate*(AObj: pointer) {.importc: "Application_Terminate", dynlib: dllname.}
proc Application_MessageBox*(AObj: pointer, Text: cstring, Caption: cstring, Flags: int32): int32 {.importc: "Application_MessageBox", dynlib: dllname.}
proc Application_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Application_FindComponent", dynlib: dllname.}
proc Application_GetNamePath*(AObj: pointer): cstring {.importc: "Application_GetNamePath", dynlib: dllname.}
proc Application_HasParent*(AObj: pointer): bool {.importc: "Application_HasParent", dynlib: dllname.}
proc Application_Assign*(AObj: pointer, Source: pointer) {.importc: "Application_Assign", dynlib: dllname.}
proc Application_ClassType*(AObj: pointer): TClass {.importc: "Application_ClassType", dynlib: dllname.}
proc Application_ClassName*(AObj: pointer): cstring {.importc: "Application_ClassName", dynlib: dllname.}
proc Application_InstanceSize*(AObj: pointer): int32 {.importc: "Application_InstanceSize", dynlib: dllname.}
proc Application_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Application_InheritsFrom", dynlib: dllname.}
proc Application_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Application_Equals", dynlib: dllname.}
proc Application_GetHashCode*(AObj: pointer): int32 {.importc: "Application_GetHashCode", dynlib: dllname.}
proc Application_ToString*(AObj: pointer): cstring {.importc: "Application_ToString", dynlib: dllname.}
proc Application_GetScaled*(AObj: pointer): bool {.importc: "Application_GetScaled", dynlib: dllname.}
proc Application_SetScaled*(AObj: pointer, AValue: bool) {.importc: "Application_SetScaled", dynlib: dllname.}
proc Application_GetSingleInstanceEnabled*(AObj: pointer): bool {.importc: "Application_GetSingleInstanceEnabled", dynlib: dllname.}
proc Application_SetSingleInstanceEnabled*(AObj: pointer, AValue: bool) {.importc: "Application_SetSingleInstanceEnabled", dynlib: dllname.}
proc Application_GetLocation*(AObj: pointer): cstring {.importc: "Application_GetLocation", dynlib: dllname.}
proc Application_GetStopOnException*(AObj: pointer): bool {.importc: "Application_GetStopOnException", dynlib: dllname.}
proc Application_SetStopOnException*(AObj: pointer, AValue: bool) {.importc: "Application_SetStopOnException", dynlib: dllname.}
proc Application_GetExceptionExitCode*(AObj: pointer): int32 {.importc: "Application_GetExceptionExitCode", dynlib: dllname.}
proc Application_SetExceptionExitCode*(AObj: pointer, AValue: int32) {.importc: "Application_SetExceptionExitCode", dynlib: dllname.}
proc Application_GetExeName*(AObj: pointer): cstring {.importc: "Application_GetExeName", dynlib: dllname.}
proc Application_GetHint*(AObj: pointer): cstring {.importc: "Application_GetHint", dynlib: dllname.}
proc Application_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Application_SetHint", dynlib: dllname.}
proc Application_GetHintColor*(AObj: pointer): TColor {.importc: "Application_GetHintColor", dynlib: dllname.}
proc Application_SetHintColor*(AObj: pointer, AValue: TColor) {.importc: "Application_SetHintColor", dynlib: dllname.}
proc Application_GetHintHidePause*(AObj: pointer): int32 {.importc: "Application_GetHintHidePause", dynlib: dllname.}
proc Application_SetHintHidePause*(AObj: pointer, AValue: int32) {.importc: "Application_SetHintHidePause", dynlib: dllname.}
proc Application_GetHintPause*(AObj: pointer): int32 {.importc: "Application_GetHintPause", dynlib: dllname.}
proc Application_SetHintPause*(AObj: pointer, AValue: int32) {.importc: "Application_SetHintPause", dynlib: dllname.}
proc Application_GetHintShortCuts*(AObj: pointer): bool {.importc: "Application_GetHintShortCuts", dynlib: dllname.}
proc Application_SetHintShortCuts*(AObj: pointer, AValue: bool) {.importc: "Application_SetHintShortCuts", dynlib: dllname.}
proc Application_GetHintShortPause*(AObj: pointer): int32 {.importc: "Application_GetHintShortPause", dynlib: dllname.}
proc Application_SetHintShortPause*(AObj: pointer, AValue: int32) {.importc: "Application_SetHintShortPause", dynlib: dllname.}
proc Application_GetIcon*(AObj: pointer): pointer {.importc: "Application_GetIcon", dynlib: dllname.}
proc Application_SetIcon*(AObj: pointer, AValue: pointer) {.importc: "Application_SetIcon", dynlib: dllname.}
proc Application_GetMainForm*(AObj: pointer): pointer {.importc: "Application_GetMainForm", dynlib: dllname.}
proc Application_GetMainFormHandle*(AObj: pointer): HWND {.importc: "Application_GetMainFormHandle", dynlib: dllname.}
proc Application_GetMainFormOnTaskBar*(AObj: pointer): bool {.importc: "Application_GetMainFormOnTaskBar", dynlib: dllname.}
proc Application_SetMainFormOnTaskBar*(AObj: pointer, AValue: bool) {.importc: "Application_SetMainFormOnTaskBar", dynlib: dllname.}
proc Application_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Application_GetBiDiMode", dynlib: dllname.}
proc Application_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Application_SetBiDiMode", dynlib: dllname.}
proc Application_GetShowHint*(AObj: pointer): bool {.importc: "Application_GetShowHint", dynlib: dllname.}
proc Application_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Application_SetShowHint", dynlib: dllname.}
proc Application_GetShowMainForm*(AObj: pointer): bool {.importc: "Application_GetShowMainForm", dynlib: dllname.}
proc Application_SetShowMainForm*(AObj: pointer, AValue: bool) {.importc: "Application_SetShowMainForm", dynlib: dllname.}
proc Application_GetTitle*(AObj: pointer): cstring {.importc: "Application_GetTitle", dynlib: dllname.}
proc Application_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "Application_SetTitle", dynlib: dllname.}
proc Application_SetOnActivate*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Application_SetOnActivate", dynlib: dllname.}
proc Application_SetOnDeactivate*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Application_SetOnDeactivate", dynlib: dllname.}
proc Application_SetOnException*(AObj: pointer, AEventId: TExceptionEvent) {.importc: "Application_SetOnException", dynlib: dllname.}
proc Application_SetOnHelp*(AObj: pointer, AEventId: THelpEvent) {.importc: "Application_SetOnHelp", dynlib: dllname.}
proc Application_SetOnHint*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Application_SetOnHint", dynlib: dllname.}
proc Application_SetOnMinimize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Application_SetOnMinimize", dynlib: dllname.}
proc Application_SetOnRestore*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Application_SetOnRestore", dynlib: dllname.}
proc Application_SetOnShortCut*(AObj: pointer, AEventId: TShortCutEvent) {.importc: "Application_SetOnShortCut", dynlib: dllname.}
proc Application_GetHandle*(AObj: pointer): HWND {.importc: "Application_GetHandle", dynlib: dllname.}
proc Application_SetHandle*(AObj: pointer, AValue: HWND) {.importc: "Application_SetHandle", dynlib: dllname.}
proc Application_GetComponentCount*(AObj: pointer): int32 {.importc: "Application_GetComponentCount", dynlib: dllname.}
proc Application_GetComponentIndex*(AObj: pointer): int32 {.importc: "Application_GetComponentIndex", dynlib: dllname.}
proc Application_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Application_SetComponentIndex", dynlib: dllname.}
proc Application_GetOwner*(AObj: pointer): pointer {.importc: "Application_GetOwner", dynlib: dllname.}
proc Application_GetName*(AObj: pointer): cstring {.importc: "Application_GetName", dynlib: dllname.}
proc Application_SetName*(AObj: pointer, AValue: cstring) {.importc: "Application_SetName", dynlib: dllname.}
proc Application_GetTag*(AObj: pointer): int {.importc: "Application_GetTag", dynlib: dllname.}
proc Application_SetTag*(AObj: pointer, AValue: int) {.importc: "Application_SetTag", dynlib: dllname.}
proc Application_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Application_GetComponents", dynlib: dllname.}
proc Application_StaticClassType*(): TClass {.importc: "Application_StaticClassType", dynlib: dllname.}
proc Application_Initialize*(AObj: pointer) {.importc: "Application_Initialize", dynlib: dllname.}
proc Application_CreateForm*(App: pointer, AInitScale: bool): pointer {.importc: "Application_CreateForm", dynlib: dllname.}
proc Application_Run*(AObj: pointer) {.importc: "Application_Run", dynlib: dllname.}
# ----------------- TMainMenu ----------------------
proc MainMenu_Create*(AOwner: pointer): pointer {.importc: "MainMenu_Create", dynlib: dllname.}
proc MainMenu_Free*(AObj: pointer) {.importc: "MainMenu_Free", dynlib: dllname.}
proc MainMenu_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "MainMenu_FindComponent", dynlib: dllname.}
proc MainMenu_GetNamePath*(AObj: pointer): cstring {.importc: "MainMenu_GetNamePath", dynlib: dllname.}
proc MainMenu_HasParent*(AObj: pointer): bool {.importc: "MainMenu_HasParent", dynlib: dllname.}
proc MainMenu_Assign*(AObj: pointer, Source: pointer) {.importc: "MainMenu_Assign", dynlib: dllname.}
proc MainMenu_ClassType*(AObj: pointer): TClass {.importc: "MainMenu_ClassType", dynlib: dllname.}
proc MainMenu_ClassName*(AObj: pointer): cstring {.importc: "MainMenu_ClassName", dynlib: dllname.}
proc MainMenu_InstanceSize*(AObj: pointer): int32 {.importc: "MainMenu_InstanceSize", dynlib: dllname.}
proc MainMenu_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "MainMenu_InheritsFrom", dynlib: dllname.}
proc MainMenu_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "MainMenu_Equals", dynlib: dllname.}
proc MainMenu_GetHashCode*(AObj: pointer): int32 {.importc: "MainMenu_GetHashCode", dynlib: dllname.}
proc MainMenu_ToString*(AObj: pointer): cstring {.importc: "MainMenu_ToString", dynlib: dllname.}
proc MainMenu_GetImagesWidth*(AObj: pointer): int32 {.importc: "MainMenu_GetImagesWidth", dynlib: dllname.}
proc MainMenu_SetImagesWidth*(AObj: pointer, AValue: int32) {.importc: "MainMenu_SetImagesWidth", dynlib: dllname.}
proc MainMenu_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "MainMenu_GetBiDiMode", dynlib: dllname.}
proc MainMenu_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "MainMenu_SetBiDiMode", dynlib: dllname.}
proc MainMenu_GetImages*(AObj: pointer): pointer {.importc: "MainMenu_GetImages", dynlib: dllname.}
proc MainMenu_SetImages*(AObj: pointer, AValue: pointer) {.importc: "MainMenu_SetImages", dynlib: dllname.}
proc MainMenu_GetOwnerDraw*(AObj: pointer): bool {.importc: "MainMenu_GetOwnerDraw", dynlib: dllname.}
proc MainMenu_SetOwnerDraw*(AObj: pointer, AValue: bool) {.importc: "MainMenu_SetOwnerDraw", dynlib: dllname.}
proc MainMenu_SetOnChange*(AObj: pointer, AEventId: TMenuChangeEvent) {.importc: "MainMenu_SetOnChange", dynlib: dllname.}
proc MainMenu_GetHandle*(AObj: pointer): HMENU {.importc: "MainMenu_GetHandle", dynlib: dllname.}
proc MainMenu_GetItems*(AObj: pointer): pointer {.importc: "MainMenu_GetItems", dynlib: dllname.}
proc MainMenu_GetComponentCount*(AObj: pointer): int32 {.importc: "MainMenu_GetComponentCount", dynlib: dllname.}
proc MainMenu_GetComponentIndex*(AObj: pointer): int32 {.importc: "MainMenu_GetComponentIndex", dynlib: dllname.}
proc MainMenu_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "MainMenu_SetComponentIndex", dynlib: dllname.}
proc MainMenu_GetOwner*(AObj: pointer): pointer {.importc: "MainMenu_GetOwner", dynlib: dllname.}
proc MainMenu_GetName*(AObj: pointer): cstring {.importc: "MainMenu_GetName", dynlib: dllname.}
proc MainMenu_SetName*(AObj: pointer, AValue: cstring) {.importc: "MainMenu_SetName", dynlib: dllname.}
proc MainMenu_GetTag*(AObj: pointer): int {.importc: "MainMenu_GetTag", dynlib: dllname.}
proc MainMenu_SetTag*(AObj: pointer, AValue: int) {.importc: "MainMenu_SetTag", dynlib: dllname.}
proc MainMenu_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "MainMenu_GetComponents", dynlib: dllname.}
proc MainMenu_StaticClassType*(): TClass {.importc: "MainMenu_StaticClassType", dynlib: dllname.}
# ----------------- TPngImage ----------------------
proc PngImage_Create*(): pointer {.importc: "PngImage_Create", dynlib: dllname.}
proc PngImage_Free*(AObj: pointer) {.importc: "PngImage_Free", dynlib: dllname.}
proc PngImage_Assign*(AObj: pointer, Source: pointer) {.importc: "PngImage_Assign", dynlib: dllname.}
proc PngImage_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "PngImage_LoadFromStream", dynlib: dllname.}
proc PngImage_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "PngImage_SaveToStream", dynlib: dllname.}
proc PngImage_LoadFromResourceName*(AObj: pointer, Instance: uint, Name: cstring) {.importc: "PngImage_LoadFromResourceName", dynlib: dllname.}
proc PngImage_LoadFromResourceID*(AObj: pointer, Instance: uint, ResID: int32) {.importc: "PngImage_LoadFromResourceID", dynlib: dllname.}
proc PngImage_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "PngImage_Equals", dynlib: dllname.}
proc PngImage_LoadFromFile*(AObj: pointer, Filename: cstring) {.importc: "PngImage_LoadFromFile", dynlib: dllname.}
proc PngImage_SaveToFile*(AObj: pointer, Filename: cstring) {.importc: "PngImage_SaveToFile", dynlib: dllname.}
proc PngImage_SetSize*(AObj: pointer, AWidth: int32, AHeight: int32) {.importc: "PngImage_SetSize", dynlib: dllname.}
proc PngImage_GetNamePath*(AObj: pointer): cstring {.importc: "PngImage_GetNamePath", dynlib: dllname.}
proc PngImage_ClassType*(AObj: pointer): TClass {.importc: "PngImage_ClassType", dynlib: dllname.}
proc PngImage_ClassName*(AObj: pointer): cstring {.importc: "PngImage_ClassName", dynlib: dllname.}
proc PngImage_InstanceSize*(AObj: pointer): int32 {.importc: "PngImage_InstanceSize", dynlib: dllname.}
proc PngImage_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "PngImage_InheritsFrom", dynlib: dllname.}
proc PngImage_GetHashCode*(AObj: pointer): int32 {.importc: "PngImage_GetHashCode", dynlib: dllname.}
proc PngImage_ToString*(AObj: pointer): cstring {.importc: "PngImage_ToString", dynlib: dllname.}
proc PngImage_GetCanvas*(AObj: pointer): pointer {.importc: "PngImage_GetCanvas", dynlib: dllname.}
proc PngImage_GetWidth*(AObj: pointer): int32 {.importc: "PngImage_GetWidth", dynlib: dllname.}
proc PngImage_GetHeight*(AObj: pointer): int32 {.importc: "PngImage_GetHeight", dynlib: dllname.}
proc PngImage_GetEmpty*(AObj: pointer): bool {.importc: "PngImage_GetEmpty", dynlib: dllname.}
proc PngImage_GetModified*(AObj: pointer): bool {.importc: "PngImage_GetModified", dynlib: dllname.}
proc PngImage_SetModified*(AObj: pointer, AValue: bool) {.importc: "PngImage_SetModified", dynlib: dllname.}
proc PngImage_GetPalette*(AObj: pointer): HPALETTE {.importc: "PngImage_GetPalette", dynlib: dllname.}
proc PngImage_SetPalette*(AObj: pointer, AValue: HPALETTE) {.importc: "PngImage_SetPalette", dynlib: dllname.}
proc PngImage_GetPaletteModified*(AObj: pointer): bool {.importc: "PngImage_GetPaletteModified", dynlib: dllname.}
proc PngImage_SetPaletteModified*(AObj: pointer, AValue: bool) {.importc: "PngImage_SetPaletteModified", dynlib: dllname.}
proc PngImage_GetTransparent*(AObj: pointer): bool {.importc: "PngImage_GetTransparent", dynlib: dllname.}
proc PngImage_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "PngImage_SetTransparent", dynlib: dllname.}
proc PngImage_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PngImage_SetOnChange", dynlib: dllname.}
proc PngImage_StaticClassType*(): TClass {.importc: "PngImage_StaticClassType", dynlib: dllname.}
# ----------------- TJPEGImage ----------------------
proc JPEGImage_Create*(): pointer {.importc: "JPEGImage_Create", dynlib: dllname.}
proc JPEGImage_Free*(AObj: pointer) {.importc: "JPEGImage_Free", dynlib: dllname.}
proc JPEGImage_Assign*(AObj: pointer, Source: pointer) {.importc: "JPEGImage_Assign", dynlib: dllname.}
proc JPEGImage_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "JPEGImage_LoadFromStream", dynlib: dllname.}
proc JPEGImage_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "JPEGImage_SaveToStream", dynlib: dllname.}
proc JPEGImage_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "JPEGImage_Equals", dynlib: dllname.}
proc JPEGImage_LoadFromFile*(AObj: pointer, Filename: cstring) {.importc: "JPEGImage_LoadFromFile", dynlib: dllname.}
proc JPEGImage_SaveToFile*(AObj: pointer, Filename: cstring) {.importc: "JPEGImage_SaveToFile", dynlib: dllname.}
proc JPEGImage_SetSize*(AObj: pointer, AWidth: int32, AHeight: int32) {.importc: "JPEGImage_SetSize", dynlib: dllname.}
proc JPEGImage_GetNamePath*(AObj: pointer): cstring {.importc: "JPEGImage_GetNamePath", dynlib: dllname.}
proc JPEGImage_ClassType*(AObj: pointer): TClass {.importc: "JPEGImage_ClassType", dynlib: dllname.}
proc JPEGImage_ClassName*(AObj: pointer): cstring {.importc: "JPEGImage_ClassName", dynlib: dllname.}
proc JPEGImage_InstanceSize*(AObj: pointer): int32 {.importc: "JPEGImage_InstanceSize", dynlib: dllname.}
proc JPEGImage_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "JPEGImage_InheritsFrom", dynlib: dllname.}
proc JPEGImage_GetHashCode*(AObj: pointer): int32 {.importc: "JPEGImage_GetHashCode", dynlib: dllname.}
proc JPEGImage_ToString*(AObj: pointer): cstring {.importc: "JPEGImage_ToString", dynlib: dllname.}
proc JPEGImage_GetPixelFormat*(AObj: pointer): TPixelFormat {.importc: "JPEGImage_GetPixelFormat", dynlib: dllname.}
proc JPEGImage_SetPixelFormat*(AObj: pointer, AValue: TJPEGPixelFormat) {.importc: "JPEGImage_SetPixelFormat", dynlib: dllname.}
proc JPEGImage_GetPerformance*(AObj: pointer): TJPEGPerformance {.importc: "JPEGImage_GetPerformance", dynlib: dllname.}
proc JPEGImage_SetPerformance*(AObj: pointer, AValue: TJPEGPerformance) {.importc: "JPEGImage_SetPerformance", dynlib: dllname.}
proc JPEGImage_GetCanvas*(AObj: pointer): pointer {.importc: "JPEGImage_GetCanvas", dynlib: dllname.}
proc JPEGImage_GetEmpty*(AObj: pointer): bool {.importc: "JPEGImage_GetEmpty", dynlib: dllname.}
proc JPEGImage_GetHeight*(AObj: pointer): int32 {.importc: "JPEGImage_GetHeight", dynlib: dllname.}
proc JPEGImage_SetHeight*(AObj: pointer, AValue: int32) {.importc: "JPEGImage_SetHeight", dynlib: dllname.}
proc JPEGImage_GetModified*(AObj: pointer): bool {.importc: "JPEGImage_GetModified", dynlib: dllname.}
proc JPEGImage_SetModified*(AObj: pointer, AValue: bool) {.importc: "JPEGImage_SetModified", dynlib: dllname.}
proc JPEGImage_GetPalette*(AObj: pointer): HPALETTE {.importc: "JPEGImage_GetPalette", dynlib: dllname.}
proc JPEGImage_SetPalette*(AObj: pointer, AValue: HPALETTE) {.importc: "JPEGImage_SetPalette", dynlib: dllname.}
proc JPEGImage_GetPaletteModified*(AObj: pointer): bool {.importc: "JPEGImage_GetPaletteModified", dynlib: dllname.}
proc JPEGImage_SetPaletteModified*(AObj: pointer, AValue: bool) {.importc: "JPEGImage_SetPaletteModified", dynlib: dllname.}
proc JPEGImage_GetTransparent*(AObj: pointer): bool {.importc: "JPEGImage_GetTransparent", dynlib: dllname.}
proc JPEGImage_SetTransparent*(AObj: pointer, AValue: bool) {.importc: "JPEGImage_SetTransparent", dynlib: dllname.}
proc JPEGImage_GetWidth*(AObj: pointer): int32 {.importc: "JPEGImage_GetWidth", dynlib: dllname.}
proc JPEGImage_SetWidth*(AObj: pointer, AValue: int32) {.importc: "JPEGImage_SetWidth", dynlib: dllname.}
proc JPEGImage_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "JPEGImage_SetOnChange", dynlib: dllname.}
proc JPEGImage_StaticClassType*(): TClass {.importc: "JPEGImage_StaticClassType", dynlib: dllname.}
# ----------------- TGIFImage ----------------------
proc GIFImage_Create*(): pointer {.importc: "GIFImage_Create", dynlib: dllname.}
proc GIFImage_Free*(AObj: pointer) {.importc: "GIFImage_Free", dynlib: dllname.}
proc GIFImage_SaveToStream*(AObj: pointer, Stream: pointer) {.importc: "GIFImage_SaveToStream", dynlib: dllname.}
proc GIFImage_LoadFromStream*(AObj: pointer, Stream: pointer) {.importc: "GIFImage_LoadFromStream", dynlib: dllname.}
proc GIFImage_Clear*(AObj: pointer) {.importc: "GIFImage_Clear", dynlib: dllname.}
proc GIFImage_Assign*(AObj: pointer, Source: pointer) {.importc: "GIFImage_Assign", dynlib: dllname.}
proc GIFImage_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "GIFImage_Equals", dynlib: dllname.}
proc GIFImage_LoadFromFile*(AObj: pointer, Filename: cstring) {.importc: "GIFImage_LoadFromFile", dynlib: dllname.}
proc GIFImage_SaveToFile*(AObj: pointer, Filename: cstring) {.importc: "GIFImage_SaveToFile", dynlib: dllname.}
proc GIFImage_SetSize*(AObj: pointer, AWidth: int32, AHeight: int32) {.importc: "GIFImage_SetSize", dynlib: dllname.}
proc GIFImage_GetNamePath*(AObj: pointer): cstring {.importc: "GIFImage_GetNamePath", dynlib: dllname.}
proc GIFImage_ClassType*(AObj: pointer): TClass {.importc: "GIFImage_ClassType", dynlib: dllname.}
proc GIFImage_ClassName*(AObj: pointer): cstring {.importc: "GIFImage_ClassName", dynlib: dllname.}
proc GIFImage_InstanceSize*(AObj: pointer): int32 {.importc: "GIFImage_InstanceSize", dynlib: dllname.}
proc GIFImage_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "GIFImage_InheritsFrom", dynlib: dllname.}
proc GIFImage_GetHashCode*(AObj: pointer): int32 {.importc: "GIFImage_GetHashCode", dynlib: dllname.}
proc GIFImage_ToString*(AObj: pointer): cstring {.importc: "GIFImage_ToString", dynlib: dllname.}
proc GIFImage_GetBitsPerPixel*(AObj: pointer): int32 {.importc: "GIFImage_GetBitsPerPixel", dynlib: dllname.}
proc GIFImage_GetEmpty*(AObj: pointer): bool {.importc: "GIFImage_GetEmpty", dynlib: dllname.}
proc GIFImage_GetHeight*(AObj: pointer): int32 {.importc: "GIFImage_GetHeight", dynlib: dllname.}
proc GIFImage_SetHeight*(AObj: pointer, AValue: int32) {.importc: "GIFImage_SetHeight", dynlib: dllname.}
proc GIFImage_GetModified*(AObj: pointer): bool {.importc: "GIFImage_GetModified", dynlib: dllname.}
proc GIFImage_SetModified*(AObj: pointer, AValue: bool) {.importc: "GIFImage_SetModified", dynlib: dllname.}
proc GIFImage_GetPalette*(AObj: pointer): HPALETTE {.importc: "GIFImage_GetPalette", dynlib: dllname.}
proc GIFImage_SetPalette*(AObj: pointer, AValue: HPALETTE) {.importc: "GIFImage_SetPalette", dynlib: dllname.}
proc GIFImage_GetPaletteModified*(AObj: pointer): bool {.importc: "GIFImage_GetPaletteModified", dynlib: dllname.}
proc GIFImage_SetPaletteModified*(AObj: pointer, AValue: bool) {.importc: "GIFImage_SetPaletteModified", dynlib: dllname.}
proc GIFImage_GetTransparent*(AObj: pointer): bool {.importc: "GIFImage_GetTransparent", dynlib: dllname.}
proc GIFImage_GetWidth*(AObj: pointer): int32 {.importc: "GIFImage_GetWidth", dynlib: dllname.}
proc GIFImage_SetWidth*(AObj: pointer, AValue: int32) {.importc: "GIFImage_SetWidth", dynlib: dllname.}
proc GIFImage_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "GIFImage_SetOnChange", dynlib: dllname.}
proc GIFImage_StaticClassType*(): TClass {.importc: "GIFImage_StaticClassType", dynlib: dllname.}
# ----------------- TActionList ----------------------
proc ActionList_Create*(AOwner: pointer): pointer {.importc: "ActionList_Create", dynlib: dllname.}
proc ActionList_Free*(AObj: pointer) {.importc: "ActionList_Free", dynlib: dllname.}
proc ActionList_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ActionList_FindComponent", dynlib: dllname.}
proc ActionList_GetNamePath*(AObj: pointer): cstring {.importc: "ActionList_GetNamePath", dynlib: dllname.}
proc ActionList_HasParent*(AObj: pointer): bool {.importc: "ActionList_HasParent", dynlib: dllname.}
proc ActionList_Assign*(AObj: pointer, Source: pointer) {.importc: "ActionList_Assign", dynlib: dllname.}
proc ActionList_ClassType*(AObj: pointer): TClass {.importc: "ActionList_ClassType", dynlib: dllname.}
proc ActionList_ClassName*(AObj: pointer): cstring {.importc: "ActionList_ClassName", dynlib: dllname.}
proc ActionList_InstanceSize*(AObj: pointer): int32 {.importc: "ActionList_InstanceSize", dynlib: dllname.}
proc ActionList_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ActionList_InheritsFrom", dynlib: dllname.}
proc ActionList_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ActionList_Equals", dynlib: dllname.}
proc ActionList_GetHashCode*(AObj: pointer): int32 {.importc: "ActionList_GetHashCode", dynlib: dllname.}
proc ActionList_ToString*(AObj: pointer): cstring {.importc: "ActionList_ToString", dynlib: dllname.}
proc ActionList_GetImages*(AObj: pointer): pointer {.importc: "ActionList_GetImages", dynlib: dllname.}
proc ActionList_SetImages*(AObj: pointer, AValue: pointer) {.importc: "ActionList_SetImages", dynlib: dllname.}
proc ActionList_GetState*(AObj: pointer): TActionListState {.importc: "ActionList_GetState", dynlib: dllname.}
proc ActionList_SetState*(AObj: pointer, AValue: TActionListState) {.importc: "ActionList_SetState", dynlib: dllname.}
proc ActionList_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ActionList_SetOnChange", dynlib: dllname.}
proc ActionList_GetComponentCount*(AObj: pointer): int32 {.importc: "ActionList_GetComponentCount", dynlib: dllname.}
proc ActionList_GetComponentIndex*(AObj: pointer): int32 {.importc: "ActionList_GetComponentIndex", dynlib: dllname.}
proc ActionList_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ActionList_SetComponentIndex", dynlib: dllname.}
proc ActionList_GetOwner*(AObj: pointer): pointer {.importc: "ActionList_GetOwner", dynlib: dllname.}
proc ActionList_GetName*(AObj: pointer): cstring {.importc: "ActionList_GetName", dynlib: dllname.}
proc ActionList_SetName*(AObj: pointer, AValue: cstring) {.importc: "ActionList_SetName", dynlib: dllname.}
proc ActionList_GetTag*(AObj: pointer): int {.importc: "ActionList_GetTag", dynlib: dllname.}
proc ActionList_SetTag*(AObj: pointer, AValue: int) {.importc: "ActionList_SetTag", dynlib: dllname.}
proc ActionList_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ActionList_GetComponents", dynlib: dllname.}
proc ActionList_StaticClassType*(): TClass {.importc: "ActionList_StaticClassType", dynlib: dllname.}
# ----------------- TAction ----------------------
proc Action_Create*(AOwner: pointer): pointer {.importc: "Action_Create", dynlib: dllname.}
proc Action_Free*(AObj: pointer) {.importc: "Action_Free", dynlib: dllname.}
proc Action_Execute*(AObj: pointer): bool {.importc: "Action_Execute", dynlib: dllname.}
proc Action_Update*(AObj: pointer): bool {.importc: "Action_Update", dynlib: dllname.}
proc Action_HasParent*(AObj: pointer): bool {.importc: "Action_HasParent", dynlib: dllname.}
proc Action_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Action_FindComponent", dynlib: dllname.}
proc Action_GetNamePath*(AObj: pointer): cstring {.importc: "Action_GetNamePath", dynlib: dllname.}
proc Action_Assign*(AObj: pointer, Source: pointer) {.importc: "Action_Assign", dynlib: dllname.}
proc Action_ClassType*(AObj: pointer): TClass {.importc: "Action_ClassType", dynlib: dllname.}
proc Action_ClassName*(AObj: pointer): cstring {.importc: "Action_ClassName", dynlib: dllname.}
proc Action_InstanceSize*(AObj: pointer): int32 {.importc: "Action_InstanceSize", dynlib: dllname.}
proc Action_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Action_InheritsFrom", dynlib: dllname.}
proc Action_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Action_Equals", dynlib: dllname.}
proc Action_GetHashCode*(AObj: pointer): int32 {.importc: "Action_GetHashCode", dynlib: dllname.}
proc Action_ToString*(AObj: pointer): cstring {.importc: "Action_ToString", dynlib: dllname.}
proc Action_GetAutoCheck*(AObj: pointer): bool {.importc: "Action_GetAutoCheck", dynlib: dllname.}
proc Action_SetAutoCheck*(AObj: pointer, AValue: bool) {.importc: "Action_SetAutoCheck", dynlib: dllname.}
proc Action_GetCaption*(AObj: pointer): cstring {.importc: "Action_GetCaption", dynlib: dllname.}
proc Action_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "Action_SetCaption", dynlib: dllname.}
proc Action_GetChecked*(AObj: pointer): bool {.importc: "Action_GetChecked", dynlib: dllname.}
proc Action_SetChecked*(AObj: pointer, AValue: bool) {.importc: "Action_SetChecked", dynlib: dllname.}
proc Action_GetEnabled*(AObj: pointer): bool {.importc: "Action_GetEnabled", dynlib: dllname.}
proc Action_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Action_SetEnabled", dynlib: dllname.}
proc Action_GetGroupIndex*(AObj: pointer): int32 {.importc: "Action_GetGroupIndex", dynlib: dllname.}
proc Action_SetGroupIndex*(AObj: pointer, AValue: int32) {.importc: "Action_SetGroupIndex", dynlib: dllname.}
proc Action_GetHint*(AObj: pointer): cstring {.importc: "Action_GetHint", dynlib: dllname.}
proc Action_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Action_SetHint", dynlib: dllname.}
proc Action_GetImageIndex*(AObj: pointer): int32 {.importc: "Action_GetImageIndex", dynlib: dllname.}
proc Action_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "Action_SetImageIndex", dynlib: dllname.}
proc Action_GetShortCut*(AObj: pointer): TShortCut {.importc: "Action_GetShortCut", dynlib: dllname.}
proc Action_SetShortCut*(AObj: pointer, AValue: TShortCut) {.importc: "Action_SetShortCut", dynlib: dllname.}
proc Action_GetVisible*(AObj: pointer): bool {.importc: "Action_GetVisible", dynlib: dllname.}
proc Action_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Action_SetVisible", dynlib: dllname.}
proc Action_SetOnExecute*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Action_SetOnExecute", dynlib: dllname.}
proc Action_SetOnUpdate*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Action_SetOnUpdate", dynlib: dllname.}
proc Action_GetIndex*(AObj: pointer): int32 {.importc: "Action_GetIndex", dynlib: dllname.}
proc Action_SetIndex*(AObj: pointer, AValue: int32) {.importc: "Action_SetIndex", dynlib: dllname.}
proc Action_GetComponentCount*(AObj: pointer): int32 {.importc: "Action_GetComponentCount", dynlib: dllname.}
proc Action_GetComponentIndex*(AObj: pointer): int32 {.importc: "Action_GetComponentIndex", dynlib: dllname.}
proc Action_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Action_SetComponentIndex", dynlib: dllname.}
proc Action_GetOwner*(AObj: pointer): pointer {.importc: "Action_GetOwner", dynlib: dllname.}
proc Action_GetName*(AObj: pointer): cstring {.importc: "Action_GetName", dynlib: dllname.}
proc Action_SetName*(AObj: pointer, AValue: cstring) {.importc: "Action_SetName", dynlib: dllname.}
proc Action_GetTag*(AObj: pointer): int {.importc: "Action_GetTag", dynlib: dllname.}
proc Action_SetTag*(AObj: pointer, AValue: int) {.importc: "Action_SetTag", dynlib: dllname.}
proc Action_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Action_GetComponents", dynlib: dllname.}
proc Action_StaticClassType*(): TClass {.importc: "Action_StaticClassType", dynlib: dllname.}
# ----------------- TToolButton ----------------------
proc ToolButton_Create*(AOwner: pointer): pointer {.importc: "ToolButton_Create", dynlib: dllname.}
proc ToolButton_Free*(AObj: pointer) {.importc: "ToolButton_Free", dynlib: dllname.}
proc ToolButton_CheckMenuDropdown*(AObj: pointer): bool {.importc: "ToolButton_CheckMenuDropdown", dynlib: dllname.}
proc ToolButton_Click*(AObj: pointer) {.importc: "ToolButton_Click", dynlib: dllname.}
proc ToolButton_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ToolButton_SetBounds", dynlib: dllname.}
proc ToolButton_BringToFront*(AObj: pointer) {.importc: "ToolButton_BringToFront", dynlib: dllname.}
proc ToolButton_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ToolButton_ClientToScreen", dynlib: dllname.}
proc ToolButton_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ToolButton_ClientToParent", dynlib: dllname.}
proc ToolButton_Dragging*(AObj: pointer): bool {.importc: "ToolButton_Dragging", dynlib: dllname.}
proc ToolButton_HasParent*(AObj: pointer): bool {.importc: "ToolButton_HasParent", dynlib: dllname.}
proc ToolButton_Hide*(AObj: pointer) {.importc: "ToolButton_Hide", dynlib: dllname.}
proc ToolButton_Invalidate*(AObj: pointer) {.importc: "ToolButton_Invalidate", dynlib: dllname.}
proc ToolButton_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ToolButton_Perform", dynlib: dllname.}
proc ToolButton_Refresh*(AObj: pointer) {.importc: "ToolButton_Refresh", dynlib: dllname.}
proc ToolButton_Repaint*(AObj: pointer) {.importc: "ToolButton_Repaint", dynlib: dllname.}
proc ToolButton_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ToolButton_ScreenToClient", dynlib: dllname.}
proc ToolButton_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ToolButton_ParentToClient", dynlib: dllname.}
proc ToolButton_SendToBack*(AObj: pointer) {.importc: "ToolButton_SendToBack", dynlib: dllname.}
proc ToolButton_Show*(AObj: pointer) {.importc: "ToolButton_Show", dynlib: dllname.}
proc ToolButton_Update*(AObj: pointer) {.importc: "ToolButton_Update", dynlib: dllname.}
proc ToolButton_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ToolButton_GetTextBuf", dynlib: dllname.}
proc ToolButton_GetTextLen*(AObj: pointer): int32 {.importc: "ToolButton_GetTextLen", dynlib: dllname.}
proc ToolButton_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ToolButton_SetTextBuf", dynlib: dllname.}
proc ToolButton_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ToolButton_FindComponent", dynlib: dllname.}
proc ToolButton_GetNamePath*(AObj: pointer): cstring {.importc: "ToolButton_GetNamePath", dynlib: dllname.}
proc ToolButton_Assign*(AObj: pointer, Source: pointer) {.importc: "ToolButton_Assign", dynlib: dllname.}
proc ToolButton_ClassType*(AObj: pointer): TClass {.importc: "ToolButton_ClassType", dynlib: dllname.}
proc ToolButton_ClassName*(AObj: pointer): cstring {.importc: "ToolButton_ClassName", dynlib: dllname.}
proc ToolButton_InstanceSize*(AObj: pointer): int32 {.importc: "ToolButton_InstanceSize", dynlib: dllname.}
proc ToolButton_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ToolButton_InheritsFrom", dynlib: dllname.}
proc ToolButton_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ToolButton_Equals", dynlib: dllname.}
proc ToolButton_GetHashCode*(AObj: pointer): int32 {.importc: "ToolButton_GetHashCode", dynlib: dllname.}
proc ToolButton_ToString*(AObj: pointer): cstring {.importc: "ToolButton_ToString", dynlib: dllname.}
proc ToolButton_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ToolButton_AnchorToNeighbour", dynlib: dllname.}
proc ToolButton_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ToolButton_AnchorParallel", dynlib: dllname.}
proc ToolButton_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ToolButton_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ToolButton_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ToolButton_AnchorVerticalCenterTo", dynlib: dllname.}
proc ToolButton_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ToolButton_AnchorSame", dynlib: dllname.}
proc ToolButton_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ToolButton_AnchorAsAlign", dynlib: dllname.}
proc ToolButton_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ToolButton_AnchorClient", dynlib: dllname.}
proc ToolButton_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_ScaleDesignToForm", dynlib: dllname.}
proc ToolButton_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_ScaleFormToDesign", dynlib: dllname.}
proc ToolButton_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_Scale96ToForm", dynlib: dllname.}
proc ToolButton_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_ScaleFormTo96", dynlib: dllname.}
proc ToolButton_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_Scale96ToFont", dynlib: dllname.}
proc ToolButton_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_ScaleFontTo96", dynlib: dllname.}
proc ToolButton_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_ScaleScreenToFont", dynlib: dllname.}
proc ToolButton_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_ScaleFontToScreen", dynlib: dllname.}
proc ToolButton_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_Scale96ToScreen", dynlib: dllname.}
proc ToolButton_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToolButton_ScaleScreenTo96", dynlib: dllname.}
proc ToolButton_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ToolButton_AutoAdjustLayout", dynlib: dllname.}
proc ToolButton_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ToolButton_FixDesignFontsPPI", dynlib: dllname.}
proc ToolButton_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ToolButton_ScaleFontsPPI", dynlib: dllname.}
proc ToolButton_GetIndex*(AObj: pointer): int32 {.importc: "ToolButton_GetIndex", dynlib: dllname.}
proc ToolButton_GetAction*(AObj: pointer): pointer {.importc: "ToolButton_GetAction", dynlib: dllname.}
proc ToolButton_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetAction", dynlib: dllname.}
proc ToolButton_GetAllowAllUp*(AObj: pointer): bool {.importc: "ToolButton_GetAllowAllUp", dynlib: dllname.}
proc ToolButton_SetAllowAllUp*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetAllowAllUp", dynlib: dllname.}
proc ToolButton_GetAutoSize*(AObj: pointer): bool {.importc: "ToolButton_GetAutoSize", dynlib: dllname.}
proc ToolButton_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetAutoSize", dynlib: dllname.}
proc ToolButton_GetCaption*(AObj: pointer): cstring {.importc: "ToolButton_GetCaption", dynlib: dllname.}
proc ToolButton_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "ToolButton_SetCaption", dynlib: dllname.}
proc ToolButton_GetDown*(AObj: pointer): bool {.importc: "ToolButton_GetDown", dynlib: dllname.}
proc ToolButton_SetDown*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetDown", dynlib: dllname.}
proc ToolButton_GetDragCursor*(AObj: pointer): TCursor {.importc: "ToolButton_GetDragCursor", dynlib: dllname.}
proc ToolButton_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ToolButton_SetDragCursor", dynlib: dllname.}
proc ToolButton_GetDragKind*(AObj: pointer): TDragKind {.importc: "ToolButton_GetDragKind", dynlib: dllname.}
proc ToolButton_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ToolButton_SetDragKind", dynlib: dllname.}
proc ToolButton_GetDragMode*(AObj: pointer): TDragMode {.importc: "ToolButton_GetDragMode", dynlib: dllname.}
proc ToolButton_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ToolButton_SetDragMode", dynlib: dllname.}
proc ToolButton_GetDropdownMenu*(AObj: pointer): pointer {.importc: "ToolButton_GetDropdownMenu", dynlib: dllname.}
proc ToolButton_SetDropdownMenu*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetDropdownMenu", dynlib: dllname.}
proc ToolButton_GetEnabled*(AObj: pointer): bool {.importc: "ToolButton_GetEnabled", dynlib: dllname.}
proc ToolButton_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetEnabled", dynlib: dllname.}
proc ToolButton_GetGrouped*(AObj: pointer): bool {.importc: "ToolButton_GetGrouped", dynlib: dllname.}
proc ToolButton_SetGrouped*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetGrouped", dynlib: dllname.}
proc ToolButton_GetHeight*(AObj: pointer): int32 {.importc: "ToolButton_GetHeight", dynlib: dllname.}
proc ToolButton_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetHeight", dynlib: dllname.}
proc ToolButton_GetImageIndex*(AObj: pointer): int32 {.importc: "ToolButton_GetImageIndex", dynlib: dllname.}
proc ToolButton_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetImageIndex", dynlib: dllname.}
proc ToolButton_GetIndeterminate*(AObj: pointer): bool {.importc: "ToolButton_GetIndeterminate", dynlib: dllname.}
proc ToolButton_SetIndeterminate*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetIndeterminate", dynlib: dllname.}
proc ToolButton_GetMarked*(AObj: pointer): bool {.importc: "ToolButton_GetMarked", dynlib: dllname.}
proc ToolButton_SetMarked*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetMarked", dynlib: dllname.}
proc ToolButton_GetParentShowHint*(AObj: pointer): bool {.importc: "ToolButton_GetParentShowHint", dynlib: dllname.}
proc ToolButton_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetParentShowHint", dynlib: dllname.}
proc ToolButton_GetPopupMenu*(AObj: pointer): pointer {.importc: "ToolButton_GetPopupMenu", dynlib: dllname.}
proc ToolButton_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetPopupMenu", dynlib: dllname.}
proc ToolButton_GetWrap*(AObj: pointer): bool {.importc: "ToolButton_GetWrap", dynlib: dllname.}
proc ToolButton_SetWrap*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetWrap", dynlib: dllname.}
proc ToolButton_GetShowHint*(AObj: pointer): bool {.importc: "ToolButton_GetShowHint", dynlib: dllname.}
proc ToolButton_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetShowHint", dynlib: dllname.}
proc ToolButton_GetStyle*(AObj: pointer): TToolButtonStyle {.importc: "ToolButton_GetStyle", dynlib: dllname.}
proc ToolButton_SetStyle*(AObj: pointer, AValue: TToolButtonStyle) {.importc: "ToolButton_SetStyle", dynlib: dllname.}
proc ToolButton_GetVisible*(AObj: pointer): bool {.importc: "ToolButton_GetVisible", dynlib: dllname.}
proc ToolButton_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ToolButton_SetVisible", dynlib: dllname.}
proc ToolButton_GetWidth*(AObj: pointer): int32 {.importc: "ToolButton_GetWidth", dynlib: dllname.}
proc ToolButton_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetWidth", dynlib: dllname.}
proc ToolButton_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolButton_SetOnClick", dynlib: dllname.}
proc ToolButton_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ToolButton_SetOnContextPopup", dynlib: dllname.}
proc ToolButton_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ToolButton_SetOnDragDrop", dynlib: dllname.}
proc ToolButton_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ToolButton_SetOnDragOver", dynlib: dllname.}
proc ToolButton_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ToolButton_SetOnEndDock", dynlib: dllname.}
proc ToolButton_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ToolButton_SetOnEndDrag", dynlib: dllname.}
proc ToolButton_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ToolButton_SetOnMouseDown", dynlib: dllname.}
proc ToolButton_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolButton_SetOnMouseEnter", dynlib: dllname.}
proc ToolButton_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToolButton_SetOnMouseLeave", dynlib: dllname.}
proc ToolButton_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ToolButton_SetOnMouseMove", dynlib: dllname.}
proc ToolButton_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ToolButton_SetOnMouseUp", dynlib: dllname.}
proc ToolButton_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "ToolButton_SetOnStartDock", dynlib: dllname.}
proc ToolButton_GetAlign*(AObj: pointer): TAlign {.importc: "ToolButton_GetAlign", dynlib: dllname.}
proc ToolButton_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ToolButton_SetAlign", dynlib: dllname.}
proc ToolButton_GetAnchors*(AObj: pointer): TAnchors {.importc: "ToolButton_GetAnchors", dynlib: dllname.}
proc ToolButton_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ToolButton_SetAnchors", dynlib: dllname.}
proc ToolButton_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ToolButton_GetBiDiMode", dynlib: dllname.}
proc ToolButton_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ToolButton_SetBiDiMode", dynlib: dllname.}
proc ToolButton_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ToolButton_GetBoundsRect", dynlib: dllname.}
proc ToolButton_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ToolButton_SetBoundsRect", dynlib: dllname.}
proc ToolButton_GetClientHeight*(AObj: pointer): int32 {.importc: "ToolButton_GetClientHeight", dynlib: dllname.}
proc ToolButton_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetClientHeight", dynlib: dllname.}
proc ToolButton_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ToolButton_GetClientOrigin", dynlib: dllname.}
proc ToolButton_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ToolButton_GetClientRect", dynlib: dllname.}
proc ToolButton_GetClientWidth*(AObj: pointer): int32 {.importc: "ToolButton_GetClientWidth", dynlib: dllname.}
proc ToolButton_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetClientWidth", dynlib: dllname.}
proc ToolButton_GetConstraints*(AObj: pointer): pointer {.importc: "ToolButton_GetConstraints", dynlib: dllname.}
proc ToolButton_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetConstraints", dynlib: dllname.}
proc ToolButton_GetControlState*(AObj: pointer): TControlState {.importc: "ToolButton_GetControlState", dynlib: dllname.}
proc ToolButton_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ToolButton_SetControlState", dynlib: dllname.}
proc ToolButton_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ToolButton_GetControlStyle", dynlib: dllname.}
proc ToolButton_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ToolButton_SetControlStyle", dynlib: dllname.}
proc ToolButton_GetFloating*(AObj: pointer): bool {.importc: "ToolButton_GetFloating", dynlib: dllname.}
proc ToolButton_GetParent*(AObj: pointer): pointer {.importc: "ToolButton_GetParent", dynlib: dllname.}
proc ToolButton_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetParent", dynlib: dllname.}
proc ToolButton_GetLeft*(AObj: pointer): int32 {.importc: "ToolButton_GetLeft", dynlib: dllname.}
proc ToolButton_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetLeft", dynlib: dllname.}
proc ToolButton_GetTop*(AObj: pointer): int32 {.importc: "ToolButton_GetTop", dynlib: dllname.}
proc ToolButton_SetTop*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetTop", dynlib: dllname.}
proc ToolButton_GetCursor*(AObj: pointer): TCursor {.importc: "ToolButton_GetCursor", dynlib: dllname.}
proc ToolButton_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ToolButton_SetCursor", dynlib: dllname.}
proc ToolButton_GetHint*(AObj: pointer): cstring {.importc: "ToolButton_GetHint", dynlib: dllname.}
proc ToolButton_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ToolButton_SetHint", dynlib: dllname.}
proc ToolButton_GetComponentCount*(AObj: pointer): int32 {.importc: "ToolButton_GetComponentCount", dynlib: dllname.}
proc ToolButton_GetComponentIndex*(AObj: pointer): int32 {.importc: "ToolButton_GetComponentIndex", dynlib: dllname.}
proc ToolButton_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ToolButton_SetComponentIndex", dynlib: dllname.}
proc ToolButton_GetOwner*(AObj: pointer): pointer {.importc: "ToolButton_GetOwner", dynlib: dllname.}
proc ToolButton_GetName*(AObj: pointer): cstring {.importc: "ToolButton_GetName", dynlib: dllname.}
proc ToolButton_SetName*(AObj: pointer, AValue: cstring) {.importc: "ToolButton_SetName", dynlib: dllname.}
proc ToolButton_GetTag*(AObj: pointer): int {.importc: "ToolButton_GetTag", dynlib: dllname.}
proc ToolButton_SetTag*(AObj: pointer, AValue: int) {.importc: "ToolButton_SetTag", dynlib: dllname.}
proc ToolButton_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ToolButton_GetAnchorSideLeft", dynlib: dllname.}
proc ToolButton_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetAnchorSideLeft", dynlib: dllname.}
proc ToolButton_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ToolButton_GetAnchorSideTop", dynlib: dllname.}
proc ToolButton_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetAnchorSideTop", dynlib: dllname.}
proc ToolButton_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ToolButton_GetAnchorSideRight", dynlib: dllname.}
proc ToolButton_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetAnchorSideRight", dynlib: dllname.}
proc ToolButton_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ToolButton_GetAnchorSideBottom", dynlib: dllname.}
proc ToolButton_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetAnchorSideBottom", dynlib: dllname.}
proc ToolButton_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ToolButton_GetBorderSpacing", dynlib: dllname.}
proc ToolButton_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ToolButton_SetBorderSpacing", dynlib: dllname.}
proc ToolButton_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ToolButton_GetComponents", dynlib: dllname.}
proc ToolButton_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ToolButton_GetAnchorSide", dynlib: dllname.}
proc ToolButton_StaticClassType*(): TClass {.importc: "ToolButton_StaticClassType", dynlib: dllname.}
# ----------------- TIniFile ----------------------
proc IniFile_Create*(AFileName: cstring): pointer {.importc: "IniFile_Create", dynlib: dllname.}
proc IniFile_Free*(AObj: pointer) {.importc: "IniFile_Free", dynlib: dllname.}
proc IniFile_ReadString*(AObj: pointer, Section: cstring, Ident: cstring, Default: cstring): cstring {.importc: "IniFile_ReadString", dynlib: dllname.}
proc IniFile_WriteString*(AObj: pointer, Section: cstring, Ident: cstring, Value: cstring) {.importc: "IniFile_WriteString", dynlib: dllname.}
proc IniFile_ReadSections*(AObj: pointer, Strings: pointer) {.importc: "IniFile_ReadSections", dynlib: dllname.}
proc IniFile_ReadSectionValues*(AObj: pointer, Section: cstring, Strings: pointer) {.importc: "IniFile_ReadSectionValues", dynlib: dllname.}
proc IniFile_EraseSection*(AObj: pointer, Section: cstring) {.importc: "IniFile_EraseSection", dynlib: dllname.}
proc IniFile_DeleteKey*(AObj: pointer, Section: cstring, Ident: cstring) {.importc: "IniFile_DeleteKey", dynlib: dllname.}
proc IniFile_UpdateFile*(AObj: pointer) {.importc: "IniFile_UpdateFile", dynlib: dllname.}
proc IniFile_SectionExists*(AObj: pointer, Section: cstring): bool {.importc: "IniFile_SectionExists", dynlib: dllname.}
proc IniFile_ReadInteger*(AObj: pointer, Section: cstring, Ident: cstring, Default: int32): int32 {.importc: "IniFile_ReadInteger", dynlib: dllname.}
proc IniFile_WriteInteger*(AObj: pointer, Section: cstring, Ident: cstring, Value: int32) {.importc: "IniFile_WriteInteger", dynlib: dllname.}
proc IniFile_ReadBool*(AObj: pointer, Section: cstring, Ident: cstring, Default: bool): bool {.importc: "IniFile_ReadBool", dynlib: dllname.}
proc IniFile_WriteBool*(AObj: pointer, Section: cstring, Ident: cstring, Value: bool) {.importc: "IniFile_WriteBool", dynlib: dllname.}
proc IniFile_ReadDate*(AObj: pointer, Section: cstring, Name: cstring, Default: uint32): uint32 {.importc: "IniFile_ReadDate", dynlib: dllname.}
proc IniFile_ReadDateTime*(AObj: pointer, Section: cstring, Name: cstring, Default: uint32): uint32 {.importc: "IniFile_ReadDateTime", dynlib: dllname.}
proc IniFile_ReadFloat*(AObj: pointer, Section: cstring, Name: cstring, Default: var float64, Result: var float64) {.importc: "IniFile_ReadFloat", dynlib: dllname.}
proc IniFile_ReadTime*(AObj: pointer, Section: cstring, Name: cstring, Default: uint32): uint32 {.importc: "IniFile_ReadTime", dynlib: dllname.}
proc IniFile_WriteDate*(AObj: pointer, Section: cstring, Name: cstring, Value: uint32) {.importc: "IniFile_WriteDate", dynlib: dllname.}
proc IniFile_WriteDateTime*(AObj: pointer, Section: cstring, Name: cstring, Value: uint32) {.importc: "IniFile_WriteDateTime", dynlib: dllname.}
proc IniFile_WriteFloat*(AObj: pointer, Section: cstring, Name: cstring, Value: var float64) {.importc: "IniFile_WriteFloat", dynlib: dllname.}
proc IniFile_WriteTime*(AObj: pointer, Section: cstring, Name: cstring, Value: uint32) {.importc: "IniFile_WriteTime", dynlib: dllname.}
proc IniFile_ValueExists*(AObj: pointer, Section: cstring, Ident: cstring): bool {.importc: "IniFile_ValueExists", dynlib: dllname.}
proc IniFile_ClassType*(AObj: pointer): TClass {.importc: "IniFile_ClassType", dynlib: dllname.}
proc IniFile_ClassName*(AObj: pointer): cstring {.importc: "IniFile_ClassName", dynlib: dllname.}
proc IniFile_InstanceSize*(AObj: pointer): int32 {.importc: "IniFile_InstanceSize", dynlib: dllname.}
proc IniFile_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "IniFile_InheritsFrom", dynlib: dllname.}
proc IniFile_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "IniFile_Equals", dynlib: dllname.}
proc IniFile_GetHashCode*(AObj: pointer): int32 {.importc: "IniFile_GetHashCode", dynlib: dllname.}
proc IniFile_ToString*(AObj: pointer): cstring {.importc: "IniFile_ToString", dynlib: dllname.}
proc IniFile_GetFileName*(AObj: pointer): cstring {.importc: "IniFile_GetFileName", dynlib: dllname.}
proc IniFile_StaticClassType*(): TClass {.importc: "IniFile_StaticClassType", dynlib: dllname.}
# ----------------- TRegistry ----------------------
proc Registry_Create*(AAccess: uint32): pointer {.importc: "Registry_Create", dynlib: dllname.}
proc Registry_Free*(AObj: pointer) {.importc: "Registry_Free", dynlib: dllname.}
proc Registry_CloseKey*(AObj: pointer) {.importc: "Registry_CloseKey", dynlib: dllname.}
proc Registry_CreateKey*(AObj: pointer, Key: cstring): bool {.importc: "Registry_CreateKey", dynlib: dllname.}
proc Registry_DeleteKey*(AObj: pointer, Key: cstring): bool {.importc: "Registry_DeleteKey", dynlib: dllname.}
proc Registry_DeleteValue*(AObj: pointer, Name: cstring): bool {.importc: "Registry_DeleteValue", dynlib: dllname.}
proc Registry_HasSubKeys*(AObj: pointer): bool {.importc: "Registry_HasSubKeys", dynlib: dllname.}
proc Registry_KeyExists*(AObj: pointer, Key: cstring): bool {.importc: "Registry_KeyExists", dynlib: dllname.}
proc Registry_LoadKey*(AObj: pointer, Key: cstring, FileName: cstring): bool {.importc: "Registry_LoadKey", dynlib: dllname.}
proc Registry_MoveKey*(AObj: pointer, OldName: cstring, NewName: cstring, Delete: bool) {.importc: "Registry_MoveKey", dynlib: dllname.}
proc Registry_OpenKey*(AObj: pointer, Key: cstring, CanCreate: bool): bool {.importc: "Registry_OpenKey", dynlib: dllname.}
proc Registry_OpenKeyReadOnly*(AObj: pointer, Key: cstring): bool {.importc: "Registry_OpenKeyReadOnly", dynlib: dllname.}
proc Registry_ReadBool*(AObj: pointer, Name: cstring): bool {.importc: "Registry_ReadBool", dynlib: dllname.}
proc Registry_ReadDate*(AObj: pointer, Name: cstring): uint32 {.importc: "Registry_ReadDate", dynlib: dllname.}
proc Registry_ReadDateTime*(AObj: pointer, Name: cstring): uint32 {.importc: "Registry_ReadDateTime", dynlib: dllname.}
proc Registry_ReadFloat*(AObj: pointer, Name: cstring, Result: var float64) {.importc: "Registry_ReadFloat", dynlib: dllname.}
proc Registry_ReadInteger*(AObj: pointer, Name: cstring): int32 {.importc: "Registry_ReadInteger", dynlib: dllname.}
proc Registry_ReadString*(AObj: pointer, Name: cstring): cstring {.importc: "Registry_ReadString", dynlib: dllname.}
proc Registry_ReadTime*(AObj: pointer, Name: cstring): uint32 {.importc: "Registry_ReadTime", dynlib: dllname.}
proc Registry_RegistryConnect*(AObj: pointer, UNCName: cstring): bool {.importc: "Registry_RegistryConnect", dynlib: dllname.}
proc Registry_RenameValue*(AObj: pointer, OldName: cstring, NewName: cstring) {.importc: "Registry_RenameValue", dynlib: dllname.}
proc Registry_ReplaceKey*(AObj: pointer, Key: cstring, FileName: cstring, BackUpFileName: cstring): bool {.importc: "Registry_ReplaceKey", dynlib: dllname.}
proc Registry_RestoreKey*(AObj: pointer, Key: cstring, FileName: cstring): bool {.importc: "Registry_RestoreKey", dynlib: dllname.}
proc Registry_SaveKey*(AObj: pointer, Key: cstring, FileName: cstring): bool {.importc: "Registry_SaveKey", dynlib: dllname.}
proc Registry_UnLoadKey*(AObj: pointer, Key: cstring): bool {.importc: "Registry_UnLoadKey", dynlib: dllname.}
proc Registry_ValueExists*(AObj: pointer, Name: cstring): bool {.importc: "Registry_ValueExists", dynlib: dllname.}
proc Registry_WriteBool*(AObj: pointer, Name: cstring, Value: bool) {.importc: "Registry_WriteBool", dynlib: dllname.}
proc Registry_WriteDate*(AObj: pointer, Name: cstring, Value: uint32) {.importc: "Registry_WriteDate", dynlib: dllname.}
proc Registry_WriteDateTime*(AObj: pointer, Name: cstring, Value: uint32) {.importc: "Registry_WriteDateTime", dynlib: dllname.}
proc Registry_WriteFloat*(AObj: pointer, Name: cstring, Value: var float64) {.importc: "Registry_WriteFloat", dynlib: dllname.}
proc Registry_WriteInteger*(AObj: pointer, Name: cstring, Value: int32) {.importc: "Registry_WriteInteger", dynlib: dllname.}
proc Registry_WriteString*(AObj: pointer, Name: cstring, Value: cstring) {.importc: "Registry_WriteString", dynlib: dllname.}
proc Registry_WriteExpandString*(AObj: pointer, Name: cstring, Value: cstring) {.importc: "Registry_WriteExpandString", dynlib: dllname.}
proc Registry_WriteTime*(AObj: pointer, Name: cstring, Value: uint32) {.importc: "Registry_WriteTime", dynlib: dllname.}
proc Registry_ClassType*(AObj: pointer): TClass {.importc: "Registry_ClassType", dynlib: dllname.}
proc Registry_ClassName*(AObj: pointer): cstring {.importc: "Registry_ClassName", dynlib: dllname.}
proc Registry_InstanceSize*(AObj: pointer): int32 {.importc: "Registry_InstanceSize", dynlib: dllname.}
proc Registry_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Registry_InheritsFrom", dynlib: dllname.}
proc Registry_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Registry_Equals", dynlib: dllname.}
proc Registry_GetHashCode*(AObj: pointer): int32 {.importc: "Registry_GetHashCode", dynlib: dllname.}
proc Registry_ToString*(AObj: pointer): cstring {.importc: "Registry_ToString", dynlib: dllname.}
proc Registry_GetCurrentKey*(AObj: pointer): HKEY {.importc: "Registry_GetCurrentKey", dynlib: dllname.}
proc Registry_GetCurrentPath*(AObj: pointer): cstring {.importc: "Registry_GetCurrentPath", dynlib: dllname.}
proc Registry_GetLazyWrite*(AObj: pointer): bool {.importc: "Registry_GetLazyWrite", dynlib: dllname.}
proc Registry_SetLazyWrite*(AObj: pointer, AValue: bool) {.importc: "Registry_SetLazyWrite", dynlib: dllname.}
proc Registry_GetLastError*(AObj: pointer): int32 {.importc: "Registry_GetLastError", dynlib: dllname.}
proc Registry_GetLastErrorMsg*(AObj: pointer): cstring {.importc: "Registry_GetLastErrorMsg", dynlib: dllname.}
proc Registry_GetRootKey*(AObj: pointer): HKEY {.importc: "Registry_GetRootKey", dynlib: dllname.}
proc Registry_SetRootKey*(AObj: pointer, AValue: HKEY) {.importc: "Registry_SetRootKey", dynlib: dllname.}
proc Registry_GetAccess*(AObj: pointer): uint32 {.importc: "Registry_GetAccess", dynlib: dllname.}
proc Registry_SetAccess*(AObj: pointer, AValue: uint32) {.importc: "Registry_SetAccess", dynlib: dllname.}
proc Registry_StaticClassType*(): TClass {.importc: "Registry_StaticClassType", dynlib: dllname.}
# ----------------- TClipboard ----------------------
proc Clipboard_Create*(): pointer {.importc: "Clipboard_Create", dynlib: dllname.}
proc Clipboard_Free*(AObj: pointer) {.importc: "Clipboard_Free", dynlib: dllname.}
proc Clipboard_FindPictureFormatID*(AObj: pointer): TClipboardFormat {.importc: "Clipboard_FindPictureFormatID", dynlib: dllname.}
proc Clipboard_FindFormatID*(AObj: pointer, FormatName: cstring): TClipboardFormat {.importc: "Clipboard_FindFormatID", dynlib: dllname.}
proc Clipboard_GetAsHtml*(AObj: pointer, ExtractFragmentOnly: bool): cstring {.importc: "Clipboard_GetAsHtml", dynlib: dllname.}
proc Clipboard_SupportedFormats*(AObj: pointer, List: pointer) {.importc: "Clipboard_SupportedFormats", dynlib: dllname.}
proc Clipboard_HasFormatName*(AObj: pointer, FormatName: cstring): bool {.importc: "Clipboard_HasFormatName", dynlib: dllname.}
proc Clipboard_HasPictureFormat*(AObj: pointer): bool {.importc: "Clipboard_HasPictureFormat", dynlib: dllname.}
proc Clipboard_SetAsHtml*(AObj: pointer, Html: cstring, PlainText: cstring) {.importc: "Clipboard_SetAsHtml", dynlib: dllname.}
proc Clipboard_Assign*(AObj: pointer, Source: pointer) {.importc: "Clipboard_Assign", dynlib: dllname.}
proc Clipboard_Clear*(AObj: pointer) {.importc: "Clipboard_Clear", dynlib: dllname.}
proc Clipboard_Close*(AObj: pointer) {.importc: "Clipboard_Close", dynlib: dllname.}
proc Clipboard_Open*(AObj: pointer) {.importc: "Clipboard_Open", dynlib: dllname.}
proc Clipboard_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Clipboard_GetTextBuf", dynlib: dllname.}
proc Clipboard_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Clipboard_SetTextBuf", dynlib: dllname.}
proc Clipboard_GetNamePath*(AObj: pointer): cstring {.importc: "Clipboard_GetNamePath", dynlib: dllname.}
proc Clipboard_ClassType*(AObj: pointer): TClass {.importc: "Clipboard_ClassType", dynlib: dllname.}
proc Clipboard_ClassName*(AObj: pointer): cstring {.importc: "Clipboard_ClassName", dynlib: dllname.}
proc Clipboard_InstanceSize*(AObj: pointer): int32 {.importc: "Clipboard_InstanceSize", dynlib: dllname.}
proc Clipboard_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Clipboard_InheritsFrom", dynlib: dllname.}
proc Clipboard_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Clipboard_Equals", dynlib: dllname.}
proc Clipboard_GetHashCode*(AObj: pointer): int32 {.importc: "Clipboard_GetHashCode", dynlib: dllname.}
proc Clipboard_ToString*(AObj: pointer): cstring {.importc: "Clipboard_ToString", dynlib: dllname.}
proc Clipboard_GetAsText*(AObj: pointer): cstring {.importc: "Clipboard_GetAsText", dynlib: dllname.}
proc Clipboard_SetAsText*(AObj: pointer, AValue: cstring) {.importc: "Clipboard_SetAsText", dynlib: dllname.}
proc Clipboard_GetFormatCount*(AObj: pointer): int32 {.importc: "Clipboard_GetFormatCount", dynlib: dllname.}
proc Clipboard_GetFormats*(AObj: pointer, Index: int32): TClipboardFormat {.importc: "Clipboard_GetFormats", dynlib: dllname.}
proc Clipboard_StaticClassType*(): TClass {.importc: "Clipboard_StaticClassType", dynlib: dllname.}
proc Clipboard_HasFormat*(AObj: pointer, AFormatID: TClipboardFormat): bool {.importc: "Clipboard_HasFormat", dynlib: dllname.}
# ----------------- TMonitor ----------------------
proc Monitor_Create*(): pointer {.importc: "Monitor_Create", dynlib: dllname.}
proc Monitor_Free*(AObj: pointer) {.importc: "Monitor_Free", dynlib: dllname.}
proc Monitor_ClassType*(AObj: pointer): TClass {.importc: "Monitor_ClassType", dynlib: dllname.}
proc Monitor_ClassName*(AObj: pointer): cstring {.importc: "Monitor_ClassName", dynlib: dllname.}
proc Monitor_InstanceSize*(AObj: pointer): int32 {.importc: "Monitor_InstanceSize", dynlib: dllname.}
proc Monitor_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Monitor_InheritsFrom", dynlib: dllname.}
proc Monitor_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Monitor_Equals", dynlib: dllname.}
proc Monitor_GetHashCode*(AObj: pointer): int32 {.importc: "Monitor_GetHashCode", dynlib: dllname.}
proc Monitor_ToString*(AObj: pointer): cstring {.importc: "Monitor_ToString", dynlib: dllname.}
proc Monitor_GetHandle*(AObj: pointer): HMONITOR {.importc: "Monitor_GetHandle", dynlib: dllname.}
proc Monitor_GetMonitorNum*(AObj: pointer): int32 {.importc: "Monitor_GetMonitorNum", dynlib: dllname.}
proc Monitor_GetLeft*(AObj: pointer): int32 {.importc: "Monitor_GetLeft", dynlib: dllname.}
proc Monitor_GetHeight*(AObj: pointer): int32 {.importc: "Monitor_GetHeight", dynlib: dllname.}
proc Monitor_GetTop*(AObj: pointer): int32 {.importc: "Monitor_GetTop", dynlib: dllname.}
proc Monitor_GetWidth*(AObj: pointer): int32 {.importc: "Monitor_GetWidth", dynlib: dllname.}
proc Monitor_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Monitor_GetBoundsRect", dynlib: dllname.}
proc Monitor_GetWorkareaRect*(AObj: pointer, Result: var TRect) {.importc: "Monitor_GetWorkareaRect", dynlib: dllname.}
proc Monitor_GetPrimary*(AObj: pointer): bool {.importc: "Monitor_GetPrimary", dynlib: dllname.}
proc Monitor_GetPixelsPerInch*(AObj: pointer): int32 {.importc: "Monitor_GetPixelsPerInch", dynlib: dllname.}
proc Monitor_StaticClassType*(): TClass {.importc: "Monitor_StaticClassType", dynlib: dllname.}
# ----------------- TPaintBox ----------------------
proc PaintBox_Create*(AOwner: pointer): pointer {.importc: "PaintBox_Create", dynlib: dllname.}
proc PaintBox_Free*(AObj: pointer) {.importc: "PaintBox_Free", dynlib: dllname.}
proc PaintBox_BringToFront*(AObj: pointer) {.importc: "PaintBox_BringToFront", dynlib: dllname.}
proc PaintBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "PaintBox_ClientToScreen", dynlib: dllname.}
proc PaintBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "PaintBox_ClientToParent", dynlib: dllname.}
proc PaintBox_Dragging*(AObj: pointer): bool {.importc: "PaintBox_Dragging", dynlib: dllname.}
proc PaintBox_HasParent*(AObj: pointer): bool {.importc: "PaintBox_HasParent", dynlib: dllname.}
proc PaintBox_Hide*(AObj: pointer) {.importc: "PaintBox_Hide", dynlib: dllname.}
proc PaintBox_Invalidate*(AObj: pointer) {.importc: "PaintBox_Invalidate", dynlib: dllname.}
proc PaintBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "PaintBox_Perform", dynlib: dllname.}
proc PaintBox_Refresh*(AObj: pointer) {.importc: "PaintBox_Refresh", dynlib: dllname.}
proc PaintBox_Repaint*(AObj: pointer) {.importc: "PaintBox_Repaint", dynlib: dllname.}
proc PaintBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "PaintBox_ScreenToClient", dynlib: dllname.}
proc PaintBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "PaintBox_ParentToClient", dynlib: dllname.}
proc PaintBox_SendToBack*(AObj: pointer) {.importc: "PaintBox_SendToBack", dynlib: dllname.}
proc PaintBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "PaintBox_SetBounds", dynlib: dllname.}
proc PaintBox_Show*(AObj: pointer) {.importc: "PaintBox_Show", dynlib: dllname.}
proc PaintBox_Update*(AObj: pointer) {.importc: "PaintBox_Update", dynlib: dllname.}
proc PaintBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "PaintBox_GetTextBuf", dynlib: dllname.}
proc PaintBox_GetTextLen*(AObj: pointer): int32 {.importc: "PaintBox_GetTextLen", dynlib: dllname.}
proc PaintBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "PaintBox_SetTextBuf", dynlib: dllname.}
proc PaintBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "PaintBox_FindComponent", dynlib: dllname.}
proc PaintBox_GetNamePath*(AObj: pointer): cstring {.importc: "PaintBox_GetNamePath", dynlib: dllname.}
proc PaintBox_Assign*(AObj: pointer, Source: pointer) {.importc: "PaintBox_Assign", dynlib: dllname.}
proc PaintBox_ClassType*(AObj: pointer): TClass {.importc: "PaintBox_ClassType", dynlib: dllname.}
proc PaintBox_ClassName*(AObj: pointer): cstring {.importc: "PaintBox_ClassName", dynlib: dllname.}
proc PaintBox_InstanceSize*(AObj: pointer): int32 {.importc: "PaintBox_InstanceSize", dynlib: dllname.}
proc PaintBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "PaintBox_InheritsFrom", dynlib: dllname.}
proc PaintBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "PaintBox_Equals", dynlib: dllname.}
proc PaintBox_GetHashCode*(AObj: pointer): int32 {.importc: "PaintBox_GetHashCode", dynlib: dllname.}
proc PaintBox_ToString*(AObj: pointer): cstring {.importc: "PaintBox_ToString", dynlib: dllname.}
proc PaintBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "PaintBox_AnchorToNeighbour", dynlib: dllname.}
proc PaintBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "PaintBox_AnchorParallel", dynlib: dllname.}
proc PaintBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "PaintBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc PaintBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "PaintBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc PaintBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "PaintBox_AnchorSame", dynlib: dllname.}
proc PaintBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "PaintBox_AnchorAsAlign", dynlib: dllname.}
proc PaintBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "PaintBox_AnchorClient", dynlib: dllname.}
proc PaintBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_ScaleDesignToForm", dynlib: dllname.}
proc PaintBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_ScaleFormToDesign", dynlib: dllname.}
proc PaintBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_Scale96ToForm", dynlib: dllname.}
proc PaintBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_ScaleFormTo96", dynlib: dllname.}
proc PaintBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_Scale96ToFont", dynlib: dllname.}
proc PaintBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_ScaleFontTo96", dynlib: dllname.}
proc PaintBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_ScaleScreenToFont", dynlib: dllname.}
proc PaintBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_ScaleFontToScreen", dynlib: dllname.}
proc PaintBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_Scale96ToScreen", dynlib: dllname.}
proc PaintBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "PaintBox_ScaleScreenTo96", dynlib: dllname.}
proc PaintBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "PaintBox_AutoAdjustLayout", dynlib: dllname.}
proc PaintBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "PaintBox_FixDesignFontsPPI", dynlib: dllname.}
proc PaintBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "PaintBox_ScaleFontsPPI", dynlib: dllname.}
proc PaintBox_GetCanvas*(AObj: pointer): pointer {.importc: "PaintBox_GetCanvas", dynlib: dllname.}
proc PaintBox_GetAlign*(AObj: pointer): TAlign {.importc: "PaintBox_GetAlign", dynlib: dllname.}
proc PaintBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "PaintBox_SetAlign", dynlib: dllname.}
proc PaintBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "PaintBox_GetAnchors", dynlib: dllname.}
proc PaintBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "PaintBox_SetAnchors", dynlib: dllname.}
proc PaintBox_GetColor*(AObj: pointer): TColor {.importc: "PaintBox_GetColor", dynlib: dllname.}
proc PaintBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "PaintBox_SetColor", dynlib: dllname.}
proc PaintBox_GetConstraints*(AObj: pointer): pointer {.importc: "PaintBox_GetConstraints", dynlib: dllname.}
proc PaintBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetConstraints", dynlib: dllname.}
proc PaintBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "PaintBox_GetDragCursor", dynlib: dllname.}
proc PaintBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "PaintBox_SetDragCursor", dynlib: dllname.}
proc PaintBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "PaintBox_GetDragMode", dynlib: dllname.}
proc PaintBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "PaintBox_SetDragMode", dynlib: dllname.}
proc PaintBox_GetEnabled*(AObj: pointer): bool {.importc: "PaintBox_GetEnabled", dynlib: dllname.}
proc PaintBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "PaintBox_SetEnabled", dynlib: dllname.}
proc PaintBox_GetFont*(AObj: pointer): pointer {.importc: "PaintBox_GetFont", dynlib: dllname.}
proc PaintBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetFont", dynlib: dllname.}
proc PaintBox_GetParentColor*(AObj: pointer): bool {.importc: "PaintBox_GetParentColor", dynlib: dllname.}
proc PaintBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "PaintBox_SetParentColor", dynlib: dllname.}
proc PaintBox_GetParentFont*(AObj: pointer): bool {.importc: "PaintBox_GetParentFont", dynlib: dllname.}
proc PaintBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "PaintBox_SetParentFont", dynlib: dllname.}
proc PaintBox_GetParentShowHint*(AObj: pointer): bool {.importc: "PaintBox_GetParentShowHint", dynlib: dllname.}
proc PaintBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "PaintBox_SetParentShowHint", dynlib: dllname.}
proc PaintBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "PaintBox_GetPopupMenu", dynlib: dllname.}
proc PaintBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetPopupMenu", dynlib: dllname.}
proc PaintBox_GetShowHint*(AObj: pointer): bool {.importc: "PaintBox_GetShowHint", dynlib: dllname.}
proc PaintBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "PaintBox_SetShowHint", dynlib: dllname.}
proc PaintBox_GetVisible*(AObj: pointer): bool {.importc: "PaintBox_GetVisible", dynlib: dllname.}
proc PaintBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "PaintBox_SetVisible", dynlib: dllname.}
proc PaintBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PaintBox_SetOnClick", dynlib: dllname.}
proc PaintBox_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PaintBox_SetOnDblClick", dynlib: dllname.}
proc PaintBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "PaintBox_SetOnDragDrop", dynlib: dllname.}
proc PaintBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "PaintBox_SetOnDragOver", dynlib: dllname.}
proc PaintBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "PaintBox_SetOnEndDrag", dynlib: dllname.}
proc PaintBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "PaintBox_SetOnMouseDown", dynlib: dllname.}
proc PaintBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PaintBox_SetOnMouseEnter", dynlib: dllname.}
proc PaintBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PaintBox_SetOnMouseLeave", dynlib: dllname.}
proc PaintBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "PaintBox_SetOnMouseMove", dynlib: dllname.}
proc PaintBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "PaintBox_SetOnMouseUp", dynlib: dllname.}
proc PaintBox_SetOnPaint*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PaintBox_SetOnPaint", dynlib: dllname.}
proc PaintBox_GetAction*(AObj: pointer): pointer {.importc: "PaintBox_GetAction", dynlib: dllname.}
proc PaintBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetAction", dynlib: dllname.}
proc PaintBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "PaintBox_GetBiDiMode", dynlib: dllname.}
proc PaintBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "PaintBox_SetBiDiMode", dynlib: dllname.}
proc PaintBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "PaintBox_GetBoundsRect", dynlib: dllname.}
proc PaintBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "PaintBox_SetBoundsRect", dynlib: dllname.}
proc PaintBox_GetClientHeight*(AObj: pointer): int32 {.importc: "PaintBox_GetClientHeight", dynlib: dllname.}
proc PaintBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "PaintBox_SetClientHeight", dynlib: dllname.}
proc PaintBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "PaintBox_GetClientOrigin", dynlib: dllname.}
proc PaintBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "PaintBox_GetClientRect", dynlib: dllname.}
proc PaintBox_GetClientWidth*(AObj: pointer): int32 {.importc: "PaintBox_GetClientWidth", dynlib: dllname.}
proc PaintBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "PaintBox_SetClientWidth", dynlib: dllname.}
proc PaintBox_GetControlState*(AObj: pointer): TControlState {.importc: "PaintBox_GetControlState", dynlib: dllname.}
proc PaintBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "PaintBox_SetControlState", dynlib: dllname.}
proc PaintBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "PaintBox_GetControlStyle", dynlib: dllname.}
proc PaintBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "PaintBox_SetControlStyle", dynlib: dllname.}
proc PaintBox_GetFloating*(AObj: pointer): bool {.importc: "PaintBox_GetFloating", dynlib: dllname.}
proc PaintBox_GetParent*(AObj: pointer): pointer {.importc: "PaintBox_GetParent", dynlib: dllname.}
proc PaintBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetParent", dynlib: dllname.}
proc PaintBox_GetLeft*(AObj: pointer): int32 {.importc: "PaintBox_GetLeft", dynlib: dllname.}
proc PaintBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "PaintBox_SetLeft", dynlib: dllname.}
proc PaintBox_GetTop*(AObj: pointer): int32 {.importc: "PaintBox_GetTop", dynlib: dllname.}
proc PaintBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "PaintBox_SetTop", dynlib: dllname.}
proc PaintBox_GetWidth*(AObj: pointer): int32 {.importc: "PaintBox_GetWidth", dynlib: dllname.}
proc PaintBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "PaintBox_SetWidth", dynlib: dllname.}
proc PaintBox_GetHeight*(AObj: pointer): int32 {.importc: "PaintBox_GetHeight", dynlib: dllname.}
proc PaintBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "PaintBox_SetHeight", dynlib: dllname.}
proc PaintBox_GetCursor*(AObj: pointer): TCursor {.importc: "PaintBox_GetCursor", dynlib: dllname.}
proc PaintBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "PaintBox_SetCursor", dynlib: dllname.}
proc PaintBox_GetHint*(AObj: pointer): cstring {.importc: "PaintBox_GetHint", dynlib: dllname.}
proc PaintBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "PaintBox_SetHint", dynlib: dllname.}
proc PaintBox_GetComponentCount*(AObj: pointer): int32 {.importc: "PaintBox_GetComponentCount", dynlib: dllname.}
proc PaintBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "PaintBox_GetComponentIndex", dynlib: dllname.}
proc PaintBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "PaintBox_SetComponentIndex", dynlib: dllname.}
proc PaintBox_GetOwner*(AObj: pointer): pointer {.importc: "PaintBox_GetOwner", dynlib: dllname.}
proc PaintBox_GetName*(AObj: pointer): cstring {.importc: "PaintBox_GetName", dynlib: dllname.}
proc PaintBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "PaintBox_SetName", dynlib: dllname.}
proc PaintBox_GetTag*(AObj: pointer): int {.importc: "PaintBox_GetTag", dynlib: dllname.}
proc PaintBox_SetTag*(AObj: pointer, AValue: int) {.importc: "PaintBox_SetTag", dynlib: dllname.}
proc PaintBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "PaintBox_GetAnchorSideLeft", dynlib: dllname.}
proc PaintBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetAnchorSideLeft", dynlib: dllname.}
proc PaintBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "PaintBox_GetAnchorSideTop", dynlib: dllname.}
proc PaintBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetAnchorSideTop", dynlib: dllname.}
proc PaintBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "PaintBox_GetAnchorSideRight", dynlib: dllname.}
proc PaintBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetAnchorSideRight", dynlib: dllname.}
proc PaintBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "PaintBox_GetAnchorSideBottom", dynlib: dllname.}
proc PaintBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetAnchorSideBottom", dynlib: dllname.}
proc PaintBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "PaintBox_GetBorderSpacing", dynlib: dllname.}
proc PaintBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "PaintBox_SetBorderSpacing", dynlib: dllname.}
proc PaintBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "PaintBox_GetComponents", dynlib: dllname.}
proc PaintBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "PaintBox_GetAnchorSide", dynlib: dllname.}
proc PaintBox_StaticClassType*(): TClass {.importc: "PaintBox_StaticClassType", dynlib: dllname.}
# ----------------- TTimer ----------------------
proc Timer_Create*(AOwner: pointer): pointer {.importc: "Timer_Create", dynlib: dllname.}
proc Timer_Free*(AObj: pointer) {.importc: "Timer_Free", dynlib: dllname.}
proc Timer_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Timer_FindComponent", dynlib: dllname.}
proc Timer_GetNamePath*(AObj: pointer): cstring {.importc: "Timer_GetNamePath", dynlib: dllname.}
proc Timer_HasParent*(AObj: pointer): bool {.importc: "Timer_HasParent", dynlib: dllname.}
proc Timer_Assign*(AObj: pointer, Source: pointer) {.importc: "Timer_Assign", dynlib: dllname.}
proc Timer_ClassType*(AObj: pointer): TClass {.importc: "Timer_ClassType", dynlib: dllname.}
proc Timer_ClassName*(AObj: pointer): cstring {.importc: "Timer_ClassName", dynlib: dllname.}
proc Timer_InstanceSize*(AObj: pointer): int32 {.importc: "Timer_InstanceSize", dynlib: dllname.}
proc Timer_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Timer_InheritsFrom", dynlib: dllname.}
proc Timer_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Timer_Equals", dynlib: dllname.}
proc Timer_GetHashCode*(AObj: pointer): int32 {.importc: "Timer_GetHashCode", dynlib: dllname.}
proc Timer_ToString*(AObj: pointer): cstring {.importc: "Timer_ToString", dynlib: dllname.}
proc Timer_GetEnabled*(AObj: pointer): bool {.importc: "Timer_GetEnabled", dynlib: dllname.}
proc Timer_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Timer_SetEnabled", dynlib: dllname.}
proc Timer_GetInterval*(AObj: pointer): uint32 {.importc: "Timer_GetInterval", dynlib: dllname.}
proc Timer_SetInterval*(AObj: pointer, AValue: uint32) {.importc: "Timer_SetInterval", dynlib: dllname.}
proc Timer_SetOnTimer*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Timer_SetOnTimer", dynlib: dllname.}
proc Timer_GetComponentCount*(AObj: pointer): int32 {.importc: "Timer_GetComponentCount", dynlib: dllname.}
proc Timer_GetComponentIndex*(AObj: pointer): int32 {.importc: "Timer_GetComponentIndex", dynlib: dllname.}
proc Timer_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Timer_SetComponentIndex", dynlib: dllname.}
proc Timer_GetOwner*(AObj: pointer): pointer {.importc: "Timer_GetOwner", dynlib: dllname.}
proc Timer_GetName*(AObj: pointer): cstring {.importc: "Timer_GetName", dynlib: dllname.}
proc Timer_SetName*(AObj: pointer, AValue: cstring) {.importc: "Timer_SetName", dynlib: dllname.}
proc Timer_GetTag*(AObj: pointer): int {.importc: "Timer_GetTag", dynlib: dllname.}
proc Timer_SetTag*(AObj: pointer, AValue: int) {.importc: "Timer_SetTag", dynlib: dllname.}
proc Timer_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Timer_GetComponents", dynlib: dllname.}
proc Timer_StaticClassType*(): TClass {.importc: "Timer_StaticClassType", dynlib: dllname.}
# ----------------- TList ----------------------
proc List_Create*(): pointer {.importc: "List_Create", dynlib: dllname.}
proc List_Free*(AObj: pointer) {.importc: "List_Free", dynlib: dllname.}
proc List_Add*(AObj: pointer, Item: pointer): int32 {.importc: "List_Add", dynlib: dllname.}
proc List_Clear*(AObj: pointer) {.importc: "List_Clear", dynlib: dllname.}
proc List_Delete*(AObj: pointer, Index: int32) {.importc: "List_Delete", dynlib: dllname.}
proc List_Expand*(AObj: pointer): pointer {.importc: "List_Expand", dynlib: dllname.}
proc List_IndexOf*(AObj: pointer, Item: pointer): int32 {.importc: "List_IndexOf", dynlib: dllname.}
proc List_Insert*(AObj: pointer, Index: int32, Item: pointer) {.importc: "List_Insert", dynlib: dllname.}
proc List_Move*(AObj: pointer, CurIndex: int32, NewIndex: int32) {.importc: "List_Move", dynlib: dllname.}
proc List_ClassType*(AObj: pointer): TClass {.importc: "List_ClassType", dynlib: dllname.}
proc List_ClassName*(AObj: pointer): cstring {.importc: "List_ClassName", dynlib: dllname.}
proc List_InstanceSize*(AObj: pointer): int32 {.importc: "List_InstanceSize", dynlib: dllname.}
proc List_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "List_InheritsFrom", dynlib: dllname.}
proc List_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "List_Equals", dynlib: dllname.}
proc List_GetHashCode*(AObj: pointer): int32 {.importc: "List_GetHashCode", dynlib: dllname.}
proc List_ToString*(AObj: pointer): cstring {.importc: "List_ToString", dynlib: dllname.}
proc List_GetCapacity*(AObj: pointer): int32 {.importc: "List_GetCapacity", dynlib: dllname.}
proc List_SetCapacity*(AObj: pointer, AValue: int32) {.importc: "List_SetCapacity", dynlib: dllname.}
proc List_GetCount*(AObj: pointer): int32 {.importc: "List_GetCount", dynlib: dllname.}
proc List_SetCount*(AObj: pointer, AValue: int32) {.importc: "List_SetCount", dynlib: dllname.}
proc List_GetList*(AObj: pointer): pointer {.importc: "List_GetList", dynlib: dllname.}
proc List_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "List_GetItems", dynlib: dllname.}
proc List_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "List_SetItems", dynlib: dllname.}
proc List_StaticClassType*(): TClass {.importc: "List_StaticClassType", dynlib: dllname.}
# ----------------- TForm ----------------------
proc Form_Create*(AOwner: pointer): pointer {.importc: "Form_Create", dynlib: dllname.}
proc Form_Free*(AObj: pointer) {.importc: "Form_Free", dynlib: dllname.}
proc Form_Cascade*(AObj: pointer) {.importc: "Form_Cascade", dynlib: dllname.}
proc Form_Close*(AObj: pointer) {.importc: "Form_Close", dynlib: dllname.}
proc Form_FocusControl*(AObj: pointer, Control: pointer) {.importc: "Form_FocusControl", dynlib: dllname.}
proc Form_Hide*(AObj: pointer) {.importc: "Form_Hide", dynlib: dllname.}
proc Form_SetFocus*(AObj: pointer) {.importc: "Form_SetFocus", dynlib: dllname.}
proc Form_Show*(AObj: pointer) {.importc: "Form_Show", dynlib: dllname.}
proc Form_ShowModal*(AObj: pointer): int32 {.importc: "Form_ShowModal", dynlib: dllname.}
proc Form_ScrollInView*(AObj: pointer, AControl: pointer) {.importc: "Form_ScrollInView", dynlib: dllname.}
proc Form_CanFocus*(AObj: pointer): bool {.importc: "Form_CanFocus", dynlib: dllname.}
proc Form_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "Form_ContainsControl", dynlib: dllname.}
proc Form_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "Form_ControlAtPos", dynlib: dllname.}
proc Form_DisableAlign*(AObj: pointer) {.importc: "Form_DisableAlign", dynlib: dllname.}
proc Form_EnableAlign*(AObj: pointer) {.importc: "Form_EnableAlign", dynlib: dllname.}
proc Form_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "Form_FindChildControl", dynlib: dllname.}
proc Form_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "Form_FlipChildren", dynlib: dllname.}
proc Form_Focused*(AObj: pointer): bool {.importc: "Form_Focused", dynlib: dllname.}
proc Form_HandleAllocated*(AObj: pointer): bool {.importc: "Form_HandleAllocated", dynlib: dllname.}
proc Form_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "Form_InsertControl", dynlib: dllname.}
proc Form_Invalidate*(AObj: pointer) {.importc: "Form_Invalidate", dynlib: dllname.}
proc Form_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "Form_PaintTo", dynlib: dllname.}
proc Form_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "Form_RemoveControl", dynlib: dllname.}
proc Form_Realign*(AObj: pointer) {.importc: "Form_Realign", dynlib: dllname.}
proc Form_Repaint*(AObj: pointer) {.importc: "Form_Repaint", dynlib: dllname.}
proc Form_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "Form_ScaleBy", dynlib: dllname.}
proc Form_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "Form_ScrollBy", dynlib: dllname.}
proc Form_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Form_SetBounds", dynlib: dllname.}
proc Form_Update*(AObj: pointer) {.importc: "Form_Update", dynlib: dllname.}
proc Form_BringToFront*(AObj: pointer) {.importc: "Form_BringToFront", dynlib: dllname.}
proc Form_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Form_ClientToScreen", dynlib: dllname.}
proc Form_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Form_ClientToParent", dynlib: dllname.}
proc Form_Dragging*(AObj: pointer): bool {.importc: "Form_Dragging", dynlib: dllname.}
proc Form_HasParent*(AObj: pointer): bool {.importc: "Form_HasParent", dynlib: dllname.}
proc Form_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Form_Perform", dynlib: dllname.}
proc Form_Refresh*(AObj: pointer) {.importc: "Form_Refresh", dynlib: dllname.}
proc Form_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Form_ScreenToClient", dynlib: dllname.}
proc Form_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Form_ParentToClient", dynlib: dllname.}
proc Form_SendToBack*(AObj: pointer) {.importc: "Form_SendToBack", dynlib: dllname.}
proc Form_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Form_GetTextBuf", dynlib: dllname.}
proc Form_GetTextLen*(AObj: pointer): int32 {.importc: "Form_GetTextLen", dynlib: dllname.}
proc Form_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Form_SetTextBuf", dynlib: dllname.}
proc Form_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Form_FindComponent", dynlib: dllname.}
proc Form_GetNamePath*(AObj: pointer): cstring {.importc: "Form_GetNamePath", dynlib: dllname.}
proc Form_Assign*(AObj: pointer, Source: pointer) {.importc: "Form_Assign", dynlib: dllname.}
proc Form_ClassType*(AObj: pointer): TClass {.importc: "Form_ClassType", dynlib: dllname.}
proc Form_ClassName*(AObj: pointer): cstring {.importc: "Form_ClassName", dynlib: dllname.}
proc Form_InstanceSize*(AObj: pointer): int32 {.importc: "Form_InstanceSize", dynlib: dllname.}
proc Form_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Form_InheritsFrom", dynlib: dllname.}
proc Form_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Form_Equals", dynlib: dllname.}
proc Form_GetHashCode*(AObj: pointer): int32 {.importc: "Form_GetHashCode", dynlib: dllname.}
proc Form_ToString*(AObj: pointer): cstring {.importc: "Form_ToString", dynlib: dllname.}
proc Form_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Form_AnchorToNeighbour", dynlib: dllname.}
proc Form_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Form_AnchorParallel", dynlib: dllname.}
proc Form_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Form_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Form_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Form_AnchorVerticalCenterTo", dynlib: dllname.}
proc Form_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Form_AnchorSame", dynlib: dllname.}
proc Form_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Form_AnchorAsAlign", dynlib: dllname.}
proc Form_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Form_AnchorClient", dynlib: dllname.}
proc Form_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Form_ScaleDesignToForm", dynlib: dllname.}
proc Form_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Form_ScaleFormToDesign", dynlib: dllname.}
proc Form_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Form_Scale96ToForm", dynlib: dllname.}
proc Form_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Form_ScaleFormTo96", dynlib: dllname.}
proc Form_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Form_Scale96ToFont", dynlib: dllname.}
proc Form_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Form_ScaleFontTo96", dynlib: dllname.}
proc Form_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Form_ScaleScreenToFont", dynlib: dllname.}
proc Form_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Form_ScaleFontToScreen", dynlib: dllname.}
proc Form_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Form_Scale96ToScreen", dynlib: dllname.}
proc Form_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Form_ScaleScreenTo96", dynlib: dllname.}
proc Form_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Form_AutoAdjustLayout", dynlib: dllname.}
proc Form_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Form_FixDesignFontsPPI", dynlib: dllname.}
proc Form_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Form_ScaleFontsPPI", dynlib: dllname.}
proc Form_GetAllowDropFiles*(AObj: pointer): bool {.importc: "Form_GetAllowDropFiles", dynlib: dllname.}
proc Form_SetAllowDropFiles*(AObj: pointer, AValue: bool) {.importc: "Form_SetAllowDropFiles", dynlib: dllname.}
proc Form_SetOnDropFiles*(AObj: pointer, AEventId: TDropFilesEvent) {.importc: "Form_SetOnDropFiles", dynlib: dllname.}
proc Form_GetShowInTaskBar*(AObj: pointer): TShowInTaskbar {.importc: "Form_GetShowInTaskBar", dynlib: dllname.}
proc Form_SetShowInTaskBar*(AObj: pointer, AValue: TShowInTaskbar) {.importc: "Form_SetShowInTaskBar", dynlib: dllname.}
proc Form_GetDesignTimePPI*(AObj: pointer): int32 {.importc: "Form_GetDesignTimePPI", dynlib: dllname.}
proc Form_SetDesignTimePPI*(AObj: pointer, AValue: int32) {.importc: "Form_SetDesignTimePPI", dynlib: dllname.}
proc Form_GetAction*(AObj: pointer): pointer {.importc: "Form_GetAction", dynlib: dllname.}
proc Form_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Form_SetAction", dynlib: dllname.}
proc Form_GetActiveControl*(AObj: pointer): pointer {.importc: "Form_GetActiveControl", dynlib: dllname.}
proc Form_SetActiveControl*(AObj: pointer, AValue: pointer) {.importc: "Form_SetActiveControl", dynlib: dllname.}
proc Form_GetAlign*(AObj: pointer): TAlign {.importc: "Form_GetAlign", dynlib: dllname.}
proc Form_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Form_SetAlign", dynlib: dllname.}
proc Form_GetAlphaBlend*(AObj: pointer): bool {.importc: "Form_GetAlphaBlend", dynlib: dllname.}
proc Form_SetAlphaBlend*(AObj: pointer, AValue: bool) {.importc: "Form_SetAlphaBlend", dynlib: dllname.}
proc Form_GetAlphaBlendValue*(AObj: pointer): int8 {.importc: "Form_GetAlphaBlendValue", dynlib: dllname.}
proc Form_SetAlphaBlendValue*(AObj: pointer, AValue: int8) {.importc: "Form_SetAlphaBlendValue", dynlib: dllname.}
proc Form_GetAnchors*(AObj: pointer): TAnchors {.importc: "Form_GetAnchors", dynlib: dllname.}
proc Form_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Form_SetAnchors", dynlib: dllname.}
proc Form_GetAutoScroll*(AObj: pointer): bool {.importc: "Form_GetAutoScroll", dynlib: dllname.}
proc Form_SetAutoScroll*(AObj: pointer, AValue: bool) {.importc: "Form_SetAutoScroll", dynlib: dllname.}
proc Form_GetAutoSize*(AObj: pointer): bool {.importc: "Form_GetAutoSize", dynlib: dllname.}
proc Form_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "Form_SetAutoSize", dynlib: dllname.}
proc Form_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Form_GetBiDiMode", dynlib: dllname.}
proc Form_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Form_SetBiDiMode", dynlib: dllname.}
proc Form_GetBorderIcons*(AObj: pointer): TBorderIcons {.importc: "Form_GetBorderIcons", dynlib: dllname.}
proc Form_SetBorderIcons*(AObj: pointer, AValue: TBorderIcons) {.importc: "Form_SetBorderIcons", dynlib: dllname.}
proc Form_GetBorderStyle*(AObj: pointer): TFormBorderStyle {.importc: "Form_GetBorderStyle", dynlib: dllname.}
proc Form_SetBorderStyle*(AObj: pointer, AValue: TFormBorderStyle) {.importc: "Form_SetBorderStyle", dynlib: dllname.}
proc Form_GetBorderWidth*(AObj: pointer): int32 {.importc: "Form_GetBorderWidth", dynlib: dllname.}
proc Form_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "Form_SetBorderWidth", dynlib: dllname.}
proc Form_GetCaption*(AObj: pointer): cstring {.importc: "Form_GetCaption", dynlib: dllname.}
proc Form_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "Form_SetCaption", dynlib: dllname.}
proc Form_GetClientHeight*(AObj: pointer): int32 {.importc: "Form_GetClientHeight", dynlib: dllname.}
proc Form_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Form_SetClientHeight", dynlib: dllname.}
proc Form_GetClientWidth*(AObj: pointer): int32 {.importc: "Form_GetClientWidth", dynlib: dllname.}
proc Form_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Form_SetClientWidth", dynlib: dllname.}
proc Form_GetColor*(AObj: pointer): TColor {.importc: "Form_GetColor", dynlib: dllname.}
proc Form_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Form_SetColor", dynlib: dllname.}
proc Form_GetConstraints*(AObj: pointer): pointer {.importc: "Form_GetConstraints", dynlib: dllname.}
proc Form_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Form_SetConstraints", dynlib: dllname.}
proc Form_GetUseDockManager*(AObj: pointer): bool {.importc: "Form_GetUseDockManager", dynlib: dllname.}
proc Form_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "Form_SetUseDockManager", dynlib: dllname.}
proc Form_GetDefaultMonitor*(AObj: pointer): TDefaultMonitor {.importc: "Form_GetDefaultMonitor", dynlib: dllname.}
proc Form_SetDefaultMonitor*(AObj: pointer, AValue: TDefaultMonitor) {.importc: "Form_SetDefaultMonitor", dynlib: dllname.}
proc Form_GetDockSite*(AObj: pointer): bool {.importc: "Form_GetDockSite", dynlib: dllname.}
proc Form_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "Form_SetDockSite", dynlib: dllname.}
proc Form_GetDoubleBuffered*(AObj: pointer): bool {.importc: "Form_GetDoubleBuffered", dynlib: dllname.}
proc Form_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Form_SetDoubleBuffered", dynlib: dllname.}
proc Form_GetDragKind*(AObj: pointer): TDragKind {.importc: "Form_GetDragKind", dynlib: dllname.}
proc Form_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Form_SetDragKind", dynlib: dllname.}
proc Form_GetDragMode*(AObj: pointer): TDragMode {.importc: "Form_GetDragMode", dynlib: dllname.}
proc Form_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Form_SetDragMode", dynlib: dllname.}
proc Form_GetEnabled*(AObj: pointer): bool {.importc: "Form_GetEnabled", dynlib: dllname.}
proc Form_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Form_SetEnabled", dynlib: dllname.}
proc Form_GetParentFont*(AObj: pointer): bool {.importc: "Form_GetParentFont", dynlib: dllname.}
proc Form_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Form_SetParentFont", dynlib: dllname.}
proc Form_GetFont*(AObj: pointer): pointer {.importc: "Form_GetFont", dynlib: dllname.}
proc Form_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Form_SetFont", dynlib: dllname.}
proc Form_GetFormStyle*(AObj: pointer): TFormStyle {.importc: "Form_GetFormStyle", dynlib: dllname.}
proc Form_SetFormStyle*(AObj: pointer, AValue: TFormStyle) {.importc: "Form_SetFormStyle", dynlib: dllname.}
proc Form_GetHeight*(AObj: pointer): int32 {.importc: "Form_GetHeight", dynlib: dllname.}
proc Form_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Form_SetHeight", dynlib: dllname.}
proc Form_GetHorzScrollBar*(AObj: pointer): pointer {.importc: "Form_GetHorzScrollBar", dynlib: dllname.}
proc Form_SetHorzScrollBar*(AObj: pointer, AValue: pointer) {.importc: "Form_SetHorzScrollBar", dynlib: dllname.}
proc Form_GetIcon*(AObj: pointer): pointer {.importc: "Form_GetIcon", dynlib: dllname.}
proc Form_SetIcon*(AObj: pointer, AValue: pointer) {.importc: "Form_SetIcon", dynlib: dllname.}
proc Form_GetKeyPreview*(AObj: pointer): bool {.importc: "Form_GetKeyPreview", dynlib: dllname.}
proc Form_SetKeyPreview*(AObj: pointer, AValue: bool) {.importc: "Form_SetKeyPreview", dynlib: dllname.}
proc Form_GetMenu*(AObj: pointer): pointer {.importc: "Form_GetMenu", dynlib: dllname.}
proc Form_SetMenu*(AObj: pointer, AValue: pointer) {.importc: "Form_SetMenu", dynlib: dllname.}
proc Form_GetPixelsPerInch*(AObj: pointer): int32 {.importc: "Form_GetPixelsPerInch", dynlib: dllname.}
proc Form_SetPixelsPerInch*(AObj: pointer, AValue: int32) {.importc: "Form_SetPixelsPerInch", dynlib: dllname.}
proc Form_GetPopupMenu*(AObj: pointer): pointer {.importc: "Form_GetPopupMenu", dynlib: dllname.}
proc Form_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Form_SetPopupMenu", dynlib: dllname.}
proc Form_GetPosition*(AObj: pointer): TPosition {.importc: "Form_GetPosition", dynlib: dllname.}
proc Form_SetPosition*(AObj: pointer, AValue: TPosition) {.importc: "Form_SetPosition", dynlib: dllname.}
proc Form_GetScaled*(AObj: pointer): bool {.importc: "Form_GetScaled", dynlib: dllname.}
proc Form_SetScaled*(AObj: pointer, AValue: bool) {.importc: "Form_SetScaled", dynlib: dllname.}
proc Form_GetShowHint*(AObj: pointer): bool {.importc: "Form_GetShowHint", dynlib: dllname.}
proc Form_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Form_SetShowHint", dynlib: dllname.}
proc Form_GetVertScrollBar*(AObj: pointer): pointer {.importc: "Form_GetVertScrollBar", dynlib: dllname.}
proc Form_SetVertScrollBar*(AObj: pointer, AValue: pointer) {.importc: "Form_SetVertScrollBar", dynlib: dllname.}
proc Form_GetVisible*(AObj: pointer): bool {.importc: "Form_GetVisible", dynlib: dllname.}
proc Form_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Form_SetVisible", dynlib: dllname.}
proc Form_GetWidth*(AObj: pointer): int32 {.importc: "Form_GetWidth", dynlib: dllname.}
proc Form_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Form_SetWidth", dynlib: dllname.}
proc Form_GetWindowState*(AObj: pointer): TWindowState {.importc: "Form_GetWindowState", dynlib: dllname.}
proc Form_SetWindowState*(AObj: pointer, AValue: TWindowState) {.importc: "Form_SetWindowState", dynlib: dllname.}
proc Form_SetOnActivate*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnActivate", dynlib: dllname.}
proc Form_SetOnAlignPosition*(AObj: pointer, AEventId: TAlignPositionEvent) {.importc: "Form_SetOnAlignPosition", dynlib: dllname.}
proc Form_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnClick", dynlib: dllname.}
proc Form_SetOnClose*(AObj: pointer, AEventId: TCloseEvent) {.importc: "Form_SetOnClose", dynlib: dllname.}
proc Form_SetOnCloseQuery*(AObj: pointer, AEventId: TCloseQueryEvent) {.importc: "Form_SetOnCloseQuery", dynlib: dllname.}
proc Form_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "Form_SetOnContextPopup", dynlib: dllname.}
proc Form_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnDblClick", dynlib: dllname.}
proc Form_SetOnDeactivate*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnDeactivate", dynlib: dllname.}
proc Form_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "Form_SetOnDockDrop", dynlib: dllname.}
proc Form_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Form_SetOnDragDrop", dynlib: dllname.}
proc Form_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Form_SetOnDragOver", dynlib: dllname.}
proc Form_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Form_SetOnEndDock", dynlib: dllname.}
proc Form_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "Form_SetOnGetSiteInfo", dynlib: dllname.}
proc Form_SetOnHide*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnHide", dynlib: dllname.}
proc Form_SetOnHelp*(AObj: pointer, AEventId: THelpEvent) {.importc: "Form_SetOnHelp", dynlib: dllname.}
proc Form_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Form_SetOnKeyDown", dynlib: dllname.}
proc Form_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "Form_SetOnKeyPress", dynlib: dllname.}
proc Form_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "Form_SetOnKeyUp", dynlib: dllname.}
proc Form_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Form_SetOnMouseDown", dynlib: dllname.}
proc Form_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnMouseEnter", dynlib: dllname.}
proc Form_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnMouseLeave", dynlib: dllname.}
proc Form_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Form_SetOnMouseMove", dynlib: dllname.}
proc Form_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Form_SetOnMouseUp", dynlib: dllname.}
proc Form_SetOnMouseWheel*(AObj: pointer, AEventId: TMouseWheelEvent) {.importc: "Form_SetOnMouseWheel", dynlib: dllname.}
proc Form_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "Form_SetOnMouseWheelDown", dynlib: dllname.}
proc Form_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "Form_SetOnMouseWheelUp", dynlib: dllname.}
proc Form_SetOnPaint*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnPaint", dynlib: dllname.}
proc Form_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnResize", dynlib: dllname.}
proc Form_SetOnShortCut*(AObj: pointer, AEventId: TShortCutEvent) {.importc: "Form_SetOnShortCut", dynlib: dllname.}
proc Form_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnShow", dynlib: dllname.}
proc Form_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "Form_SetOnStartDock", dynlib: dllname.}
proc Form_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "Form_SetOnUnDock", dynlib: dllname.}
proc Form_GetCanvas*(AObj: pointer): pointer {.importc: "Form_GetCanvas", dynlib: dllname.}
proc Form_GetModalResult*(AObj: pointer): TModalResult {.importc: "Form_GetModalResult", dynlib: dllname.}
proc Form_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "Form_SetModalResult", dynlib: dllname.}
proc Form_GetMonitor*(AObj: pointer): pointer {.importc: "Form_GetMonitor", dynlib: dllname.}
proc Form_GetLeft*(AObj: pointer): int32 {.importc: "Form_GetLeft", dynlib: dllname.}
proc Form_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Form_SetLeft", dynlib: dllname.}
proc Form_GetTop*(AObj: pointer): int32 {.importc: "Form_GetTop", dynlib: dllname.}
proc Form_SetTop*(AObj: pointer, AValue: int32) {.importc: "Form_SetTop", dynlib: dllname.}
proc Form_GetDockClientCount*(AObj: pointer): int32 {.importc: "Form_GetDockClientCount", dynlib: dllname.}
proc Form_GetMouseInClient*(AObj: pointer): bool {.importc: "Form_GetMouseInClient", dynlib: dllname.}
proc Form_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "Form_GetVisibleDockClientCount", dynlib: dllname.}
proc Form_GetBrush*(AObj: pointer): pointer {.importc: "Form_GetBrush", dynlib: dllname.}
proc Form_GetControlCount*(AObj: pointer): int32 {.importc: "Form_GetControlCount", dynlib: dllname.}
proc Form_GetHandle*(AObj: pointer): HWND {.importc: "Form_GetHandle", dynlib: dllname.}
proc Form_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "Form_GetParentDoubleBuffered", dynlib: dllname.}
proc Form_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Form_SetParentDoubleBuffered", dynlib: dllname.}
proc Form_GetParentWindow*(AObj: pointer): HWND {.importc: "Form_GetParentWindow", dynlib: dllname.}
proc Form_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "Form_SetParentWindow", dynlib: dllname.}
proc Form_GetShowing*(AObj: pointer): bool {.importc: "Form_GetShowing", dynlib: dllname.}
proc Form_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "Form_GetTabOrder", dynlib: dllname.}
proc Form_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "Form_SetTabOrder", dynlib: dllname.}
proc Form_GetTabStop*(AObj: pointer): bool {.importc: "Form_GetTabStop", dynlib: dllname.}
proc Form_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "Form_SetTabStop", dynlib: dllname.}
proc Form_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Form_GetBoundsRect", dynlib: dllname.}
proc Form_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Form_SetBoundsRect", dynlib: dllname.}
proc Form_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Form_GetClientOrigin", dynlib: dllname.}
proc Form_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Form_GetClientRect", dynlib: dllname.}
proc Form_GetControlState*(AObj: pointer): TControlState {.importc: "Form_GetControlState", dynlib: dllname.}
proc Form_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Form_SetControlState", dynlib: dllname.}
proc Form_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Form_GetControlStyle", dynlib: dllname.}
proc Form_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Form_SetControlStyle", dynlib: dllname.}
proc Form_GetFloating*(AObj: pointer): bool {.importc: "Form_GetFloating", dynlib: dllname.}
proc Form_GetParent*(AObj: pointer): pointer {.importc: "Form_GetParent", dynlib: dllname.}
proc Form_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Form_SetParent", dynlib: dllname.}
proc Form_GetCursor*(AObj: pointer): TCursor {.importc: "Form_GetCursor", dynlib: dllname.}
proc Form_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Form_SetCursor", dynlib: dllname.}
proc Form_GetHint*(AObj: pointer): cstring {.importc: "Form_GetHint", dynlib: dllname.}
proc Form_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Form_SetHint", dynlib: dllname.}
proc Form_GetComponentCount*(AObj: pointer): int32 {.importc: "Form_GetComponentCount", dynlib: dllname.}
proc Form_GetComponentIndex*(AObj: pointer): int32 {.importc: "Form_GetComponentIndex", dynlib: dllname.}
proc Form_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Form_SetComponentIndex", dynlib: dllname.}
proc Form_GetOwner*(AObj: pointer): pointer {.importc: "Form_GetOwner", dynlib: dllname.}
proc Form_GetName*(AObj: pointer): cstring {.importc: "Form_GetName", dynlib: dllname.}
proc Form_SetName*(AObj: pointer, AValue: cstring) {.importc: "Form_SetName", dynlib: dllname.}
proc Form_GetTag*(AObj: pointer): int {.importc: "Form_GetTag", dynlib: dllname.}
proc Form_SetTag*(AObj: pointer, AValue: int) {.importc: "Form_SetTag", dynlib: dllname.}
proc Form_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Form_GetAnchorSideLeft", dynlib: dllname.}
proc Form_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Form_SetAnchorSideLeft", dynlib: dllname.}
proc Form_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Form_GetAnchorSideTop", dynlib: dllname.}
proc Form_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Form_SetAnchorSideTop", dynlib: dllname.}
proc Form_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Form_GetAnchorSideRight", dynlib: dllname.}
proc Form_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Form_SetAnchorSideRight", dynlib: dllname.}
proc Form_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Form_GetAnchorSideBottom", dynlib: dllname.}
proc Form_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Form_SetAnchorSideBottom", dynlib: dllname.}
proc Form_GetChildSizing*(AObj: pointer): pointer {.importc: "Form_GetChildSizing", dynlib: dllname.}
proc Form_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "Form_SetChildSizing", dynlib: dllname.}
proc Form_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Form_GetBorderSpacing", dynlib: dllname.}
proc Form_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Form_SetBorderSpacing", dynlib: dllname.}
proc Form_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "Form_GetDockClients", dynlib: dllname.}
proc Form_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "Form_GetControls", dynlib: dllname.}
proc Form_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Form_GetComponents", dynlib: dllname.}
proc Form_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Form_GetAnchorSide", dynlib: dllname.}
proc Form_StaticClassType*(): TClass {.importc: "Form_StaticClassType", dynlib: dllname.}
proc Form_Create2*(AOwner: pointer, AInitScale: bool): pointer {.importc: "Form_Create2", dynlib: dllname.}
proc Form_EnabledMaximize*(AObj: pointer, AValue: bool) {.importc: "Form_EnabledMaximize", dynlib: dllname.}
proc Form_EnabledMinimize*(AObj: pointer, AValue: bool) {.importc: "Form_EnabledMinimize", dynlib: dllname.}
proc Form_EnabledSystemMenu*(AObj: pointer, AValue: bool) {.importc: "Form_EnabledSystemMenu", dynlib: dllname.}
proc Form_SetOnDestroy*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Form_SetOnDestroy", dynlib: dllname.}
proc Form_SetOnConstrainedResize*(AObj: pointer, AEventId: TConstrainedResizeEvent) {.importc: "Form_SetOnConstrainedResize", dynlib: dllname.}
proc Form_SetOnWndProc*(AObj: pointer, AEventId: TWndProcEvent) {.importc: "Form_SetOnWndProc", dynlib: dllname.}
proc Form_ScaleForPPI*(AObj: pointer, ANewPPI: int32) {.importc: "Form_ScaleForPPI", dynlib: dllname.}
proc Form_ScaleControlsForDpi*(AObj: pointer, ANewPPI: int32) {.importc: "Form_ScaleControlsForDpi", dynlib: dllname.}
proc Form_ScaleForCurrentDpi*(AObj: pointer) {.importc: "Form_ScaleForCurrentDpi", dynlib: dllname.}
proc Form_InheritedWndProc*(AObj: pointer, AMsg: var TMessage) {.importc: "Form_InheritedWndProc", dynlib: dllname.}
# ----------------- TParaAttributes ----------------------
proc ParaAttributes_Assign*(AObj: pointer, Source: pointer) {.importc: "ParaAttributes_Assign", dynlib: dllname.}
proc ParaAttributes_GetNamePath*(AObj: pointer): cstring {.importc: "ParaAttributes_GetNamePath", dynlib: dllname.}
proc ParaAttributes_ClassType*(AObj: pointer): TClass {.importc: "ParaAttributes_ClassType", dynlib: dllname.}
proc ParaAttributes_ClassName*(AObj: pointer): cstring {.importc: "ParaAttributes_ClassName", dynlib: dllname.}
proc ParaAttributes_InstanceSize*(AObj: pointer): int32 {.importc: "ParaAttributes_InstanceSize", dynlib: dllname.}
proc ParaAttributes_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ParaAttributes_InheritsFrom", dynlib: dllname.}
proc ParaAttributes_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ParaAttributes_Equals", dynlib: dllname.}
proc ParaAttributes_GetHashCode*(AObj: pointer): int32 {.importc: "ParaAttributes_GetHashCode", dynlib: dllname.}
proc ParaAttributes_ToString*(AObj: pointer): cstring {.importc: "ParaAttributes_ToString", dynlib: dllname.}
proc ParaAttributes_GetAlignment*(AObj: pointer): TAlignment {.importc: "ParaAttributes_GetAlignment", dynlib: dllname.}
proc ParaAttributes_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "ParaAttributes_SetAlignment", dynlib: dllname.}
proc ParaAttributes_GetFirstIndent*(AObj: pointer): int32 {.importc: "ParaAttributes_GetFirstIndent", dynlib: dllname.}
proc ParaAttributes_SetFirstIndent*(AObj: pointer, AValue: int32) {.importc: "ParaAttributes_SetFirstIndent", dynlib: dllname.}
proc ParaAttributes_GetLeftIndent*(AObj: pointer): int32 {.importc: "ParaAttributes_GetLeftIndent", dynlib: dllname.}
proc ParaAttributes_SetLeftIndent*(AObj: pointer, AValue: int32) {.importc: "ParaAttributes_SetLeftIndent", dynlib: dllname.}
proc ParaAttributes_GetNumbering*(AObj: pointer): TNumberingStyle {.importc: "ParaAttributes_GetNumbering", dynlib: dllname.}
proc ParaAttributes_SetNumbering*(AObj: pointer, AValue: TNumberingStyle) {.importc: "ParaAttributes_SetNumbering", dynlib: dllname.}
proc ParaAttributes_GetRightIndent*(AObj: pointer): int32 {.importc: "ParaAttributes_GetRightIndent", dynlib: dllname.}
proc ParaAttributes_SetRightIndent*(AObj: pointer, AValue: int32) {.importc: "ParaAttributes_SetRightIndent", dynlib: dllname.}
proc ParaAttributes_GetTabCount*(AObj: pointer): int32 {.importc: "ParaAttributes_GetTabCount", dynlib: dllname.}
proc ParaAttributes_SetTabCount*(AObj: pointer, AValue: int32) {.importc: "ParaAttributes_SetTabCount", dynlib: dllname.}
proc ParaAttributes_GetTab*(AObj: pointer, Index: int8): int32 {.importc: "ParaAttributes_GetTab", dynlib: dllname.}
proc ParaAttributes_SetTab*(AObj: pointer, Index: int8, AValue: int32) {.importc: "ParaAttributes_SetTab", dynlib: dllname.}
proc ParaAttributes_StaticClassType*(): TClass {.importc: "ParaAttributes_StaticClassType", dynlib: dllname.}
# ----------------- TTextAttributes ----------------------
proc TextAttributes_Assign*(AObj: pointer, Source: pointer) {.importc: "TextAttributes_Assign", dynlib: dllname.}
proc TextAttributes_GetNamePath*(AObj: pointer): cstring {.importc: "TextAttributes_GetNamePath", dynlib: dllname.}
proc TextAttributes_ClassType*(AObj: pointer): TClass {.importc: "TextAttributes_ClassType", dynlib: dllname.}
proc TextAttributes_ClassName*(AObj: pointer): cstring {.importc: "TextAttributes_ClassName", dynlib: dllname.}
proc TextAttributes_InstanceSize*(AObj: pointer): int32 {.importc: "TextAttributes_InstanceSize", dynlib: dllname.}
proc TextAttributes_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TextAttributes_InheritsFrom", dynlib: dllname.}
proc TextAttributes_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TextAttributes_Equals", dynlib: dllname.}
proc TextAttributes_GetHashCode*(AObj: pointer): int32 {.importc: "TextAttributes_GetHashCode", dynlib: dllname.}
proc TextAttributes_ToString*(AObj: pointer): cstring {.importc: "TextAttributes_ToString", dynlib: dllname.}
proc TextAttributes_GetCharset*(AObj: pointer): TFontCharset {.importc: "TextAttributes_GetCharset", dynlib: dllname.}
proc TextAttributes_SetCharset*(AObj: pointer, AValue: TFontCharset) {.importc: "TextAttributes_SetCharset", dynlib: dllname.}
proc TextAttributes_GetColor*(AObj: pointer): TColor {.importc: "TextAttributes_GetColor", dynlib: dllname.}
proc TextAttributes_SetColor*(AObj: pointer, AValue: TColor) {.importc: "TextAttributes_SetColor", dynlib: dllname.}
proc TextAttributes_GetName*(AObj: pointer): cstring {.importc: "TextAttributes_GetName", dynlib: dllname.}
proc TextAttributes_SetName*(AObj: pointer, AValue: cstring) {.importc: "TextAttributes_SetName", dynlib: dllname.}
proc TextAttributes_GetPitch*(AObj: pointer): TFontPitch {.importc: "TextAttributes_GetPitch", dynlib: dllname.}
proc TextAttributes_SetPitch*(AObj: pointer, AValue: TFontPitch) {.importc: "TextAttributes_SetPitch", dynlib: dllname.}
proc TextAttributes_GetSize*(AObj: pointer): int32 {.importc: "TextAttributes_GetSize", dynlib: dllname.}
proc TextAttributes_SetSize*(AObj: pointer, AValue: int32) {.importc: "TextAttributes_SetSize", dynlib: dllname.}
proc TextAttributes_GetStyle*(AObj: pointer): TFontStyles {.importc: "TextAttributes_GetStyle", dynlib: dllname.}
proc TextAttributes_SetStyle*(AObj: pointer, AValue: TFontStyles) {.importc: "TextAttributes_SetStyle", dynlib: dllname.}
proc TextAttributes_GetHeight*(AObj: pointer): int32 {.importc: "TextAttributes_GetHeight", dynlib: dllname.}
proc TextAttributes_SetHeight*(AObj: pointer, AValue: int32) {.importc: "TextAttributes_SetHeight", dynlib: dllname.}
proc TextAttributes_StaticClassType*(): TClass {.importc: "TextAttributes_StaticClassType", dynlib: dllname.}
# ----------------- TIconOptions ----------------------
proc IconOptions_Assign*(AObj: pointer, Source: pointer) {.importc: "IconOptions_Assign", dynlib: dllname.}
proc IconOptions_GetNamePath*(AObj: pointer): cstring {.importc: "IconOptions_GetNamePath", dynlib: dllname.}
proc IconOptions_ClassType*(AObj: pointer): TClass {.importc: "IconOptions_ClassType", dynlib: dllname.}
proc IconOptions_ClassName*(AObj: pointer): cstring {.importc: "IconOptions_ClassName", dynlib: dllname.}
proc IconOptions_InstanceSize*(AObj: pointer): int32 {.importc: "IconOptions_InstanceSize", dynlib: dllname.}
proc IconOptions_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "IconOptions_InheritsFrom", dynlib: dllname.}
proc IconOptions_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "IconOptions_Equals", dynlib: dllname.}
proc IconOptions_GetHashCode*(AObj: pointer): int32 {.importc: "IconOptions_GetHashCode", dynlib: dllname.}
proc IconOptions_ToString*(AObj: pointer): cstring {.importc: "IconOptions_ToString", dynlib: dllname.}
proc IconOptions_GetArrangement*(AObj: pointer): TIconArrangement {.importc: "IconOptions_GetArrangement", dynlib: dllname.}
proc IconOptions_SetArrangement*(AObj: pointer, AValue: TIconArrangement) {.importc: "IconOptions_SetArrangement", dynlib: dllname.}
proc IconOptions_GetAutoArrange*(AObj: pointer): bool {.importc: "IconOptions_GetAutoArrange", dynlib: dllname.}
proc IconOptions_SetAutoArrange*(AObj: pointer, AValue: bool) {.importc: "IconOptions_SetAutoArrange", dynlib: dllname.}
proc IconOptions_StaticClassType*(): TClass {.importc: "IconOptions_StaticClassType", dynlib: dllname.}
# ----------------- TScrollBar ----------------------
proc ScrollBar_Create*(AOwner: pointer): pointer {.importc: "ScrollBar_Create", dynlib: dllname.}
proc ScrollBar_Free*(AObj: pointer) {.importc: "ScrollBar_Free", dynlib: dllname.}
proc ScrollBar_SetParams*(AObj: pointer, APosition: int32, AMin: int32, AMax: int32) {.importc: "ScrollBar_SetParams", dynlib: dllname.}
proc ScrollBar_CanFocus*(AObj: pointer): bool {.importc: "ScrollBar_CanFocus", dynlib: dllname.}
proc ScrollBar_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ScrollBar_ContainsControl", dynlib: dllname.}
proc ScrollBar_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ScrollBar_ControlAtPos", dynlib: dllname.}
proc ScrollBar_DisableAlign*(AObj: pointer) {.importc: "ScrollBar_DisableAlign", dynlib: dllname.}
proc ScrollBar_EnableAlign*(AObj: pointer) {.importc: "ScrollBar_EnableAlign", dynlib: dllname.}
proc ScrollBar_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ScrollBar_FindChildControl", dynlib: dllname.}
proc ScrollBar_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ScrollBar_FlipChildren", dynlib: dllname.}
proc ScrollBar_Focused*(AObj: pointer): bool {.importc: "ScrollBar_Focused", dynlib: dllname.}
proc ScrollBar_HandleAllocated*(AObj: pointer): bool {.importc: "ScrollBar_HandleAllocated", dynlib: dllname.}
proc ScrollBar_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ScrollBar_InsertControl", dynlib: dllname.}
proc ScrollBar_Invalidate*(AObj: pointer) {.importc: "ScrollBar_Invalidate", dynlib: dllname.}
proc ScrollBar_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ScrollBar_PaintTo", dynlib: dllname.}
proc ScrollBar_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ScrollBar_RemoveControl", dynlib: dllname.}
proc ScrollBar_Realign*(AObj: pointer) {.importc: "ScrollBar_Realign", dynlib: dllname.}
proc ScrollBar_Repaint*(AObj: pointer) {.importc: "ScrollBar_Repaint", dynlib: dllname.}
proc ScrollBar_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ScrollBar_ScaleBy", dynlib: dllname.}
proc ScrollBar_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ScrollBar_ScrollBy", dynlib: dllname.}
proc ScrollBar_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ScrollBar_SetBounds", dynlib: dllname.}
proc ScrollBar_SetFocus*(AObj: pointer) {.importc: "ScrollBar_SetFocus", dynlib: dllname.}
proc ScrollBar_Update*(AObj: pointer) {.importc: "ScrollBar_Update", dynlib: dllname.}
proc ScrollBar_BringToFront*(AObj: pointer) {.importc: "ScrollBar_BringToFront", dynlib: dllname.}
proc ScrollBar_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ScrollBar_ClientToScreen", dynlib: dllname.}
proc ScrollBar_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ScrollBar_ClientToParent", dynlib: dllname.}
proc ScrollBar_Dragging*(AObj: pointer): bool {.importc: "ScrollBar_Dragging", dynlib: dllname.}
proc ScrollBar_HasParent*(AObj: pointer): bool {.importc: "ScrollBar_HasParent", dynlib: dllname.}
proc ScrollBar_Hide*(AObj: pointer) {.importc: "ScrollBar_Hide", dynlib: dllname.}
proc ScrollBar_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ScrollBar_Perform", dynlib: dllname.}
proc ScrollBar_Refresh*(AObj: pointer) {.importc: "ScrollBar_Refresh", dynlib: dllname.}
proc ScrollBar_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ScrollBar_ScreenToClient", dynlib: dllname.}
proc ScrollBar_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ScrollBar_ParentToClient", dynlib: dllname.}
proc ScrollBar_SendToBack*(AObj: pointer) {.importc: "ScrollBar_SendToBack", dynlib: dllname.}
proc ScrollBar_Show*(AObj: pointer) {.importc: "ScrollBar_Show", dynlib: dllname.}
proc ScrollBar_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ScrollBar_GetTextBuf", dynlib: dllname.}
proc ScrollBar_GetTextLen*(AObj: pointer): int32 {.importc: "ScrollBar_GetTextLen", dynlib: dllname.}
proc ScrollBar_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ScrollBar_SetTextBuf", dynlib: dllname.}
proc ScrollBar_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ScrollBar_FindComponent", dynlib: dllname.}
proc ScrollBar_GetNamePath*(AObj: pointer): cstring {.importc: "ScrollBar_GetNamePath", dynlib: dllname.}
proc ScrollBar_Assign*(AObj: pointer, Source: pointer) {.importc: "ScrollBar_Assign", dynlib: dllname.}
proc ScrollBar_ClassType*(AObj: pointer): TClass {.importc: "ScrollBar_ClassType", dynlib: dllname.}
proc ScrollBar_ClassName*(AObj: pointer): cstring {.importc: "ScrollBar_ClassName", dynlib: dllname.}
proc ScrollBar_InstanceSize*(AObj: pointer): int32 {.importc: "ScrollBar_InstanceSize", dynlib: dllname.}
proc ScrollBar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ScrollBar_InheritsFrom", dynlib: dllname.}
proc ScrollBar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ScrollBar_Equals", dynlib: dllname.}
proc ScrollBar_GetHashCode*(AObj: pointer): int32 {.importc: "ScrollBar_GetHashCode", dynlib: dllname.}
proc ScrollBar_ToString*(AObj: pointer): cstring {.importc: "ScrollBar_ToString", dynlib: dllname.}
proc ScrollBar_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ScrollBar_AnchorToNeighbour", dynlib: dllname.}
proc ScrollBar_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ScrollBar_AnchorParallel", dynlib: dllname.}
proc ScrollBar_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ScrollBar_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ScrollBar_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ScrollBar_AnchorVerticalCenterTo", dynlib: dllname.}
proc ScrollBar_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ScrollBar_AnchorSame", dynlib: dllname.}
proc ScrollBar_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ScrollBar_AnchorAsAlign", dynlib: dllname.}
proc ScrollBar_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ScrollBar_AnchorClient", dynlib: dllname.}
proc ScrollBar_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_ScaleDesignToForm", dynlib: dllname.}
proc ScrollBar_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_ScaleFormToDesign", dynlib: dllname.}
proc ScrollBar_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_Scale96ToForm", dynlib: dllname.}
proc ScrollBar_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_ScaleFormTo96", dynlib: dllname.}
proc ScrollBar_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_Scale96ToFont", dynlib: dllname.}
proc ScrollBar_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_ScaleFontTo96", dynlib: dllname.}
proc ScrollBar_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_ScaleScreenToFont", dynlib: dllname.}
proc ScrollBar_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_ScaleFontToScreen", dynlib: dllname.}
proc ScrollBar_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_Scale96ToScreen", dynlib: dllname.}
proc ScrollBar_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBar_ScaleScreenTo96", dynlib: dllname.}
proc ScrollBar_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ScrollBar_AutoAdjustLayout", dynlib: dllname.}
proc ScrollBar_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ScrollBar_FixDesignFontsPPI", dynlib: dllname.}
proc ScrollBar_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ScrollBar_ScaleFontsPPI", dynlib: dllname.}
proc ScrollBar_GetAlign*(AObj: pointer): TAlign {.importc: "ScrollBar_GetAlign", dynlib: dllname.}
proc ScrollBar_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ScrollBar_SetAlign", dynlib: dllname.}
proc ScrollBar_GetAnchors*(AObj: pointer): TAnchors {.importc: "ScrollBar_GetAnchors", dynlib: dllname.}
proc ScrollBar_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ScrollBar_SetAnchors", dynlib: dllname.}
proc ScrollBar_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ScrollBar_GetBiDiMode", dynlib: dllname.}
proc ScrollBar_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ScrollBar_SetBiDiMode", dynlib: dllname.}
proc ScrollBar_GetConstraints*(AObj: pointer): pointer {.importc: "ScrollBar_GetConstraints", dynlib: dllname.}
proc ScrollBar_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetConstraints", dynlib: dllname.}
proc ScrollBar_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ScrollBar_GetDoubleBuffered", dynlib: dllname.}
proc ScrollBar_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetDoubleBuffered", dynlib: dllname.}
proc ScrollBar_GetDragCursor*(AObj: pointer): TCursor {.importc: "ScrollBar_GetDragCursor", dynlib: dllname.}
proc ScrollBar_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ScrollBar_SetDragCursor", dynlib: dllname.}
proc ScrollBar_GetDragKind*(AObj: pointer): TDragKind {.importc: "ScrollBar_GetDragKind", dynlib: dllname.}
proc ScrollBar_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ScrollBar_SetDragKind", dynlib: dllname.}
proc ScrollBar_GetDragMode*(AObj: pointer): TDragMode {.importc: "ScrollBar_GetDragMode", dynlib: dllname.}
proc ScrollBar_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ScrollBar_SetDragMode", dynlib: dllname.}
proc ScrollBar_GetEnabled*(AObj: pointer): bool {.importc: "ScrollBar_GetEnabled", dynlib: dllname.}
proc ScrollBar_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetEnabled", dynlib: dllname.}
proc ScrollBar_GetLargeChange*(AObj: pointer): TScrollBarInc {.importc: "ScrollBar_GetLargeChange", dynlib: dllname.}
proc ScrollBar_SetLargeChange*(AObj: pointer, AValue: TScrollBarInc) {.importc: "ScrollBar_SetLargeChange", dynlib: dllname.}
proc ScrollBar_GetMax*(AObj: pointer): int32 {.importc: "ScrollBar_GetMax", dynlib: dllname.}
proc ScrollBar_SetMax*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetMax", dynlib: dllname.}
proc ScrollBar_GetMin*(AObj: pointer): int32 {.importc: "ScrollBar_GetMin", dynlib: dllname.}
proc ScrollBar_SetMin*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetMin", dynlib: dllname.}
proc ScrollBar_GetPageSize*(AObj: pointer): int32 {.importc: "ScrollBar_GetPageSize", dynlib: dllname.}
proc ScrollBar_SetPageSize*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetPageSize", dynlib: dllname.}
proc ScrollBar_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ScrollBar_GetParentDoubleBuffered", dynlib: dllname.}
proc ScrollBar_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetParentDoubleBuffered", dynlib: dllname.}
proc ScrollBar_GetParentShowHint*(AObj: pointer): bool {.importc: "ScrollBar_GetParentShowHint", dynlib: dllname.}
proc ScrollBar_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetParentShowHint", dynlib: dllname.}
proc ScrollBar_GetPopupMenu*(AObj: pointer): pointer {.importc: "ScrollBar_GetPopupMenu", dynlib: dllname.}
proc ScrollBar_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetPopupMenu", dynlib: dllname.}
proc ScrollBar_GetPosition*(AObj: pointer): int32 {.importc: "ScrollBar_GetPosition", dynlib: dllname.}
proc ScrollBar_SetPosition*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetPosition", dynlib: dllname.}
proc ScrollBar_GetShowHint*(AObj: pointer): bool {.importc: "ScrollBar_GetShowHint", dynlib: dllname.}
proc ScrollBar_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetShowHint", dynlib: dllname.}
proc ScrollBar_GetSmallChange*(AObj: pointer): TScrollBarInc {.importc: "ScrollBar_GetSmallChange", dynlib: dllname.}
proc ScrollBar_SetSmallChange*(AObj: pointer, AValue: TScrollBarInc) {.importc: "ScrollBar_SetSmallChange", dynlib: dllname.}
proc ScrollBar_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ScrollBar_GetTabOrder", dynlib: dllname.}
proc ScrollBar_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ScrollBar_SetTabOrder", dynlib: dllname.}
proc ScrollBar_GetTabStop*(AObj: pointer): bool {.importc: "ScrollBar_GetTabStop", dynlib: dllname.}
proc ScrollBar_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetTabStop", dynlib: dllname.}
proc ScrollBar_GetVisible*(AObj: pointer): bool {.importc: "ScrollBar_GetVisible", dynlib: dllname.}
proc ScrollBar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetVisible", dynlib: dllname.}
proc ScrollBar_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ScrollBar_SetOnContextPopup", dynlib: dllname.}
proc ScrollBar_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBar_SetOnChange", dynlib: dllname.}
proc ScrollBar_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ScrollBar_SetOnDragDrop", dynlib: dllname.}
proc ScrollBar_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ScrollBar_SetOnDragOver", dynlib: dllname.}
proc ScrollBar_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ScrollBar_SetOnEndDrag", dynlib: dllname.}
proc ScrollBar_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBar_SetOnEnter", dynlib: dllname.}
proc ScrollBar_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBar_SetOnExit", dynlib: dllname.}
proc ScrollBar_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ScrollBar_SetOnKeyDown", dynlib: dllname.}
proc ScrollBar_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ScrollBar_SetOnKeyPress", dynlib: dllname.}
proc ScrollBar_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ScrollBar_SetOnKeyUp", dynlib: dllname.}
proc ScrollBar_GetDockClientCount*(AObj: pointer): int32 {.importc: "ScrollBar_GetDockClientCount", dynlib: dllname.}
proc ScrollBar_GetDockSite*(AObj: pointer): bool {.importc: "ScrollBar_GetDockSite", dynlib: dllname.}
proc ScrollBar_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetDockSite", dynlib: dllname.}
proc ScrollBar_GetMouseInClient*(AObj: pointer): bool {.importc: "ScrollBar_GetMouseInClient", dynlib: dllname.}
proc ScrollBar_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ScrollBar_GetVisibleDockClientCount", dynlib: dllname.}
proc ScrollBar_GetBrush*(AObj: pointer): pointer {.importc: "ScrollBar_GetBrush", dynlib: dllname.}
proc ScrollBar_GetControlCount*(AObj: pointer): int32 {.importc: "ScrollBar_GetControlCount", dynlib: dllname.}
proc ScrollBar_GetHandle*(AObj: pointer): HWND {.importc: "ScrollBar_GetHandle", dynlib: dllname.}
proc ScrollBar_GetParentWindow*(AObj: pointer): HWND {.importc: "ScrollBar_GetParentWindow", dynlib: dllname.}
proc ScrollBar_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ScrollBar_SetParentWindow", dynlib: dllname.}
proc ScrollBar_GetShowing*(AObj: pointer): bool {.importc: "ScrollBar_GetShowing", dynlib: dllname.}
proc ScrollBar_GetUseDockManager*(AObj: pointer): bool {.importc: "ScrollBar_GetUseDockManager", dynlib: dllname.}
proc ScrollBar_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ScrollBar_SetUseDockManager", dynlib: dllname.}
proc ScrollBar_GetAction*(AObj: pointer): pointer {.importc: "ScrollBar_GetAction", dynlib: dllname.}
proc ScrollBar_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetAction", dynlib: dllname.}
proc ScrollBar_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ScrollBar_GetBoundsRect", dynlib: dllname.}
proc ScrollBar_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ScrollBar_SetBoundsRect", dynlib: dllname.}
proc ScrollBar_GetClientHeight*(AObj: pointer): int32 {.importc: "ScrollBar_GetClientHeight", dynlib: dllname.}
proc ScrollBar_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetClientHeight", dynlib: dllname.}
proc ScrollBar_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ScrollBar_GetClientOrigin", dynlib: dllname.}
proc ScrollBar_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ScrollBar_GetClientRect", dynlib: dllname.}
proc ScrollBar_GetClientWidth*(AObj: pointer): int32 {.importc: "ScrollBar_GetClientWidth", dynlib: dllname.}
proc ScrollBar_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetClientWidth", dynlib: dllname.}
proc ScrollBar_GetControlState*(AObj: pointer): TControlState {.importc: "ScrollBar_GetControlState", dynlib: dllname.}
proc ScrollBar_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ScrollBar_SetControlState", dynlib: dllname.}
proc ScrollBar_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ScrollBar_GetControlStyle", dynlib: dllname.}
proc ScrollBar_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ScrollBar_SetControlStyle", dynlib: dllname.}
proc ScrollBar_GetFloating*(AObj: pointer): bool {.importc: "ScrollBar_GetFloating", dynlib: dllname.}
proc ScrollBar_GetParent*(AObj: pointer): pointer {.importc: "ScrollBar_GetParent", dynlib: dllname.}
proc ScrollBar_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetParent", dynlib: dllname.}
proc ScrollBar_GetLeft*(AObj: pointer): int32 {.importc: "ScrollBar_GetLeft", dynlib: dllname.}
proc ScrollBar_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetLeft", dynlib: dllname.}
proc ScrollBar_GetTop*(AObj: pointer): int32 {.importc: "ScrollBar_GetTop", dynlib: dllname.}
proc ScrollBar_SetTop*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetTop", dynlib: dllname.}
proc ScrollBar_GetWidth*(AObj: pointer): int32 {.importc: "ScrollBar_GetWidth", dynlib: dllname.}
proc ScrollBar_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetWidth", dynlib: dllname.}
proc ScrollBar_GetHeight*(AObj: pointer): int32 {.importc: "ScrollBar_GetHeight", dynlib: dllname.}
proc ScrollBar_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetHeight", dynlib: dllname.}
proc ScrollBar_GetCursor*(AObj: pointer): TCursor {.importc: "ScrollBar_GetCursor", dynlib: dllname.}
proc ScrollBar_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ScrollBar_SetCursor", dynlib: dllname.}
proc ScrollBar_GetHint*(AObj: pointer): cstring {.importc: "ScrollBar_GetHint", dynlib: dllname.}
proc ScrollBar_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ScrollBar_SetHint", dynlib: dllname.}
proc ScrollBar_GetComponentCount*(AObj: pointer): int32 {.importc: "ScrollBar_GetComponentCount", dynlib: dllname.}
proc ScrollBar_GetComponentIndex*(AObj: pointer): int32 {.importc: "ScrollBar_GetComponentIndex", dynlib: dllname.}
proc ScrollBar_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ScrollBar_SetComponentIndex", dynlib: dllname.}
proc ScrollBar_GetOwner*(AObj: pointer): pointer {.importc: "ScrollBar_GetOwner", dynlib: dllname.}
proc ScrollBar_GetName*(AObj: pointer): cstring {.importc: "ScrollBar_GetName", dynlib: dllname.}
proc ScrollBar_SetName*(AObj: pointer, AValue: cstring) {.importc: "ScrollBar_SetName", dynlib: dllname.}
proc ScrollBar_GetTag*(AObj: pointer): int {.importc: "ScrollBar_GetTag", dynlib: dllname.}
proc ScrollBar_SetTag*(AObj: pointer, AValue: int) {.importc: "ScrollBar_SetTag", dynlib: dllname.}
proc ScrollBar_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ScrollBar_GetAnchorSideLeft", dynlib: dllname.}
proc ScrollBar_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetAnchorSideLeft", dynlib: dllname.}
proc ScrollBar_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ScrollBar_GetAnchorSideTop", dynlib: dllname.}
proc ScrollBar_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetAnchorSideTop", dynlib: dllname.}
proc ScrollBar_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ScrollBar_GetAnchorSideRight", dynlib: dllname.}
proc ScrollBar_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetAnchorSideRight", dynlib: dllname.}
proc ScrollBar_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ScrollBar_GetAnchorSideBottom", dynlib: dllname.}
proc ScrollBar_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetAnchorSideBottom", dynlib: dllname.}
proc ScrollBar_GetChildSizing*(AObj: pointer): pointer {.importc: "ScrollBar_GetChildSizing", dynlib: dllname.}
proc ScrollBar_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetChildSizing", dynlib: dllname.}
proc ScrollBar_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ScrollBar_GetBorderSpacing", dynlib: dllname.}
proc ScrollBar_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ScrollBar_SetBorderSpacing", dynlib: dllname.}
proc ScrollBar_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ScrollBar_GetDockClients", dynlib: dllname.}
proc ScrollBar_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ScrollBar_GetControls", dynlib: dllname.}
proc ScrollBar_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ScrollBar_GetComponents", dynlib: dllname.}
proc ScrollBar_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ScrollBar_GetAnchorSide", dynlib: dllname.}
proc ScrollBar_StaticClassType*(): TClass {.importc: "ScrollBar_StaticClassType", dynlib: dllname.}
# ----------------- TMaskEdit ----------------------
proc MaskEdit_Create*(AOwner: pointer): pointer {.importc: "MaskEdit_Create", dynlib: dllname.}
proc MaskEdit_Free*(AObj: pointer) {.importc: "MaskEdit_Free", dynlib: dllname.}
proc MaskEdit_ValidateEdit*(AObj: pointer) {.importc: "MaskEdit_ValidateEdit", dynlib: dllname.}
proc MaskEdit_Clear*(AObj: pointer) {.importc: "MaskEdit_Clear", dynlib: dllname.}
proc MaskEdit_GetTextLen*(AObj: pointer): int32 {.importc: "MaskEdit_GetTextLen", dynlib: dllname.}
proc MaskEdit_ClearSelection*(AObj: pointer) {.importc: "MaskEdit_ClearSelection", dynlib: dllname.}
proc MaskEdit_CopyToClipboard*(AObj: pointer) {.importc: "MaskEdit_CopyToClipboard", dynlib: dllname.}
proc MaskEdit_CutToClipboard*(AObj: pointer) {.importc: "MaskEdit_CutToClipboard", dynlib: dllname.}
proc MaskEdit_PasteFromClipboard*(AObj: pointer) {.importc: "MaskEdit_PasteFromClipboard", dynlib: dllname.}
proc MaskEdit_Undo*(AObj: pointer) {.importc: "MaskEdit_Undo", dynlib: dllname.}
proc MaskEdit_SelectAll*(AObj: pointer) {.importc: "MaskEdit_SelectAll", dynlib: dllname.}
proc MaskEdit_CanFocus*(AObj: pointer): bool {.importc: "MaskEdit_CanFocus", dynlib: dllname.}
proc MaskEdit_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "MaskEdit_ContainsControl", dynlib: dllname.}
proc MaskEdit_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "MaskEdit_ControlAtPos", dynlib: dllname.}
proc MaskEdit_DisableAlign*(AObj: pointer) {.importc: "MaskEdit_DisableAlign", dynlib: dllname.}
proc MaskEdit_EnableAlign*(AObj: pointer) {.importc: "MaskEdit_EnableAlign", dynlib: dllname.}
proc MaskEdit_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "MaskEdit_FindChildControl", dynlib: dllname.}
proc MaskEdit_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "MaskEdit_FlipChildren", dynlib: dllname.}
proc MaskEdit_Focused*(AObj: pointer): bool {.importc: "MaskEdit_Focused", dynlib: dllname.}
proc MaskEdit_HandleAllocated*(AObj: pointer): bool {.importc: "MaskEdit_HandleAllocated", dynlib: dllname.}
proc MaskEdit_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "MaskEdit_InsertControl", dynlib: dllname.}
proc MaskEdit_Invalidate*(AObj: pointer) {.importc: "MaskEdit_Invalidate", dynlib: dllname.}
proc MaskEdit_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "MaskEdit_PaintTo", dynlib: dllname.}
proc MaskEdit_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "MaskEdit_RemoveControl", dynlib: dllname.}
proc MaskEdit_Realign*(AObj: pointer) {.importc: "MaskEdit_Realign", dynlib: dllname.}
proc MaskEdit_Repaint*(AObj: pointer) {.importc: "MaskEdit_Repaint", dynlib: dllname.}
proc MaskEdit_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "MaskEdit_ScaleBy", dynlib: dllname.}
proc MaskEdit_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "MaskEdit_ScrollBy", dynlib: dllname.}
proc MaskEdit_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "MaskEdit_SetBounds", dynlib: dllname.}
proc MaskEdit_SetFocus*(AObj: pointer) {.importc: "MaskEdit_SetFocus", dynlib: dllname.}
proc MaskEdit_Update*(AObj: pointer) {.importc: "MaskEdit_Update", dynlib: dllname.}
proc MaskEdit_BringToFront*(AObj: pointer) {.importc: "MaskEdit_BringToFront", dynlib: dllname.}
proc MaskEdit_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "MaskEdit_ClientToScreen", dynlib: dllname.}
proc MaskEdit_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "MaskEdit_ClientToParent", dynlib: dllname.}
proc MaskEdit_Dragging*(AObj: pointer): bool {.importc: "MaskEdit_Dragging", dynlib: dllname.}
proc MaskEdit_HasParent*(AObj: pointer): bool {.importc: "MaskEdit_HasParent", dynlib: dllname.}
proc MaskEdit_Hide*(AObj: pointer) {.importc: "MaskEdit_Hide", dynlib: dllname.}
proc MaskEdit_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "MaskEdit_Perform", dynlib: dllname.}
proc MaskEdit_Refresh*(AObj: pointer) {.importc: "MaskEdit_Refresh", dynlib: dllname.}
proc MaskEdit_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "MaskEdit_ScreenToClient", dynlib: dllname.}
proc MaskEdit_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "MaskEdit_ParentToClient", dynlib: dllname.}
proc MaskEdit_SendToBack*(AObj: pointer) {.importc: "MaskEdit_SendToBack", dynlib: dllname.}
proc MaskEdit_Show*(AObj: pointer) {.importc: "MaskEdit_Show", dynlib: dllname.}
proc MaskEdit_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "MaskEdit_GetTextBuf", dynlib: dllname.}
proc MaskEdit_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "MaskEdit_SetTextBuf", dynlib: dllname.}
proc MaskEdit_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "MaskEdit_FindComponent", dynlib: dllname.}
proc MaskEdit_GetNamePath*(AObj: pointer): cstring {.importc: "MaskEdit_GetNamePath", dynlib: dllname.}
proc MaskEdit_Assign*(AObj: pointer, Source: pointer) {.importc: "MaskEdit_Assign", dynlib: dllname.}
proc MaskEdit_ClassType*(AObj: pointer): TClass {.importc: "MaskEdit_ClassType", dynlib: dllname.}
proc MaskEdit_ClassName*(AObj: pointer): cstring {.importc: "MaskEdit_ClassName", dynlib: dllname.}
proc MaskEdit_InstanceSize*(AObj: pointer): int32 {.importc: "MaskEdit_InstanceSize", dynlib: dllname.}
proc MaskEdit_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "MaskEdit_InheritsFrom", dynlib: dllname.}
proc MaskEdit_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "MaskEdit_Equals", dynlib: dllname.}
proc MaskEdit_GetHashCode*(AObj: pointer): int32 {.importc: "MaskEdit_GetHashCode", dynlib: dllname.}
proc MaskEdit_ToString*(AObj: pointer): cstring {.importc: "MaskEdit_ToString", dynlib: dllname.}
proc MaskEdit_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "MaskEdit_AnchorToNeighbour", dynlib: dllname.}
proc MaskEdit_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "MaskEdit_AnchorParallel", dynlib: dllname.}
proc MaskEdit_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "MaskEdit_AnchorHorizontalCenterTo", dynlib: dllname.}
proc MaskEdit_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "MaskEdit_AnchorVerticalCenterTo", dynlib: dllname.}
proc MaskEdit_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "MaskEdit_AnchorSame", dynlib: dllname.}
proc MaskEdit_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "MaskEdit_AnchorAsAlign", dynlib: dllname.}
proc MaskEdit_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "MaskEdit_AnchorClient", dynlib: dllname.}
proc MaskEdit_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_ScaleDesignToForm", dynlib: dllname.}
proc MaskEdit_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_ScaleFormToDesign", dynlib: dllname.}
proc MaskEdit_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_Scale96ToForm", dynlib: dllname.}
proc MaskEdit_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_ScaleFormTo96", dynlib: dllname.}
proc MaskEdit_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_Scale96ToFont", dynlib: dllname.}
proc MaskEdit_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_ScaleFontTo96", dynlib: dllname.}
proc MaskEdit_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_ScaleScreenToFont", dynlib: dllname.}
proc MaskEdit_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_ScaleFontToScreen", dynlib: dllname.}
proc MaskEdit_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_Scale96ToScreen", dynlib: dllname.}
proc MaskEdit_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "MaskEdit_ScaleScreenTo96", dynlib: dllname.}
proc MaskEdit_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "MaskEdit_AutoAdjustLayout", dynlib: dllname.}
proc MaskEdit_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "MaskEdit_FixDesignFontsPPI", dynlib: dllname.}
proc MaskEdit_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "MaskEdit_ScaleFontsPPI", dynlib: dllname.}
proc MaskEdit_GetAlign*(AObj: pointer): TAlign {.importc: "MaskEdit_GetAlign", dynlib: dllname.}
proc MaskEdit_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "MaskEdit_SetAlign", dynlib: dllname.}
proc MaskEdit_GetAlignment*(AObj: pointer): TAlignment {.importc: "MaskEdit_GetAlignment", dynlib: dllname.}
proc MaskEdit_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "MaskEdit_SetAlignment", dynlib: dllname.}
proc MaskEdit_GetAnchors*(AObj: pointer): TAnchors {.importc: "MaskEdit_GetAnchors", dynlib: dllname.}
proc MaskEdit_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "MaskEdit_SetAnchors", dynlib: dllname.}
proc MaskEdit_GetAutoSelect*(AObj: pointer): bool {.importc: "MaskEdit_GetAutoSelect", dynlib: dllname.}
proc MaskEdit_SetAutoSelect*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetAutoSelect", dynlib: dllname.}
proc MaskEdit_GetAutoSize*(AObj: pointer): bool {.importc: "MaskEdit_GetAutoSize", dynlib: dllname.}
proc MaskEdit_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetAutoSize", dynlib: dllname.}
proc MaskEdit_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "MaskEdit_GetBiDiMode", dynlib: dllname.}
proc MaskEdit_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "MaskEdit_SetBiDiMode", dynlib: dllname.}
proc MaskEdit_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "MaskEdit_GetBorderStyle", dynlib: dllname.}
proc MaskEdit_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "MaskEdit_SetBorderStyle", dynlib: dllname.}
proc MaskEdit_GetCharCase*(AObj: pointer): TEditCharCase {.importc: "MaskEdit_GetCharCase", dynlib: dllname.}
proc MaskEdit_SetCharCase*(AObj: pointer, AValue: TEditCharCase) {.importc: "MaskEdit_SetCharCase", dynlib: dllname.}
proc MaskEdit_GetColor*(AObj: pointer): TColor {.importc: "MaskEdit_GetColor", dynlib: dllname.}
proc MaskEdit_SetColor*(AObj: pointer, AValue: TColor) {.importc: "MaskEdit_SetColor", dynlib: dllname.}
proc MaskEdit_GetConstraints*(AObj: pointer): pointer {.importc: "MaskEdit_GetConstraints", dynlib: dllname.}
proc MaskEdit_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetConstraints", dynlib: dllname.}
proc MaskEdit_GetDoubleBuffered*(AObj: pointer): bool {.importc: "MaskEdit_GetDoubleBuffered", dynlib: dllname.}
proc MaskEdit_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetDoubleBuffered", dynlib: dllname.}
proc MaskEdit_GetDragCursor*(AObj: pointer): TCursor {.importc: "MaskEdit_GetDragCursor", dynlib: dllname.}
proc MaskEdit_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "MaskEdit_SetDragCursor", dynlib: dllname.}
proc MaskEdit_GetDragKind*(AObj: pointer): TDragKind {.importc: "MaskEdit_GetDragKind", dynlib: dllname.}
proc MaskEdit_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "MaskEdit_SetDragKind", dynlib: dllname.}
proc MaskEdit_GetDragMode*(AObj: pointer): TDragMode {.importc: "MaskEdit_GetDragMode", dynlib: dllname.}
proc MaskEdit_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "MaskEdit_SetDragMode", dynlib: dllname.}
proc MaskEdit_GetEnabled*(AObj: pointer): bool {.importc: "MaskEdit_GetEnabled", dynlib: dllname.}
proc MaskEdit_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetEnabled", dynlib: dllname.}
proc MaskEdit_GetFont*(AObj: pointer): pointer {.importc: "MaskEdit_GetFont", dynlib: dllname.}
proc MaskEdit_SetFont*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetFont", dynlib: dllname.}
proc MaskEdit_GetMaxLength*(AObj: pointer): int32 {.importc: "MaskEdit_GetMaxLength", dynlib: dllname.}
proc MaskEdit_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetMaxLength", dynlib: dllname.}
proc MaskEdit_GetParentColor*(AObj: pointer): bool {.importc: "MaskEdit_GetParentColor", dynlib: dllname.}
proc MaskEdit_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetParentColor", dynlib: dllname.}
proc MaskEdit_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "MaskEdit_GetParentDoubleBuffered", dynlib: dllname.}
proc MaskEdit_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetParentDoubleBuffered", dynlib: dllname.}
proc MaskEdit_GetParentFont*(AObj: pointer): bool {.importc: "MaskEdit_GetParentFont", dynlib: dllname.}
proc MaskEdit_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetParentFont", dynlib: dllname.}
proc MaskEdit_GetParentShowHint*(AObj: pointer): bool {.importc: "MaskEdit_GetParentShowHint", dynlib: dllname.}
proc MaskEdit_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetParentShowHint", dynlib: dllname.}
proc MaskEdit_GetPasswordChar*(AObj: pointer): Char {.importc: "MaskEdit_GetPasswordChar", dynlib: dllname.}
proc MaskEdit_SetPasswordChar*(AObj: pointer, AValue: Char) {.importc: "MaskEdit_SetPasswordChar", dynlib: dllname.}
proc MaskEdit_GetPopupMenu*(AObj: pointer): pointer {.importc: "MaskEdit_GetPopupMenu", dynlib: dllname.}
proc MaskEdit_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetPopupMenu", dynlib: dllname.}
proc MaskEdit_GetReadOnly*(AObj: pointer): bool {.importc: "MaskEdit_GetReadOnly", dynlib: dllname.}
proc MaskEdit_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetReadOnly", dynlib: dllname.}
proc MaskEdit_GetShowHint*(AObj: pointer): bool {.importc: "MaskEdit_GetShowHint", dynlib: dllname.}
proc MaskEdit_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetShowHint", dynlib: dllname.}
proc MaskEdit_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "MaskEdit_GetTabOrder", dynlib: dllname.}
proc MaskEdit_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "MaskEdit_SetTabOrder", dynlib: dllname.}
proc MaskEdit_GetTabStop*(AObj: pointer): bool {.importc: "MaskEdit_GetTabStop", dynlib: dllname.}
proc MaskEdit_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetTabStop", dynlib: dllname.}
proc MaskEdit_GetText*(AObj: pointer): cstring {.importc: "MaskEdit_GetText", dynlib: dllname.}
proc MaskEdit_SetText*(AObj: pointer, AValue: cstring) {.importc: "MaskEdit_SetText", dynlib: dllname.}
proc MaskEdit_GetTextHint*(AObj: pointer): cstring {.importc: "MaskEdit_GetTextHint", dynlib: dllname.}
proc MaskEdit_SetTextHint*(AObj: pointer, AValue: cstring) {.importc: "MaskEdit_SetTextHint", dynlib: dllname.}
proc MaskEdit_GetVisible*(AObj: pointer): bool {.importc: "MaskEdit_GetVisible", dynlib: dllname.}
proc MaskEdit_SetVisible*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetVisible", dynlib: dllname.}
proc MaskEdit_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MaskEdit_SetOnChange", dynlib: dllname.}
proc MaskEdit_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MaskEdit_SetOnClick", dynlib: dllname.}
proc MaskEdit_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MaskEdit_SetOnDblClick", dynlib: dllname.}
proc MaskEdit_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "MaskEdit_SetOnDragDrop", dynlib: dllname.}
proc MaskEdit_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "MaskEdit_SetOnDragOver", dynlib: dllname.}
proc MaskEdit_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "MaskEdit_SetOnEndDock", dynlib: dllname.}
proc MaskEdit_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "MaskEdit_SetOnEndDrag", dynlib: dllname.}
proc MaskEdit_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MaskEdit_SetOnEnter", dynlib: dllname.}
proc MaskEdit_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MaskEdit_SetOnExit", dynlib: dllname.}
proc MaskEdit_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "MaskEdit_SetOnKeyDown", dynlib: dllname.}
proc MaskEdit_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "MaskEdit_SetOnKeyPress", dynlib: dllname.}
proc MaskEdit_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "MaskEdit_SetOnKeyUp", dynlib: dllname.}
proc MaskEdit_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "MaskEdit_SetOnMouseDown", dynlib: dllname.}
proc MaskEdit_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MaskEdit_SetOnMouseEnter", dynlib: dllname.}
proc MaskEdit_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "MaskEdit_SetOnMouseLeave", dynlib: dllname.}
proc MaskEdit_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "MaskEdit_SetOnMouseMove", dynlib: dllname.}
proc MaskEdit_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "MaskEdit_SetOnMouseUp", dynlib: dllname.}
proc MaskEdit_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "MaskEdit_SetOnStartDock", dynlib: dllname.}
proc MaskEdit_GetIsMasked*(AObj: pointer): bool {.importc: "MaskEdit_GetIsMasked", dynlib: dllname.}
proc MaskEdit_GetEditText*(AObj: pointer): cstring {.importc: "MaskEdit_GetEditText", dynlib: dllname.}
proc MaskEdit_SetEditText*(AObj: pointer, AValue: cstring) {.importc: "MaskEdit_SetEditText", dynlib: dllname.}
proc MaskEdit_GetCanUndo*(AObj: pointer): bool {.importc: "MaskEdit_GetCanUndo", dynlib: dllname.}
proc MaskEdit_GetModified*(AObj: pointer): bool {.importc: "MaskEdit_GetModified", dynlib: dllname.}
proc MaskEdit_SetModified*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetModified", dynlib: dllname.}
proc MaskEdit_GetSelLength*(AObj: pointer): int32 {.importc: "MaskEdit_GetSelLength", dynlib: dllname.}
proc MaskEdit_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetSelLength", dynlib: dllname.}
proc MaskEdit_GetSelStart*(AObj: pointer): int32 {.importc: "MaskEdit_GetSelStart", dynlib: dllname.}
proc MaskEdit_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetSelStart", dynlib: dllname.}
proc MaskEdit_GetSelText*(AObj: pointer): cstring {.importc: "MaskEdit_GetSelText", dynlib: dllname.}
proc MaskEdit_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "MaskEdit_SetSelText", dynlib: dllname.}
proc MaskEdit_GetDockClientCount*(AObj: pointer): int32 {.importc: "MaskEdit_GetDockClientCount", dynlib: dllname.}
proc MaskEdit_GetDockSite*(AObj: pointer): bool {.importc: "MaskEdit_GetDockSite", dynlib: dllname.}
proc MaskEdit_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetDockSite", dynlib: dllname.}
proc MaskEdit_GetMouseInClient*(AObj: pointer): bool {.importc: "MaskEdit_GetMouseInClient", dynlib: dllname.}
proc MaskEdit_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "MaskEdit_GetVisibleDockClientCount", dynlib: dllname.}
proc MaskEdit_GetBrush*(AObj: pointer): pointer {.importc: "MaskEdit_GetBrush", dynlib: dllname.}
proc MaskEdit_GetControlCount*(AObj: pointer): int32 {.importc: "MaskEdit_GetControlCount", dynlib: dllname.}
proc MaskEdit_GetHandle*(AObj: pointer): HWND {.importc: "MaskEdit_GetHandle", dynlib: dllname.}
proc MaskEdit_GetParentWindow*(AObj: pointer): HWND {.importc: "MaskEdit_GetParentWindow", dynlib: dllname.}
proc MaskEdit_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "MaskEdit_SetParentWindow", dynlib: dllname.}
proc MaskEdit_GetShowing*(AObj: pointer): bool {.importc: "MaskEdit_GetShowing", dynlib: dllname.}
proc MaskEdit_GetUseDockManager*(AObj: pointer): bool {.importc: "MaskEdit_GetUseDockManager", dynlib: dllname.}
proc MaskEdit_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "MaskEdit_SetUseDockManager", dynlib: dllname.}
proc MaskEdit_GetAction*(AObj: pointer): pointer {.importc: "MaskEdit_GetAction", dynlib: dllname.}
proc MaskEdit_SetAction*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetAction", dynlib: dllname.}
proc MaskEdit_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "MaskEdit_GetBoundsRect", dynlib: dllname.}
proc MaskEdit_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "MaskEdit_SetBoundsRect", dynlib: dllname.}
proc MaskEdit_GetClientHeight*(AObj: pointer): int32 {.importc: "MaskEdit_GetClientHeight", dynlib: dllname.}
proc MaskEdit_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetClientHeight", dynlib: dllname.}
proc MaskEdit_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "MaskEdit_GetClientOrigin", dynlib: dllname.}
proc MaskEdit_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "MaskEdit_GetClientRect", dynlib: dllname.}
proc MaskEdit_GetClientWidth*(AObj: pointer): int32 {.importc: "MaskEdit_GetClientWidth", dynlib: dllname.}
proc MaskEdit_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetClientWidth", dynlib: dllname.}
proc MaskEdit_GetControlState*(AObj: pointer): TControlState {.importc: "MaskEdit_GetControlState", dynlib: dllname.}
proc MaskEdit_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "MaskEdit_SetControlState", dynlib: dllname.}
proc MaskEdit_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "MaskEdit_GetControlStyle", dynlib: dllname.}
proc MaskEdit_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "MaskEdit_SetControlStyle", dynlib: dllname.}
proc MaskEdit_GetFloating*(AObj: pointer): bool {.importc: "MaskEdit_GetFloating", dynlib: dllname.}
proc MaskEdit_GetParent*(AObj: pointer): pointer {.importc: "MaskEdit_GetParent", dynlib: dllname.}
proc MaskEdit_SetParent*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetParent", dynlib: dllname.}
proc MaskEdit_GetLeft*(AObj: pointer): int32 {.importc: "MaskEdit_GetLeft", dynlib: dllname.}
proc MaskEdit_SetLeft*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetLeft", dynlib: dllname.}
proc MaskEdit_GetTop*(AObj: pointer): int32 {.importc: "MaskEdit_GetTop", dynlib: dllname.}
proc MaskEdit_SetTop*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetTop", dynlib: dllname.}
proc MaskEdit_GetWidth*(AObj: pointer): int32 {.importc: "MaskEdit_GetWidth", dynlib: dllname.}
proc MaskEdit_SetWidth*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetWidth", dynlib: dllname.}
proc MaskEdit_GetHeight*(AObj: pointer): int32 {.importc: "MaskEdit_GetHeight", dynlib: dllname.}
proc MaskEdit_SetHeight*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetHeight", dynlib: dllname.}
proc MaskEdit_GetCursor*(AObj: pointer): TCursor {.importc: "MaskEdit_GetCursor", dynlib: dllname.}
proc MaskEdit_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "MaskEdit_SetCursor", dynlib: dllname.}
proc MaskEdit_GetHint*(AObj: pointer): cstring {.importc: "MaskEdit_GetHint", dynlib: dllname.}
proc MaskEdit_SetHint*(AObj: pointer, AValue: cstring) {.importc: "MaskEdit_SetHint", dynlib: dllname.}
proc MaskEdit_GetComponentCount*(AObj: pointer): int32 {.importc: "MaskEdit_GetComponentCount", dynlib: dllname.}
proc MaskEdit_GetComponentIndex*(AObj: pointer): int32 {.importc: "MaskEdit_GetComponentIndex", dynlib: dllname.}
proc MaskEdit_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "MaskEdit_SetComponentIndex", dynlib: dllname.}
proc MaskEdit_GetOwner*(AObj: pointer): pointer {.importc: "MaskEdit_GetOwner", dynlib: dllname.}
proc MaskEdit_GetName*(AObj: pointer): cstring {.importc: "MaskEdit_GetName", dynlib: dllname.}
proc MaskEdit_SetName*(AObj: pointer, AValue: cstring) {.importc: "MaskEdit_SetName", dynlib: dllname.}
proc MaskEdit_GetTag*(AObj: pointer): int {.importc: "MaskEdit_GetTag", dynlib: dllname.}
proc MaskEdit_SetTag*(AObj: pointer, AValue: int) {.importc: "MaskEdit_SetTag", dynlib: dllname.}
proc MaskEdit_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "MaskEdit_GetAnchorSideLeft", dynlib: dllname.}
proc MaskEdit_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetAnchorSideLeft", dynlib: dllname.}
proc MaskEdit_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "MaskEdit_GetAnchorSideTop", dynlib: dllname.}
proc MaskEdit_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetAnchorSideTop", dynlib: dllname.}
proc MaskEdit_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "MaskEdit_GetAnchorSideRight", dynlib: dllname.}
proc MaskEdit_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetAnchorSideRight", dynlib: dllname.}
proc MaskEdit_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "MaskEdit_GetAnchorSideBottom", dynlib: dllname.}
proc MaskEdit_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetAnchorSideBottom", dynlib: dllname.}
proc MaskEdit_GetChildSizing*(AObj: pointer): pointer {.importc: "MaskEdit_GetChildSizing", dynlib: dllname.}
proc MaskEdit_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetChildSizing", dynlib: dllname.}
proc MaskEdit_GetBorderSpacing*(AObj: pointer): pointer {.importc: "MaskEdit_GetBorderSpacing", dynlib: dllname.}
proc MaskEdit_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "MaskEdit_SetBorderSpacing", dynlib: dllname.}
proc MaskEdit_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "MaskEdit_GetDockClients", dynlib: dllname.}
proc MaskEdit_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "MaskEdit_GetControls", dynlib: dllname.}
proc MaskEdit_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "MaskEdit_GetComponents", dynlib: dllname.}
proc MaskEdit_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "MaskEdit_GetAnchorSide", dynlib: dllname.}
proc MaskEdit_StaticClassType*(): TClass {.importc: "MaskEdit_StaticClassType", dynlib: dllname.}
# ----------------- TShape ----------------------
proc Shape_Create*(AOwner: pointer): pointer {.importc: "Shape_Create", dynlib: dllname.}
proc Shape_Free*(AObj: pointer) {.importc: "Shape_Free", dynlib: dllname.}
proc Shape_BringToFront*(AObj: pointer) {.importc: "Shape_BringToFront", dynlib: dllname.}
proc Shape_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Shape_ClientToScreen", dynlib: dllname.}
proc Shape_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Shape_ClientToParent", dynlib: dllname.}
proc Shape_Dragging*(AObj: pointer): bool {.importc: "Shape_Dragging", dynlib: dllname.}
proc Shape_HasParent*(AObj: pointer): bool {.importc: "Shape_HasParent", dynlib: dllname.}
proc Shape_Hide*(AObj: pointer) {.importc: "Shape_Hide", dynlib: dllname.}
proc Shape_Invalidate*(AObj: pointer) {.importc: "Shape_Invalidate", dynlib: dllname.}
proc Shape_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Shape_Perform", dynlib: dllname.}
proc Shape_Refresh*(AObj: pointer) {.importc: "Shape_Refresh", dynlib: dllname.}
proc Shape_Repaint*(AObj: pointer) {.importc: "Shape_Repaint", dynlib: dllname.}
proc Shape_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Shape_ScreenToClient", dynlib: dllname.}
proc Shape_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Shape_ParentToClient", dynlib: dllname.}
proc Shape_SendToBack*(AObj: pointer) {.importc: "Shape_SendToBack", dynlib: dllname.}
proc Shape_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Shape_SetBounds", dynlib: dllname.}
proc Shape_Show*(AObj: pointer) {.importc: "Shape_Show", dynlib: dllname.}
proc Shape_Update*(AObj: pointer) {.importc: "Shape_Update", dynlib: dllname.}
proc Shape_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Shape_GetTextBuf", dynlib: dllname.}
proc Shape_GetTextLen*(AObj: pointer): int32 {.importc: "Shape_GetTextLen", dynlib: dllname.}
proc Shape_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Shape_SetTextBuf", dynlib: dllname.}
proc Shape_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Shape_FindComponent", dynlib: dllname.}
proc Shape_GetNamePath*(AObj: pointer): cstring {.importc: "Shape_GetNamePath", dynlib: dllname.}
proc Shape_Assign*(AObj: pointer, Source: pointer) {.importc: "Shape_Assign", dynlib: dllname.}
proc Shape_ClassType*(AObj: pointer): TClass {.importc: "Shape_ClassType", dynlib: dllname.}
proc Shape_ClassName*(AObj: pointer): cstring {.importc: "Shape_ClassName", dynlib: dllname.}
proc Shape_InstanceSize*(AObj: pointer): int32 {.importc: "Shape_InstanceSize", dynlib: dllname.}
proc Shape_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Shape_InheritsFrom", dynlib: dllname.}
proc Shape_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Shape_Equals", dynlib: dllname.}
proc Shape_GetHashCode*(AObj: pointer): int32 {.importc: "Shape_GetHashCode", dynlib: dllname.}
proc Shape_ToString*(AObj: pointer): cstring {.importc: "Shape_ToString", dynlib: dllname.}
proc Shape_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Shape_AnchorToNeighbour", dynlib: dllname.}
proc Shape_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Shape_AnchorParallel", dynlib: dllname.}
proc Shape_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Shape_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Shape_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Shape_AnchorVerticalCenterTo", dynlib: dllname.}
proc Shape_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Shape_AnchorSame", dynlib: dllname.}
proc Shape_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Shape_AnchorAsAlign", dynlib: dllname.}
proc Shape_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Shape_AnchorClient", dynlib: dllname.}
proc Shape_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_ScaleDesignToForm", dynlib: dllname.}
proc Shape_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_ScaleFormToDesign", dynlib: dllname.}
proc Shape_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_Scale96ToForm", dynlib: dllname.}
proc Shape_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_ScaleFormTo96", dynlib: dllname.}
proc Shape_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_Scale96ToFont", dynlib: dllname.}
proc Shape_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_ScaleFontTo96", dynlib: dllname.}
proc Shape_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_ScaleScreenToFont", dynlib: dllname.}
proc Shape_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_ScaleFontToScreen", dynlib: dllname.}
proc Shape_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_Scale96ToScreen", dynlib: dllname.}
proc Shape_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Shape_ScaleScreenTo96", dynlib: dllname.}
proc Shape_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Shape_AutoAdjustLayout", dynlib: dllname.}
proc Shape_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Shape_FixDesignFontsPPI", dynlib: dllname.}
proc Shape_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Shape_ScaleFontsPPI", dynlib: dllname.}
proc Shape_GetAlign*(AObj: pointer): TAlign {.importc: "Shape_GetAlign", dynlib: dllname.}
proc Shape_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Shape_SetAlign", dynlib: dllname.}
proc Shape_GetAnchors*(AObj: pointer): TAnchors {.importc: "Shape_GetAnchors", dynlib: dllname.}
proc Shape_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Shape_SetAnchors", dynlib: dllname.}
proc Shape_GetBrush*(AObj: pointer): pointer {.importc: "Shape_GetBrush", dynlib: dllname.}
proc Shape_SetBrush*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetBrush", dynlib: dllname.}
proc Shape_GetDragCursor*(AObj: pointer): TCursor {.importc: "Shape_GetDragCursor", dynlib: dllname.}
proc Shape_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Shape_SetDragCursor", dynlib: dllname.}
proc Shape_GetDragKind*(AObj: pointer): TDragKind {.importc: "Shape_GetDragKind", dynlib: dllname.}
proc Shape_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Shape_SetDragKind", dynlib: dllname.}
proc Shape_GetDragMode*(AObj: pointer): TDragMode {.importc: "Shape_GetDragMode", dynlib: dllname.}
proc Shape_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Shape_SetDragMode", dynlib: dllname.}
proc Shape_GetEnabled*(AObj: pointer): bool {.importc: "Shape_GetEnabled", dynlib: dllname.}
proc Shape_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Shape_SetEnabled", dynlib: dllname.}
proc Shape_GetConstraints*(AObj: pointer): pointer {.importc: "Shape_GetConstraints", dynlib: dllname.}
proc Shape_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetConstraints", dynlib: dllname.}
proc Shape_GetParentShowHint*(AObj: pointer): bool {.importc: "Shape_GetParentShowHint", dynlib: dllname.}
proc Shape_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Shape_SetParentShowHint", dynlib: dllname.}
proc Shape_GetPen*(AObj: pointer): pointer {.importc: "Shape_GetPen", dynlib: dllname.}
proc Shape_SetPen*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetPen", dynlib: dllname.}
proc Shape_GetShape*(AObj: pointer): TShapeType {.importc: "Shape_GetShape", dynlib: dllname.}
proc Shape_SetShape*(AObj: pointer, AValue: TShapeType) {.importc: "Shape_SetShape", dynlib: dllname.}
proc Shape_GetShowHint*(AObj: pointer): bool {.importc: "Shape_GetShowHint", dynlib: dllname.}
proc Shape_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Shape_SetShowHint", dynlib: dllname.}
proc Shape_GetVisible*(AObj: pointer): bool {.importc: "Shape_GetVisible", dynlib: dllname.}
proc Shape_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Shape_SetVisible", dynlib: dllname.}
proc Shape_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Shape_SetOnDragDrop", dynlib: dllname.}
proc Shape_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Shape_SetOnDragOver", dynlib: dllname.}
proc Shape_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Shape_SetOnEndDrag", dynlib: dllname.}
proc Shape_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Shape_SetOnMouseDown", dynlib: dllname.}
proc Shape_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Shape_SetOnMouseEnter", dynlib: dllname.}
proc Shape_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Shape_SetOnMouseLeave", dynlib: dllname.}
proc Shape_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Shape_SetOnMouseMove", dynlib: dllname.}
proc Shape_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Shape_SetOnMouseUp", dynlib: dllname.}
proc Shape_GetAction*(AObj: pointer): pointer {.importc: "Shape_GetAction", dynlib: dllname.}
proc Shape_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetAction", dynlib: dllname.}
proc Shape_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Shape_GetBiDiMode", dynlib: dllname.}
proc Shape_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Shape_SetBiDiMode", dynlib: dllname.}
proc Shape_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Shape_GetBoundsRect", dynlib: dllname.}
proc Shape_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Shape_SetBoundsRect", dynlib: dllname.}
proc Shape_GetClientHeight*(AObj: pointer): int32 {.importc: "Shape_GetClientHeight", dynlib: dllname.}
proc Shape_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Shape_SetClientHeight", dynlib: dllname.}
proc Shape_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Shape_GetClientOrigin", dynlib: dllname.}
proc Shape_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Shape_GetClientRect", dynlib: dllname.}
proc Shape_GetClientWidth*(AObj: pointer): int32 {.importc: "Shape_GetClientWidth", dynlib: dllname.}
proc Shape_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Shape_SetClientWidth", dynlib: dllname.}
proc Shape_GetControlState*(AObj: pointer): TControlState {.importc: "Shape_GetControlState", dynlib: dllname.}
proc Shape_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Shape_SetControlState", dynlib: dllname.}
proc Shape_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Shape_GetControlStyle", dynlib: dllname.}
proc Shape_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Shape_SetControlStyle", dynlib: dllname.}
proc Shape_GetFloating*(AObj: pointer): bool {.importc: "Shape_GetFloating", dynlib: dllname.}
proc Shape_GetParent*(AObj: pointer): pointer {.importc: "Shape_GetParent", dynlib: dllname.}
proc Shape_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetParent", dynlib: dllname.}
proc Shape_GetLeft*(AObj: pointer): int32 {.importc: "Shape_GetLeft", dynlib: dllname.}
proc Shape_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Shape_SetLeft", dynlib: dllname.}
proc Shape_GetTop*(AObj: pointer): int32 {.importc: "Shape_GetTop", dynlib: dllname.}
proc Shape_SetTop*(AObj: pointer, AValue: int32) {.importc: "Shape_SetTop", dynlib: dllname.}
proc Shape_GetWidth*(AObj: pointer): int32 {.importc: "Shape_GetWidth", dynlib: dllname.}
proc Shape_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Shape_SetWidth", dynlib: dllname.}
proc Shape_GetHeight*(AObj: pointer): int32 {.importc: "Shape_GetHeight", dynlib: dllname.}
proc Shape_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Shape_SetHeight", dynlib: dllname.}
proc Shape_GetCursor*(AObj: pointer): TCursor {.importc: "Shape_GetCursor", dynlib: dllname.}
proc Shape_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Shape_SetCursor", dynlib: dllname.}
proc Shape_GetHint*(AObj: pointer): cstring {.importc: "Shape_GetHint", dynlib: dllname.}
proc Shape_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Shape_SetHint", dynlib: dllname.}
proc Shape_GetComponentCount*(AObj: pointer): int32 {.importc: "Shape_GetComponentCount", dynlib: dllname.}
proc Shape_GetComponentIndex*(AObj: pointer): int32 {.importc: "Shape_GetComponentIndex", dynlib: dllname.}
proc Shape_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Shape_SetComponentIndex", dynlib: dllname.}
proc Shape_GetOwner*(AObj: pointer): pointer {.importc: "Shape_GetOwner", dynlib: dllname.}
proc Shape_GetName*(AObj: pointer): cstring {.importc: "Shape_GetName", dynlib: dllname.}
proc Shape_SetName*(AObj: pointer, AValue: cstring) {.importc: "Shape_SetName", dynlib: dllname.}
proc Shape_GetTag*(AObj: pointer): int {.importc: "Shape_GetTag", dynlib: dllname.}
proc Shape_SetTag*(AObj: pointer, AValue: int) {.importc: "Shape_SetTag", dynlib: dllname.}
proc Shape_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Shape_GetAnchorSideLeft", dynlib: dllname.}
proc Shape_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetAnchorSideLeft", dynlib: dllname.}
proc Shape_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Shape_GetAnchorSideTop", dynlib: dllname.}
proc Shape_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetAnchorSideTop", dynlib: dllname.}
proc Shape_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Shape_GetAnchorSideRight", dynlib: dllname.}
proc Shape_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetAnchorSideRight", dynlib: dllname.}
proc Shape_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Shape_GetAnchorSideBottom", dynlib: dllname.}
proc Shape_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetAnchorSideBottom", dynlib: dllname.}
proc Shape_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Shape_GetBorderSpacing", dynlib: dllname.}
proc Shape_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Shape_SetBorderSpacing", dynlib: dllname.}
proc Shape_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Shape_GetComponents", dynlib: dllname.}
proc Shape_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Shape_GetAnchorSide", dynlib: dllname.}
proc Shape_StaticClassType*(): TClass {.importc: "Shape_StaticClassType", dynlib: dllname.}
# ----------------- TBevel ----------------------
proc Bevel_Create*(AOwner: pointer): pointer {.importc: "Bevel_Create", dynlib: dllname.}
proc Bevel_Free*(AObj: pointer) {.importc: "Bevel_Free", dynlib: dllname.}
proc Bevel_BringToFront*(AObj: pointer) {.importc: "Bevel_BringToFront", dynlib: dllname.}
proc Bevel_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Bevel_ClientToScreen", dynlib: dllname.}
proc Bevel_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Bevel_ClientToParent", dynlib: dllname.}
proc Bevel_Dragging*(AObj: pointer): bool {.importc: "Bevel_Dragging", dynlib: dllname.}
proc Bevel_HasParent*(AObj: pointer): bool {.importc: "Bevel_HasParent", dynlib: dllname.}
proc Bevel_Hide*(AObj: pointer) {.importc: "Bevel_Hide", dynlib: dllname.}
proc Bevel_Invalidate*(AObj: pointer) {.importc: "Bevel_Invalidate", dynlib: dllname.}
proc Bevel_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Bevel_Perform", dynlib: dllname.}
proc Bevel_Refresh*(AObj: pointer) {.importc: "Bevel_Refresh", dynlib: dllname.}
proc Bevel_Repaint*(AObj: pointer) {.importc: "Bevel_Repaint", dynlib: dllname.}
proc Bevel_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Bevel_ScreenToClient", dynlib: dllname.}
proc Bevel_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Bevel_ParentToClient", dynlib: dllname.}
proc Bevel_SendToBack*(AObj: pointer) {.importc: "Bevel_SendToBack", dynlib: dllname.}
proc Bevel_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Bevel_SetBounds", dynlib: dllname.}
proc Bevel_Show*(AObj: pointer) {.importc: "Bevel_Show", dynlib: dllname.}
proc Bevel_Update*(AObj: pointer) {.importc: "Bevel_Update", dynlib: dllname.}
proc Bevel_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Bevel_GetTextBuf", dynlib: dllname.}
proc Bevel_GetTextLen*(AObj: pointer): int32 {.importc: "Bevel_GetTextLen", dynlib: dllname.}
proc Bevel_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Bevel_SetTextBuf", dynlib: dllname.}
proc Bevel_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Bevel_FindComponent", dynlib: dllname.}
proc Bevel_GetNamePath*(AObj: pointer): cstring {.importc: "Bevel_GetNamePath", dynlib: dllname.}
proc Bevel_Assign*(AObj: pointer, Source: pointer) {.importc: "Bevel_Assign", dynlib: dllname.}
proc Bevel_ClassType*(AObj: pointer): TClass {.importc: "Bevel_ClassType", dynlib: dllname.}
proc Bevel_ClassName*(AObj: pointer): cstring {.importc: "Bevel_ClassName", dynlib: dllname.}
proc Bevel_InstanceSize*(AObj: pointer): int32 {.importc: "Bevel_InstanceSize", dynlib: dllname.}
proc Bevel_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Bevel_InheritsFrom", dynlib: dllname.}
proc Bevel_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Bevel_Equals", dynlib: dllname.}
proc Bevel_GetHashCode*(AObj: pointer): int32 {.importc: "Bevel_GetHashCode", dynlib: dllname.}
proc Bevel_ToString*(AObj: pointer): cstring {.importc: "Bevel_ToString", dynlib: dllname.}
proc Bevel_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Bevel_AnchorToNeighbour", dynlib: dllname.}
proc Bevel_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Bevel_AnchorParallel", dynlib: dllname.}
proc Bevel_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Bevel_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Bevel_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Bevel_AnchorVerticalCenterTo", dynlib: dllname.}
proc Bevel_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Bevel_AnchorSame", dynlib: dllname.}
proc Bevel_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Bevel_AnchorAsAlign", dynlib: dllname.}
proc Bevel_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Bevel_AnchorClient", dynlib: dllname.}
proc Bevel_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_ScaleDesignToForm", dynlib: dllname.}
proc Bevel_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_ScaleFormToDesign", dynlib: dllname.}
proc Bevel_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_Scale96ToForm", dynlib: dllname.}
proc Bevel_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_ScaleFormTo96", dynlib: dllname.}
proc Bevel_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_Scale96ToFont", dynlib: dllname.}
proc Bevel_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_ScaleFontTo96", dynlib: dllname.}
proc Bevel_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_ScaleScreenToFont", dynlib: dllname.}
proc Bevel_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_ScaleFontToScreen", dynlib: dllname.}
proc Bevel_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_Scale96ToScreen", dynlib: dllname.}
proc Bevel_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Bevel_ScaleScreenTo96", dynlib: dllname.}
proc Bevel_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Bevel_AutoAdjustLayout", dynlib: dllname.}
proc Bevel_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Bevel_FixDesignFontsPPI", dynlib: dllname.}
proc Bevel_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Bevel_ScaleFontsPPI", dynlib: dllname.}
proc Bevel_GetAlign*(AObj: pointer): TAlign {.importc: "Bevel_GetAlign", dynlib: dllname.}
proc Bevel_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Bevel_SetAlign", dynlib: dllname.}
proc Bevel_GetAnchors*(AObj: pointer): TAnchors {.importc: "Bevel_GetAnchors", dynlib: dllname.}
proc Bevel_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Bevel_SetAnchors", dynlib: dllname.}
proc Bevel_GetConstraints*(AObj: pointer): pointer {.importc: "Bevel_GetConstraints", dynlib: dllname.}
proc Bevel_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetConstraints", dynlib: dllname.}
proc Bevel_GetParentShowHint*(AObj: pointer): bool {.importc: "Bevel_GetParentShowHint", dynlib: dllname.}
proc Bevel_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Bevel_SetParentShowHint", dynlib: dllname.}
proc Bevel_GetShape*(AObj: pointer): TBevelShape {.importc: "Bevel_GetShape", dynlib: dllname.}
proc Bevel_SetShape*(AObj: pointer, AValue: TBevelShape) {.importc: "Bevel_SetShape", dynlib: dllname.}
proc Bevel_GetShowHint*(AObj: pointer): bool {.importc: "Bevel_GetShowHint", dynlib: dllname.}
proc Bevel_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Bevel_SetShowHint", dynlib: dllname.}
proc Bevel_GetStyle*(AObj: pointer): TBevelStyle {.importc: "Bevel_GetStyle", dynlib: dllname.}
proc Bevel_SetStyle*(AObj: pointer, AValue: TBevelStyle) {.importc: "Bevel_SetStyle", dynlib: dllname.}
proc Bevel_GetVisible*(AObj: pointer): bool {.importc: "Bevel_GetVisible", dynlib: dllname.}
proc Bevel_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Bevel_SetVisible", dynlib: dllname.}
proc Bevel_GetEnabled*(AObj: pointer): bool {.importc: "Bevel_GetEnabled", dynlib: dllname.}
proc Bevel_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Bevel_SetEnabled", dynlib: dllname.}
proc Bevel_GetAction*(AObj: pointer): pointer {.importc: "Bevel_GetAction", dynlib: dllname.}
proc Bevel_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetAction", dynlib: dllname.}
proc Bevel_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Bevel_GetBiDiMode", dynlib: dllname.}
proc Bevel_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Bevel_SetBiDiMode", dynlib: dllname.}
proc Bevel_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Bevel_GetBoundsRect", dynlib: dllname.}
proc Bevel_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Bevel_SetBoundsRect", dynlib: dllname.}
proc Bevel_GetClientHeight*(AObj: pointer): int32 {.importc: "Bevel_GetClientHeight", dynlib: dllname.}
proc Bevel_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Bevel_SetClientHeight", dynlib: dllname.}
proc Bevel_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Bevel_GetClientOrigin", dynlib: dllname.}
proc Bevel_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Bevel_GetClientRect", dynlib: dllname.}
proc Bevel_GetClientWidth*(AObj: pointer): int32 {.importc: "Bevel_GetClientWidth", dynlib: dllname.}
proc Bevel_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Bevel_SetClientWidth", dynlib: dllname.}
proc Bevel_GetControlState*(AObj: pointer): TControlState {.importc: "Bevel_GetControlState", dynlib: dllname.}
proc Bevel_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Bevel_SetControlState", dynlib: dllname.}
proc Bevel_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Bevel_GetControlStyle", dynlib: dllname.}
proc Bevel_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Bevel_SetControlStyle", dynlib: dllname.}
proc Bevel_GetFloating*(AObj: pointer): bool {.importc: "Bevel_GetFloating", dynlib: dllname.}
proc Bevel_GetParent*(AObj: pointer): pointer {.importc: "Bevel_GetParent", dynlib: dllname.}
proc Bevel_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetParent", dynlib: dllname.}
proc Bevel_GetLeft*(AObj: pointer): int32 {.importc: "Bevel_GetLeft", dynlib: dllname.}
proc Bevel_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Bevel_SetLeft", dynlib: dllname.}
proc Bevel_GetTop*(AObj: pointer): int32 {.importc: "Bevel_GetTop", dynlib: dllname.}
proc Bevel_SetTop*(AObj: pointer, AValue: int32) {.importc: "Bevel_SetTop", dynlib: dllname.}
proc Bevel_GetWidth*(AObj: pointer): int32 {.importc: "Bevel_GetWidth", dynlib: dllname.}
proc Bevel_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Bevel_SetWidth", dynlib: dllname.}
proc Bevel_GetHeight*(AObj: pointer): int32 {.importc: "Bevel_GetHeight", dynlib: dllname.}
proc Bevel_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Bevel_SetHeight", dynlib: dllname.}
proc Bevel_GetCursor*(AObj: pointer): TCursor {.importc: "Bevel_GetCursor", dynlib: dllname.}
proc Bevel_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Bevel_SetCursor", dynlib: dllname.}
proc Bevel_GetHint*(AObj: pointer): cstring {.importc: "Bevel_GetHint", dynlib: dllname.}
proc Bevel_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Bevel_SetHint", dynlib: dllname.}
proc Bevel_GetComponentCount*(AObj: pointer): int32 {.importc: "Bevel_GetComponentCount", dynlib: dllname.}
proc Bevel_GetComponentIndex*(AObj: pointer): int32 {.importc: "Bevel_GetComponentIndex", dynlib: dllname.}
proc Bevel_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Bevel_SetComponentIndex", dynlib: dllname.}
proc Bevel_GetOwner*(AObj: pointer): pointer {.importc: "Bevel_GetOwner", dynlib: dllname.}
proc Bevel_GetName*(AObj: pointer): cstring {.importc: "Bevel_GetName", dynlib: dllname.}
proc Bevel_SetName*(AObj: pointer, AValue: cstring) {.importc: "Bevel_SetName", dynlib: dllname.}
proc Bevel_GetTag*(AObj: pointer): int {.importc: "Bevel_GetTag", dynlib: dllname.}
proc Bevel_SetTag*(AObj: pointer, AValue: int) {.importc: "Bevel_SetTag", dynlib: dllname.}
proc Bevel_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Bevel_GetAnchorSideLeft", dynlib: dllname.}
proc Bevel_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetAnchorSideLeft", dynlib: dllname.}
proc Bevel_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Bevel_GetAnchorSideTop", dynlib: dllname.}
proc Bevel_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetAnchorSideTop", dynlib: dllname.}
proc Bevel_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Bevel_GetAnchorSideRight", dynlib: dllname.}
proc Bevel_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetAnchorSideRight", dynlib: dllname.}
proc Bevel_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Bevel_GetAnchorSideBottom", dynlib: dllname.}
proc Bevel_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetAnchorSideBottom", dynlib: dllname.}
proc Bevel_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Bevel_GetBorderSpacing", dynlib: dllname.}
proc Bevel_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Bevel_SetBorderSpacing", dynlib: dllname.}
proc Bevel_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Bevel_GetComponents", dynlib: dllname.}
proc Bevel_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Bevel_GetAnchorSide", dynlib: dllname.}
proc Bevel_StaticClassType*(): TClass {.importc: "Bevel_StaticClassType", dynlib: dllname.}
# ----------------- TScrollBox ----------------------
proc ScrollBox_Create*(AOwner: pointer): pointer {.importc: "ScrollBox_Create", dynlib: dllname.}
proc ScrollBox_Free*(AObj: pointer) {.importc: "ScrollBox_Free", dynlib: dllname.}
proc ScrollBox_ScrollInView*(AObj: pointer, AControl: pointer) {.importc: "ScrollBox_ScrollInView", dynlib: dllname.}
proc ScrollBox_CanFocus*(AObj: pointer): bool {.importc: "ScrollBox_CanFocus", dynlib: dllname.}
proc ScrollBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ScrollBox_ContainsControl", dynlib: dllname.}
proc ScrollBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ScrollBox_ControlAtPos", dynlib: dllname.}
proc ScrollBox_DisableAlign*(AObj: pointer) {.importc: "ScrollBox_DisableAlign", dynlib: dllname.}
proc ScrollBox_EnableAlign*(AObj: pointer) {.importc: "ScrollBox_EnableAlign", dynlib: dllname.}
proc ScrollBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ScrollBox_FindChildControl", dynlib: dllname.}
proc ScrollBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ScrollBox_FlipChildren", dynlib: dllname.}
proc ScrollBox_Focused*(AObj: pointer): bool {.importc: "ScrollBox_Focused", dynlib: dllname.}
proc ScrollBox_HandleAllocated*(AObj: pointer): bool {.importc: "ScrollBox_HandleAllocated", dynlib: dllname.}
proc ScrollBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ScrollBox_InsertControl", dynlib: dllname.}
proc ScrollBox_Invalidate*(AObj: pointer) {.importc: "ScrollBox_Invalidate", dynlib: dllname.}
proc ScrollBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ScrollBox_PaintTo", dynlib: dllname.}
proc ScrollBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ScrollBox_RemoveControl", dynlib: dllname.}
proc ScrollBox_Realign*(AObj: pointer) {.importc: "ScrollBox_Realign", dynlib: dllname.}
proc ScrollBox_Repaint*(AObj: pointer) {.importc: "ScrollBox_Repaint", dynlib: dllname.}
proc ScrollBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ScrollBox_ScaleBy", dynlib: dllname.}
proc ScrollBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ScrollBox_ScrollBy", dynlib: dllname.}
proc ScrollBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ScrollBox_SetBounds", dynlib: dllname.}
proc ScrollBox_SetFocus*(AObj: pointer) {.importc: "ScrollBox_SetFocus", dynlib: dllname.}
proc ScrollBox_Update*(AObj: pointer) {.importc: "ScrollBox_Update", dynlib: dllname.}
proc ScrollBox_BringToFront*(AObj: pointer) {.importc: "ScrollBox_BringToFront", dynlib: dllname.}
proc ScrollBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ScrollBox_ClientToScreen", dynlib: dllname.}
proc ScrollBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ScrollBox_ClientToParent", dynlib: dllname.}
proc ScrollBox_Dragging*(AObj: pointer): bool {.importc: "ScrollBox_Dragging", dynlib: dllname.}
proc ScrollBox_HasParent*(AObj: pointer): bool {.importc: "ScrollBox_HasParent", dynlib: dllname.}
proc ScrollBox_Hide*(AObj: pointer) {.importc: "ScrollBox_Hide", dynlib: dllname.}
proc ScrollBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ScrollBox_Perform", dynlib: dllname.}
proc ScrollBox_Refresh*(AObj: pointer) {.importc: "ScrollBox_Refresh", dynlib: dllname.}
proc ScrollBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ScrollBox_ScreenToClient", dynlib: dllname.}
proc ScrollBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ScrollBox_ParentToClient", dynlib: dllname.}
proc ScrollBox_SendToBack*(AObj: pointer) {.importc: "ScrollBox_SendToBack", dynlib: dllname.}
proc ScrollBox_Show*(AObj: pointer) {.importc: "ScrollBox_Show", dynlib: dllname.}
proc ScrollBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ScrollBox_GetTextBuf", dynlib: dllname.}
proc ScrollBox_GetTextLen*(AObj: pointer): int32 {.importc: "ScrollBox_GetTextLen", dynlib: dllname.}
proc ScrollBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ScrollBox_SetTextBuf", dynlib: dllname.}
proc ScrollBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ScrollBox_FindComponent", dynlib: dllname.}
proc ScrollBox_GetNamePath*(AObj: pointer): cstring {.importc: "ScrollBox_GetNamePath", dynlib: dllname.}
proc ScrollBox_Assign*(AObj: pointer, Source: pointer) {.importc: "ScrollBox_Assign", dynlib: dllname.}
proc ScrollBox_ClassType*(AObj: pointer): TClass {.importc: "ScrollBox_ClassType", dynlib: dllname.}
proc ScrollBox_ClassName*(AObj: pointer): cstring {.importc: "ScrollBox_ClassName", dynlib: dllname.}
proc ScrollBox_InstanceSize*(AObj: pointer): int32 {.importc: "ScrollBox_InstanceSize", dynlib: dllname.}
proc ScrollBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ScrollBox_InheritsFrom", dynlib: dllname.}
proc ScrollBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ScrollBox_Equals", dynlib: dllname.}
proc ScrollBox_GetHashCode*(AObj: pointer): int32 {.importc: "ScrollBox_GetHashCode", dynlib: dllname.}
proc ScrollBox_ToString*(AObj: pointer): cstring {.importc: "ScrollBox_ToString", dynlib: dllname.}
proc ScrollBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ScrollBox_AnchorToNeighbour", dynlib: dllname.}
proc ScrollBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ScrollBox_AnchorParallel", dynlib: dllname.}
proc ScrollBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ScrollBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ScrollBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ScrollBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc ScrollBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ScrollBox_AnchorSame", dynlib: dllname.}
proc ScrollBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ScrollBox_AnchorAsAlign", dynlib: dllname.}
proc ScrollBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ScrollBox_AnchorClient", dynlib: dllname.}
proc ScrollBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_ScaleDesignToForm", dynlib: dllname.}
proc ScrollBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_ScaleFormToDesign", dynlib: dllname.}
proc ScrollBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_Scale96ToForm", dynlib: dllname.}
proc ScrollBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_ScaleFormTo96", dynlib: dllname.}
proc ScrollBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_Scale96ToFont", dynlib: dllname.}
proc ScrollBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_ScaleFontTo96", dynlib: dllname.}
proc ScrollBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_ScaleScreenToFont", dynlib: dllname.}
proc ScrollBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_ScaleFontToScreen", dynlib: dllname.}
proc ScrollBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_Scale96ToScreen", dynlib: dllname.}
proc ScrollBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ScrollBox_ScaleScreenTo96", dynlib: dllname.}
proc ScrollBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ScrollBox_AutoAdjustLayout", dynlib: dllname.}
proc ScrollBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ScrollBox_FixDesignFontsPPI", dynlib: dllname.}
proc ScrollBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ScrollBox_ScaleFontsPPI", dynlib: dllname.}
proc ScrollBox_GetAlign*(AObj: pointer): TAlign {.importc: "ScrollBox_GetAlign", dynlib: dllname.}
proc ScrollBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ScrollBox_SetAlign", dynlib: dllname.}
proc ScrollBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "ScrollBox_GetAnchors", dynlib: dllname.}
proc ScrollBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ScrollBox_SetAnchors", dynlib: dllname.}
proc ScrollBox_GetAutoScroll*(AObj: pointer): bool {.importc: "ScrollBox_GetAutoScroll", dynlib: dllname.}
proc ScrollBox_SetAutoScroll*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetAutoScroll", dynlib: dllname.}
proc ScrollBox_GetAutoSize*(AObj: pointer): bool {.importc: "ScrollBox_GetAutoSize", dynlib: dllname.}
proc ScrollBox_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetAutoSize", dynlib: dllname.}
proc ScrollBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ScrollBox_GetBiDiMode", dynlib: dllname.}
proc ScrollBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ScrollBox_SetBiDiMode", dynlib: dllname.}
proc ScrollBox_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "ScrollBox_GetBorderStyle", dynlib: dllname.}
proc ScrollBox_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "ScrollBox_SetBorderStyle", dynlib: dllname.}
proc ScrollBox_GetConstraints*(AObj: pointer): pointer {.importc: "ScrollBox_GetConstraints", dynlib: dllname.}
proc ScrollBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetConstraints", dynlib: dllname.}
proc ScrollBox_GetDockSite*(AObj: pointer): bool {.importc: "ScrollBox_GetDockSite", dynlib: dllname.}
proc ScrollBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetDockSite", dynlib: dllname.}
proc ScrollBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ScrollBox_GetDoubleBuffered", dynlib: dllname.}
proc ScrollBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetDoubleBuffered", dynlib: dllname.}
proc ScrollBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "ScrollBox_GetDragCursor", dynlib: dllname.}
proc ScrollBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ScrollBox_SetDragCursor", dynlib: dllname.}
proc ScrollBox_GetDragKind*(AObj: pointer): TDragKind {.importc: "ScrollBox_GetDragKind", dynlib: dllname.}
proc ScrollBox_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ScrollBox_SetDragKind", dynlib: dllname.}
proc ScrollBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "ScrollBox_GetDragMode", dynlib: dllname.}
proc ScrollBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ScrollBox_SetDragMode", dynlib: dllname.}
proc ScrollBox_GetEnabled*(AObj: pointer): bool {.importc: "ScrollBox_GetEnabled", dynlib: dllname.}
proc ScrollBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetEnabled", dynlib: dllname.}
proc ScrollBox_GetColor*(AObj: pointer): TColor {.importc: "ScrollBox_GetColor", dynlib: dllname.}
proc ScrollBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ScrollBox_SetColor", dynlib: dllname.}
proc ScrollBox_GetFont*(AObj: pointer): pointer {.importc: "ScrollBox_GetFont", dynlib: dllname.}
proc ScrollBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetFont", dynlib: dllname.}
proc ScrollBox_GetParentBackground*(AObj: pointer): bool {.importc: "ScrollBox_GetParentBackground", dynlib: dllname.}
proc ScrollBox_SetParentBackground*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetParentBackground", dynlib: dllname.}
proc ScrollBox_GetParentColor*(AObj: pointer): bool {.importc: "ScrollBox_GetParentColor", dynlib: dllname.}
proc ScrollBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetParentColor", dynlib: dllname.}
proc ScrollBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ScrollBox_GetParentDoubleBuffered", dynlib: dllname.}
proc ScrollBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetParentDoubleBuffered", dynlib: dllname.}
proc ScrollBox_GetParentFont*(AObj: pointer): bool {.importc: "ScrollBox_GetParentFont", dynlib: dllname.}
proc ScrollBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetParentFont", dynlib: dllname.}
proc ScrollBox_GetParentShowHint*(AObj: pointer): bool {.importc: "ScrollBox_GetParentShowHint", dynlib: dllname.}
proc ScrollBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetParentShowHint", dynlib: dllname.}
proc ScrollBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "ScrollBox_GetPopupMenu", dynlib: dllname.}
proc ScrollBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetPopupMenu", dynlib: dllname.}
proc ScrollBox_GetShowHint*(AObj: pointer): bool {.importc: "ScrollBox_GetShowHint", dynlib: dllname.}
proc ScrollBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetShowHint", dynlib: dllname.}
proc ScrollBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ScrollBox_GetTabOrder", dynlib: dllname.}
proc ScrollBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ScrollBox_SetTabOrder", dynlib: dllname.}
proc ScrollBox_GetTabStop*(AObj: pointer): bool {.importc: "ScrollBox_GetTabStop", dynlib: dllname.}
proc ScrollBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetTabStop", dynlib: dllname.}
proc ScrollBox_GetVisible*(AObj: pointer): bool {.importc: "ScrollBox_GetVisible", dynlib: dllname.}
proc ScrollBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetVisible", dynlib: dllname.}
proc ScrollBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBox_SetOnClick", dynlib: dllname.}
proc ScrollBox_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBox_SetOnDblClick", dynlib: dllname.}
proc ScrollBox_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "ScrollBox_SetOnDockDrop", dynlib: dllname.}
proc ScrollBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ScrollBox_SetOnDragDrop", dynlib: dllname.}
proc ScrollBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ScrollBox_SetOnDragOver", dynlib: dllname.}
proc ScrollBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ScrollBox_SetOnEndDrag", dynlib: dllname.}
proc ScrollBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBox_SetOnEnter", dynlib: dllname.}
proc ScrollBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBox_SetOnExit", dynlib: dllname.}
proc ScrollBox_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "ScrollBox_SetOnGetSiteInfo", dynlib: dllname.}
proc ScrollBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ScrollBox_SetOnMouseDown", dynlib: dllname.}
proc ScrollBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBox_SetOnMouseEnter", dynlib: dllname.}
proc ScrollBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBox_SetOnMouseLeave", dynlib: dllname.}
proc ScrollBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ScrollBox_SetOnMouseMove", dynlib: dllname.}
proc ScrollBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ScrollBox_SetOnMouseUp", dynlib: dllname.}
proc ScrollBox_SetOnMouseWheel*(AObj: pointer, AEventId: TMouseWheelEvent) {.importc: "ScrollBox_SetOnMouseWheel", dynlib: dllname.}
proc ScrollBox_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "ScrollBox_SetOnMouseWheelDown", dynlib: dllname.}
proc ScrollBox_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "ScrollBox_SetOnMouseWheelUp", dynlib: dllname.}
proc ScrollBox_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ScrollBox_SetOnResize", dynlib: dllname.}
proc ScrollBox_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "ScrollBox_SetOnUnDock", dynlib: dllname.}
proc ScrollBox_SetOnAlignPosition*(AObj: pointer, AEventId: TAlignPositionEvent) {.importc: "ScrollBox_SetOnAlignPosition", dynlib: dllname.}
proc ScrollBox_GetHorzScrollBar*(AObj: pointer): pointer {.importc: "ScrollBox_GetHorzScrollBar", dynlib: dllname.}
proc ScrollBox_SetHorzScrollBar*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetHorzScrollBar", dynlib: dllname.}
proc ScrollBox_GetVertScrollBar*(AObj: pointer): pointer {.importc: "ScrollBox_GetVertScrollBar", dynlib: dllname.}
proc ScrollBox_SetVertScrollBar*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetVertScrollBar", dynlib: dllname.}
proc ScrollBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "ScrollBox_GetDockClientCount", dynlib: dllname.}
proc ScrollBox_GetMouseInClient*(AObj: pointer): bool {.importc: "ScrollBox_GetMouseInClient", dynlib: dllname.}
proc ScrollBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ScrollBox_GetVisibleDockClientCount", dynlib: dllname.}
proc ScrollBox_GetBrush*(AObj: pointer): pointer {.importc: "ScrollBox_GetBrush", dynlib: dllname.}
proc ScrollBox_GetControlCount*(AObj: pointer): int32 {.importc: "ScrollBox_GetControlCount", dynlib: dllname.}
proc ScrollBox_GetHandle*(AObj: pointer): HWND {.importc: "ScrollBox_GetHandle", dynlib: dllname.}
proc ScrollBox_GetParentWindow*(AObj: pointer): HWND {.importc: "ScrollBox_GetParentWindow", dynlib: dllname.}
proc ScrollBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ScrollBox_SetParentWindow", dynlib: dllname.}
proc ScrollBox_GetShowing*(AObj: pointer): bool {.importc: "ScrollBox_GetShowing", dynlib: dllname.}
proc ScrollBox_GetUseDockManager*(AObj: pointer): bool {.importc: "ScrollBox_GetUseDockManager", dynlib: dllname.}
proc ScrollBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ScrollBox_SetUseDockManager", dynlib: dllname.}
proc ScrollBox_GetAction*(AObj: pointer): pointer {.importc: "ScrollBox_GetAction", dynlib: dllname.}
proc ScrollBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetAction", dynlib: dllname.}
proc ScrollBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ScrollBox_GetBoundsRect", dynlib: dllname.}
proc ScrollBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ScrollBox_SetBoundsRect", dynlib: dllname.}
proc ScrollBox_GetClientHeight*(AObj: pointer): int32 {.importc: "ScrollBox_GetClientHeight", dynlib: dllname.}
proc ScrollBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ScrollBox_SetClientHeight", dynlib: dllname.}
proc ScrollBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ScrollBox_GetClientOrigin", dynlib: dllname.}
proc ScrollBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ScrollBox_GetClientRect", dynlib: dllname.}
proc ScrollBox_GetClientWidth*(AObj: pointer): int32 {.importc: "ScrollBox_GetClientWidth", dynlib: dllname.}
proc ScrollBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ScrollBox_SetClientWidth", dynlib: dllname.}
proc ScrollBox_GetControlState*(AObj: pointer): TControlState {.importc: "ScrollBox_GetControlState", dynlib: dllname.}
proc ScrollBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ScrollBox_SetControlState", dynlib: dllname.}
proc ScrollBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ScrollBox_GetControlStyle", dynlib: dllname.}
proc ScrollBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ScrollBox_SetControlStyle", dynlib: dllname.}
proc ScrollBox_GetFloating*(AObj: pointer): bool {.importc: "ScrollBox_GetFloating", dynlib: dllname.}
proc ScrollBox_GetParent*(AObj: pointer): pointer {.importc: "ScrollBox_GetParent", dynlib: dllname.}
proc ScrollBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetParent", dynlib: dllname.}
proc ScrollBox_GetLeft*(AObj: pointer): int32 {.importc: "ScrollBox_GetLeft", dynlib: dllname.}
proc ScrollBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ScrollBox_SetLeft", dynlib: dllname.}
proc ScrollBox_GetTop*(AObj: pointer): int32 {.importc: "ScrollBox_GetTop", dynlib: dllname.}
proc ScrollBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "ScrollBox_SetTop", dynlib: dllname.}
proc ScrollBox_GetWidth*(AObj: pointer): int32 {.importc: "ScrollBox_GetWidth", dynlib: dllname.}
proc ScrollBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ScrollBox_SetWidth", dynlib: dllname.}
proc ScrollBox_GetHeight*(AObj: pointer): int32 {.importc: "ScrollBox_GetHeight", dynlib: dllname.}
proc ScrollBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ScrollBox_SetHeight", dynlib: dllname.}
proc ScrollBox_GetCursor*(AObj: pointer): TCursor {.importc: "ScrollBox_GetCursor", dynlib: dllname.}
proc ScrollBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ScrollBox_SetCursor", dynlib: dllname.}
proc ScrollBox_GetHint*(AObj: pointer): cstring {.importc: "ScrollBox_GetHint", dynlib: dllname.}
proc ScrollBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ScrollBox_SetHint", dynlib: dllname.}
proc ScrollBox_GetComponentCount*(AObj: pointer): int32 {.importc: "ScrollBox_GetComponentCount", dynlib: dllname.}
proc ScrollBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "ScrollBox_GetComponentIndex", dynlib: dllname.}
proc ScrollBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ScrollBox_SetComponentIndex", dynlib: dllname.}
proc ScrollBox_GetOwner*(AObj: pointer): pointer {.importc: "ScrollBox_GetOwner", dynlib: dllname.}
proc ScrollBox_GetName*(AObj: pointer): cstring {.importc: "ScrollBox_GetName", dynlib: dllname.}
proc ScrollBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "ScrollBox_SetName", dynlib: dllname.}
proc ScrollBox_GetTag*(AObj: pointer): int {.importc: "ScrollBox_GetTag", dynlib: dllname.}
proc ScrollBox_SetTag*(AObj: pointer, AValue: int) {.importc: "ScrollBox_SetTag", dynlib: dllname.}
proc ScrollBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ScrollBox_GetAnchorSideLeft", dynlib: dllname.}
proc ScrollBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetAnchorSideLeft", dynlib: dllname.}
proc ScrollBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ScrollBox_GetAnchorSideTop", dynlib: dllname.}
proc ScrollBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetAnchorSideTop", dynlib: dllname.}
proc ScrollBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ScrollBox_GetAnchorSideRight", dynlib: dllname.}
proc ScrollBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetAnchorSideRight", dynlib: dllname.}
proc ScrollBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ScrollBox_GetAnchorSideBottom", dynlib: dllname.}
proc ScrollBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetAnchorSideBottom", dynlib: dllname.}
proc ScrollBox_GetChildSizing*(AObj: pointer): pointer {.importc: "ScrollBox_GetChildSizing", dynlib: dllname.}
proc ScrollBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetChildSizing", dynlib: dllname.}
proc ScrollBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ScrollBox_GetBorderSpacing", dynlib: dllname.}
proc ScrollBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ScrollBox_SetBorderSpacing", dynlib: dllname.}
proc ScrollBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ScrollBox_GetDockClients", dynlib: dllname.}
proc ScrollBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ScrollBox_GetControls", dynlib: dllname.}
proc ScrollBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ScrollBox_GetComponents", dynlib: dllname.}
proc ScrollBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ScrollBox_GetAnchorSide", dynlib: dllname.}
proc ScrollBox_StaticClassType*(): TClass {.importc: "ScrollBox_StaticClassType", dynlib: dllname.}
# ----------------- TCheckListBox ----------------------
proc CheckListBox_Create*(AOwner: pointer): pointer {.importc: "CheckListBox_Create", dynlib: dllname.}
proc CheckListBox_Free*(AObj: pointer) {.importc: "CheckListBox_Free", dynlib: dllname.}
proc CheckListBox_CheckAll*(AObj: pointer, AState: TCheckBoxState, AllowGrayed: bool, AllowDisabled: bool) {.importc: "CheckListBox_CheckAll", dynlib: dllname.}
proc CheckListBox_AddItem*(AObj: pointer, Item: cstring, AObject: pointer) {.importc: "CheckListBox_AddItem", dynlib: dllname.}
proc CheckListBox_Clear*(AObj: pointer) {.importc: "CheckListBox_Clear", dynlib: dllname.}
proc CheckListBox_ClearSelection*(AObj: pointer) {.importc: "CheckListBox_ClearSelection", dynlib: dllname.}
proc CheckListBox_DeleteSelected*(AObj: pointer) {.importc: "CheckListBox_DeleteSelected", dynlib: dllname.}
proc CheckListBox_ItemAtPos*(AObj: pointer, Pos: var TPoint, Existing: bool): int32 {.importc: "CheckListBox_ItemAtPos", dynlib: dllname.}
proc CheckListBox_ItemRect*(AObj: pointer, Index: int32, Result: var TRect) {.importc: "CheckListBox_ItemRect", dynlib: dllname.}
proc CheckListBox_SelectAll*(AObj: pointer) {.importc: "CheckListBox_SelectAll", dynlib: dllname.}
proc CheckListBox_CanFocus*(AObj: pointer): bool {.importc: "CheckListBox_CanFocus", dynlib: dllname.}
proc CheckListBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "CheckListBox_ContainsControl", dynlib: dllname.}
proc CheckListBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "CheckListBox_ControlAtPos", dynlib: dllname.}
proc CheckListBox_DisableAlign*(AObj: pointer) {.importc: "CheckListBox_DisableAlign", dynlib: dllname.}
proc CheckListBox_EnableAlign*(AObj: pointer) {.importc: "CheckListBox_EnableAlign", dynlib: dllname.}
proc CheckListBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "CheckListBox_FindChildControl", dynlib: dllname.}
proc CheckListBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "CheckListBox_FlipChildren", dynlib: dllname.}
proc CheckListBox_Focused*(AObj: pointer): bool {.importc: "CheckListBox_Focused", dynlib: dllname.}
proc CheckListBox_HandleAllocated*(AObj: pointer): bool {.importc: "CheckListBox_HandleAllocated", dynlib: dllname.}
proc CheckListBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "CheckListBox_InsertControl", dynlib: dllname.}
proc CheckListBox_Invalidate*(AObj: pointer) {.importc: "CheckListBox_Invalidate", dynlib: dllname.}
proc CheckListBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "CheckListBox_PaintTo", dynlib: dllname.}
proc CheckListBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "CheckListBox_RemoveControl", dynlib: dllname.}
proc CheckListBox_Realign*(AObj: pointer) {.importc: "CheckListBox_Realign", dynlib: dllname.}
proc CheckListBox_Repaint*(AObj: pointer) {.importc: "CheckListBox_Repaint", dynlib: dllname.}
proc CheckListBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "CheckListBox_ScaleBy", dynlib: dllname.}
proc CheckListBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "CheckListBox_ScrollBy", dynlib: dllname.}
proc CheckListBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "CheckListBox_SetBounds", dynlib: dllname.}
proc CheckListBox_SetFocus*(AObj: pointer) {.importc: "CheckListBox_SetFocus", dynlib: dllname.}
proc CheckListBox_Update*(AObj: pointer) {.importc: "CheckListBox_Update", dynlib: dllname.}
proc CheckListBox_BringToFront*(AObj: pointer) {.importc: "CheckListBox_BringToFront", dynlib: dllname.}
proc CheckListBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CheckListBox_ClientToScreen", dynlib: dllname.}
proc CheckListBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CheckListBox_ClientToParent", dynlib: dllname.}
proc CheckListBox_Dragging*(AObj: pointer): bool {.importc: "CheckListBox_Dragging", dynlib: dllname.}
proc CheckListBox_HasParent*(AObj: pointer): bool {.importc: "CheckListBox_HasParent", dynlib: dllname.}
proc CheckListBox_Hide*(AObj: pointer) {.importc: "CheckListBox_Hide", dynlib: dllname.}
proc CheckListBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "CheckListBox_Perform", dynlib: dllname.}
proc CheckListBox_Refresh*(AObj: pointer) {.importc: "CheckListBox_Refresh", dynlib: dllname.}
proc CheckListBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CheckListBox_ScreenToClient", dynlib: dllname.}
proc CheckListBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CheckListBox_ParentToClient", dynlib: dllname.}
proc CheckListBox_SendToBack*(AObj: pointer) {.importc: "CheckListBox_SendToBack", dynlib: dllname.}
proc CheckListBox_Show*(AObj: pointer) {.importc: "CheckListBox_Show", dynlib: dllname.}
proc CheckListBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "CheckListBox_GetTextBuf", dynlib: dllname.}
proc CheckListBox_GetTextLen*(AObj: pointer): int32 {.importc: "CheckListBox_GetTextLen", dynlib: dllname.}
proc CheckListBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "CheckListBox_SetTextBuf", dynlib: dllname.}
proc CheckListBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "CheckListBox_FindComponent", dynlib: dllname.}
proc CheckListBox_GetNamePath*(AObj: pointer): cstring {.importc: "CheckListBox_GetNamePath", dynlib: dllname.}
proc CheckListBox_Assign*(AObj: pointer, Source: pointer) {.importc: "CheckListBox_Assign", dynlib: dllname.}
proc CheckListBox_ClassType*(AObj: pointer): TClass {.importc: "CheckListBox_ClassType", dynlib: dllname.}
proc CheckListBox_ClassName*(AObj: pointer): cstring {.importc: "CheckListBox_ClassName", dynlib: dllname.}
proc CheckListBox_InstanceSize*(AObj: pointer): int32 {.importc: "CheckListBox_InstanceSize", dynlib: dllname.}
proc CheckListBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "CheckListBox_InheritsFrom", dynlib: dllname.}
proc CheckListBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "CheckListBox_Equals", dynlib: dllname.}
proc CheckListBox_GetHashCode*(AObj: pointer): int32 {.importc: "CheckListBox_GetHashCode", dynlib: dllname.}
proc CheckListBox_ToString*(AObj: pointer): cstring {.importc: "CheckListBox_ToString", dynlib: dllname.}
proc CheckListBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CheckListBox_AnchorToNeighbour", dynlib: dllname.}
proc CheckListBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CheckListBox_AnchorParallel", dynlib: dllname.}
proc CheckListBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CheckListBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc CheckListBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CheckListBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc CheckListBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "CheckListBox_AnchorSame", dynlib: dllname.}
proc CheckListBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "CheckListBox_AnchorAsAlign", dynlib: dllname.}
proc CheckListBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "CheckListBox_AnchorClient", dynlib: dllname.}
proc CheckListBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_ScaleDesignToForm", dynlib: dllname.}
proc CheckListBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_ScaleFormToDesign", dynlib: dllname.}
proc CheckListBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_Scale96ToForm", dynlib: dllname.}
proc CheckListBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_ScaleFormTo96", dynlib: dllname.}
proc CheckListBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_Scale96ToFont", dynlib: dllname.}
proc CheckListBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_ScaleFontTo96", dynlib: dllname.}
proc CheckListBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_ScaleScreenToFont", dynlib: dllname.}
proc CheckListBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_ScaleFontToScreen", dynlib: dllname.}
proc CheckListBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_Scale96ToScreen", dynlib: dllname.}
proc CheckListBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckListBox_ScaleScreenTo96", dynlib: dllname.}
proc CheckListBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "CheckListBox_AutoAdjustLayout", dynlib: dllname.}
proc CheckListBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "CheckListBox_FixDesignFontsPPI", dynlib: dllname.}
proc CheckListBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "CheckListBox_ScaleFontsPPI", dynlib: dllname.}
proc CheckListBox_SetOnClickCheck*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckListBox_SetOnClickCheck", dynlib: dllname.}
proc CheckListBox_GetAlign*(AObj: pointer): TAlign {.importc: "CheckListBox_GetAlign", dynlib: dllname.}
proc CheckListBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "CheckListBox_SetAlign", dynlib: dllname.}
proc CheckListBox_GetAllowGrayed*(AObj: pointer): bool {.importc: "CheckListBox_GetAllowGrayed", dynlib: dllname.}
proc CheckListBox_SetAllowGrayed*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetAllowGrayed", dynlib: dllname.}
proc CheckListBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "CheckListBox_GetAnchors", dynlib: dllname.}
proc CheckListBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "CheckListBox_SetAnchors", dynlib: dllname.}
proc CheckListBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "CheckListBox_GetBiDiMode", dynlib: dllname.}
proc CheckListBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "CheckListBox_SetBiDiMode", dynlib: dllname.}
proc CheckListBox_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "CheckListBox_GetBorderStyle", dynlib: dllname.}
proc CheckListBox_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "CheckListBox_SetBorderStyle", dynlib: dllname.}
proc CheckListBox_GetColor*(AObj: pointer): TColor {.importc: "CheckListBox_GetColor", dynlib: dllname.}
proc CheckListBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "CheckListBox_SetColor", dynlib: dllname.}
proc CheckListBox_GetColumns*(AObj: pointer): int32 {.importc: "CheckListBox_GetColumns", dynlib: dllname.}
proc CheckListBox_SetColumns*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetColumns", dynlib: dllname.}
proc CheckListBox_GetConstraints*(AObj: pointer): pointer {.importc: "CheckListBox_GetConstraints", dynlib: dllname.}
proc CheckListBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetConstraints", dynlib: dllname.}
proc CheckListBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "CheckListBox_GetDoubleBuffered", dynlib: dllname.}
proc CheckListBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetDoubleBuffered", dynlib: dllname.}
proc CheckListBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "CheckListBox_GetDragCursor", dynlib: dllname.}
proc CheckListBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "CheckListBox_SetDragCursor", dynlib: dllname.}
proc CheckListBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "CheckListBox_GetDragMode", dynlib: dllname.}
proc CheckListBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "CheckListBox_SetDragMode", dynlib: dllname.}
proc CheckListBox_GetEnabled*(AObj: pointer): bool {.importc: "CheckListBox_GetEnabled", dynlib: dllname.}
proc CheckListBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetEnabled", dynlib: dllname.}
proc CheckListBox_GetFont*(AObj: pointer): pointer {.importc: "CheckListBox_GetFont", dynlib: dllname.}
proc CheckListBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetFont", dynlib: dllname.}
proc CheckListBox_GetItemHeight*(AObj: pointer): int32 {.importc: "CheckListBox_GetItemHeight", dynlib: dllname.}
proc CheckListBox_SetItemHeight*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetItemHeight", dynlib: dllname.}
proc CheckListBox_GetItems*(AObj: pointer): pointer {.importc: "CheckListBox_GetItems", dynlib: dllname.}
proc CheckListBox_SetItems*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetItems", dynlib: dllname.}
proc CheckListBox_GetParentColor*(AObj: pointer): bool {.importc: "CheckListBox_GetParentColor", dynlib: dllname.}
proc CheckListBox_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetParentColor", dynlib: dllname.}
proc CheckListBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "CheckListBox_GetParentDoubleBuffered", dynlib: dllname.}
proc CheckListBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetParentDoubleBuffered", dynlib: dllname.}
proc CheckListBox_GetParentFont*(AObj: pointer): bool {.importc: "CheckListBox_GetParentFont", dynlib: dllname.}
proc CheckListBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetParentFont", dynlib: dllname.}
proc CheckListBox_GetParentShowHint*(AObj: pointer): bool {.importc: "CheckListBox_GetParentShowHint", dynlib: dllname.}
proc CheckListBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetParentShowHint", dynlib: dllname.}
proc CheckListBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "CheckListBox_GetPopupMenu", dynlib: dllname.}
proc CheckListBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetPopupMenu", dynlib: dllname.}
proc CheckListBox_GetShowHint*(AObj: pointer): bool {.importc: "CheckListBox_GetShowHint", dynlib: dllname.}
proc CheckListBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetShowHint", dynlib: dllname.}
proc CheckListBox_GetSorted*(AObj: pointer): bool {.importc: "CheckListBox_GetSorted", dynlib: dllname.}
proc CheckListBox_SetSorted*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetSorted", dynlib: dllname.}
proc CheckListBox_GetStyle*(AObj: pointer): TListBoxStyle {.importc: "CheckListBox_GetStyle", dynlib: dllname.}
proc CheckListBox_SetStyle*(AObj: pointer, AValue: TListBoxStyle) {.importc: "CheckListBox_SetStyle", dynlib: dllname.}
proc CheckListBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "CheckListBox_GetTabOrder", dynlib: dllname.}
proc CheckListBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "CheckListBox_SetTabOrder", dynlib: dllname.}
proc CheckListBox_GetTabStop*(AObj: pointer): bool {.importc: "CheckListBox_GetTabStop", dynlib: dllname.}
proc CheckListBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetTabStop", dynlib: dllname.}
proc CheckListBox_GetVisible*(AObj: pointer): bool {.importc: "CheckListBox_GetVisible", dynlib: dllname.}
proc CheckListBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetVisible", dynlib: dllname.}
proc CheckListBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckListBox_SetOnClick", dynlib: dllname.}
proc CheckListBox_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "CheckListBox_SetOnContextPopup", dynlib: dllname.}
proc CheckListBox_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckListBox_SetOnDblClick", dynlib: dllname.}
proc CheckListBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "CheckListBox_SetOnDragDrop", dynlib: dllname.}
proc CheckListBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "CheckListBox_SetOnDragOver", dynlib: dllname.}
proc CheckListBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "CheckListBox_SetOnEndDrag", dynlib: dllname.}
proc CheckListBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckListBox_SetOnEnter", dynlib: dllname.}
proc CheckListBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckListBox_SetOnExit", dynlib: dllname.}
proc CheckListBox_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "CheckListBox_SetOnKeyDown", dynlib: dllname.}
proc CheckListBox_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "CheckListBox_SetOnKeyPress", dynlib: dllname.}
proc CheckListBox_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "CheckListBox_SetOnKeyUp", dynlib: dllname.}
proc CheckListBox_SetOnMeasureItem*(AObj: pointer, AEventId: TMeasureItemEvent) {.importc: "CheckListBox_SetOnMeasureItem", dynlib: dllname.}
proc CheckListBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CheckListBox_SetOnMouseDown", dynlib: dllname.}
proc CheckListBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckListBox_SetOnMouseEnter", dynlib: dllname.}
proc CheckListBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckListBox_SetOnMouseLeave", dynlib: dllname.}
proc CheckListBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "CheckListBox_SetOnMouseMove", dynlib: dllname.}
proc CheckListBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CheckListBox_SetOnMouseUp", dynlib: dllname.}
proc CheckListBox_GetCanvas*(AObj: pointer): pointer {.importc: "CheckListBox_GetCanvas", dynlib: dllname.}
proc CheckListBox_GetCount*(AObj: pointer): int32 {.importc: "CheckListBox_GetCount", dynlib: dllname.}
proc CheckListBox_GetTopIndex*(AObj: pointer): int32 {.importc: "CheckListBox_GetTopIndex", dynlib: dllname.}
proc CheckListBox_SetTopIndex*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetTopIndex", dynlib: dllname.}
proc CheckListBox_GetMultiSelect*(AObj: pointer): bool {.importc: "CheckListBox_GetMultiSelect", dynlib: dllname.}
proc CheckListBox_SetMultiSelect*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetMultiSelect", dynlib: dllname.}
proc CheckListBox_GetSelCount*(AObj: pointer): int32 {.importc: "CheckListBox_GetSelCount", dynlib: dllname.}
proc CheckListBox_GetItemIndex*(AObj: pointer): int32 {.importc: "CheckListBox_GetItemIndex", dynlib: dllname.}
proc CheckListBox_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetItemIndex", dynlib: dllname.}
proc CheckListBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "CheckListBox_GetDockClientCount", dynlib: dllname.}
proc CheckListBox_GetDockSite*(AObj: pointer): bool {.importc: "CheckListBox_GetDockSite", dynlib: dllname.}
proc CheckListBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetDockSite", dynlib: dllname.}
proc CheckListBox_GetMouseInClient*(AObj: pointer): bool {.importc: "CheckListBox_GetMouseInClient", dynlib: dllname.}
proc CheckListBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "CheckListBox_GetVisibleDockClientCount", dynlib: dllname.}
proc CheckListBox_GetBrush*(AObj: pointer): pointer {.importc: "CheckListBox_GetBrush", dynlib: dllname.}
proc CheckListBox_GetControlCount*(AObj: pointer): int32 {.importc: "CheckListBox_GetControlCount", dynlib: dllname.}
proc CheckListBox_GetHandle*(AObj: pointer): HWND {.importc: "CheckListBox_GetHandle", dynlib: dllname.}
proc CheckListBox_GetParentWindow*(AObj: pointer): HWND {.importc: "CheckListBox_GetParentWindow", dynlib: dllname.}
proc CheckListBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "CheckListBox_SetParentWindow", dynlib: dllname.}
proc CheckListBox_GetShowing*(AObj: pointer): bool {.importc: "CheckListBox_GetShowing", dynlib: dllname.}
proc CheckListBox_GetUseDockManager*(AObj: pointer): bool {.importc: "CheckListBox_GetUseDockManager", dynlib: dllname.}
proc CheckListBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "CheckListBox_SetUseDockManager", dynlib: dllname.}
proc CheckListBox_GetAction*(AObj: pointer): pointer {.importc: "CheckListBox_GetAction", dynlib: dllname.}
proc CheckListBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetAction", dynlib: dllname.}
proc CheckListBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "CheckListBox_GetBoundsRect", dynlib: dllname.}
proc CheckListBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "CheckListBox_SetBoundsRect", dynlib: dllname.}
proc CheckListBox_GetClientHeight*(AObj: pointer): int32 {.importc: "CheckListBox_GetClientHeight", dynlib: dllname.}
proc CheckListBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetClientHeight", dynlib: dllname.}
proc CheckListBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "CheckListBox_GetClientOrigin", dynlib: dllname.}
proc CheckListBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "CheckListBox_GetClientRect", dynlib: dllname.}
proc CheckListBox_GetClientWidth*(AObj: pointer): int32 {.importc: "CheckListBox_GetClientWidth", dynlib: dllname.}
proc CheckListBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetClientWidth", dynlib: dllname.}
proc CheckListBox_GetControlState*(AObj: pointer): TControlState {.importc: "CheckListBox_GetControlState", dynlib: dllname.}
proc CheckListBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "CheckListBox_SetControlState", dynlib: dllname.}
proc CheckListBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "CheckListBox_GetControlStyle", dynlib: dllname.}
proc CheckListBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "CheckListBox_SetControlStyle", dynlib: dllname.}
proc CheckListBox_GetFloating*(AObj: pointer): bool {.importc: "CheckListBox_GetFloating", dynlib: dllname.}
proc CheckListBox_GetParent*(AObj: pointer): pointer {.importc: "CheckListBox_GetParent", dynlib: dllname.}
proc CheckListBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetParent", dynlib: dllname.}
proc CheckListBox_GetLeft*(AObj: pointer): int32 {.importc: "CheckListBox_GetLeft", dynlib: dllname.}
proc CheckListBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetLeft", dynlib: dllname.}
proc CheckListBox_GetTop*(AObj: pointer): int32 {.importc: "CheckListBox_GetTop", dynlib: dllname.}
proc CheckListBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetTop", dynlib: dllname.}
proc CheckListBox_GetWidth*(AObj: pointer): int32 {.importc: "CheckListBox_GetWidth", dynlib: dllname.}
proc CheckListBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetWidth", dynlib: dllname.}
proc CheckListBox_GetHeight*(AObj: pointer): int32 {.importc: "CheckListBox_GetHeight", dynlib: dllname.}
proc CheckListBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetHeight", dynlib: dllname.}
proc CheckListBox_GetCursor*(AObj: pointer): TCursor {.importc: "CheckListBox_GetCursor", dynlib: dllname.}
proc CheckListBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "CheckListBox_SetCursor", dynlib: dllname.}
proc CheckListBox_GetHint*(AObj: pointer): cstring {.importc: "CheckListBox_GetHint", dynlib: dllname.}
proc CheckListBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "CheckListBox_SetHint", dynlib: dllname.}
proc CheckListBox_GetComponentCount*(AObj: pointer): int32 {.importc: "CheckListBox_GetComponentCount", dynlib: dllname.}
proc CheckListBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "CheckListBox_GetComponentIndex", dynlib: dllname.}
proc CheckListBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "CheckListBox_SetComponentIndex", dynlib: dllname.}
proc CheckListBox_GetOwner*(AObj: pointer): pointer {.importc: "CheckListBox_GetOwner", dynlib: dllname.}
proc CheckListBox_GetName*(AObj: pointer): cstring {.importc: "CheckListBox_GetName", dynlib: dllname.}
proc CheckListBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "CheckListBox_SetName", dynlib: dllname.}
proc CheckListBox_GetTag*(AObj: pointer): int {.importc: "CheckListBox_GetTag", dynlib: dllname.}
proc CheckListBox_SetTag*(AObj: pointer, AValue: int) {.importc: "CheckListBox_SetTag", dynlib: dllname.}
proc CheckListBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "CheckListBox_GetAnchorSideLeft", dynlib: dllname.}
proc CheckListBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetAnchorSideLeft", dynlib: dllname.}
proc CheckListBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "CheckListBox_GetAnchorSideTop", dynlib: dllname.}
proc CheckListBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetAnchorSideTop", dynlib: dllname.}
proc CheckListBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "CheckListBox_GetAnchorSideRight", dynlib: dllname.}
proc CheckListBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetAnchorSideRight", dynlib: dllname.}
proc CheckListBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "CheckListBox_GetAnchorSideBottom", dynlib: dllname.}
proc CheckListBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetAnchorSideBottom", dynlib: dllname.}
proc CheckListBox_GetChildSizing*(AObj: pointer): pointer {.importc: "CheckListBox_GetChildSizing", dynlib: dllname.}
proc CheckListBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetChildSizing", dynlib: dllname.}
proc CheckListBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "CheckListBox_GetBorderSpacing", dynlib: dllname.}
proc CheckListBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "CheckListBox_SetBorderSpacing", dynlib: dllname.}
proc CheckListBox_GetChecked*(AObj: pointer, Index: int32): bool {.importc: "CheckListBox_GetChecked", dynlib: dllname.}
proc CheckListBox_SetChecked*(AObj: pointer, Index: int32, AValue: bool) {.importc: "CheckListBox_SetChecked", dynlib: dllname.}
proc CheckListBox_GetItemEnabled*(AObj: pointer, Index: int32): bool {.importc: "CheckListBox_GetItemEnabled", dynlib: dllname.}
proc CheckListBox_SetItemEnabled*(AObj: pointer, Index: int32, AValue: bool) {.importc: "CheckListBox_SetItemEnabled", dynlib: dllname.}
proc CheckListBox_GetState*(AObj: pointer, Index: int32): TCheckBoxState {.importc: "CheckListBox_GetState", dynlib: dllname.}
proc CheckListBox_SetState*(AObj: pointer, Index: int32, AValue: TCheckBoxState) {.importc: "CheckListBox_SetState", dynlib: dllname.}
proc CheckListBox_GetHeader*(AObj: pointer, Index: int32): bool {.importc: "CheckListBox_GetHeader", dynlib: dllname.}
proc CheckListBox_SetHeader*(AObj: pointer, Index: int32, AValue: bool) {.importc: "CheckListBox_SetHeader", dynlib: dllname.}
proc CheckListBox_GetSelected*(AObj: pointer, Index: int32): bool {.importc: "CheckListBox_GetSelected", dynlib: dllname.}
proc CheckListBox_SetSelected*(AObj: pointer, Index: int32, AValue: bool) {.importc: "CheckListBox_SetSelected", dynlib: dllname.}
proc CheckListBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "CheckListBox_GetDockClients", dynlib: dllname.}
proc CheckListBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "CheckListBox_GetControls", dynlib: dllname.}
proc CheckListBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "CheckListBox_GetComponents", dynlib: dllname.}
proc CheckListBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "CheckListBox_GetAnchorSide", dynlib: dllname.}
proc CheckListBox_StaticClassType*(): TClass {.importc: "CheckListBox_StaticClassType", dynlib: dllname.}
# ----------------- TGauge ----------------------
proc Gauge_Create*(AOwner: pointer): pointer {.importc: "Gauge_Create", dynlib: dllname.}
proc Gauge_Free*(AObj: pointer) {.importc: "Gauge_Free", dynlib: dllname.}
proc Gauge_AddProgress*(AObj: pointer, Value: int32) {.importc: "Gauge_AddProgress", dynlib: dllname.}
proc Gauge_BringToFront*(AObj: pointer) {.importc: "Gauge_BringToFront", dynlib: dllname.}
proc Gauge_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Gauge_ClientToScreen", dynlib: dllname.}
proc Gauge_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Gauge_ClientToParent", dynlib: dllname.}
proc Gauge_Dragging*(AObj: pointer): bool {.importc: "Gauge_Dragging", dynlib: dllname.}
proc Gauge_HasParent*(AObj: pointer): bool {.importc: "Gauge_HasParent", dynlib: dllname.}
proc Gauge_Hide*(AObj: pointer) {.importc: "Gauge_Hide", dynlib: dllname.}
proc Gauge_Invalidate*(AObj: pointer) {.importc: "Gauge_Invalidate", dynlib: dllname.}
proc Gauge_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Gauge_Perform", dynlib: dllname.}
proc Gauge_Refresh*(AObj: pointer) {.importc: "Gauge_Refresh", dynlib: dllname.}
proc Gauge_Repaint*(AObj: pointer) {.importc: "Gauge_Repaint", dynlib: dllname.}
proc Gauge_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Gauge_ScreenToClient", dynlib: dllname.}
proc Gauge_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Gauge_ParentToClient", dynlib: dllname.}
proc Gauge_SendToBack*(AObj: pointer) {.importc: "Gauge_SendToBack", dynlib: dllname.}
proc Gauge_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Gauge_SetBounds", dynlib: dllname.}
proc Gauge_Show*(AObj: pointer) {.importc: "Gauge_Show", dynlib: dllname.}
proc Gauge_Update*(AObj: pointer) {.importc: "Gauge_Update", dynlib: dllname.}
proc Gauge_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Gauge_GetTextBuf", dynlib: dllname.}
proc Gauge_GetTextLen*(AObj: pointer): int32 {.importc: "Gauge_GetTextLen", dynlib: dllname.}
proc Gauge_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Gauge_SetTextBuf", dynlib: dllname.}
proc Gauge_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Gauge_FindComponent", dynlib: dllname.}
proc Gauge_GetNamePath*(AObj: pointer): cstring {.importc: "Gauge_GetNamePath", dynlib: dllname.}
proc Gauge_Assign*(AObj: pointer, Source: pointer) {.importc: "Gauge_Assign", dynlib: dllname.}
proc Gauge_ClassType*(AObj: pointer): TClass {.importc: "Gauge_ClassType", dynlib: dllname.}
proc Gauge_ClassName*(AObj: pointer): cstring {.importc: "Gauge_ClassName", dynlib: dllname.}
proc Gauge_InstanceSize*(AObj: pointer): int32 {.importc: "Gauge_InstanceSize", dynlib: dllname.}
proc Gauge_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Gauge_InheritsFrom", dynlib: dllname.}
proc Gauge_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Gauge_Equals", dynlib: dllname.}
proc Gauge_GetHashCode*(AObj: pointer): int32 {.importc: "Gauge_GetHashCode", dynlib: dllname.}
proc Gauge_ToString*(AObj: pointer): cstring {.importc: "Gauge_ToString", dynlib: dllname.}
proc Gauge_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Gauge_AnchorToNeighbour", dynlib: dllname.}
proc Gauge_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Gauge_AnchorParallel", dynlib: dllname.}
proc Gauge_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Gauge_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Gauge_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Gauge_AnchorVerticalCenterTo", dynlib: dllname.}
proc Gauge_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Gauge_AnchorSame", dynlib: dllname.}
proc Gauge_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Gauge_AnchorAsAlign", dynlib: dllname.}
proc Gauge_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Gauge_AnchorClient", dynlib: dllname.}
proc Gauge_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_ScaleDesignToForm", dynlib: dllname.}
proc Gauge_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_ScaleFormToDesign", dynlib: dllname.}
proc Gauge_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_Scale96ToForm", dynlib: dllname.}
proc Gauge_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_ScaleFormTo96", dynlib: dllname.}
proc Gauge_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_Scale96ToFont", dynlib: dllname.}
proc Gauge_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_ScaleFontTo96", dynlib: dllname.}
proc Gauge_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_ScaleScreenToFont", dynlib: dllname.}
proc Gauge_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_ScaleFontToScreen", dynlib: dllname.}
proc Gauge_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_Scale96ToScreen", dynlib: dllname.}
proc Gauge_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Gauge_ScaleScreenTo96", dynlib: dllname.}
proc Gauge_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Gauge_AutoAdjustLayout", dynlib: dllname.}
proc Gauge_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Gauge_FixDesignFontsPPI", dynlib: dllname.}
proc Gauge_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Gauge_ScaleFontsPPI", dynlib: dllname.}
proc Gauge_GetPercentDone*(AObj: pointer): int32 {.importc: "Gauge_GetPercentDone", dynlib: dllname.}
proc Gauge_GetAlign*(AObj: pointer): TAlign {.importc: "Gauge_GetAlign", dynlib: dllname.}
proc Gauge_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Gauge_SetAlign", dynlib: dllname.}
proc Gauge_GetAnchors*(AObj: pointer): TAnchors {.importc: "Gauge_GetAnchors", dynlib: dllname.}
proc Gauge_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Gauge_SetAnchors", dynlib: dllname.}
proc Gauge_GetBackColor*(AObj: pointer): TColor {.importc: "Gauge_GetBackColor", dynlib: dllname.}
proc Gauge_SetBackColor*(AObj: pointer, AValue: TColor) {.importc: "Gauge_SetBackColor", dynlib: dllname.}
proc Gauge_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "Gauge_GetBorderStyle", dynlib: dllname.}
proc Gauge_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "Gauge_SetBorderStyle", dynlib: dllname.}
proc Gauge_GetColor*(AObj: pointer): TColor {.importc: "Gauge_GetColor", dynlib: dllname.}
proc Gauge_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Gauge_SetColor", dynlib: dllname.}
proc Gauge_GetConstraints*(AObj: pointer): pointer {.importc: "Gauge_GetConstraints", dynlib: dllname.}
proc Gauge_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetConstraints", dynlib: dllname.}
proc Gauge_GetEnabled*(AObj: pointer): bool {.importc: "Gauge_GetEnabled", dynlib: dllname.}
proc Gauge_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Gauge_SetEnabled", dynlib: dllname.}
proc Gauge_GetForeColor*(AObj: pointer): TColor {.importc: "Gauge_GetForeColor", dynlib: dllname.}
proc Gauge_SetForeColor*(AObj: pointer, AValue: TColor) {.importc: "Gauge_SetForeColor", dynlib: dllname.}
proc Gauge_GetFont*(AObj: pointer): pointer {.importc: "Gauge_GetFont", dynlib: dllname.}
proc Gauge_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetFont", dynlib: dllname.}
proc Gauge_GetMinValue*(AObj: pointer): int32 {.importc: "Gauge_GetMinValue", dynlib: dllname.}
proc Gauge_SetMinValue*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetMinValue", dynlib: dllname.}
proc Gauge_GetMaxValue*(AObj: pointer): int32 {.importc: "Gauge_GetMaxValue", dynlib: dllname.}
proc Gauge_SetMaxValue*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetMaxValue", dynlib: dllname.}
proc Gauge_GetParentColor*(AObj: pointer): bool {.importc: "Gauge_GetParentColor", dynlib: dllname.}
proc Gauge_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "Gauge_SetParentColor", dynlib: dllname.}
proc Gauge_GetParentFont*(AObj: pointer): bool {.importc: "Gauge_GetParentFont", dynlib: dllname.}
proc Gauge_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Gauge_SetParentFont", dynlib: dllname.}
proc Gauge_GetParentShowHint*(AObj: pointer): bool {.importc: "Gauge_GetParentShowHint", dynlib: dllname.}
proc Gauge_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Gauge_SetParentShowHint", dynlib: dllname.}
proc Gauge_GetPopupMenu*(AObj: pointer): pointer {.importc: "Gauge_GetPopupMenu", dynlib: dllname.}
proc Gauge_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetPopupMenu", dynlib: dllname.}
proc Gauge_GetProgress*(AObj: pointer): int32 {.importc: "Gauge_GetProgress", dynlib: dllname.}
proc Gauge_SetProgress*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetProgress", dynlib: dllname.}
proc Gauge_GetShowHint*(AObj: pointer): bool {.importc: "Gauge_GetShowHint", dynlib: dllname.}
proc Gauge_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Gauge_SetShowHint", dynlib: dllname.}
proc Gauge_GetShowText*(AObj: pointer): bool {.importc: "Gauge_GetShowText", dynlib: dllname.}
proc Gauge_SetShowText*(AObj: pointer, AValue: bool) {.importc: "Gauge_SetShowText", dynlib: dllname.}
proc Gauge_GetVisible*(AObj: pointer): bool {.importc: "Gauge_GetVisible", dynlib: dllname.}
proc Gauge_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Gauge_SetVisible", dynlib: dllname.}
proc Gauge_GetAction*(AObj: pointer): pointer {.importc: "Gauge_GetAction", dynlib: dllname.}
proc Gauge_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetAction", dynlib: dllname.}
proc Gauge_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Gauge_GetBiDiMode", dynlib: dllname.}
proc Gauge_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Gauge_SetBiDiMode", dynlib: dllname.}
proc Gauge_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Gauge_GetBoundsRect", dynlib: dllname.}
proc Gauge_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Gauge_SetBoundsRect", dynlib: dllname.}
proc Gauge_GetClientHeight*(AObj: pointer): int32 {.importc: "Gauge_GetClientHeight", dynlib: dllname.}
proc Gauge_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetClientHeight", dynlib: dllname.}
proc Gauge_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Gauge_GetClientOrigin", dynlib: dllname.}
proc Gauge_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Gauge_GetClientRect", dynlib: dllname.}
proc Gauge_GetClientWidth*(AObj: pointer): int32 {.importc: "Gauge_GetClientWidth", dynlib: dllname.}
proc Gauge_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetClientWidth", dynlib: dllname.}
proc Gauge_GetControlState*(AObj: pointer): TControlState {.importc: "Gauge_GetControlState", dynlib: dllname.}
proc Gauge_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Gauge_SetControlState", dynlib: dllname.}
proc Gauge_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Gauge_GetControlStyle", dynlib: dllname.}
proc Gauge_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Gauge_SetControlStyle", dynlib: dllname.}
proc Gauge_GetFloating*(AObj: pointer): bool {.importc: "Gauge_GetFloating", dynlib: dllname.}
proc Gauge_GetParent*(AObj: pointer): pointer {.importc: "Gauge_GetParent", dynlib: dllname.}
proc Gauge_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetParent", dynlib: dllname.}
proc Gauge_GetLeft*(AObj: pointer): int32 {.importc: "Gauge_GetLeft", dynlib: dllname.}
proc Gauge_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetLeft", dynlib: dllname.}
proc Gauge_GetTop*(AObj: pointer): int32 {.importc: "Gauge_GetTop", dynlib: dllname.}
proc Gauge_SetTop*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetTop", dynlib: dllname.}
proc Gauge_GetWidth*(AObj: pointer): int32 {.importc: "Gauge_GetWidth", dynlib: dllname.}
proc Gauge_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetWidth", dynlib: dllname.}
proc Gauge_GetHeight*(AObj: pointer): int32 {.importc: "Gauge_GetHeight", dynlib: dllname.}
proc Gauge_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetHeight", dynlib: dllname.}
proc Gauge_GetCursor*(AObj: pointer): TCursor {.importc: "Gauge_GetCursor", dynlib: dllname.}
proc Gauge_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Gauge_SetCursor", dynlib: dllname.}
proc Gauge_GetHint*(AObj: pointer): cstring {.importc: "Gauge_GetHint", dynlib: dllname.}
proc Gauge_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Gauge_SetHint", dynlib: dllname.}
proc Gauge_GetComponentCount*(AObj: pointer): int32 {.importc: "Gauge_GetComponentCount", dynlib: dllname.}
proc Gauge_GetComponentIndex*(AObj: pointer): int32 {.importc: "Gauge_GetComponentIndex", dynlib: dllname.}
proc Gauge_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Gauge_SetComponentIndex", dynlib: dllname.}
proc Gauge_GetOwner*(AObj: pointer): pointer {.importc: "Gauge_GetOwner", dynlib: dllname.}
proc Gauge_GetName*(AObj: pointer): cstring {.importc: "Gauge_GetName", dynlib: dllname.}
proc Gauge_SetName*(AObj: pointer, AValue: cstring) {.importc: "Gauge_SetName", dynlib: dllname.}
proc Gauge_GetTag*(AObj: pointer): int {.importc: "Gauge_GetTag", dynlib: dllname.}
proc Gauge_SetTag*(AObj: pointer, AValue: int) {.importc: "Gauge_SetTag", dynlib: dllname.}
proc Gauge_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Gauge_GetAnchorSideLeft", dynlib: dllname.}
proc Gauge_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetAnchorSideLeft", dynlib: dllname.}
proc Gauge_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Gauge_GetAnchorSideTop", dynlib: dllname.}
proc Gauge_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetAnchorSideTop", dynlib: dllname.}
proc Gauge_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Gauge_GetAnchorSideRight", dynlib: dllname.}
proc Gauge_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetAnchorSideRight", dynlib: dllname.}
proc Gauge_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Gauge_GetAnchorSideBottom", dynlib: dllname.}
proc Gauge_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetAnchorSideBottom", dynlib: dllname.}
proc Gauge_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Gauge_GetBorderSpacing", dynlib: dllname.}
proc Gauge_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Gauge_SetBorderSpacing", dynlib: dllname.}
proc Gauge_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Gauge_GetComponents", dynlib: dllname.}
proc Gauge_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Gauge_GetAnchorSide", dynlib: dllname.}
proc Gauge_StaticClassType*(): TClass {.importc: "Gauge_StaticClassType", dynlib: dllname.}
# ----------------- TImageButton ----------------------
proc ImageButton_Create*(AOwner: pointer): pointer {.importc: "ImageButton_Create", dynlib: dllname.}
proc ImageButton_Free*(AObj: pointer) {.importc: "ImageButton_Free", dynlib: dllname.}
proc ImageButton_Click*(AObj: pointer) {.importc: "ImageButton_Click", dynlib: dllname.}
proc ImageButton_BringToFront*(AObj: pointer) {.importc: "ImageButton_BringToFront", dynlib: dllname.}
proc ImageButton_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ImageButton_ClientToScreen", dynlib: dllname.}
proc ImageButton_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ImageButton_ClientToParent", dynlib: dllname.}
proc ImageButton_Dragging*(AObj: pointer): bool {.importc: "ImageButton_Dragging", dynlib: dllname.}
proc ImageButton_HasParent*(AObj: pointer): bool {.importc: "ImageButton_HasParent", dynlib: dllname.}
proc ImageButton_Hide*(AObj: pointer) {.importc: "ImageButton_Hide", dynlib: dllname.}
proc ImageButton_Invalidate*(AObj: pointer) {.importc: "ImageButton_Invalidate", dynlib: dllname.}
proc ImageButton_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ImageButton_Perform", dynlib: dllname.}
proc ImageButton_Refresh*(AObj: pointer) {.importc: "ImageButton_Refresh", dynlib: dllname.}
proc ImageButton_Repaint*(AObj: pointer) {.importc: "ImageButton_Repaint", dynlib: dllname.}
proc ImageButton_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ImageButton_ScreenToClient", dynlib: dllname.}
proc ImageButton_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ImageButton_ParentToClient", dynlib: dllname.}
proc ImageButton_SendToBack*(AObj: pointer) {.importc: "ImageButton_SendToBack", dynlib: dllname.}
proc ImageButton_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ImageButton_SetBounds", dynlib: dllname.}
proc ImageButton_Show*(AObj: pointer) {.importc: "ImageButton_Show", dynlib: dllname.}
proc ImageButton_Update*(AObj: pointer) {.importc: "ImageButton_Update", dynlib: dllname.}
proc ImageButton_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ImageButton_GetTextBuf", dynlib: dllname.}
proc ImageButton_GetTextLen*(AObj: pointer): int32 {.importc: "ImageButton_GetTextLen", dynlib: dllname.}
proc ImageButton_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ImageButton_SetTextBuf", dynlib: dllname.}
proc ImageButton_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ImageButton_FindComponent", dynlib: dllname.}
proc ImageButton_GetNamePath*(AObj: pointer): cstring {.importc: "ImageButton_GetNamePath", dynlib: dllname.}
proc ImageButton_Assign*(AObj: pointer, Source: pointer) {.importc: "ImageButton_Assign", dynlib: dllname.}
proc ImageButton_ClassType*(AObj: pointer): TClass {.importc: "ImageButton_ClassType", dynlib: dllname.}
proc ImageButton_ClassName*(AObj: pointer): cstring {.importc: "ImageButton_ClassName", dynlib: dllname.}
proc ImageButton_InstanceSize*(AObj: pointer): int32 {.importc: "ImageButton_InstanceSize", dynlib: dllname.}
proc ImageButton_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ImageButton_InheritsFrom", dynlib: dllname.}
proc ImageButton_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ImageButton_Equals", dynlib: dllname.}
proc ImageButton_GetHashCode*(AObj: pointer): int32 {.importc: "ImageButton_GetHashCode", dynlib: dllname.}
proc ImageButton_ToString*(AObj: pointer): cstring {.importc: "ImageButton_ToString", dynlib: dllname.}
proc ImageButton_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ImageButton_AnchorToNeighbour", dynlib: dllname.}
proc ImageButton_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ImageButton_AnchorParallel", dynlib: dllname.}
proc ImageButton_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ImageButton_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ImageButton_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ImageButton_AnchorVerticalCenterTo", dynlib: dllname.}
proc ImageButton_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ImageButton_AnchorSame", dynlib: dllname.}
proc ImageButton_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ImageButton_AnchorAsAlign", dynlib: dllname.}
proc ImageButton_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ImageButton_AnchorClient", dynlib: dllname.}
proc ImageButton_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_ScaleDesignToForm", dynlib: dllname.}
proc ImageButton_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_ScaleFormToDesign", dynlib: dllname.}
proc ImageButton_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_Scale96ToForm", dynlib: dllname.}
proc ImageButton_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_ScaleFormTo96", dynlib: dllname.}
proc ImageButton_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_Scale96ToFont", dynlib: dllname.}
proc ImageButton_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_ScaleFontTo96", dynlib: dllname.}
proc ImageButton_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_ScaleScreenToFont", dynlib: dllname.}
proc ImageButton_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_ScaleFontToScreen", dynlib: dllname.}
proc ImageButton_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_Scale96ToScreen", dynlib: dllname.}
proc ImageButton_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ImageButton_ScaleScreenTo96", dynlib: dllname.}
proc ImageButton_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ImageButton_AutoAdjustLayout", dynlib: dllname.}
proc ImageButton_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ImageButton_FixDesignFontsPPI", dynlib: dllname.}
proc ImageButton_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ImageButton_ScaleFontsPPI", dynlib: dllname.}
proc ImageButton_GetAction*(AObj: pointer): pointer {.importc: "ImageButton_GetAction", dynlib: dllname.}
proc ImageButton_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetAction", dynlib: dllname.}
proc ImageButton_GetAlign*(AObj: pointer): TAlign {.importc: "ImageButton_GetAlign", dynlib: dllname.}
proc ImageButton_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ImageButton_SetAlign", dynlib: dllname.}
proc ImageButton_GetAnchors*(AObj: pointer): TAnchors {.importc: "ImageButton_GetAnchors", dynlib: dllname.}
proc ImageButton_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ImageButton_SetAnchors", dynlib: dllname.}
proc ImageButton_GetAutoSize*(AObj: pointer): bool {.importc: "ImageButton_GetAutoSize", dynlib: dllname.}
proc ImageButton_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "ImageButton_SetAutoSize", dynlib: dllname.}
proc ImageButton_GetConstraints*(AObj: pointer): pointer {.importc: "ImageButton_GetConstraints", dynlib: dllname.}
proc ImageButton_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetConstraints", dynlib: dllname.}
proc ImageButton_GetCaption*(AObj: pointer): cstring {.importc: "ImageButton_GetCaption", dynlib: dllname.}
proc ImageButton_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "ImageButton_SetCaption", dynlib: dllname.}
proc ImageButton_GetDragCursor*(AObj: pointer): TCursor {.importc: "ImageButton_GetDragCursor", dynlib: dllname.}
proc ImageButton_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ImageButton_SetDragCursor", dynlib: dllname.}
proc ImageButton_GetDragKind*(AObj: pointer): TDragKind {.importc: "ImageButton_GetDragKind", dynlib: dllname.}
proc ImageButton_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ImageButton_SetDragKind", dynlib: dllname.}
proc ImageButton_GetDragMode*(AObj: pointer): TDragMode {.importc: "ImageButton_GetDragMode", dynlib: dllname.}
proc ImageButton_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ImageButton_SetDragMode", dynlib: dllname.}
proc ImageButton_GetEnabled*(AObj: pointer): bool {.importc: "ImageButton_GetEnabled", dynlib: dllname.}
proc ImageButton_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ImageButton_SetEnabled", dynlib: dllname.}
proc ImageButton_GetFont*(AObj: pointer): pointer {.importc: "ImageButton_GetFont", dynlib: dllname.}
proc ImageButton_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetFont", dynlib: dllname.}
proc ImageButton_GetImageCount*(AObj: pointer): int32 {.importc: "ImageButton_GetImageCount", dynlib: dllname.}
proc ImageButton_SetImageCount*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetImageCount", dynlib: dllname.}
proc ImageButton_GetOrientation*(AObj: pointer): TImageOrientation {.importc: "ImageButton_GetOrientation", dynlib: dllname.}
proc ImageButton_SetOrientation*(AObj: pointer, AValue: TImageOrientation) {.importc: "ImageButton_SetOrientation", dynlib: dllname.}
proc ImageButton_GetModalResult*(AObj: pointer): TModalResult {.importc: "ImageButton_GetModalResult", dynlib: dllname.}
proc ImageButton_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "ImageButton_SetModalResult", dynlib: dllname.}
proc ImageButton_GetParentShowHint*(AObj: pointer): bool {.importc: "ImageButton_GetParentShowHint", dynlib: dllname.}
proc ImageButton_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ImageButton_SetParentShowHint", dynlib: dllname.}
proc ImageButton_GetParentFont*(AObj: pointer): bool {.importc: "ImageButton_GetParentFont", dynlib: dllname.}
proc ImageButton_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ImageButton_SetParentFont", dynlib: dllname.}
proc ImageButton_GetPicture*(AObj: pointer): pointer {.importc: "ImageButton_GetPicture", dynlib: dllname.}
proc ImageButton_SetPicture*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetPicture", dynlib: dllname.}
proc ImageButton_GetPopupMenu*(AObj: pointer): pointer {.importc: "ImageButton_GetPopupMenu", dynlib: dllname.}
proc ImageButton_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetPopupMenu", dynlib: dllname.}
proc ImageButton_GetShowHint*(AObj: pointer): bool {.importc: "ImageButton_GetShowHint", dynlib: dllname.}
proc ImageButton_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ImageButton_SetShowHint", dynlib: dllname.}
proc ImageButton_GetShowCaption*(AObj: pointer): bool {.importc: "ImageButton_GetShowCaption", dynlib: dllname.}
proc ImageButton_SetShowCaption*(AObj: pointer, AValue: bool) {.importc: "ImageButton_SetShowCaption", dynlib: dllname.}
proc ImageButton_GetVisible*(AObj: pointer): bool {.importc: "ImageButton_GetVisible", dynlib: dllname.}
proc ImageButton_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ImageButton_SetVisible", dynlib: dllname.}
proc ImageButton_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ImageButton_SetOnClick", dynlib: dllname.}
proc ImageButton_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ImageButton_SetOnContextPopup", dynlib: dllname.}
proc ImageButton_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ImageButton_SetOnDblClick", dynlib: dllname.}
proc ImageButton_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ImageButton_SetOnDragDrop", dynlib: dllname.}
proc ImageButton_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ImageButton_SetOnDragOver", dynlib: dllname.}
proc ImageButton_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ImageButton_SetOnEndDock", dynlib: dllname.}
proc ImageButton_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ImageButton_SetOnEndDrag", dynlib: dllname.}
proc ImageButton_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ImageButton_SetOnMouseDown", dynlib: dllname.}
proc ImageButton_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ImageButton_SetOnMouseEnter", dynlib: dllname.}
proc ImageButton_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ImageButton_SetOnMouseLeave", dynlib: dllname.}
proc ImageButton_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ImageButton_SetOnMouseMove", dynlib: dllname.}
proc ImageButton_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ImageButton_SetOnMouseUp", dynlib: dllname.}
proc ImageButton_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ImageButton_GetBiDiMode", dynlib: dllname.}
proc ImageButton_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ImageButton_SetBiDiMode", dynlib: dllname.}
proc ImageButton_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ImageButton_GetBoundsRect", dynlib: dllname.}
proc ImageButton_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ImageButton_SetBoundsRect", dynlib: dllname.}
proc ImageButton_GetClientHeight*(AObj: pointer): int32 {.importc: "ImageButton_GetClientHeight", dynlib: dllname.}
proc ImageButton_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetClientHeight", dynlib: dllname.}
proc ImageButton_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ImageButton_GetClientOrigin", dynlib: dllname.}
proc ImageButton_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ImageButton_GetClientRect", dynlib: dllname.}
proc ImageButton_GetClientWidth*(AObj: pointer): int32 {.importc: "ImageButton_GetClientWidth", dynlib: dllname.}
proc ImageButton_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetClientWidth", dynlib: dllname.}
proc ImageButton_GetControlState*(AObj: pointer): TControlState {.importc: "ImageButton_GetControlState", dynlib: dllname.}
proc ImageButton_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ImageButton_SetControlState", dynlib: dllname.}
proc ImageButton_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ImageButton_GetControlStyle", dynlib: dllname.}
proc ImageButton_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ImageButton_SetControlStyle", dynlib: dllname.}
proc ImageButton_GetFloating*(AObj: pointer): bool {.importc: "ImageButton_GetFloating", dynlib: dllname.}
proc ImageButton_GetParent*(AObj: pointer): pointer {.importc: "ImageButton_GetParent", dynlib: dllname.}
proc ImageButton_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetParent", dynlib: dllname.}
proc ImageButton_GetLeft*(AObj: pointer): int32 {.importc: "ImageButton_GetLeft", dynlib: dllname.}
proc ImageButton_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetLeft", dynlib: dllname.}
proc ImageButton_GetTop*(AObj: pointer): int32 {.importc: "ImageButton_GetTop", dynlib: dllname.}
proc ImageButton_SetTop*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetTop", dynlib: dllname.}
proc ImageButton_GetWidth*(AObj: pointer): int32 {.importc: "ImageButton_GetWidth", dynlib: dllname.}
proc ImageButton_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetWidth", dynlib: dllname.}
proc ImageButton_GetHeight*(AObj: pointer): int32 {.importc: "ImageButton_GetHeight", dynlib: dllname.}
proc ImageButton_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetHeight", dynlib: dllname.}
proc ImageButton_GetCursor*(AObj: pointer): TCursor {.importc: "ImageButton_GetCursor", dynlib: dllname.}
proc ImageButton_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ImageButton_SetCursor", dynlib: dllname.}
proc ImageButton_GetHint*(AObj: pointer): cstring {.importc: "ImageButton_GetHint", dynlib: dllname.}
proc ImageButton_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ImageButton_SetHint", dynlib: dllname.}
proc ImageButton_GetComponentCount*(AObj: pointer): int32 {.importc: "ImageButton_GetComponentCount", dynlib: dllname.}
proc ImageButton_GetComponentIndex*(AObj: pointer): int32 {.importc: "ImageButton_GetComponentIndex", dynlib: dllname.}
proc ImageButton_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ImageButton_SetComponentIndex", dynlib: dllname.}
proc ImageButton_GetOwner*(AObj: pointer): pointer {.importc: "ImageButton_GetOwner", dynlib: dllname.}
proc ImageButton_GetName*(AObj: pointer): cstring {.importc: "ImageButton_GetName", dynlib: dllname.}
proc ImageButton_SetName*(AObj: pointer, AValue: cstring) {.importc: "ImageButton_SetName", dynlib: dllname.}
proc ImageButton_GetTag*(AObj: pointer): int {.importc: "ImageButton_GetTag", dynlib: dllname.}
proc ImageButton_SetTag*(AObj: pointer, AValue: int) {.importc: "ImageButton_SetTag", dynlib: dllname.}
proc ImageButton_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ImageButton_GetAnchorSideLeft", dynlib: dllname.}
proc ImageButton_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetAnchorSideLeft", dynlib: dllname.}
proc ImageButton_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ImageButton_GetAnchorSideTop", dynlib: dllname.}
proc ImageButton_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetAnchorSideTop", dynlib: dllname.}
proc ImageButton_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ImageButton_GetAnchorSideRight", dynlib: dllname.}
proc ImageButton_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetAnchorSideRight", dynlib: dllname.}
proc ImageButton_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ImageButton_GetAnchorSideBottom", dynlib: dllname.}
proc ImageButton_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetAnchorSideBottom", dynlib: dllname.}
proc ImageButton_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ImageButton_GetBorderSpacing", dynlib: dllname.}
proc ImageButton_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ImageButton_SetBorderSpacing", dynlib: dllname.}
proc ImageButton_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ImageButton_GetComponents", dynlib: dllname.}
proc ImageButton_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ImageButton_GetAnchorSide", dynlib: dllname.}
proc ImageButton_StaticClassType*(): TClass {.importc: "ImageButton_StaticClassType", dynlib: dllname.}
# ----------------- TFindDialog ----------------------
proc FindDialog_Create*(AOwner: pointer): pointer {.importc: "FindDialog_Create", dynlib: dllname.}
proc FindDialog_Free*(AObj: pointer) {.importc: "FindDialog_Free", dynlib: dllname.}
proc FindDialog_CloseDialog*(AObj: pointer) {.importc: "FindDialog_CloseDialog", dynlib: dllname.}
proc FindDialog_Execute*(AObj: pointer): bool {.importc: "FindDialog_Execute", dynlib: dllname.}
proc FindDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "FindDialog_FindComponent", dynlib: dllname.}
proc FindDialog_GetNamePath*(AObj: pointer): cstring {.importc: "FindDialog_GetNamePath", dynlib: dllname.}
proc FindDialog_HasParent*(AObj: pointer): bool {.importc: "FindDialog_HasParent", dynlib: dllname.}
proc FindDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "FindDialog_Assign", dynlib: dllname.}
proc FindDialog_ClassType*(AObj: pointer): TClass {.importc: "FindDialog_ClassType", dynlib: dllname.}
proc FindDialog_ClassName*(AObj: pointer): cstring {.importc: "FindDialog_ClassName", dynlib: dllname.}
proc FindDialog_InstanceSize*(AObj: pointer): int32 {.importc: "FindDialog_InstanceSize", dynlib: dllname.}
proc FindDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "FindDialog_InheritsFrom", dynlib: dllname.}
proc FindDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "FindDialog_Equals", dynlib: dllname.}
proc FindDialog_GetHashCode*(AObj: pointer): int32 {.importc: "FindDialog_GetHashCode", dynlib: dllname.}
proc FindDialog_ToString*(AObj: pointer): cstring {.importc: "FindDialog_ToString", dynlib: dllname.}
proc FindDialog_GetLeft*(AObj: pointer): int32 {.importc: "FindDialog_GetLeft", dynlib: dllname.}
proc FindDialog_SetLeft*(AObj: pointer, AValue: int32) {.importc: "FindDialog_SetLeft", dynlib: dllname.}
proc FindDialog_GetPosition*(AObj: pointer, Result: var TPoint) {.importc: "FindDialog_GetPosition", dynlib: dllname.}
proc FindDialog_SetPosition*(AObj: pointer, AValue: var TPoint) {.importc: "FindDialog_SetPosition", dynlib: dllname.}
proc FindDialog_GetTop*(AObj: pointer): int32 {.importc: "FindDialog_GetTop", dynlib: dllname.}
proc FindDialog_SetTop*(AObj: pointer, AValue: int32) {.importc: "FindDialog_SetTop", dynlib: dllname.}
proc FindDialog_GetFindText*(AObj: pointer): cstring {.importc: "FindDialog_GetFindText", dynlib: dllname.}
proc FindDialog_SetFindText*(AObj: pointer, AValue: cstring) {.importc: "FindDialog_SetFindText", dynlib: dllname.}
proc FindDialog_GetOptions*(AObj: pointer): TFindOptions {.importc: "FindDialog_GetOptions", dynlib: dllname.}
proc FindDialog_SetOptions*(AObj: pointer, AValue: TFindOptions) {.importc: "FindDialog_SetOptions", dynlib: dllname.}
proc FindDialog_SetOnFind*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FindDialog_SetOnFind", dynlib: dllname.}
proc FindDialog_GetHandle*(AObj: pointer): HWND {.importc: "FindDialog_GetHandle", dynlib: dllname.}
proc FindDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FindDialog_SetOnClose", dynlib: dllname.}
proc FindDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FindDialog_SetOnShow", dynlib: dllname.}
proc FindDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "FindDialog_GetComponentCount", dynlib: dllname.}
proc FindDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "FindDialog_GetComponentIndex", dynlib: dllname.}
proc FindDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "FindDialog_SetComponentIndex", dynlib: dllname.}
proc FindDialog_GetOwner*(AObj: pointer): pointer {.importc: "FindDialog_GetOwner", dynlib: dllname.}
proc FindDialog_GetName*(AObj: pointer): cstring {.importc: "FindDialog_GetName", dynlib: dllname.}
proc FindDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "FindDialog_SetName", dynlib: dllname.}
proc FindDialog_GetTag*(AObj: pointer): int {.importc: "FindDialog_GetTag", dynlib: dllname.}
proc FindDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "FindDialog_SetTag", dynlib: dllname.}
proc FindDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "FindDialog_GetComponents", dynlib: dllname.}
proc FindDialog_StaticClassType*(): TClass {.importc: "FindDialog_StaticClassType", dynlib: dllname.}
# ----------------- TReplaceDialog ----------------------
proc ReplaceDialog_Create*(AOwner: pointer): pointer {.importc: "ReplaceDialog_Create", dynlib: dllname.}
proc ReplaceDialog_Free*(AObj: pointer) {.importc: "ReplaceDialog_Free", dynlib: dllname.}
proc ReplaceDialog_CloseDialog*(AObj: pointer) {.importc: "ReplaceDialog_CloseDialog", dynlib: dllname.}
proc ReplaceDialog_Execute*(AObj: pointer): bool {.importc: "ReplaceDialog_Execute", dynlib: dllname.}
proc ReplaceDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ReplaceDialog_FindComponent", dynlib: dllname.}
proc ReplaceDialog_GetNamePath*(AObj: pointer): cstring {.importc: "ReplaceDialog_GetNamePath", dynlib: dllname.}
proc ReplaceDialog_HasParent*(AObj: pointer): bool {.importc: "ReplaceDialog_HasParent", dynlib: dllname.}
proc ReplaceDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "ReplaceDialog_Assign", dynlib: dllname.}
proc ReplaceDialog_ClassType*(AObj: pointer): TClass {.importc: "ReplaceDialog_ClassType", dynlib: dllname.}
proc ReplaceDialog_ClassName*(AObj: pointer): cstring {.importc: "ReplaceDialog_ClassName", dynlib: dllname.}
proc ReplaceDialog_InstanceSize*(AObj: pointer): int32 {.importc: "ReplaceDialog_InstanceSize", dynlib: dllname.}
proc ReplaceDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ReplaceDialog_InheritsFrom", dynlib: dllname.}
proc ReplaceDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ReplaceDialog_Equals", dynlib: dllname.}
proc ReplaceDialog_GetHashCode*(AObj: pointer): int32 {.importc: "ReplaceDialog_GetHashCode", dynlib: dllname.}
proc ReplaceDialog_ToString*(AObj: pointer): cstring {.importc: "ReplaceDialog_ToString", dynlib: dllname.}
proc ReplaceDialog_GetReplaceText*(AObj: pointer): cstring {.importc: "ReplaceDialog_GetReplaceText", dynlib: dllname.}
proc ReplaceDialog_SetReplaceText*(AObj: pointer, AValue: cstring) {.importc: "ReplaceDialog_SetReplaceText", dynlib: dllname.}
proc ReplaceDialog_SetOnReplace*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ReplaceDialog_SetOnReplace", dynlib: dllname.}
proc ReplaceDialog_GetLeft*(AObj: pointer): int32 {.importc: "ReplaceDialog_GetLeft", dynlib: dllname.}
proc ReplaceDialog_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ReplaceDialog_SetLeft", dynlib: dllname.}
proc ReplaceDialog_GetPosition*(AObj: pointer, Result: var TPoint) {.importc: "ReplaceDialog_GetPosition", dynlib: dllname.}
proc ReplaceDialog_SetPosition*(AObj: pointer, AValue: var TPoint) {.importc: "ReplaceDialog_SetPosition", dynlib: dllname.}
proc ReplaceDialog_GetTop*(AObj: pointer): int32 {.importc: "ReplaceDialog_GetTop", dynlib: dllname.}
proc ReplaceDialog_SetTop*(AObj: pointer, AValue: int32) {.importc: "ReplaceDialog_SetTop", dynlib: dllname.}
proc ReplaceDialog_GetFindText*(AObj: pointer): cstring {.importc: "ReplaceDialog_GetFindText", dynlib: dllname.}
proc ReplaceDialog_SetFindText*(AObj: pointer, AValue: cstring) {.importc: "ReplaceDialog_SetFindText", dynlib: dllname.}
proc ReplaceDialog_GetOptions*(AObj: pointer): TFindOptions {.importc: "ReplaceDialog_GetOptions", dynlib: dllname.}
proc ReplaceDialog_SetOptions*(AObj: pointer, AValue: TFindOptions) {.importc: "ReplaceDialog_SetOptions", dynlib: dllname.}
proc ReplaceDialog_SetOnFind*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ReplaceDialog_SetOnFind", dynlib: dllname.}
proc ReplaceDialog_GetHandle*(AObj: pointer): HWND {.importc: "ReplaceDialog_GetHandle", dynlib: dllname.}
proc ReplaceDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ReplaceDialog_SetOnClose", dynlib: dllname.}
proc ReplaceDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ReplaceDialog_SetOnShow", dynlib: dllname.}
proc ReplaceDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "ReplaceDialog_GetComponentCount", dynlib: dllname.}
proc ReplaceDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "ReplaceDialog_GetComponentIndex", dynlib: dllname.}
proc ReplaceDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ReplaceDialog_SetComponentIndex", dynlib: dllname.}
proc ReplaceDialog_GetOwner*(AObj: pointer): pointer {.importc: "ReplaceDialog_GetOwner", dynlib: dllname.}
proc ReplaceDialog_GetName*(AObj: pointer): cstring {.importc: "ReplaceDialog_GetName", dynlib: dllname.}
proc ReplaceDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "ReplaceDialog_SetName", dynlib: dllname.}
proc ReplaceDialog_GetTag*(AObj: pointer): int {.importc: "ReplaceDialog_GetTag", dynlib: dllname.}
proc ReplaceDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "ReplaceDialog_SetTag", dynlib: dllname.}
proc ReplaceDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ReplaceDialog_GetComponents", dynlib: dllname.}
proc ReplaceDialog_StaticClassType*(): TClass {.importc: "ReplaceDialog_StaticClassType", dynlib: dllname.}
# ----------------- TPrinterSetupDialog ----------------------
proc PrinterSetupDialog_Create*(AOwner: pointer): pointer {.importc: "PrinterSetupDialog_Create", dynlib: dllname.}
proc PrinterSetupDialog_Free*(AObj: pointer) {.importc: "PrinterSetupDialog_Free", dynlib: dllname.}
proc PrinterSetupDialog_Execute*(AObj: pointer): bool {.importc: "PrinterSetupDialog_Execute", dynlib: dllname.}
proc PrinterSetupDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "PrinterSetupDialog_FindComponent", dynlib: dllname.}
proc PrinterSetupDialog_GetNamePath*(AObj: pointer): cstring {.importc: "PrinterSetupDialog_GetNamePath", dynlib: dllname.}
proc PrinterSetupDialog_HasParent*(AObj: pointer): bool {.importc: "PrinterSetupDialog_HasParent", dynlib: dllname.}
proc PrinterSetupDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "PrinterSetupDialog_Assign", dynlib: dllname.}
proc PrinterSetupDialog_ClassType*(AObj: pointer): TClass {.importc: "PrinterSetupDialog_ClassType", dynlib: dllname.}
proc PrinterSetupDialog_ClassName*(AObj: pointer): cstring {.importc: "PrinterSetupDialog_ClassName", dynlib: dllname.}
proc PrinterSetupDialog_InstanceSize*(AObj: pointer): int32 {.importc: "PrinterSetupDialog_InstanceSize", dynlib: dllname.}
proc PrinterSetupDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "PrinterSetupDialog_InheritsFrom", dynlib: dllname.}
proc PrinterSetupDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "PrinterSetupDialog_Equals", dynlib: dllname.}
proc PrinterSetupDialog_GetHashCode*(AObj: pointer): int32 {.importc: "PrinterSetupDialog_GetHashCode", dynlib: dllname.}
proc PrinterSetupDialog_ToString*(AObj: pointer): cstring {.importc: "PrinterSetupDialog_ToString", dynlib: dllname.}
proc PrinterSetupDialog_GetHandle*(AObj: pointer): HWND {.importc: "PrinterSetupDialog_GetHandle", dynlib: dllname.}
proc PrinterSetupDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PrinterSetupDialog_SetOnClose", dynlib: dllname.}
proc PrinterSetupDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PrinterSetupDialog_SetOnShow", dynlib: dllname.}
proc PrinterSetupDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "PrinterSetupDialog_GetComponentCount", dynlib: dllname.}
proc PrinterSetupDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "PrinterSetupDialog_GetComponentIndex", dynlib: dllname.}
proc PrinterSetupDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "PrinterSetupDialog_SetComponentIndex", dynlib: dllname.}
proc PrinterSetupDialog_GetOwner*(AObj: pointer): pointer {.importc: "PrinterSetupDialog_GetOwner", dynlib: dllname.}
proc PrinterSetupDialog_GetName*(AObj: pointer): cstring {.importc: "PrinterSetupDialog_GetName", dynlib: dllname.}
proc PrinterSetupDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "PrinterSetupDialog_SetName", dynlib: dllname.}
proc PrinterSetupDialog_GetTag*(AObj: pointer): int {.importc: "PrinterSetupDialog_GetTag", dynlib: dllname.}
proc PrinterSetupDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "PrinterSetupDialog_SetTag", dynlib: dllname.}
proc PrinterSetupDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "PrinterSetupDialog_GetComponents", dynlib: dllname.}
proc PrinterSetupDialog_StaticClassType*(): TClass {.importc: "PrinterSetupDialog_StaticClassType", dynlib: dllname.}
# ----------------- TPageSetupDialog ----------------------
proc PageSetupDialog_Create*(AOwner: pointer): pointer {.importc: "PageSetupDialog_Create", dynlib: dllname.}
proc PageSetupDialog_Free*(AObj: pointer) {.importc: "PageSetupDialog_Free", dynlib: dllname.}
proc PageSetupDialog_Execute*(AObj: pointer): bool {.importc: "PageSetupDialog_Execute", dynlib: dllname.}
proc PageSetupDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "PageSetupDialog_FindComponent", dynlib: dllname.}
proc PageSetupDialog_GetNamePath*(AObj: pointer): cstring {.importc: "PageSetupDialog_GetNamePath", dynlib: dllname.}
proc PageSetupDialog_HasParent*(AObj: pointer): bool {.importc: "PageSetupDialog_HasParent", dynlib: dllname.}
proc PageSetupDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "PageSetupDialog_Assign", dynlib: dllname.}
proc PageSetupDialog_ClassType*(AObj: pointer): TClass {.importc: "PageSetupDialog_ClassType", dynlib: dllname.}
proc PageSetupDialog_ClassName*(AObj: pointer): cstring {.importc: "PageSetupDialog_ClassName", dynlib: dllname.}
proc PageSetupDialog_InstanceSize*(AObj: pointer): int32 {.importc: "PageSetupDialog_InstanceSize", dynlib: dllname.}
proc PageSetupDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "PageSetupDialog_InheritsFrom", dynlib: dllname.}
proc PageSetupDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "PageSetupDialog_Equals", dynlib: dllname.}
proc PageSetupDialog_GetHashCode*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetHashCode", dynlib: dllname.}
proc PageSetupDialog_ToString*(AObj: pointer): cstring {.importc: "PageSetupDialog_ToString", dynlib: dllname.}
proc PageSetupDialog_GetMarginLeft*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetMarginLeft", dynlib: dllname.}
proc PageSetupDialog_SetMarginLeft*(AObj: pointer, AValue: int32) {.importc: "PageSetupDialog_SetMarginLeft", dynlib: dllname.}
proc PageSetupDialog_GetMarginTop*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetMarginTop", dynlib: dllname.}
proc PageSetupDialog_SetMarginTop*(AObj: pointer, AValue: int32) {.importc: "PageSetupDialog_SetMarginTop", dynlib: dllname.}
proc PageSetupDialog_GetMarginRight*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetMarginRight", dynlib: dllname.}
proc PageSetupDialog_SetMarginRight*(AObj: pointer, AValue: int32) {.importc: "PageSetupDialog_SetMarginRight", dynlib: dllname.}
proc PageSetupDialog_GetMarginBottom*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetMarginBottom", dynlib: dllname.}
proc PageSetupDialog_SetMarginBottom*(AObj: pointer, AValue: int32) {.importc: "PageSetupDialog_SetMarginBottom", dynlib: dllname.}
proc PageSetupDialog_GetOptions*(AObj: pointer): TPageSetupDialogOptions {.importc: "PageSetupDialog_GetOptions", dynlib: dllname.}
proc PageSetupDialog_SetOptions*(AObj: pointer, AValue: TPageSetupDialogOptions) {.importc: "PageSetupDialog_SetOptions", dynlib: dllname.}
proc PageSetupDialog_GetPageWidth*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetPageWidth", dynlib: dllname.}
proc PageSetupDialog_SetPageWidth*(AObj: pointer, AValue: int32) {.importc: "PageSetupDialog_SetPageWidth", dynlib: dllname.}
proc PageSetupDialog_GetPageHeight*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetPageHeight", dynlib: dllname.}
proc PageSetupDialog_SetPageHeight*(AObj: pointer, AValue: int32) {.importc: "PageSetupDialog_SetPageHeight", dynlib: dllname.}
proc PageSetupDialog_GetUnits*(AObj: pointer): TPageMeasureUnits {.importc: "PageSetupDialog_GetUnits", dynlib: dllname.}
proc PageSetupDialog_GetHandle*(AObj: pointer): HWND {.importc: "PageSetupDialog_GetHandle", dynlib: dllname.}
proc PageSetupDialog_SetOnClose*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageSetupDialog_SetOnClose", dynlib: dllname.}
proc PageSetupDialog_SetOnShow*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "PageSetupDialog_SetOnShow", dynlib: dllname.}
proc PageSetupDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetComponentCount", dynlib: dllname.}
proc PageSetupDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "PageSetupDialog_GetComponentIndex", dynlib: dllname.}
proc PageSetupDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "PageSetupDialog_SetComponentIndex", dynlib: dllname.}
proc PageSetupDialog_GetOwner*(AObj: pointer): pointer {.importc: "PageSetupDialog_GetOwner", dynlib: dllname.}
proc PageSetupDialog_GetName*(AObj: pointer): cstring {.importc: "PageSetupDialog_GetName", dynlib: dllname.}
proc PageSetupDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "PageSetupDialog_SetName", dynlib: dllname.}
proc PageSetupDialog_GetTag*(AObj: pointer): int {.importc: "PageSetupDialog_GetTag", dynlib: dllname.}
proc PageSetupDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "PageSetupDialog_SetTag", dynlib: dllname.}
proc PageSetupDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "PageSetupDialog_GetComponents", dynlib: dllname.}
proc PageSetupDialog_StaticClassType*(): TClass {.importc: "PageSetupDialog_StaticClassType", dynlib: dllname.}
# ----------------- TDragObject ----------------------
proc DragObject_Create*(AOwner: pointer): pointer {.importc: "DragObject_Create", dynlib: dllname.}
proc DragObject_Free*(AObj: pointer) {.importc: "DragObject_Free", dynlib: dllname.}
proc DragObject_Assign*(AObj: pointer, Source: pointer) {.importc: "DragObject_Assign", dynlib: dllname.}
proc DragObject_HideDragImage*(AObj: pointer) {.importc: "DragObject_HideDragImage", dynlib: dllname.}
proc DragObject_ShowDragImage*(AObj: pointer) {.importc: "DragObject_ShowDragImage", dynlib: dllname.}
proc DragObject_ClassType*(AObj: pointer): TClass {.importc: "DragObject_ClassType", dynlib: dllname.}
proc DragObject_ClassName*(AObj: pointer): cstring {.importc: "DragObject_ClassName", dynlib: dllname.}
proc DragObject_InstanceSize*(AObj: pointer): int32 {.importc: "DragObject_InstanceSize", dynlib: dllname.}
proc DragObject_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "DragObject_InheritsFrom", dynlib: dllname.}
proc DragObject_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "DragObject_Equals", dynlib: dllname.}
proc DragObject_GetHashCode*(AObj: pointer): int32 {.importc: "DragObject_GetHashCode", dynlib: dllname.}
proc DragObject_ToString*(AObj: pointer): cstring {.importc: "DragObject_ToString", dynlib: dllname.}
proc DragObject_GetAlwaysShowDragImages*(AObj: pointer): bool {.importc: "DragObject_GetAlwaysShowDragImages", dynlib: dllname.}
proc DragObject_SetAlwaysShowDragImages*(AObj: pointer, AValue: bool) {.importc: "DragObject_SetAlwaysShowDragImages", dynlib: dllname.}
proc DragObject_GetDragPos*(AObj: pointer, Result: var TPoint) {.importc: "DragObject_GetDragPos", dynlib: dllname.}
proc DragObject_SetDragPos*(AObj: pointer, AValue: var TPoint) {.importc: "DragObject_SetDragPos", dynlib: dllname.}
proc DragObject_GetDragTarget*(AObj: pointer): pointer {.importc: "DragObject_GetDragTarget", dynlib: dllname.}
proc DragObject_SetDragTarget*(AObj: pointer, AValue: pointer) {.importc: "DragObject_SetDragTarget", dynlib: dllname.}
proc DragObject_GetDragTargetPos*(AObj: pointer, Result: var TPoint) {.importc: "DragObject_GetDragTargetPos", dynlib: dllname.}
proc DragObject_SetDragTargetPos*(AObj: pointer, AValue: var TPoint) {.importc: "DragObject_SetDragTargetPos", dynlib: dllname.}
proc DragObject_GetDropped*(AObj: pointer): bool {.importc: "DragObject_GetDropped", dynlib: dllname.}
proc DragObject_StaticClassType*(): TClass {.importc: "DragObject_StaticClassType", dynlib: dllname.}
# ----------------- TDragDockObject ----------------------
proc DragDockObject_Create*(AOwner: pointer): pointer {.importc: "DragDockObject_Create", dynlib: dllname.}
proc DragDockObject_Free*(AObj: pointer) {.importc: "DragDockObject_Free", dynlib: dllname.}
proc DragDockObject_Assign*(AObj: pointer, Source: pointer) {.importc: "DragDockObject_Assign", dynlib: dllname.}
proc DragDockObject_HideDragImage*(AObj: pointer) {.importc: "DragDockObject_HideDragImage", dynlib: dllname.}
proc DragDockObject_ShowDragImage*(AObj: pointer) {.importc: "DragDockObject_ShowDragImage", dynlib: dllname.}
proc DragDockObject_ClassType*(AObj: pointer): TClass {.importc: "DragDockObject_ClassType", dynlib: dllname.}
proc DragDockObject_ClassName*(AObj: pointer): cstring {.importc: "DragDockObject_ClassName", dynlib: dllname.}
proc DragDockObject_InstanceSize*(AObj: pointer): int32 {.importc: "DragDockObject_InstanceSize", dynlib: dllname.}
proc DragDockObject_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "DragDockObject_InheritsFrom", dynlib: dllname.}
proc DragDockObject_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "DragDockObject_Equals", dynlib: dllname.}
proc DragDockObject_GetHashCode*(AObj: pointer): int32 {.importc: "DragDockObject_GetHashCode", dynlib: dllname.}
proc DragDockObject_ToString*(AObj: pointer): cstring {.importc: "DragDockObject_ToString", dynlib: dllname.}
proc DragDockObject_GetDockRect*(AObj: pointer, Result: var TRect) {.importc: "DragDockObject_GetDockRect", dynlib: dllname.}
proc DragDockObject_SetDockRect*(AObj: pointer, AValue: var TRect) {.importc: "DragDockObject_SetDockRect", dynlib: dllname.}
proc DragDockObject_GetDropAlign*(AObj: pointer): TAlign {.importc: "DragDockObject_GetDropAlign", dynlib: dllname.}
proc DragDockObject_GetDropOnControl*(AObj: pointer): pointer {.importc: "DragDockObject_GetDropOnControl", dynlib: dllname.}
proc DragDockObject_GetEraseDockRect*(AObj: pointer, Result: var TRect) {.importc: "DragDockObject_GetEraseDockRect", dynlib: dllname.}
proc DragDockObject_SetEraseDockRect*(AObj: pointer, AValue: var TRect) {.importc: "DragDockObject_SetEraseDockRect", dynlib: dllname.}
proc DragDockObject_GetFloating*(AObj: pointer): bool {.importc: "DragDockObject_GetFloating", dynlib: dllname.}
proc DragDockObject_SetFloating*(AObj: pointer, AValue: bool) {.importc: "DragDockObject_SetFloating", dynlib: dllname.}
proc DragDockObject_GetControl*(AObj: pointer): pointer {.importc: "DragDockObject_GetControl", dynlib: dllname.}
proc DragDockObject_SetControl*(AObj: pointer, AValue: pointer) {.importc: "DragDockObject_SetControl", dynlib: dllname.}
proc DragDockObject_GetAlwaysShowDragImages*(AObj: pointer): bool {.importc: "DragDockObject_GetAlwaysShowDragImages", dynlib: dllname.}
proc DragDockObject_SetAlwaysShowDragImages*(AObj: pointer, AValue: bool) {.importc: "DragDockObject_SetAlwaysShowDragImages", dynlib: dllname.}
proc DragDockObject_GetDragPos*(AObj: pointer, Result: var TPoint) {.importc: "DragDockObject_GetDragPos", dynlib: dllname.}
proc DragDockObject_SetDragPos*(AObj: pointer, AValue: var TPoint) {.importc: "DragDockObject_SetDragPos", dynlib: dllname.}
proc DragDockObject_GetDragTarget*(AObj: pointer): pointer {.importc: "DragDockObject_GetDragTarget", dynlib: dllname.}
proc DragDockObject_SetDragTarget*(AObj: pointer, AValue: pointer) {.importc: "DragDockObject_SetDragTarget", dynlib: dllname.}
proc DragDockObject_GetDragTargetPos*(AObj: pointer, Result: var TPoint) {.importc: "DragDockObject_GetDragTargetPos", dynlib: dllname.}
proc DragDockObject_SetDragTargetPos*(AObj: pointer, AValue: var TPoint) {.importc: "DragDockObject_SetDragTargetPos", dynlib: dllname.}
proc DragDockObject_GetDropped*(AObj: pointer): bool {.importc: "DragDockObject_GetDropped", dynlib: dllname.}
proc DragDockObject_StaticClassType*(): TClass {.importc: "DragDockObject_StaticClassType", dynlib: dllname.}
# ----------------- TStringGrid ----------------------
proc StringGrid_Create*(AOwner: pointer): pointer {.importc: "StringGrid_Create", dynlib: dllname.}
proc StringGrid_Free*(AObj: pointer) {.importc: "StringGrid_Free", dynlib: dllname.}
proc StringGrid_DeleteColRow*(AObj: pointer, IsColumn: bool, index: int32) {.importc: "StringGrid_DeleteColRow", dynlib: dllname.}
proc StringGrid_DeleteCol*(AObj: pointer, Index: int32) {.importc: "StringGrid_DeleteCol", dynlib: dllname.}
proc StringGrid_DeleteRow*(AObj: pointer, Index: int32) {.importc: "StringGrid_DeleteRow", dynlib: dllname.}
proc StringGrid_ExchangeColRow*(AObj: pointer, IsColumn: bool, index: int32, WithIndex: int32) {.importc: "StringGrid_ExchangeColRow", dynlib: dllname.}
proc StringGrid_InsertColRow*(AObj: pointer, IsColumn: bool, index: int32) {.importc: "StringGrid_InsertColRow", dynlib: dllname.}
proc StringGrid_MoveColRow*(AObj: pointer, IsColumn: bool, FromIndex: int32, ToIndex: int32) {.importc: "StringGrid_MoveColRow", dynlib: dllname.}
proc StringGrid_SortColRow*(AObj: pointer, IsColumn: bool, Index: int32, FromIndex: int32, ToIndex: int32) {.importc: "StringGrid_SortColRow", dynlib: dllname.}
proc StringGrid_EditorByStyle*(AObj: pointer, Style: TColumnButtonStyle): pointer {.importc: "StringGrid_EditorByStyle", dynlib: dllname.}
proc StringGrid_EditorKeyDown*(AObj: pointer, Sender: pointer, Key: var uint16, Shift: TShiftState) {.importc: "StringGrid_EditorKeyDown", dynlib: dllname.}
proc StringGrid_EditorKeyPress*(AObj: pointer, Sender: pointer, Key: var Char) {.importc: "StringGrid_EditorKeyPress", dynlib: dllname.}
proc StringGrid_EditorKeyUp*(AObj: pointer, Sender: pointer, key: var uint16, shift: TShiftState) {.importc: "StringGrid_EditorKeyUp", dynlib: dllname.}
proc StringGrid_EditorTextChanged*(AObj: pointer, aCol: int32, aRow: int32, aText: cstring) {.importc: "StringGrid_EditorTextChanged", dynlib: dllname.}
proc StringGrid_EditingDone*(AObj: pointer) {.importc: "StringGrid_EditingDone", dynlib: dllname.}
proc StringGrid_AutoAdjustColumns*(AObj: pointer) {.importc: "StringGrid_AutoAdjustColumns", dynlib: dllname.}
proc StringGrid_CellRect*(AObj: pointer, ACol: int32, ARow: int32, Result: var TRect) {.importc: "StringGrid_CellRect", dynlib: dllname.}
proc StringGrid_CellToGridZone*(AObj: pointer, aCol: int32, aRow: int32): TGridZone {.importc: "StringGrid_CellToGridZone", dynlib: dllname.}
proc StringGrid_CheckPosition*(AObj: pointer) {.importc: "StringGrid_CheckPosition", dynlib: dllname.}
proc StringGrid_ClearCols*(AObj: pointer): bool {.importc: "StringGrid_ClearCols", dynlib: dllname.}
proc StringGrid_ClearRows*(AObj: pointer): bool {.importc: "StringGrid_ClearRows", dynlib: dllname.}
proc StringGrid_Clear*(AObj: pointer) {.importc: "StringGrid_Clear", dynlib: dllname.}
proc StringGrid_ClearSelections*(AObj: pointer) {.importc: "StringGrid_ClearSelections", dynlib: dllname.}
proc StringGrid_HasMultiSelection*(AObj: pointer): bool {.importc: "StringGrid_HasMultiSelection", dynlib: dllname.}
proc StringGrid_InvalidateCell*(AObj: pointer, aCol: int32, aRow: int32) {.importc: "StringGrid_InvalidateCell", dynlib: dllname.}
proc StringGrid_InvalidateCol*(AObj: pointer, ACol: int32) {.importc: "StringGrid_InvalidateCol", dynlib: dllname.}
proc StringGrid_InvalidateRange*(AObj: pointer, aRange: var TRect) {.importc: "StringGrid_InvalidateRange", dynlib: dllname.}
proc StringGrid_InvalidateRow*(AObj: pointer, ARow: int32) {.importc: "StringGrid_InvalidateRow", dynlib: dllname.}
proc StringGrid_IsCellVisible*(AObj: pointer, aCol: int32, aRow: int32): bool {.importc: "StringGrid_IsCellVisible", dynlib: dllname.}
proc StringGrid_IsFixedCellVisible*(AObj: pointer, aCol: int32, aRow: int32): bool {.importc: "StringGrid_IsFixedCellVisible", dynlib: dllname.}
proc StringGrid_MouseCoord*(AObj: pointer, X: int32, Y: int32, Result: var TGridCoord) {.importc: "StringGrid_MouseCoord", dynlib: dllname.}
proc StringGrid_MouseToCell*(AObj: pointer, Mouse: var TPoint, Result: var TPoint) {.importc: "StringGrid_MouseToCell", dynlib: dllname.}
proc StringGrid_MouseToLogcell*(AObj: pointer, Mouse: var TPoint, Result: var TPoint) {.importc: "StringGrid_MouseToLogcell", dynlib: dllname.}
proc StringGrid_MouseToGridZone*(AObj: pointer, X: int32, Y: int32): TGridZone {.importc: "StringGrid_MouseToGridZone", dynlib: dllname.}
proc StringGrid_CanFocus*(AObj: pointer): bool {.importc: "StringGrid_CanFocus", dynlib: dllname.}
proc StringGrid_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "StringGrid_ContainsControl", dynlib: dllname.}
proc StringGrid_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "StringGrid_ControlAtPos", dynlib: dllname.}
proc StringGrid_DisableAlign*(AObj: pointer) {.importc: "StringGrid_DisableAlign", dynlib: dllname.}
proc StringGrid_EnableAlign*(AObj: pointer) {.importc: "StringGrid_EnableAlign", dynlib: dllname.}
proc StringGrid_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "StringGrid_FindChildControl", dynlib: dllname.}
proc StringGrid_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "StringGrid_FlipChildren", dynlib: dllname.}
proc StringGrid_Focused*(AObj: pointer): bool {.importc: "StringGrid_Focused", dynlib: dllname.}
proc StringGrid_HandleAllocated*(AObj: pointer): bool {.importc: "StringGrid_HandleAllocated", dynlib: dllname.}
proc StringGrid_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "StringGrid_InsertControl", dynlib: dllname.}
proc StringGrid_Invalidate*(AObj: pointer) {.importc: "StringGrid_Invalidate", dynlib: dllname.}
proc StringGrid_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "StringGrid_PaintTo", dynlib: dllname.}
proc StringGrid_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "StringGrid_RemoveControl", dynlib: dllname.}
proc StringGrid_Realign*(AObj: pointer) {.importc: "StringGrid_Realign", dynlib: dllname.}
proc StringGrid_Repaint*(AObj: pointer) {.importc: "StringGrid_Repaint", dynlib: dllname.}
proc StringGrid_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "StringGrid_ScaleBy", dynlib: dllname.}
proc StringGrid_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "StringGrid_ScrollBy", dynlib: dllname.}
proc StringGrid_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "StringGrid_SetBounds", dynlib: dllname.}
proc StringGrid_SetFocus*(AObj: pointer) {.importc: "StringGrid_SetFocus", dynlib: dllname.}
proc StringGrid_Update*(AObj: pointer) {.importc: "StringGrid_Update", dynlib: dllname.}
proc StringGrid_BringToFront*(AObj: pointer) {.importc: "StringGrid_BringToFront", dynlib: dllname.}
proc StringGrid_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "StringGrid_ClientToScreen", dynlib: dllname.}
proc StringGrid_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "StringGrid_ClientToParent", dynlib: dllname.}
proc StringGrid_Dragging*(AObj: pointer): bool {.importc: "StringGrid_Dragging", dynlib: dllname.}
proc StringGrid_HasParent*(AObj: pointer): bool {.importc: "StringGrid_HasParent", dynlib: dllname.}
proc StringGrid_Hide*(AObj: pointer) {.importc: "StringGrid_Hide", dynlib: dllname.}
proc StringGrid_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "StringGrid_Perform", dynlib: dllname.}
proc StringGrid_Refresh*(AObj: pointer) {.importc: "StringGrid_Refresh", dynlib: dllname.}
proc StringGrid_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "StringGrid_ScreenToClient", dynlib: dllname.}
proc StringGrid_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "StringGrid_ParentToClient", dynlib: dllname.}
proc StringGrid_SendToBack*(AObj: pointer) {.importc: "StringGrid_SendToBack", dynlib: dllname.}
proc StringGrid_Show*(AObj: pointer) {.importc: "StringGrid_Show", dynlib: dllname.}
proc StringGrid_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "StringGrid_GetTextBuf", dynlib: dllname.}
proc StringGrid_GetTextLen*(AObj: pointer): int32 {.importc: "StringGrid_GetTextLen", dynlib: dllname.}
proc StringGrid_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "StringGrid_SetTextBuf", dynlib: dllname.}
proc StringGrid_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "StringGrid_FindComponent", dynlib: dllname.}
proc StringGrid_GetNamePath*(AObj: pointer): cstring {.importc: "StringGrid_GetNamePath", dynlib: dllname.}
proc StringGrid_Assign*(AObj: pointer, Source: pointer) {.importc: "StringGrid_Assign", dynlib: dllname.}
proc StringGrid_ClassType*(AObj: pointer): TClass {.importc: "StringGrid_ClassType", dynlib: dllname.}
proc StringGrid_ClassName*(AObj: pointer): cstring {.importc: "StringGrid_ClassName", dynlib: dllname.}
proc StringGrid_InstanceSize*(AObj: pointer): int32 {.importc: "StringGrid_InstanceSize", dynlib: dllname.}
proc StringGrid_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "StringGrid_InheritsFrom", dynlib: dllname.}
proc StringGrid_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "StringGrid_Equals", dynlib: dllname.}
proc StringGrid_GetHashCode*(AObj: pointer): int32 {.importc: "StringGrid_GetHashCode", dynlib: dllname.}
proc StringGrid_ToString*(AObj: pointer): cstring {.importc: "StringGrid_ToString", dynlib: dllname.}
proc StringGrid_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "StringGrid_AnchorToNeighbour", dynlib: dllname.}
proc StringGrid_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "StringGrid_AnchorParallel", dynlib: dllname.}
proc StringGrid_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "StringGrid_AnchorHorizontalCenterTo", dynlib: dllname.}
proc StringGrid_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "StringGrid_AnchorVerticalCenterTo", dynlib: dllname.}
proc StringGrid_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "StringGrid_AnchorSame", dynlib: dllname.}
proc StringGrid_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "StringGrid_AnchorAsAlign", dynlib: dllname.}
proc StringGrid_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "StringGrid_AnchorClient", dynlib: dllname.}
proc StringGrid_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_ScaleDesignToForm", dynlib: dllname.}
proc StringGrid_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_ScaleFormToDesign", dynlib: dllname.}
proc StringGrid_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_Scale96ToForm", dynlib: dllname.}
proc StringGrid_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_ScaleFormTo96", dynlib: dllname.}
proc StringGrid_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_Scale96ToFont", dynlib: dllname.}
proc StringGrid_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_ScaleFontTo96", dynlib: dllname.}
proc StringGrid_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_ScaleScreenToFont", dynlib: dllname.}
proc StringGrid_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_ScaleFontToScreen", dynlib: dllname.}
proc StringGrid_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_Scale96ToScreen", dynlib: dllname.}
proc StringGrid_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "StringGrid_ScaleScreenTo96", dynlib: dllname.}
proc StringGrid_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "StringGrid_AutoAdjustLayout", dynlib: dllname.}
proc StringGrid_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "StringGrid_FixDesignFontsPPI", dynlib: dllname.}
proc StringGrid_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "StringGrid_ScaleFontsPPI", dynlib: dllname.}
proc StringGrid_GetSelectedColor*(AObj: pointer): TColor {.importc: "StringGrid_GetSelectedColor", dynlib: dllname.}
proc StringGrid_SetSelectedColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetSelectedColor", dynlib: dllname.}
proc StringGrid_GetSelectedColumn*(AObj: pointer): pointer {.importc: "StringGrid_GetSelectedColumn", dynlib: dllname.}
proc StringGrid_GetStrictSort*(AObj: pointer): bool {.importc: "StringGrid_GetStrictSort", dynlib: dllname.}
proc StringGrid_SetStrictSort*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetStrictSort", dynlib: dllname.}
proc StringGrid_GetFixedHotColor*(AObj: pointer): TColor {.importc: "StringGrid_GetFixedHotColor", dynlib: dllname.}
proc StringGrid_SetFixedHotColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetFixedHotColor", dynlib: dllname.}
proc StringGrid_GetFastEditing*(AObj: pointer): bool {.importc: "StringGrid_GetFastEditing", dynlib: dllname.}
proc StringGrid_SetFastEditing*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetFastEditing", dynlib: dllname.}
proc StringGrid_GetFixedGridLineColor*(AObj: pointer): TColor {.importc: "StringGrid_GetFixedGridLineColor", dynlib: dllname.}
proc StringGrid_SetFixedGridLineColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetFixedGridLineColor", dynlib: dllname.}
proc StringGrid_GetFocusColor*(AObj: pointer): TColor {.importc: "StringGrid_GetFocusColor", dynlib: dllname.}
proc StringGrid_SetFocusColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetFocusColor", dynlib: dllname.}
proc StringGrid_GetFocusRectVisible*(AObj: pointer): bool {.importc: "StringGrid_GetFocusRectVisible", dynlib: dllname.}
proc StringGrid_SetFocusRectVisible*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetFocusRectVisible", dynlib: dllname.}
proc StringGrid_GetGridLineColor*(AObj: pointer): TColor {.importc: "StringGrid_GetGridLineColor", dynlib: dllname.}
proc StringGrid_SetGridLineColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetGridLineColor", dynlib: dllname.}
proc StringGrid_GetGridLineStyle*(AObj: pointer): TPenStyle {.importc: "StringGrid_GetGridLineStyle", dynlib: dllname.}
proc StringGrid_SetGridLineStyle*(AObj: pointer, AValue: TPenStyle) {.importc: "StringGrid_SetGridLineStyle", dynlib: dllname.}
proc StringGrid_GetEditor*(AObj: pointer): pointer {.importc: "StringGrid_GetEditor", dynlib: dllname.}
proc StringGrid_SetEditor*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetEditor", dynlib: dllname.}
proc StringGrid_GetEditorBorderStyle*(AObj: pointer): TBorderStyle {.importc: "StringGrid_GetEditorBorderStyle", dynlib: dllname.}
proc StringGrid_SetEditorBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "StringGrid_SetEditorBorderStyle", dynlib: dllname.}
proc StringGrid_GetEditorMode*(AObj: pointer): bool {.importc: "StringGrid_GetEditorMode", dynlib: dllname.}
proc StringGrid_SetEditorMode*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetEditorMode", dynlib: dllname.}
proc StringGrid_GetSortOrder*(AObj: pointer): TSortOrder {.importc: "StringGrid_GetSortOrder", dynlib: dllname.}
proc StringGrid_SetSortOrder*(AObj: pointer, AValue: TSortOrder) {.importc: "StringGrid_SetSortOrder", dynlib: dllname.}
proc StringGrid_GetSortColumn*(AObj: pointer): int32 {.importc: "StringGrid_GetSortColumn", dynlib: dllname.}
proc StringGrid_SetOnAfterSelection*(AObj: pointer, AEventId: TOnSelectEvent) {.importc: "StringGrid_SetOnAfterSelection", dynlib: dllname.}
proc StringGrid_SetOnBeforeSelection*(AObj: pointer, AEventId: TOnSelectEvent) {.importc: "StringGrid_SetOnBeforeSelection", dynlib: dllname.}
proc StringGrid_SetOnButtonClick*(AObj: pointer, AEventId: TOnSelectEvent) {.importc: "StringGrid_SetOnButtonClick", dynlib: dllname.}
proc StringGrid_SetOnCheckboxToggled*(AObj: pointer, AEventId: TToggledCheckboxEvent) {.importc: "StringGrid_SetOnCheckboxToggled", dynlib: dllname.}
proc StringGrid_SetOnColRowDeleted*(AObj: pointer, AEventId: TGridOperationEvent) {.importc: "StringGrid_SetOnColRowDeleted", dynlib: dllname.}
proc StringGrid_SetOnColRowExchanged*(AObj: pointer, AEventId: TGridOperationEvent) {.importc: "StringGrid_SetOnColRowExchanged", dynlib: dllname.}
proc StringGrid_SetOnColRowInserted*(AObj: pointer, AEventId: TGridOperationEvent) {.importc: "StringGrid_SetOnColRowInserted", dynlib: dllname.}
proc StringGrid_SetOnColRowMoved*(AObj: pointer, AEventId: TGridOperationEvent) {.importc: "StringGrid_SetOnColRowMoved", dynlib: dllname.}
proc StringGrid_SetOnCompareCells*(AObj: pointer, AEventId: TOnCompareCells) {.importc: "StringGrid_SetOnCompareCells", dynlib: dllname.}
proc StringGrid_SetOnEditingDone*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnEditingDone", dynlib: dllname.}
proc StringGrid_SetOnGetCellHint*(AObj: pointer, AEventId: TGetCellHintEvent) {.importc: "StringGrid_SetOnGetCellHint", dynlib: dllname.}
proc StringGrid_SetOnGetCheckboxState*(AObj: pointer, AEventId: TGetCheckboxStateEvent) {.importc: "StringGrid_SetOnGetCheckboxState", dynlib: dllname.}
proc StringGrid_SetOnSetCheckboxState*(AObj: pointer, AEventId: TSetCheckboxStateEvent) {.importc: "StringGrid_SetOnSetCheckboxState", dynlib: dllname.}
proc StringGrid_SetOnHeaderClick*(AObj: pointer, AEventId: THdrEvent) {.importc: "StringGrid_SetOnHeaderClick", dynlib: dllname.}
proc StringGrid_SetOnHeaderSized*(AObj: pointer, AEventId: THdrEvent) {.importc: "StringGrid_SetOnHeaderSized", dynlib: dllname.}
proc StringGrid_SetOnHeaderSizing*(AObj: pointer, AEventId: THeaderSizingEvent) {.importc: "StringGrid_SetOnHeaderSizing", dynlib: dllname.}
proc StringGrid_SetOnPickListSelect*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnPickListSelect", dynlib: dllname.}
proc StringGrid_SetOnSelection*(AObj: pointer, AEventId: TOnSelectEvent) {.importc: "StringGrid_SetOnSelection", dynlib: dllname.}
proc StringGrid_SetOnSelectEditor*(AObj: pointer, AEventId: TSelectEditorEvent) {.importc: "StringGrid_SetOnSelectEditor", dynlib: dllname.}
proc StringGrid_SetOnUserCheckboxBitmap*(AObj: pointer, AEventId: TUserCheckBoxBitmapEvent) {.importc: "StringGrid_SetOnUserCheckboxBitmap", dynlib: dllname.}
proc StringGrid_SetOnValidateEntry*(AObj: pointer, AEventId: TValidateEntryEvent) {.importc: "StringGrid_SetOnValidateEntry", dynlib: dllname.}
proc StringGrid_GetAlternateColor*(AObj: pointer): TColor {.importc: "StringGrid_GetAlternateColor", dynlib: dllname.}
proc StringGrid_SetAlternateColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetAlternateColor", dynlib: dllname.}
proc StringGrid_GetAutoAdvance*(AObj: pointer): TAutoAdvance {.importc: "StringGrid_GetAutoAdvance", dynlib: dllname.}
proc StringGrid_SetAutoAdvance*(AObj: pointer, AValue: TAutoAdvance) {.importc: "StringGrid_SetAutoAdvance", dynlib: dllname.}
proc StringGrid_GetAutoEdit*(AObj: pointer): bool {.importc: "StringGrid_GetAutoEdit", dynlib: dllname.}
proc StringGrid_SetAutoEdit*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetAutoEdit", dynlib: dllname.}
proc StringGrid_GetAutoFillColumns*(AObj: pointer): bool {.importc: "StringGrid_GetAutoFillColumns", dynlib: dllname.}
proc StringGrid_SetAutoFillColumns*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetAutoFillColumns", dynlib: dllname.}
proc StringGrid_GetCellHintPriority*(AObj: pointer): TCellHintPriority {.importc: "StringGrid_GetCellHintPriority", dynlib: dllname.}
proc StringGrid_SetCellHintPriority*(AObj: pointer, AValue: TCellHintPriority) {.importc: "StringGrid_SetCellHintPriority", dynlib: dllname.}
proc StringGrid_GetColumnClickSorts*(AObj: pointer): bool {.importc: "StringGrid_GetColumnClickSorts", dynlib: dllname.}
proc StringGrid_SetColumnClickSorts*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetColumnClickSorts", dynlib: dllname.}
proc StringGrid_GetColumns*(AObj: pointer): pointer {.importc: "StringGrid_GetColumns", dynlib: dllname.}
proc StringGrid_SetColumns*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetColumns", dynlib: dllname.}
proc StringGrid_GetExtendedSelect*(AObj: pointer): bool {.importc: "StringGrid_GetExtendedSelect", dynlib: dllname.}
proc StringGrid_SetExtendedSelect*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetExtendedSelect", dynlib: dllname.}
proc StringGrid_GetFlat*(AObj: pointer): bool {.importc: "StringGrid_GetFlat", dynlib: dllname.}
proc StringGrid_SetFlat*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetFlat", dynlib: dllname.}
proc StringGrid_GetHeaderHotZones*(AObj: pointer): TGridZoneSet {.importc: "StringGrid_GetHeaderHotZones", dynlib: dllname.}
proc StringGrid_SetHeaderHotZones*(AObj: pointer, AValue: TGridZoneSet) {.importc: "StringGrid_SetHeaderHotZones", dynlib: dllname.}
proc StringGrid_GetHeaderPushZones*(AObj: pointer): TGridZoneSet {.importc: "StringGrid_GetHeaderPushZones", dynlib: dllname.}
proc StringGrid_SetHeaderPushZones*(AObj: pointer, AValue: TGridZoneSet) {.importc: "StringGrid_SetHeaderPushZones", dynlib: dllname.}
proc StringGrid_GetImageIndexSortAsc*(AObj: pointer): int32 {.importc: "StringGrid_GetImageIndexSortAsc", dynlib: dllname.}
proc StringGrid_SetImageIndexSortAsc*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetImageIndexSortAsc", dynlib: dllname.}
proc StringGrid_GetImageIndexSortDesc*(AObj: pointer): int32 {.importc: "StringGrid_GetImageIndexSortDesc", dynlib: dllname.}
proc StringGrid_SetImageIndexSortDesc*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetImageIndexSortDesc", dynlib: dllname.}
proc StringGrid_GetMouseWheelOption*(AObj: pointer): TMouseWheelOption {.importc: "StringGrid_GetMouseWheelOption", dynlib: dllname.}
proc StringGrid_SetMouseWheelOption*(AObj: pointer, AValue: TMouseWheelOption) {.importc: "StringGrid_SetMouseWheelOption", dynlib: dllname.}
proc StringGrid_GetOptions2*(AObj: pointer): TGridOptions2 {.importc: "StringGrid_GetOptions2", dynlib: dllname.}
proc StringGrid_SetOptions2*(AObj: pointer, AValue: TGridOptions2) {.importc: "StringGrid_SetOptions2", dynlib: dllname.}
proc StringGrid_GetRangeSelectMode*(AObj: pointer): TRangeSelectMode {.importc: "StringGrid_GetRangeSelectMode", dynlib: dllname.}
proc StringGrid_SetRangeSelectMode*(AObj: pointer, AValue: TRangeSelectMode) {.importc: "StringGrid_SetRangeSelectMode", dynlib: dllname.}
proc StringGrid_GetTabAdvance*(AObj: pointer): TAutoAdvance {.importc: "StringGrid_GetTabAdvance", dynlib: dllname.}
proc StringGrid_SetTabAdvance*(AObj: pointer, AValue: TAutoAdvance) {.importc: "StringGrid_SetTabAdvance", dynlib: dllname.}
proc StringGrid_GetTitleFont*(AObj: pointer): pointer {.importc: "StringGrid_GetTitleFont", dynlib: dllname.}
proc StringGrid_SetTitleFont*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetTitleFont", dynlib: dllname.}
proc StringGrid_GetTitleImageList*(AObj: pointer): pointer {.importc: "StringGrid_GetTitleImageList", dynlib: dllname.}
proc StringGrid_SetTitleImageList*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetTitleImageList", dynlib: dllname.}
proc StringGrid_GetTitleStyle*(AObj: pointer): TTitleStyle {.importc: "StringGrid_GetTitleStyle", dynlib: dllname.}
proc StringGrid_SetTitleStyle*(AObj: pointer, AValue: TTitleStyle) {.importc: "StringGrid_SetTitleStyle", dynlib: dllname.}
proc StringGrid_GetUseXORFeatures*(AObj: pointer): bool {.importc: "StringGrid_GetUseXORFeatures", dynlib: dllname.}
proc StringGrid_SetUseXORFeatures*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetUseXORFeatures", dynlib: dllname.}
proc StringGrid_GetAlign*(AObj: pointer): TAlign {.importc: "StringGrid_GetAlign", dynlib: dllname.}
proc StringGrid_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "StringGrid_SetAlign", dynlib: dllname.}
proc StringGrid_GetAnchors*(AObj: pointer): TAnchors {.importc: "StringGrid_GetAnchors", dynlib: dllname.}
proc StringGrid_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "StringGrid_SetAnchors", dynlib: dllname.}
proc StringGrid_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "StringGrid_GetBiDiMode", dynlib: dllname.}
proc StringGrid_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "StringGrid_SetBiDiMode", dynlib: dllname.}
proc StringGrid_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "StringGrid_GetBorderStyle", dynlib: dllname.}
proc StringGrid_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "StringGrid_SetBorderStyle", dynlib: dllname.}
proc StringGrid_GetColor*(AObj: pointer): TColor {.importc: "StringGrid_GetColor", dynlib: dllname.}
proc StringGrid_SetColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetColor", dynlib: dllname.}
proc StringGrid_GetColCount*(AObj: pointer): int32 {.importc: "StringGrid_GetColCount", dynlib: dllname.}
proc StringGrid_SetColCount*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetColCount", dynlib: dllname.}
proc StringGrid_GetConstraints*(AObj: pointer): pointer {.importc: "StringGrid_GetConstraints", dynlib: dllname.}
proc StringGrid_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetConstraints", dynlib: dllname.}
proc StringGrid_GetDefaultColWidth*(AObj: pointer): int32 {.importc: "StringGrid_GetDefaultColWidth", dynlib: dllname.}
proc StringGrid_SetDefaultColWidth*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetDefaultColWidth", dynlib: dllname.}
proc StringGrid_GetDefaultRowHeight*(AObj: pointer): int32 {.importc: "StringGrid_GetDefaultRowHeight", dynlib: dllname.}
proc StringGrid_SetDefaultRowHeight*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetDefaultRowHeight", dynlib: dllname.}
proc StringGrid_GetDefaultDrawing*(AObj: pointer): bool {.importc: "StringGrid_GetDefaultDrawing", dynlib: dllname.}
proc StringGrid_SetDefaultDrawing*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetDefaultDrawing", dynlib: dllname.}
proc StringGrid_GetDoubleBuffered*(AObj: pointer): bool {.importc: "StringGrid_GetDoubleBuffered", dynlib: dllname.}
proc StringGrid_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetDoubleBuffered", dynlib: dllname.}
proc StringGrid_GetDragCursor*(AObj: pointer): TCursor {.importc: "StringGrid_GetDragCursor", dynlib: dllname.}
proc StringGrid_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "StringGrid_SetDragCursor", dynlib: dllname.}
proc StringGrid_GetDragKind*(AObj: pointer): TDragKind {.importc: "StringGrid_GetDragKind", dynlib: dllname.}
proc StringGrid_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "StringGrid_SetDragKind", dynlib: dllname.}
proc StringGrid_GetDragMode*(AObj: pointer): TDragMode {.importc: "StringGrid_GetDragMode", dynlib: dllname.}
proc StringGrid_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "StringGrid_SetDragMode", dynlib: dllname.}
proc StringGrid_GetEnabled*(AObj: pointer): bool {.importc: "StringGrid_GetEnabled", dynlib: dllname.}
proc StringGrid_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetEnabled", dynlib: dllname.}
proc StringGrid_GetFixedColor*(AObj: pointer): TColor {.importc: "StringGrid_GetFixedColor", dynlib: dllname.}
proc StringGrid_SetFixedColor*(AObj: pointer, AValue: TColor) {.importc: "StringGrid_SetFixedColor", dynlib: dllname.}
proc StringGrid_GetFixedCols*(AObj: pointer): int32 {.importc: "StringGrid_GetFixedCols", dynlib: dllname.}
proc StringGrid_SetFixedCols*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetFixedCols", dynlib: dllname.}
proc StringGrid_GetRowCount*(AObj: pointer): int32 {.importc: "StringGrid_GetRowCount", dynlib: dllname.}
proc StringGrid_SetRowCount*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetRowCount", dynlib: dllname.}
proc StringGrid_GetFixedRows*(AObj: pointer): int32 {.importc: "StringGrid_GetFixedRows", dynlib: dllname.}
proc StringGrid_SetFixedRows*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetFixedRows", dynlib: dllname.}
proc StringGrid_GetFont*(AObj: pointer): pointer {.importc: "StringGrid_GetFont", dynlib: dllname.}
proc StringGrid_SetFont*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetFont", dynlib: dllname.}
proc StringGrid_GetGridLineWidth*(AObj: pointer): int32 {.importc: "StringGrid_GetGridLineWidth", dynlib: dllname.}
proc StringGrid_SetGridLineWidth*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetGridLineWidth", dynlib: dllname.}
proc StringGrid_GetOptions*(AObj: pointer): TGridOptions {.importc: "StringGrid_GetOptions", dynlib: dllname.}
proc StringGrid_SetOptions*(AObj: pointer, AValue: TGridOptions) {.importc: "StringGrid_SetOptions", dynlib: dllname.}
proc StringGrid_GetParentColor*(AObj: pointer): bool {.importc: "StringGrid_GetParentColor", dynlib: dllname.}
proc StringGrid_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetParentColor", dynlib: dllname.}
proc StringGrid_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "StringGrid_GetParentDoubleBuffered", dynlib: dllname.}
proc StringGrid_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetParentDoubleBuffered", dynlib: dllname.}
proc StringGrid_GetParentFont*(AObj: pointer): bool {.importc: "StringGrid_GetParentFont", dynlib: dllname.}
proc StringGrid_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetParentFont", dynlib: dllname.}
proc StringGrid_GetParentShowHint*(AObj: pointer): bool {.importc: "StringGrid_GetParentShowHint", dynlib: dllname.}
proc StringGrid_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetParentShowHint", dynlib: dllname.}
proc StringGrid_GetPopupMenu*(AObj: pointer): pointer {.importc: "StringGrid_GetPopupMenu", dynlib: dllname.}
proc StringGrid_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetPopupMenu", dynlib: dllname.}
proc StringGrid_GetScrollBars*(AObj: pointer): TScrollStyle {.importc: "StringGrid_GetScrollBars", dynlib: dllname.}
proc StringGrid_SetScrollBars*(AObj: pointer, AValue: TScrollStyle) {.importc: "StringGrid_SetScrollBars", dynlib: dllname.}
proc StringGrid_GetShowHint*(AObj: pointer): bool {.importc: "StringGrid_GetShowHint", dynlib: dllname.}
proc StringGrid_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetShowHint", dynlib: dllname.}
proc StringGrid_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "StringGrid_GetTabOrder", dynlib: dllname.}
proc StringGrid_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "StringGrid_SetTabOrder", dynlib: dllname.}
proc StringGrid_GetVisible*(AObj: pointer): bool {.importc: "StringGrid_GetVisible", dynlib: dllname.}
proc StringGrid_SetVisible*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetVisible", dynlib: dllname.}
proc StringGrid_GetVisibleColCount*(AObj: pointer): int32 {.importc: "StringGrid_GetVisibleColCount", dynlib: dllname.}
proc StringGrid_GetVisibleRowCount*(AObj: pointer): int32 {.importc: "StringGrid_GetVisibleRowCount", dynlib: dllname.}
proc StringGrid_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnClick", dynlib: dllname.}
proc StringGrid_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "StringGrid_SetOnContextPopup", dynlib: dllname.}
proc StringGrid_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnDblClick", dynlib: dllname.}
proc StringGrid_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "StringGrid_SetOnDragDrop", dynlib: dllname.}
proc StringGrid_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "StringGrid_SetOnDragOver", dynlib: dllname.}
proc StringGrid_SetOnDrawCell*(AObj: pointer, AEventId: TDrawCellEvent) {.importc: "StringGrid_SetOnDrawCell", dynlib: dllname.}
proc StringGrid_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "StringGrid_SetOnEndDock", dynlib: dllname.}
proc StringGrid_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "StringGrid_SetOnEndDrag", dynlib: dllname.}
proc StringGrid_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnEnter", dynlib: dllname.}
proc StringGrid_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnExit", dynlib: dllname.}
proc StringGrid_SetOnGetEditMask*(AObj: pointer, AEventId: TGetEditEvent) {.importc: "StringGrid_SetOnGetEditMask", dynlib: dllname.}
proc StringGrid_SetOnGetEditText*(AObj: pointer, AEventId: TGetEditEvent) {.importc: "StringGrid_SetOnGetEditText", dynlib: dllname.}
proc StringGrid_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "StringGrid_SetOnKeyDown", dynlib: dllname.}
proc StringGrid_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "StringGrid_SetOnKeyPress", dynlib: dllname.}
proc StringGrid_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "StringGrid_SetOnKeyUp", dynlib: dllname.}
proc StringGrid_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "StringGrid_SetOnMouseDown", dynlib: dllname.}
proc StringGrid_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnMouseEnter", dynlib: dllname.}
proc StringGrid_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnMouseLeave", dynlib: dllname.}
proc StringGrid_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "StringGrid_SetOnMouseMove", dynlib: dllname.}
proc StringGrid_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "StringGrid_SetOnMouseUp", dynlib: dllname.}
proc StringGrid_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "StringGrid_SetOnMouseWheelDown", dynlib: dllname.}
proc StringGrid_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "StringGrid_SetOnMouseWheelUp", dynlib: dllname.}
proc StringGrid_SetOnSelectCell*(AObj: pointer, AEventId: TSelectCellEvent) {.importc: "StringGrid_SetOnSelectCell", dynlib: dllname.}
proc StringGrid_SetOnSetEditText*(AObj: pointer, AEventId: TSetEditEvent) {.importc: "StringGrid_SetOnSetEditText", dynlib: dllname.}
proc StringGrid_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "StringGrid_SetOnStartDock", dynlib: dllname.}
proc StringGrid_SetOnTopLeftChanged*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "StringGrid_SetOnTopLeftChanged", dynlib: dllname.}
proc StringGrid_GetCanvas*(AObj: pointer): pointer {.importc: "StringGrid_GetCanvas", dynlib: dllname.}
proc StringGrid_GetCol*(AObj: pointer): int32 {.importc: "StringGrid_GetCol", dynlib: dllname.}
proc StringGrid_SetCol*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetCol", dynlib: dllname.}
proc StringGrid_GetGridHeight*(AObj: pointer): int32 {.importc: "StringGrid_GetGridHeight", dynlib: dllname.}
proc StringGrid_GetGridWidth*(AObj: pointer): int32 {.importc: "StringGrid_GetGridWidth", dynlib: dllname.}
proc StringGrid_GetLeftCol*(AObj: pointer): int32 {.importc: "StringGrid_GetLeftCol", dynlib: dllname.}
proc StringGrid_SetLeftCol*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetLeftCol", dynlib: dllname.}
proc StringGrid_GetSelection*(AObj: pointer, Result: var TGridRect) {.importc: "StringGrid_GetSelection", dynlib: dllname.}
proc StringGrid_SetSelection*(AObj: pointer, AValue: var TGridRect) {.importc: "StringGrid_SetSelection", dynlib: dllname.}
proc StringGrid_GetRow*(AObj: pointer): int32 {.importc: "StringGrid_GetRow", dynlib: dllname.}
proc StringGrid_SetRow*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetRow", dynlib: dllname.}
proc StringGrid_GetTopRow*(AObj: pointer): int32 {.importc: "StringGrid_GetTopRow", dynlib: dllname.}
proc StringGrid_SetTopRow*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetTopRow", dynlib: dllname.}
proc StringGrid_GetTabStop*(AObj: pointer): bool {.importc: "StringGrid_GetTabStop", dynlib: dllname.}
proc StringGrid_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetTabStop", dynlib: dllname.}
proc StringGrid_GetDockClientCount*(AObj: pointer): int32 {.importc: "StringGrid_GetDockClientCount", dynlib: dllname.}
proc StringGrid_GetDockSite*(AObj: pointer): bool {.importc: "StringGrid_GetDockSite", dynlib: dllname.}
proc StringGrid_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetDockSite", dynlib: dllname.}
proc StringGrid_GetMouseInClient*(AObj: pointer): bool {.importc: "StringGrid_GetMouseInClient", dynlib: dllname.}
proc StringGrid_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "StringGrid_GetVisibleDockClientCount", dynlib: dllname.}
proc StringGrid_GetBrush*(AObj: pointer): pointer {.importc: "StringGrid_GetBrush", dynlib: dllname.}
proc StringGrid_GetControlCount*(AObj: pointer): int32 {.importc: "StringGrid_GetControlCount", dynlib: dllname.}
proc StringGrid_GetHandle*(AObj: pointer): HWND {.importc: "StringGrid_GetHandle", dynlib: dllname.}
proc StringGrid_GetParentWindow*(AObj: pointer): HWND {.importc: "StringGrid_GetParentWindow", dynlib: dllname.}
proc StringGrid_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "StringGrid_SetParentWindow", dynlib: dllname.}
proc StringGrid_GetShowing*(AObj: pointer): bool {.importc: "StringGrid_GetShowing", dynlib: dllname.}
proc StringGrid_GetUseDockManager*(AObj: pointer): bool {.importc: "StringGrid_GetUseDockManager", dynlib: dllname.}
proc StringGrid_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "StringGrid_SetUseDockManager", dynlib: dllname.}
proc StringGrid_GetAction*(AObj: pointer): pointer {.importc: "StringGrid_GetAction", dynlib: dllname.}
proc StringGrid_SetAction*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetAction", dynlib: dllname.}
proc StringGrid_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "StringGrid_GetBoundsRect", dynlib: dllname.}
proc StringGrid_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "StringGrid_SetBoundsRect", dynlib: dllname.}
proc StringGrid_GetClientHeight*(AObj: pointer): int32 {.importc: "StringGrid_GetClientHeight", dynlib: dllname.}
proc StringGrid_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetClientHeight", dynlib: dllname.}
proc StringGrid_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "StringGrid_GetClientOrigin", dynlib: dllname.}
proc StringGrid_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "StringGrid_GetClientRect", dynlib: dllname.}
proc StringGrid_GetClientWidth*(AObj: pointer): int32 {.importc: "StringGrid_GetClientWidth", dynlib: dllname.}
proc StringGrid_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetClientWidth", dynlib: dllname.}
proc StringGrid_GetControlState*(AObj: pointer): TControlState {.importc: "StringGrid_GetControlState", dynlib: dllname.}
proc StringGrid_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "StringGrid_SetControlState", dynlib: dllname.}
proc StringGrid_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "StringGrid_GetControlStyle", dynlib: dllname.}
proc StringGrid_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "StringGrid_SetControlStyle", dynlib: dllname.}
proc StringGrid_GetFloating*(AObj: pointer): bool {.importc: "StringGrid_GetFloating", dynlib: dllname.}
proc StringGrid_GetParent*(AObj: pointer): pointer {.importc: "StringGrid_GetParent", dynlib: dllname.}
proc StringGrid_SetParent*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetParent", dynlib: dllname.}
proc StringGrid_GetLeft*(AObj: pointer): int32 {.importc: "StringGrid_GetLeft", dynlib: dllname.}
proc StringGrid_SetLeft*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetLeft", dynlib: dllname.}
proc StringGrid_GetTop*(AObj: pointer): int32 {.importc: "StringGrid_GetTop", dynlib: dllname.}
proc StringGrid_SetTop*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetTop", dynlib: dllname.}
proc StringGrid_GetWidth*(AObj: pointer): int32 {.importc: "StringGrid_GetWidth", dynlib: dllname.}
proc StringGrid_SetWidth*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetWidth", dynlib: dllname.}
proc StringGrid_GetHeight*(AObj: pointer): int32 {.importc: "StringGrid_GetHeight", dynlib: dllname.}
proc StringGrid_SetHeight*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetHeight", dynlib: dllname.}
proc StringGrid_GetCursor*(AObj: pointer): TCursor {.importc: "StringGrid_GetCursor", dynlib: dllname.}
proc StringGrid_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "StringGrid_SetCursor", dynlib: dllname.}
proc StringGrid_GetHint*(AObj: pointer): cstring {.importc: "StringGrid_GetHint", dynlib: dllname.}
proc StringGrid_SetHint*(AObj: pointer, AValue: cstring) {.importc: "StringGrid_SetHint", dynlib: dllname.}
proc StringGrid_GetComponentCount*(AObj: pointer): int32 {.importc: "StringGrid_GetComponentCount", dynlib: dllname.}
proc StringGrid_GetComponentIndex*(AObj: pointer): int32 {.importc: "StringGrid_GetComponentIndex", dynlib: dllname.}
proc StringGrid_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "StringGrid_SetComponentIndex", dynlib: dllname.}
proc StringGrid_GetOwner*(AObj: pointer): pointer {.importc: "StringGrid_GetOwner", dynlib: dllname.}
proc StringGrid_GetName*(AObj: pointer): cstring {.importc: "StringGrid_GetName", dynlib: dllname.}
proc StringGrid_SetName*(AObj: pointer, AValue: cstring) {.importc: "StringGrid_SetName", dynlib: dllname.}
proc StringGrid_GetTag*(AObj: pointer): int {.importc: "StringGrid_GetTag", dynlib: dllname.}
proc StringGrid_SetTag*(AObj: pointer, AValue: int) {.importc: "StringGrid_SetTag", dynlib: dllname.}
proc StringGrid_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "StringGrid_GetAnchorSideLeft", dynlib: dllname.}
proc StringGrid_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetAnchorSideLeft", dynlib: dllname.}
proc StringGrid_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "StringGrid_GetAnchorSideTop", dynlib: dllname.}
proc StringGrid_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetAnchorSideTop", dynlib: dllname.}
proc StringGrid_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "StringGrid_GetAnchorSideRight", dynlib: dllname.}
proc StringGrid_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetAnchorSideRight", dynlib: dllname.}
proc StringGrid_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "StringGrid_GetAnchorSideBottom", dynlib: dllname.}
proc StringGrid_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetAnchorSideBottom", dynlib: dllname.}
proc StringGrid_GetChildSizing*(AObj: pointer): pointer {.importc: "StringGrid_GetChildSizing", dynlib: dllname.}
proc StringGrid_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetChildSizing", dynlib: dllname.}
proc StringGrid_GetBorderSpacing*(AObj: pointer): pointer {.importc: "StringGrid_GetBorderSpacing", dynlib: dllname.}
proc StringGrid_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "StringGrid_SetBorderSpacing", dynlib: dllname.}
proc StringGrid_GetIsCellSelected*(AObj: pointer, aCol: int32, aRow: int32): bool {.importc: "StringGrid_GetIsCellSelected", dynlib: dllname.}
proc StringGrid_GetCells*(AObj: pointer, ACol: int32, ARow: int32): cstring {.importc: "StringGrid_GetCells", dynlib: dllname.}
proc StringGrid_SetCells*(AObj: pointer, ACol: int32, ARow: int32, AValue: cstring) {.importc: "StringGrid_SetCells", dynlib: dllname.}
proc StringGrid_GetCols*(AObj: pointer, Index: int32): pointer {.importc: "StringGrid_GetCols", dynlib: dllname.}
proc StringGrid_SetCols*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "StringGrid_SetCols", dynlib: dllname.}
proc StringGrid_GetObjects*(AObj: pointer, ACol: int32, ARow: int32): pointer {.importc: "StringGrid_GetObjects", dynlib: dllname.}
proc StringGrid_SetObjects*(AObj: pointer, ACol: int32, ARow: int32, AValue: pointer) {.importc: "StringGrid_SetObjects", dynlib: dllname.}
proc StringGrid_GetRows*(AObj: pointer, Index: int32): pointer {.importc: "StringGrid_GetRows", dynlib: dllname.}
proc StringGrid_SetRows*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "StringGrid_SetRows", dynlib: dllname.}
proc StringGrid_GetColWidths*(AObj: pointer, Index: int32): int32 {.importc: "StringGrid_GetColWidths", dynlib: dllname.}
proc StringGrid_SetColWidths*(AObj: pointer, Index: int32, AValue: int32) {.importc: "StringGrid_SetColWidths", dynlib: dllname.}
proc StringGrid_GetRowHeights*(AObj: pointer, Index: int32): int32 {.importc: "StringGrid_GetRowHeights", dynlib: dllname.}
proc StringGrid_SetRowHeights*(AObj: pointer, Index: int32, AValue: int32) {.importc: "StringGrid_SetRowHeights", dynlib: dllname.}
proc StringGrid_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "StringGrid_GetDockClients", dynlib: dllname.}
proc StringGrid_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "StringGrid_GetControls", dynlib: dllname.}
proc StringGrid_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "StringGrid_GetComponents", dynlib: dllname.}
proc StringGrid_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "StringGrid_GetAnchorSide", dynlib: dllname.}
proc StringGrid_StaticClassType*(): TClass {.importc: "StringGrid_StaticClassType", dynlib: dllname.}
# ----------------- TDrawGrid ----------------------
proc DrawGrid_Create*(AOwner: pointer): pointer {.importc: "DrawGrid_Create", dynlib: dllname.}
proc DrawGrid_Free*(AObj: pointer) {.importc: "DrawGrid_Free", dynlib: dllname.}
proc DrawGrid_CellRect*(AObj: pointer, ACol: int32, ARow: int32, Result: var TRect) {.importc: "DrawGrid_CellRect", dynlib: dllname.}
proc DrawGrid_MouseToCell*(AObj: pointer, X: int32, Y: int32, ACol: var int32, ARow: var int32) {.importc: "DrawGrid_MouseToCell", dynlib: dllname.}
proc DrawGrid_MouseCoord*(AObj: pointer, X: int32, Y: int32, Result: var TGridCoord) {.importc: "DrawGrid_MouseCoord", dynlib: dllname.}
proc DrawGrid_CanFocus*(AObj: pointer): bool {.importc: "DrawGrid_CanFocus", dynlib: dllname.}
proc DrawGrid_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "DrawGrid_ContainsControl", dynlib: dllname.}
proc DrawGrid_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "DrawGrid_ControlAtPos", dynlib: dllname.}
proc DrawGrid_DisableAlign*(AObj: pointer) {.importc: "DrawGrid_DisableAlign", dynlib: dllname.}
proc DrawGrid_EnableAlign*(AObj: pointer) {.importc: "DrawGrid_EnableAlign", dynlib: dllname.}
proc DrawGrid_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "DrawGrid_FindChildControl", dynlib: dllname.}
proc DrawGrid_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "DrawGrid_FlipChildren", dynlib: dllname.}
proc DrawGrid_Focused*(AObj: pointer): bool {.importc: "DrawGrid_Focused", dynlib: dllname.}
proc DrawGrid_HandleAllocated*(AObj: pointer): bool {.importc: "DrawGrid_HandleAllocated", dynlib: dllname.}
proc DrawGrid_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "DrawGrid_InsertControl", dynlib: dllname.}
proc DrawGrid_Invalidate*(AObj: pointer) {.importc: "DrawGrid_Invalidate", dynlib: dllname.}
proc DrawGrid_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "DrawGrid_PaintTo", dynlib: dllname.}
proc DrawGrid_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "DrawGrid_RemoveControl", dynlib: dllname.}
proc DrawGrid_Realign*(AObj: pointer) {.importc: "DrawGrid_Realign", dynlib: dllname.}
proc DrawGrid_Repaint*(AObj: pointer) {.importc: "DrawGrid_Repaint", dynlib: dllname.}
proc DrawGrid_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "DrawGrid_ScaleBy", dynlib: dllname.}
proc DrawGrid_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "DrawGrid_ScrollBy", dynlib: dllname.}
proc DrawGrid_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "DrawGrid_SetBounds", dynlib: dllname.}
proc DrawGrid_SetFocus*(AObj: pointer) {.importc: "DrawGrid_SetFocus", dynlib: dllname.}
proc DrawGrid_Update*(AObj: pointer) {.importc: "DrawGrid_Update", dynlib: dllname.}
proc DrawGrid_BringToFront*(AObj: pointer) {.importc: "DrawGrid_BringToFront", dynlib: dllname.}
proc DrawGrid_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "DrawGrid_ClientToScreen", dynlib: dllname.}
proc DrawGrid_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "DrawGrid_ClientToParent", dynlib: dllname.}
proc DrawGrid_Dragging*(AObj: pointer): bool {.importc: "DrawGrid_Dragging", dynlib: dllname.}
proc DrawGrid_HasParent*(AObj: pointer): bool {.importc: "DrawGrid_HasParent", dynlib: dllname.}
proc DrawGrid_Hide*(AObj: pointer) {.importc: "DrawGrid_Hide", dynlib: dllname.}
proc DrawGrid_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "DrawGrid_Perform", dynlib: dllname.}
proc DrawGrid_Refresh*(AObj: pointer) {.importc: "DrawGrid_Refresh", dynlib: dllname.}
proc DrawGrid_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "DrawGrid_ScreenToClient", dynlib: dllname.}
proc DrawGrid_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "DrawGrid_ParentToClient", dynlib: dllname.}
proc DrawGrid_SendToBack*(AObj: pointer) {.importc: "DrawGrid_SendToBack", dynlib: dllname.}
proc DrawGrid_Show*(AObj: pointer) {.importc: "DrawGrid_Show", dynlib: dllname.}
proc DrawGrid_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "DrawGrid_GetTextBuf", dynlib: dllname.}
proc DrawGrid_GetTextLen*(AObj: pointer): int32 {.importc: "DrawGrid_GetTextLen", dynlib: dllname.}
proc DrawGrid_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "DrawGrid_SetTextBuf", dynlib: dllname.}
proc DrawGrid_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "DrawGrid_FindComponent", dynlib: dllname.}
proc DrawGrid_GetNamePath*(AObj: pointer): cstring {.importc: "DrawGrid_GetNamePath", dynlib: dllname.}
proc DrawGrid_Assign*(AObj: pointer, Source: pointer) {.importc: "DrawGrid_Assign", dynlib: dllname.}
proc DrawGrid_ClassType*(AObj: pointer): TClass {.importc: "DrawGrid_ClassType", dynlib: dllname.}
proc DrawGrid_ClassName*(AObj: pointer): cstring {.importc: "DrawGrid_ClassName", dynlib: dllname.}
proc DrawGrid_InstanceSize*(AObj: pointer): int32 {.importc: "DrawGrid_InstanceSize", dynlib: dllname.}
proc DrawGrid_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "DrawGrid_InheritsFrom", dynlib: dllname.}
proc DrawGrid_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "DrawGrid_Equals", dynlib: dllname.}
proc DrawGrid_GetHashCode*(AObj: pointer): int32 {.importc: "DrawGrid_GetHashCode", dynlib: dllname.}
proc DrawGrid_ToString*(AObj: pointer): cstring {.importc: "DrawGrid_ToString", dynlib: dllname.}
proc DrawGrid_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "DrawGrid_AnchorToNeighbour", dynlib: dllname.}
proc DrawGrid_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "DrawGrid_AnchorParallel", dynlib: dllname.}
proc DrawGrid_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "DrawGrid_AnchorHorizontalCenterTo", dynlib: dllname.}
proc DrawGrid_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "DrawGrid_AnchorVerticalCenterTo", dynlib: dllname.}
proc DrawGrid_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "DrawGrid_AnchorSame", dynlib: dllname.}
proc DrawGrid_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "DrawGrid_AnchorAsAlign", dynlib: dllname.}
proc DrawGrid_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "DrawGrid_AnchorClient", dynlib: dllname.}
proc DrawGrid_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_ScaleDesignToForm", dynlib: dllname.}
proc DrawGrid_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_ScaleFormToDesign", dynlib: dllname.}
proc DrawGrid_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_Scale96ToForm", dynlib: dllname.}
proc DrawGrid_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_ScaleFormTo96", dynlib: dllname.}
proc DrawGrid_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_Scale96ToFont", dynlib: dllname.}
proc DrawGrid_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_ScaleFontTo96", dynlib: dllname.}
proc DrawGrid_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_ScaleScreenToFont", dynlib: dllname.}
proc DrawGrid_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_ScaleFontToScreen", dynlib: dllname.}
proc DrawGrid_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_Scale96ToScreen", dynlib: dllname.}
proc DrawGrid_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "DrawGrid_ScaleScreenTo96", dynlib: dllname.}
proc DrawGrid_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "DrawGrid_AutoAdjustLayout", dynlib: dllname.}
proc DrawGrid_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "DrawGrid_FixDesignFontsPPI", dynlib: dllname.}
proc DrawGrid_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "DrawGrid_ScaleFontsPPI", dynlib: dllname.}
proc DrawGrid_SetOnColRowMoved*(AObj: pointer, AEventId: TGridOperationEvent) {.importc: "DrawGrid_SetOnColRowMoved", dynlib: dllname.}
proc DrawGrid_GetAlign*(AObj: pointer): TAlign {.importc: "DrawGrid_GetAlign", dynlib: dllname.}
proc DrawGrid_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "DrawGrid_SetAlign", dynlib: dllname.}
proc DrawGrid_GetAnchors*(AObj: pointer): TAnchors {.importc: "DrawGrid_GetAnchors", dynlib: dllname.}
proc DrawGrid_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "DrawGrid_SetAnchors", dynlib: dllname.}
proc DrawGrid_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "DrawGrid_GetBiDiMode", dynlib: dllname.}
proc DrawGrid_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "DrawGrid_SetBiDiMode", dynlib: dllname.}
proc DrawGrid_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "DrawGrid_GetBorderStyle", dynlib: dllname.}
proc DrawGrid_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "DrawGrid_SetBorderStyle", dynlib: dllname.}
proc DrawGrid_GetColor*(AObj: pointer): TColor {.importc: "DrawGrid_GetColor", dynlib: dllname.}
proc DrawGrid_SetColor*(AObj: pointer, AValue: TColor) {.importc: "DrawGrid_SetColor", dynlib: dllname.}
proc DrawGrid_GetColCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetColCount", dynlib: dllname.}
proc DrawGrid_SetColCount*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetColCount", dynlib: dllname.}
proc DrawGrid_GetConstraints*(AObj: pointer): pointer {.importc: "DrawGrid_GetConstraints", dynlib: dllname.}
proc DrawGrid_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetConstraints", dynlib: dllname.}
proc DrawGrid_GetDefaultColWidth*(AObj: pointer): int32 {.importc: "DrawGrid_GetDefaultColWidth", dynlib: dllname.}
proc DrawGrid_SetDefaultColWidth*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetDefaultColWidth", dynlib: dllname.}
proc DrawGrid_GetDefaultRowHeight*(AObj: pointer): int32 {.importc: "DrawGrid_GetDefaultRowHeight", dynlib: dllname.}
proc DrawGrid_SetDefaultRowHeight*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetDefaultRowHeight", dynlib: dllname.}
proc DrawGrid_GetDefaultDrawing*(AObj: pointer): bool {.importc: "DrawGrid_GetDefaultDrawing", dynlib: dllname.}
proc DrawGrid_SetDefaultDrawing*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetDefaultDrawing", dynlib: dllname.}
proc DrawGrid_GetDoubleBuffered*(AObj: pointer): bool {.importc: "DrawGrid_GetDoubleBuffered", dynlib: dllname.}
proc DrawGrid_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetDoubleBuffered", dynlib: dllname.}
proc DrawGrid_GetDragCursor*(AObj: pointer): TCursor {.importc: "DrawGrid_GetDragCursor", dynlib: dllname.}
proc DrawGrid_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "DrawGrid_SetDragCursor", dynlib: dllname.}
proc DrawGrid_GetDragKind*(AObj: pointer): TDragKind {.importc: "DrawGrid_GetDragKind", dynlib: dllname.}
proc DrawGrid_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "DrawGrid_SetDragKind", dynlib: dllname.}
proc DrawGrid_GetDragMode*(AObj: pointer): TDragMode {.importc: "DrawGrid_GetDragMode", dynlib: dllname.}
proc DrawGrid_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "DrawGrid_SetDragMode", dynlib: dllname.}
proc DrawGrid_GetEnabled*(AObj: pointer): bool {.importc: "DrawGrid_GetEnabled", dynlib: dllname.}
proc DrawGrid_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetEnabled", dynlib: dllname.}
proc DrawGrid_GetFixedColor*(AObj: pointer): TColor {.importc: "DrawGrid_GetFixedColor", dynlib: dllname.}
proc DrawGrid_SetFixedColor*(AObj: pointer, AValue: TColor) {.importc: "DrawGrid_SetFixedColor", dynlib: dllname.}
proc DrawGrid_GetFixedCols*(AObj: pointer): int32 {.importc: "DrawGrid_GetFixedCols", dynlib: dllname.}
proc DrawGrid_SetFixedCols*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetFixedCols", dynlib: dllname.}
proc DrawGrid_GetRowCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetRowCount", dynlib: dllname.}
proc DrawGrid_SetRowCount*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetRowCount", dynlib: dllname.}
proc DrawGrid_GetFixedRows*(AObj: pointer): int32 {.importc: "DrawGrid_GetFixedRows", dynlib: dllname.}
proc DrawGrid_SetFixedRows*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetFixedRows", dynlib: dllname.}
proc DrawGrid_GetFont*(AObj: pointer): pointer {.importc: "DrawGrid_GetFont", dynlib: dllname.}
proc DrawGrid_SetFont*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetFont", dynlib: dllname.}
proc DrawGrid_GetGridLineWidth*(AObj: pointer): int32 {.importc: "DrawGrid_GetGridLineWidth", dynlib: dllname.}
proc DrawGrid_SetGridLineWidth*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetGridLineWidth", dynlib: dllname.}
proc DrawGrid_GetOptions*(AObj: pointer): TGridOptions {.importc: "DrawGrid_GetOptions", dynlib: dllname.}
proc DrawGrid_SetOptions*(AObj: pointer, AValue: TGridOptions) {.importc: "DrawGrid_SetOptions", dynlib: dllname.}
proc DrawGrid_GetParentColor*(AObj: pointer): bool {.importc: "DrawGrid_GetParentColor", dynlib: dllname.}
proc DrawGrid_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetParentColor", dynlib: dllname.}
proc DrawGrid_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "DrawGrid_GetParentDoubleBuffered", dynlib: dllname.}
proc DrawGrid_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetParentDoubleBuffered", dynlib: dllname.}
proc DrawGrid_GetParentFont*(AObj: pointer): bool {.importc: "DrawGrid_GetParentFont", dynlib: dllname.}
proc DrawGrid_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetParentFont", dynlib: dllname.}
proc DrawGrid_GetParentShowHint*(AObj: pointer): bool {.importc: "DrawGrid_GetParentShowHint", dynlib: dllname.}
proc DrawGrid_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetParentShowHint", dynlib: dllname.}
proc DrawGrid_GetPopupMenu*(AObj: pointer): pointer {.importc: "DrawGrid_GetPopupMenu", dynlib: dllname.}
proc DrawGrid_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetPopupMenu", dynlib: dllname.}
proc DrawGrid_GetScrollBars*(AObj: pointer): TScrollStyle {.importc: "DrawGrid_GetScrollBars", dynlib: dllname.}
proc DrawGrid_SetScrollBars*(AObj: pointer, AValue: TScrollStyle) {.importc: "DrawGrid_SetScrollBars", dynlib: dllname.}
proc DrawGrid_GetShowHint*(AObj: pointer): bool {.importc: "DrawGrid_GetShowHint", dynlib: dllname.}
proc DrawGrid_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetShowHint", dynlib: dllname.}
proc DrawGrid_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "DrawGrid_GetTabOrder", dynlib: dllname.}
proc DrawGrid_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "DrawGrid_SetTabOrder", dynlib: dllname.}
proc DrawGrid_GetVisible*(AObj: pointer): bool {.importc: "DrawGrid_GetVisible", dynlib: dllname.}
proc DrawGrid_SetVisible*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetVisible", dynlib: dllname.}
proc DrawGrid_GetVisibleColCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetVisibleColCount", dynlib: dllname.}
proc DrawGrid_GetVisibleRowCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetVisibleRowCount", dynlib: dllname.}
proc DrawGrid_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DrawGrid_SetOnClick", dynlib: dllname.}
proc DrawGrid_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "DrawGrid_SetOnContextPopup", dynlib: dllname.}
proc DrawGrid_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DrawGrid_SetOnDblClick", dynlib: dllname.}
proc DrawGrid_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "DrawGrid_SetOnDragDrop", dynlib: dllname.}
proc DrawGrid_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "DrawGrid_SetOnDragOver", dynlib: dllname.}
proc DrawGrid_SetOnDrawCell*(AObj: pointer, AEventId: TDrawCellEvent) {.importc: "DrawGrid_SetOnDrawCell", dynlib: dllname.}
proc DrawGrid_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "DrawGrid_SetOnEndDock", dynlib: dllname.}
proc DrawGrid_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "DrawGrid_SetOnEndDrag", dynlib: dllname.}
proc DrawGrid_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DrawGrid_SetOnEnter", dynlib: dllname.}
proc DrawGrid_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DrawGrid_SetOnExit", dynlib: dllname.}
proc DrawGrid_SetOnGetEditMask*(AObj: pointer, AEventId: TGetEditEvent) {.importc: "DrawGrid_SetOnGetEditMask", dynlib: dllname.}
proc DrawGrid_SetOnGetEditText*(AObj: pointer, AEventId: TGetEditEvent) {.importc: "DrawGrid_SetOnGetEditText", dynlib: dllname.}
proc DrawGrid_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "DrawGrid_SetOnKeyDown", dynlib: dllname.}
proc DrawGrid_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "DrawGrid_SetOnKeyPress", dynlib: dllname.}
proc DrawGrid_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "DrawGrid_SetOnKeyUp", dynlib: dllname.}
proc DrawGrid_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "DrawGrid_SetOnMouseDown", dynlib: dllname.}
proc DrawGrid_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DrawGrid_SetOnMouseEnter", dynlib: dllname.}
proc DrawGrid_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DrawGrid_SetOnMouseLeave", dynlib: dllname.}
proc DrawGrid_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "DrawGrid_SetOnMouseMove", dynlib: dllname.}
proc DrawGrid_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "DrawGrid_SetOnMouseUp", dynlib: dllname.}
proc DrawGrid_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "DrawGrid_SetOnMouseWheelDown", dynlib: dllname.}
proc DrawGrid_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "DrawGrid_SetOnMouseWheelUp", dynlib: dllname.}
proc DrawGrid_SetOnSelectCell*(AObj: pointer, AEventId: TSelectCellEvent) {.importc: "DrawGrid_SetOnSelectCell", dynlib: dllname.}
proc DrawGrid_SetOnSetEditText*(AObj: pointer, AEventId: TSetEditEvent) {.importc: "DrawGrid_SetOnSetEditText", dynlib: dllname.}
proc DrawGrid_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "DrawGrid_SetOnStartDock", dynlib: dllname.}
proc DrawGrid_SetOnTopLeftChanged*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "DrawGrid_SetOnTopLeftChanged", dynlib: dllname.}
proc DrawGrid_GetCanvas*(AObj: pointer): pointer {.importc: "DrawGrid_GetCanvas", dynlib: dllname.}
proc DrawGrid_GetCol*(AObj: pointer): int32 {.importc: "DrawGrid_GetCol", dynlib: dllname.}
proc DrawGrid_SetCol*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetCol", dynlib: dllname.}
proc DrawGrid_GetEditorMode*(AObj: pointer): bool {.importc: "DrawGrid_GetEditorMode", dynlib: dllname.}
proc DrawGrid_SetEditorMode*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetEditorMode", dynlib: dllname.}
proc DrawGrid_GetGridHeight*(AObj: pointer): int32 {.importc: "DrawGrid_GetGridHeight", dynlib: dllname.}
proc DrawGrid_GetGridWidth*(AObj: pointer): int32 {.importc: "DrawGrid_GetGridWidth", dynlib: dllname.}
proc DrawGrid_GetLeftCol*(AObj: pointer): int32 {.importc: "DrawGrid_GetLeftCol", dynlib: dllname.}
proc DrawGrid_SetLeftCol*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetLeftCol", dynlib: dllname.}
proc DrawGrid_GetSelection*(AObj: pointer, Result: var TGridRect) {.importc: "DrawGrid_GetSelection", dynlib: dllname.}
proc DrawGrid_SetSelection*(AObj: pointer, AValue: var TGridRect) {.importc: "DrawGrid_SetSelection", dynlib: dllname.}
proc DrawGrid_GetRow*(AObj: pointer): int32 {.importc: "DrawGrid_GetRow", dynlib: dllname.}
proc DrawGrid_SetRow*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetRow", dynlib: dllname.}
proc DrawGrid_GetTopRow*(AObj: pointer): int32 {.importc: "DrawGrid_GetTopRow", dynlib: dllname.}
proc DrawGrid_SetTopRow*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetTopRow", dynlib: dllname.}
proc DrawGrid_GetTabStop*(AObj: pointer): bool {.importc: "DrawGrid_GetTabStop", dynlib: dllname.}
proc DrawGrid_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetTabStop", dynlib: dllname.}
proc DrawGrid_GetDockClientCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetDockClientCount", dynlib: dllname.}
proc DrawGrid_GetDockSite*(AObj: pointer): bool {.importc: "DrawGrid_GetDockSite", dynlib: dllname.}
proc DrawGrid_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetDockSite", dynlib: dllname.}
proc DrawGrid_GetMouseInClient*(AObj: pointer): bool {.importc: "DrawGrid_GetMouseInClient", dynlib: dllname.}
proc DrawGrid_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetVisibleDockClientCount", dynlib: dllname.}
proc DrawGrid_GetBrush*(AObj: pointer): pointer {.importc: "DrawGrid_GetBrush", dynlib: dllname.}
proc DrawGrid_GetControlCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetControlCount", dynlib: dllname.}
proc DrawGrid_GetHandle*(AObj: pointer): HWND {.importc: "DrawGrid_GetHandle", dynlib: dllname.}
proc DrawGrid_GetParentWindow*(AObj: pointer): HWND {.importc: "DrawGrid_GetParentWindow", dynlib: dllname.}
proc DrawGrid_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "DrawGrid_SetParentWindow", dynlib: dllname.}
proc DrawGrid_GetShowing*(AObj: pointer): bool {.importc: "DrawGrid_GetShowing", dynlib: dllname.}
proc DrawGrid_GetUseDockManager*(AObj: pointer): bool {.importc: "DrawGrid_GetUseDockManager", dynlib: dllname.}
proc DrawGrid_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "DrawGrid_SetUseDockManager", dynlib: dllname.}
proc DrawGrid_GetAction*(AObj: pointer): pointer {.importc: "DrawGrid_GetAction", dynlib: dllname.}
proc DrawGrid_SetAction*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetAction", dynlib: dllname.}
proc DrawGrid_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "DrawGrid_GetBoundsRect", dynlib: dllname.}
proc DrawGrid_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "DrawGrid_SetBoundsRect", dynlib: dllname.}
proc DrawGrid_GetClientHeight*(AObj: pointer): int32 {.importc: "DrawGrid_GetClientHeight", dynlib: dllname.}
proc DrawGrid_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetClientHeight", dynlib: dllname.}
proc DrawGrid_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "DrawGrid_GetClientOrigin", dynlib: dllname.}
proc DrawGrid_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "DrawGrid_GetClientRect", dynlib: dllname.}
proc DrawGrid_GetClientWidth*(AObj: pointer): int32 {.importc: "DrawGrid_GetClientWidth", dynlib: dllname.}
proc DrawGrid_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetClientWidth", dynlib: dllname.}
proc DrawGrid_GetControlState*(AObj: pointer): TControlState {.importc: "DrawGrid_GetControlState", dynlib: dllname.}
proc DrawGrid_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "DrawGrid_SetControlState", dynlib: dllname.}
proc DrawGrid_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "DrawGrid_GetControlStyle", dynlib: dllname.}
proc DrawGrid_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "DrawGrid_SetControlStyle", dynlib: dllname.}
proc DrawGrid_GetFloating*(AObj: pointer): bool {.importc: "DrawGrid_GetFloating", dynlib: dllname.}
proc DrawGrid_GetParent*(AObj: pointer): pointer {.importc: "DrawGrid_GetParent", dynlib: dllname.}
proc DrawGrid_SetParent*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetParent", dynlib: dllname.}
proc DrawGrid_GetLeft*(AObj: pointer): int32 {.importc: "DrawGrid_GetLeft", dynlib: dllname.}
proc DrawGrid_SetLeft*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetLeft", dynlib: dllname.}
proc DrawGrid_GetTop*(AObj: pointer): int32 {.importc: "DrawGrid_GetTop", dynlib: dllname.}
proc DrawGrid_SetTop*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetTop", dynlib: dllname.}
proc DrawGrid_GetWidth*(AObj: pointer): int32 {.importc: "DrawGrid_GetWidth", dynlib: dllname.}
proc DrawGrid_SetWidth*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetWidth", dynlib: dllname.}
proc DrawGrid_GetHeight*(AObj: pointer): int32 {.importc: "DrawGrid_GetHeight", dynlib: dllname.}
proc DrawGrid_SetHeight*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetHeight", dynlib: dllname.}
proc DrawGrid_GetCursor*(AObj: pointer): TCursor {.importc: "DrawGrid_GetCursor", dynlib: dllname.}
proc DrawGrid_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "DrawGrid_SetCursor", dynlib: dllname.}
proc DrawGrid_GetHint*(AObj: pointer): cstring {.importc: "DrawGrid_GetHint", dynlib: dllname.}
proc DrawGrid_SetHint*(AObj: pointer, AValue: cstring) {.importc: "DrawGrid_SetHint", dynlib: dllname.}
proc DrawGrid_GetComponentCount*(AObj: pointer): int32 {.importc: "DrawGrid_GetComponentCount", dynlib: dllname.}
proc DrawGrid_GetComponentIndex*(AObj: pointer): int32 {.importc: "DrawGrid_GetComponentIndex", dynlib: dllname.}
proc DrawGrid_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "DrawGrid_SetComponentIndex", dynlib: dllname.}
proc DrawGrid_GetOwner*(AObj: pointer): pointer {.importc: "DrawGrid_GetOwner", dynlib: dllname.}
proc DrawGrid_GetName*(AObj: pointer): cstring {.importc: "DrawGrid_GetName", dynlib: dllname.}
proc DrawGrid_SetName*(AObj: pointer, AValue: cstring) {.importc: "DrawGrid_SetName", dynlib: dllname.}
proc DrawGrid_GetTag*(AObj: pointer): int {.importc: "DrawGrid_GetTag", dynlib: dllname.}
proc DrawGrid_SetTag*(AObj: pointer, AValue: int) {.importc: "DrawGrid_SetTag", dynlib: dllname.}
proc DrawGrid_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "DrawGrid_GetAnchorSideLeft", dynlib: dllname.}
proc DrawGrid_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetAnchorSideLeft", dynlib: dllname.}
proc DrawGrid_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "DrawGrid_GetAnchorSideTop", dynlib: dllname.}
proc DrawGrid_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetAnchorSideTop", dynlib: dllname.}
proc DrawGrid_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "DrawGrid_GetAnchorSideRight", dynlib: dllname.}
proc DrawGrid_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetAnchorSideRight", dynlib: dllname.}
proc DrawGrid_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "DrawGrid_GetAnchorSideBottom", dynlib: dllname.}
proc DrawGrid_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetAnchorSideBottom", dynlib: dllname.}
proc DrawGrid_GetChildSizing*(AObj: pointer): pointer {.importc: "DrawGrid_GetChildSizing", dynlib: dllname.}
proc DrawGrid_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetChildSizing", dynlib: dllname.}
proc DrawGrid_GetBorderSpacing*(AObj: pointer): pointer {.importc: "DrawGrid_GetBorderSpacing", dynlib: dllname.}
proc DrawGrid_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "DrawGrid_SetBorderSpacing", dynlib: dllname.}
proc DrawGrid_GetColWidths*(AObj: pointer, Index: int32): int32 {.importc: "DrawGrid_GetColWidths", dynlib: dllname.}
proc DrawGrid_SetColWidths*(AObj: pointer, Index: int32, AValue: int32) {.importc: "DrawGrid_SetColWidths", dynlib: dllname.}
proc DrawGrid_GetRowHeights*(AObj: pointer, Index: int32): int32 {.importc: "DrawGrid_GetRowHeights", dynlib: dllname.}
proc DrawGrid_SetRowHeights*(AObj: pointer, Index: int32, AValue: int32) {.importc: "DrawGrid_SetRowHeights", dynlib: dllname.}
proc DrawGrid_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "DrawGrid_GetDockClients", dynlib: dllname.}
proc DrawGrid_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "DrawGrid_GetControls", dynlib: dllname.}
proc DrawGrid_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "DrawGrid_GetComponents", dynlib: dllname.}
proc DrawGrid_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "DrawGrid_GetAnchorSide", dynlib: dllname.}
proc DrawGrid_StaticClassType*(): TClass {.importc: "DrawGrid_StaticClassType", dynlib: dllname.}
# ----------------- TValueListEditor ----------------------
proc ValueListEditor_Create*(AOwner: pointer): pointer {.importc: "ValueListEditor_Create", dynlib: dllname.}
proc ValueListEditor_Free*(AObj: pointer) {.importc: "ValueListEditor_Free", dynlib: dllname.}
proc ValueListEditor_DeleteRow*(AObj: pointer, ARow: int32) {.importc: "ValueListEditor_DeleteRow", dynlib: dllname.}
proc ValueListEditor_Refresh*(AObj: pointer) {.importc: "ValueListEditor_Refresh", dynlib: dllname.}
proc ValueListEditor_CellRect*(AObj: pointer, ACol: int32, ARow: int32, Result: var TRect) {.importc: "ValueListEditor_CellRect", dynlib: dllname.}
proc ValueListEditor_MouseToCell*(AObj: pointer, X: int32, Y: int32, ACol: var int32, ARow: var int32) {.importc: "ValueListEditor_MouseToCell", dynlib: dllname.}
proc ValueListEditor_MouseCoord*(AObj: pointer, X: int32, Y: int32, Result: var TGridCoord) {.importc: "ValueListEditor_MouseCoord", dynlib: dllname.}
proc ValueListEditor_CanFocus*(AObj: pointer): bool {.importc: "ValueListEditor_CanFocus", dynlib: dllname.}
proc ValueListEditor_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ValueListEditor_ContainsControl", dynlib: dllname.}
proc ValueListEditor_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ValueListEditor_ControlAtPos", dynlib: dllname.}
proc ValueListEditor_DisableAlign*(AObj: pointer) {.importc: "ValueListEditor_DisableAlign", dynlib: dllname.}
proc ValueListEditor_EnableAlign*(AObj: pointer) {.importc: "ValueListEditor_EnableAlign", dynlib: dllname.}
proc ValueListEditor_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ValueListEditor_FindChildControl", dynlib: dllname.}
proc ValueListEditor_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ValueListEditor_FlipChildren", dynlib: dllname.}
proc ValueListEditor_Focused*(AObj: pointer): bool {.importc: "ValueListEditor_Focused", dynlib: dllname.}
proc ValueListEditor_HandleAllocated*(AObj: pointer): bool {.importc: "ValueListEditor_HandleAllocated", dynlib: dllname.}
proc ValueListEditor_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ValueListEditor_InsertControl", dynlib: dllname.}
proc ValueListEditor_Invalidate*(AObj: pointer) {.importc: "ValueListEditor_Invalidate", dynlib: dllname.}
proc ValueListEditor_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ValueListEditor_PaintTo", dynlib: dllname.}
proc ValueListEditor_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ValueListEditor_RemoveControl", dynlib: dllname.}
proc ValueListEditor_Realign*(AObj: pointer) {.importc: "ValueListEditor_Realign", dynlib: dllname.}
proc ValueListEditor_Repaint*(AObj: pointer) {.importc: "ValueListEditor_Repaint", dynlib: dllname.}
proc ValueListEditor_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ValueListEditor_ScaleBy", dynlib: dllname.}
proc ValueListEditor_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ValueListEditor_ScrollBy", dynlib: dllname.}
proc ValueListEditor_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ValueListEditor_SetBounds", dynlib: dllname.}
proc ValueListEditor_SetFocus*(AObj: pointer) {.importc: "ValueListEditor_SetFocus", dynlib: dllname.}
proc ValueListEditor_Update*(AObj: pointer) {.importc: "ValueListEditor_Update", dynlib: dllname.}
proc ValueListEditor_BringToFront*(AObj: pointer) {.importc: "ValueListEditor_BringToFront", dynlib: dllname.}
proc ValueListEditor_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ValueListEditor_ClientToScreen", dynlib: dllname.}
proc ValueListEditor_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ValueListEditor_ClientToParent", dynlib: dllname.}
proc ValueListEditor_Dragging*(AObj: pointer): bool {.importc: "ValueListEditor_Dragging", dynlib: dllname.}
proc ValueListEditor_HasParent*(AObj: pointer): bool {.importc: "ValueListEditor_HasParent", dynlib: dllname.}
proc ValueListEditor_Hide*(AObj: pointer) {.importc: "ValueListEditor_Hide", dynlib: dllname.}
proc ValueListEditor_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ValueListEditor_Perform", dynlib: dllname.}
proc ValueListEditor_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ValueListEditor_ScreenToClient", dynlib: dllname.}
proc ValueListEditor_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ValueListEditor_ParentToClient", dynlib: dllname.}
proc ValueListEditor_SendToBack*(AObj: pointer) {.importc: "ValueListEditor_SendToBack", dynlib: dllname.}
proc ValueListEditor_Show*(AObj: pointer) {.importc: "ValueListEditor_Show", dynlib: dllname.}
proc ValueListEditor_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ValueListEditor_GetTextBuf", dynlib: dllname.}
proc ValueListEditor_GetTextLen*(AObj: pointer): int32 {.importc: "ValueListEditor_GetTextLen", dynlib: dllname.}
proc ValueListEditor_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ValueListEditor_SetTextBuf", dynlib: dllname.}
proc ValueListEditor_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ValueListEditor_FindComponent", dynlib: dllname.}
proc ValueListEditor_GetNamePath*(AObj: pointer): cstring {.importc: "ValueListEditor_GetNamePath", dynlib: dllname.}
proc ValueListEditor_Assign*(AObj: pointer, Source: pointer) {.importc: "ValueListEditor_Assign", dynlib: dllname.}
proc ValueListEditor_ClassType*(AObj: pointer): TClass {.importc: "ValueListEditor_ClassType", dynlib: dllname.}
proc ValueListEditor_ClassName*(AObj: pointer): cstring {.importc: "ValueListEditor_ClassName", dynlib: dllname.}
proc ValueListEditor_InstanceSize*(AObj: pointer): int32 {.importc: "ValueListEditor_InstanceSize", dynlib: dllname.}
proc ValueListEditor_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ValueListEditor_InheritsFrom", dynlib: dllname.}
proc ValueListEditor_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ValueListEditor_Equals", dynlib: dllname.}
proc ValueListEditor_GetHashCode*(AObj: pointer): int32 {.importc: "ValueListEditor_GetHashCode", dynlib: dllname.}
proc ValueListEditor_ToString*(AObj: pointer): cstring {.importc: "ValueListEditor_ToString", dynlib: dllname.}
proc ValueListEditor_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ValueListEditor_AnchorToNeighbour", dynlib: dllname.}
proc ValueListEditor_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ValueListEditor_AnchorParallel", dynlib: dllname.}
proc ValueListEditor_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ValueListEditor_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ValueListEditor_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ValueListEditor_AnchorVerticalCenterTo", dynlib: dllname.}
proc ValueListEditor_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ValueListEditor_AnchorSame", dynlib: dllname.}
proc ValueListEditor_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ValueListEditor_AnchorAsAlign", dynlib: dllname.}
proc ValueListEditor_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ValueListEditor_AnchorClient", dynlib: dllname.}
proc ValueListEditor_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_ScaleDesignToForm", dynlib: dllname.}
proc ValueListEditor_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_ScaleFormToDesign", dynlib: dllname.}
proc ValueListEditor_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_Scale96ToForm", dynlib: dllname.}
proc ValueListEditor_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_ScaleFormTo96", dynlib: dllname.}
proc ValueListEditor_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_Scale96ToFont", dynlib: dllname.}
proc ValueListEditor_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_ScaleFontTo96", dynlib: dllname.}
proc ValueListEditor_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_ScaleScreenToFont", dynlib: dllname.}
proc ValueListEditor_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_ScaleFontToScreen", dynlib: dllname.}
proc ValueListEditor_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_Scale96ToScreen", dynlib: dllname.}
proc ValueListEditor_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ValueListEditor_ScaleScreenTo96", dynlib: dllname.}
proc ValueListEditor_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ValueListEditor_AutoAdjustLayout", dynlib: dllname.}
proc ValueListEditor_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ValueListEditor_FixDesignFontsPPI", dynlib: dllname.}
proc ValueListEditor_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ValueListEditor_ScaleFontsPPI", dynlib: dllname.}
proc ValueListEditor_GetColCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetColCount", dynlib: dllname.}
proc ValueListEditor_SetColCount*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetColCount", dynlib: dllname.}
proc ValueListEditor_GetRowCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetRowCount", dynlib: dllname.}
proc ValueListEditor_GetVisibleColCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetVisibleColCount", dynlib: dllname.}
proc ValueListEditor_GetVisibleRowCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetVisibleRowCount", dynlib: dllname.}
proc ValueListEditor_GetAlign*(AObj: pointer): TAlign {.importc: "ValueListEditor_GetAlign", dynlib: dllname.}
proc ValueListEditor_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ValueListEditor_SetAlign", dynlib: dllname.}
proc ValueListEditor_GetAnchors*(AObj: pointer): TAnchors {.importc: "ValueListEditor_GetAnchors", dynlib: dllname.}
proc ValueListEditor_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ValueListEditor_SetAnchors", dynlib: dllname.}
proc ValueListEditor_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ValueListEditor_GetBiDiMode", dynlib: dllname.}
proc ValueListEditor_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ValueListEditor_SetBiDiMode", dynlib: dllname.}
proc ValueListEditor_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "ValueListEditor_GetBorderStyle", dynlib: dllname.}
proc ValueListEditor_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "ValueListEditor_SetBorderStyle", dynlib: dllname.}
proc ValueListEditor_GetColor*(AObj: pointer): TColor {.importc: "ValueListEditor_GetColor", dynlib: dllname.}
proc ValueListEditor_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ValueListEditor_SetColor", dynlib: dllname.}
proc ValueListEditor_GetConstraints*(AObj: pointer): pointer {.importc: "ValueListEditor_GetConstraints", dynlib: dllname.}
proc ValueListEditor_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetConstraints", dynlib: dllname.}
proc ValueListEditor_GetDefaultColWidth*(AObj: pointer): int32 {.importc: "ValueListEditor_GetDefaultColWidth", dynlib: dllname.}
proc ValueListEditor_SetDefaultColWidth*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetDefaultColWidth", dynlib: dllname.}
proc ValueListEditor_GetDefaultDrawing*(AObj: pointer): bool {.importc: "ValueListEditor_GetDefaultDrawing", dynlib: dllname.}
proc ValueListEditor_SetDefaultDrawing*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetDefaultDrawing", dynlib: dllname.}
proc ValueListEditor_GetDefaultRowHeight*(AObj: pointer): int32 {.importc: "ValueListEditor_GetDefaultRowHeight", dynlib: dllname.}
proc ValueListEditor_SetDefaultRowHeight*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetDefaultRowHeight", dynlib: dllname.}
proc ValueListEditor_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ValueListEditor_GetDoubleBuffered", dynlib: dllname.}
proc ValueListEditor_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetDoubleBuffered", dynlib: dllname.}
proc ValueListEditor_GetDragCursor*(AObj: pointer): TCursor {.importc: "ValueListEditor_GetDragCursor", dynlib: dllname.}
proc ValueListEditor_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ValueListEditor_SetDragCursor", dynlib: dllname.}
proc ValueListEditor_GetDragKind*(AObj: pointer): TDragKind {.importc: "ValueListEditor_GetDragKind", dynlib: dllname.}
proc ValueListEditor_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ValueListEditor_SetDragKind", dynlib: dllname.}
proc ValueListEditor_GetDragMode*(AObj: pointer): TDragMode {.importc: "ValueListEditor_GetDragMode", dynlib: dllname.}
proc ValueListEditor_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ValueListEditor_SetDragMode", dynlib: dllname.}
proc ValueListEditor_GetDropDownRows*(AObj: pointer): int32 {.importc: "ValueListEditor_GetDropDownRows", dynlib: dllname.}
proc ValueListEditor_SetDropDownRows*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetDropDownRows", dynlib: dllname.}
proc ValueListEditor_GetEnabled*(AObj: pointer): bool {.importc: "ValueListEditor_GetEnabled", dynlib: dllname.}
proc ValueListEditor_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetEnabled", dynlib: dllname.}
proc ValueListEditor_GetFixedColor*(AObj: pointer): TColor {.importc: "ValueListEditor_GetFixedColor", dynlib: dllname.}
proc ValueListEditor_SetFixedColor*(AObj: pointer, AValue: TColor) {.importc: "ValueListEditor_SetFixedColor", dynlib: dllname.}
proc ValueListEditor_GetFixedCols*(AObj: pointer): int32 {.importc: "ValueListEditor_GetFixedCols", dynlib: dllname.}
proc ValueListEditor_SetFixedCols*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetFixedCols", dynlib: dllname.}
proc ValueListEditor_GetFont*(AObj: pointer): pointer {.importc: "ValueListEditor_GetFont", dynlib: dllname.}
proc ValueListEditor_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetFont", dynlib: dllname.}
proc ValueListEditor_GetGridLineWidth*(AObj: pointer): int32 {.importc: "ValueListEditor_GetGridLineWidth", dynlib: dllname.}
proc ValueListEditor_SetGridLineWidth*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetGridLineWidth", dynlib: dllname.}
proc ValueListEditor_GetOptions*(AObj: pointer): TGridOptions {.importc: "ValueListEditor_GetOptions", dynlib: dllname.}
proc ValueListEditor_SetOptions*(AObj: pointer, AValue: TGridOptions) {.importc: "ValueListEditor_SetOptions", dynlib: dllname.}
proc ValueListEditor_GetParentColor*(AObj: pointer): bool {.importc: "ValueListEditor_GetParentColor", dynlib: dllname.}
proc ValueListEditor_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetParentColor", dynlib: dllname.}
proc ValueListEditor_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ValueListEditor_GetParentDoubleBuffered", dynlib: dllname.}
proc ValueListEditor_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetParentDoubleBuffered", dynlib: dllname.}
proc ValueListEditor_GetParentFont*(AObj: pointer): bool {.importc: "ValueListEditor_GetParentFont", dynlib: dllname.}
proc ValueListEditor_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetParentFont", dynlib: dllname.}
proc ValueListEditor_GetParentShowHint*(AObj: pointer): bool {.importc: "ValueListEditor_GetParentShowHint", dynlib: dllname.}
proc ValueListEditor_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetParentShowHint", dynlib: dllname.}
proc ValueListEditor_GetPopupMenu*(AObj: pointer): pointer {.importc: "ValueListEditor_GetPopupMenu", dynlib: dllname.}
proc ValueListEditor_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetPopupMenu", dynlib: dllname.}
proc ValueListEditor_GetScrollBars*(AObj: pointer): TScrollStyle {.importc: "ValueListEditor_GetScrollBars", dynlib: dllname.}
proc ValueListEditor_SetScrollBars*(AObj: pointer, AValue: TScrollStyle) {.importc: "ValueListEditor_SetScrollBars", dynlib: dllname.}
proc ValueListEditor_GetShowHint*(AObj: pointer): bool {.importc: "ValueListEditor_GetShowHint", dynlib: dllname.}
proc ValueListEditor_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetShowHint", dynlib: dllname.}
proc ValueListEditor_GetStrings*(AObj: pointer): pointer {.importc: "ValueListEditor_GetStrings", dynlib: dllname.}
proc ValueListEditor_SetStrings*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetStrings", dynlib: dllname.}
proc ValueListEditor_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ValueListEditor_GetTabOrder", dynlib: dllname.}
proc ValueListEditor_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ValueListEditor_SetTabOrder", dynlib: dllname.}
proc ValueListEditor_GetVisible*(AObj: pointer): bool {.importc: "ValueListEditor_GetVisible", dynlib: dllname.}
proc ValueListEditor_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetVisible", dynlib: dllname.}
proc ValueListEditor_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ValueListEditor_SetOnClick", dynlib: dllname.}
proc ValueListEditor_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ValueListEditor_SetOnContextPopup", dynlib: dllname.}
proc ValueListEditor_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ValueListEditor_SetOnDblClick", dynlib: dllname.}
proc ValueListEditor_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ValueListEditor_SetOnDragDrop", dynlib: dllname.}
proc ValueListEditor_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ValueListEditor_SetOnDragOver", dynlib: dllname.}
proc ValueListEditor_SetOnDrawCell*(AObj: pointer, AEventId: TDrawCellEvent) {.importc: "ValueListEditor_SetOnDrawCell", dynlib: dllname.}
proc ValueListEditor_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ValueListEditor_SetOnEndDock", dynlib: dllname.}
proc ValueListEditor_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ValueListEditor_SetOnEndDrag", dynlib: dllname.}
proc ValueListEditor_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ValueListEditor_SetOnEnter", dynlib: dllname.}
proc ValueListEditor_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ValueListEditor_SetOnExit", dynlib: dllname.}
proc ValueListEditor_SetOnGetEditMask*(AObj: pointer, AEventId: TGetEditEvent) {.importc: "ValueListEditor_SetOnGetEditMask", dynlib: dllname.}
proc ValueListEditor_SetOnGetEditText*(AObj: pointer, AEventId: TGetEditEvent) {.importc: "ValueListEditor_SetOnGetEditText", dynlib: dllname.}
proc ValueListEditor_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ValueListEditor_SetOnKeyDown", dynlib: dllname.}
proc ValueListEditor_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ValueListEditor_SetOnKeyPress", dynlib: dllname.}
proc ValueListEditor_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ValueListEditor_SetOnKeyUp", dynlib: dllname.}
proc ValueListEditor_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ValueListEditor_SetOnMouseDown", dynlib: dllname.}
proc ValueListEditor_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ValueListEditor_SetOnMouseEnter", dynlib: dllname.}
proc ValueListEditor_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ValueListEditor_SetOnMouseLeave", dynlib: dllname.}
proc ValueListEditor_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ValueListEditor_SetOnMouseMove", dynlib: dllname.}
proc ValueListEditor_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ValueListEditor_SetOnMouseUp", dynlib: dllname.}
proc ValueListEditor_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "ValueListEditor_SetOnMouseWheelDown", dynlib: dllname.}
proc ValueListEditor_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "ValueListEditor_SetOnMouseWheelUp", dynlib: dllname.}
proc ValueListEditor_SetOnSelectCell*(AObj: pointer, AEventId: TSelectCellEvent) {.importc: "ValueListEditor_SetOnSelectCell", dynlib: dllname.}
proc ValueListEditor_SetOnSetEditText*(AObj: pointer, AEventId: TSetEditEvent) {.importc: "ValueListEditor_SetOnSetEditText", dynlib: dllname.}
proc ValueListEditor_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "ValueListEditor_SetOnStartDock", dynlib: dllname.}
proc ValueListEditor_SetOnTopLeftChanged*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ValueListEditor_SetOnTopLeftChanged", dynlib: dllname.}
proc ValueListEditor_GetCanvas*(AObj: pointer): pointer {.importc: "ValueListEditor_GetCanvas", dynlib: dllname.}
proc ValueListEditor_GetCol*(AObj: pointer): int32 {.importc: "ValueListEditor_GetCol", dynlib: dllname.}
proc ValueListEditor_SetCol*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetCol", dynlib: dllname.}
proc ValueListEditor_GetEditorMode*(AObj: pointer): bool {.importc: "ValueListEditor_GetEditorMode", dynlib: dllname.}
proc ValueListEditor_SetEditorMode*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetEditorMode", dynlib: dllname.}
proc ValueListEditor_GetGridHeight*(AObj: pointer): int32 {.importc: "ValueListEditor_GetGridHeight", dynlib: dllname.}
proc ValueListEditor_GetGridWidth*(AObj: pointer): int32 {.importc: "ValueListEditor_GetGridWidth", dynlib: dllname.}
proc ValueListEditor_GetLeftCol*(AObj: pointer): int32 {.importc: "ValueListEditor_GetLeftCol", dynlib: dllname.}
proc ValueListEditor_SetLeftCol*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetLeftCol", dynlib: dllname.}
proc ValueListEditor_GetSelection*(AObj: pointer, Result: var TGridRect) {.importc: "ValueListEditor_GetSelection", dynlib: dllname.}
proc ValueListEditor_SetSelection*(AObj: pointer, AValue: var TGridRect) {.importc: "ValueListEditor_SetSelection", dynlib: dllname.}
proc ValueListEditor_GetRow*(AObj: pointer): int32 {.importc: "ValueListEditor_GetRow", dynlib: dllname.}
proc ValueListEditor_SetRow*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetRow", dynlib: dllname.}
proc ValueListEditor_GetTopRow*(AObj: pointer): int32 {.importc: "ValueListEditor_GetTopRow", dynlib: dllname.}
proc ValueListEditor_SetTopRow*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetTopRow", dynlib: dllname.}
proc ValueListEditor_GetTabStop*(AObj: pointer): bool {.importc: "ValueListEditor_GetTabStop", dynlib: dllname.}
proc ValueListEditor_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetTabStop", dynlib: dllname.}
proc ValueListEditor_GetDockClientCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetDockClientCount", dynlib: dllname.}
proc ValueListEditor_GetDockSite*(AObj: pointer): bool {.importc: "ValueListEditor_GetDockSite", dynlib: dllname.}
proc ValueListEditor_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetDockSite", dynlib: dllname.}
proc ValueListEditor_GetMouseInClient*(AObj: pointer): bool {.importc: "ValueListEditor_GetMouseInClient", dynlib: dllname.}
proc ValueListEditor_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetVisibleDockClientCount", dynlib: dllname.}
proc ValueListEditor_GetBrush*(AObj: pointer): pointer {.importc: "ValueListEditor_GetBrush", dynlib: dllname.}
proc ValueListEditor_GetControlCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetControlCount", dynlib: dllname.}
proc ValueListEditor_GetHandle*(AObj: pointer): HWND {.importc: "ValueListEditor_GetHandle", dynlib: dllname.}
proc ValueListEditor_GetParentWindow*(AObj: pointer): HWND {.importc: "ValueListEditor_GetParentWindow", dynlib: dllname.}
proc ValueListEditor_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ValueListEditor_SetParentWindow", dynlib: dllname.}
proc ValueListEditor_GetShowing*(AObj: pointer): bool {.importc: "ValueListEditor_GetShowing", dynlib: dllname.}
proc ValueListEditor_GetUseDockManager*(AObj: pointer): bool {.importc: "ValueListEditor_GetUseDockManager", dynlib: dllname.}
proc ValueListEditor_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ValueListEditor_SetUseDockManager", dynlib: dllname.}
proc ValueListEditor_GetAction*(AObj: pointer): pointer {.importc: "ValueListEditor_GetAction", dynlib: dllname.}
proc ValueListEditor_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetAction", dynlib: dllname.}
proc ValueListEditor_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ValueListEditor_GetBoundsRect", dynlib: dllname.}
proc ValueListEditor_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ValueListEditor_SetBoundsRect", dynlib: dllname.}
proc ValueListEditor_GetClientHeight*(AObj: pointer): int32 {.importc: "ValueListEditor_GetClientHeight", dynlib: dllname.}
proc ValueListEditor_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetClientHeight", dynlib: dllname.}
proc ValueListEditor_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ValueListEditor_GetClientOrigin", dynlib: dllname.}
proc ValueListEditor_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ValueListEditor_GetClientRect", dynlib: dllname.}
proc ValueListEditor_GetClientWidth*(AObj: pointer): int32 {.importc: "ValueListEditor_GetClientWidth", dynlib: dllname.}
proc ValueListEditor_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetClientWidth", dynlib: dllname.}
proc ValueListEditor_GetControlState*(AObj: pointer): TControlState {.importc: "ValueListEditor_GetControlState", dynlib: dllname.}
proc ValueListEditor_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ValueListEditor_SetControlState", dynlib: dllname.}
proc ValueListEditor_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ValueListEditor_GetControlStyle", dynlib: dllname.}
proc ValueListEditor_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ValueListEditor_SetControlStyle", dynlib: dllname.}
proc ValueListEditor_GetFloating*(AObj: pointer): bool {.importc: "ValueListEditor_GetFloating", dynlib: dllname.}
proc ValueListEditor_GetParent*(AObj: pointer): pointer {.importc: "ValueListEditor_GetParent", dynlib: dllname.}
proc ValueListEditor_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetParent", dynlib: dllname.}
proc ValueListEditor_GetLeft*(AObj: pointer): int32 {.importc: "ValueListEditor_GetLeft", dynlib: dllname.}
proc ValueListEditor_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetLeft", dynlib: dllname.}
proc ValueListEditor_GetTop*(AObj: pointer): int32 {.importc: "ValueListEditor_GetTop", dynlib: dllname.}
proc ValueListEditor_SetTop*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetTop", dynlib: dllname.}
proc ValueListEditor_GetWidth*(AObj: pointer): int32 {.importc: "ValueListEditor_GetWidth", dynlib: dllname.}
proc ValueListEditor_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetWidth", dynlib: dllname.}
proc ValueListEditor_GetHeight*(AObj: pointer): int32 {.importc: "ValueListEditor_GetHeight", dynlib: dllname.}
proc ValueListEditor_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetHeight", dynlib: dllname.}
proc ValueListEditor_GetCursor*(AObj: pointer): TCursor {.importc: "ValueListEditor_GetCursor", dynlib: dllname.}
proc ValueListEditor_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ValueListEditor_SetCursor", dynlib: dllname.}
proc ValueListEditor_GetHint*(AObj: pointer): cstring {.importc: "ValueListEditor_GetHint", dynlib: dllname.}
proc ValueListEditor_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ValueListEditor_SetHint", dynlib: dllname.}
proc ValueListEditor_GetComponentCount*(AObj: pointer): int32 {.importc: "ValueListEditor_GetComponentCount", dynlib: dllname.}
proc ValueListEditor_GetComponentIndex*(AObj: pointer): int32 {.importc: "ValueListEditor_GetComponentIndex", dynlib: dllname.}
proc ValueListEditor_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ValueListEditor_SetComponentIndex", dynlib: dllname.}
proc ValueListEditor_GetOwner*(AObj: pointer): pointer {.importc: "ValueListEditor_GetOwner", dynlib: dllname.}
proc ValueListEditor_GetName*(AObj: pointer): cstring {.importc: "ValueListEditor_GetName", dynlib: dllname.}
proc ValueListEditor_SetName*(AObj: pointer, AValue: cstring) {.importc: "ValueListEditor_SetName", dynlib: dllname.}
proc ValueListEditor_GetTag*(AObj: pointer): int {.importc: "ValueListEditor_GetTag", dynlib: dllname.}
proc ValueListEditor_SetTag*(AObj: pointer, AValue: int) {.importc: "ValueListEditor_SetTag", dynlib: dllname.}
proc ValueListEditor_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ValueListEditor_GetAnchorSideLeft", dynlib: dllname.}
proc ValueListEditor_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetAnchorSideLeft", dynlib: dllname.}
proc ValueListEditor_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ValueListEditor_GetAnchorSideTop", dynlib: dllname.}
proc ValueListEditor_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetAnchorSideTop", dynlib: dllname.}
proc ValueListEditor_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ValueListEditor_GetAnchorSideRight", dynlib: dllname.}
proc ValueListEditor_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetAnchorSideRight", dynlib: dllname.}
proc ValueListEditor_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ValueListEditor_GetAnchorSideBottom", dynlib: dllname.}
proc ValueListEditor_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetAnchorSideBottom", dynlib: dllname.}
proc ValueListEditor_GetChildSizing*(AObj: pointer): pointer {.importc: "ValueListEditor_GetChildSizing", dynlib: dllname.}
proc ValueListEditor_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetChildSizing", dynlib: dllname.}
proc ValueListEditor_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ValueListEditor_GetBorderSpacing", dynlib: dllname.}
proc ValueListEditor_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ValueListEditor_SetBorderSpacing", dynlib: dllname.}
proc ValueListEditor_GetCells*(AObj: pointer, ACol: int32, ARow: int32): cstring {.importc: "ValueListEditor_GetCells", dynlib: dllname.}
proc ValueListEditor_SetCells*(AObj: pointer, ACol: int32, ARow: int32, AValue: cstring) {.importc: "ValueListEditor_SetCells", dynlib: dllname.}
proc ValueListEditor_GetValues*(AObj: pointer, Key: cstring): cstring {.importc: "ValueListEditor_GetValues", dynlib: dllname.}
proc ValueListEditor_SetValues*(AObj: pointer, Key: cstring, AValue: cstring) {.importc: "ValueListEditor_SetValues", dynlib: dllname.}
proc ValueListEditor_GetColWidths*(AObj: pointer, Index: int32): int32 {.importc: "ValueListEditor_GetColWidths", dynlib: dllname.}
proc ValueListEditor_SetColWidths*(AObj: pointer, Index: int32, AValue: int32) {.importc: "ValueListEditor_SetColWidths", dynlib: dllname.}
proc ValueListEditor_GetRowHeights*(AObj: pointer, Index: int32): int32 {.importc: "ValueListEditor_GetRowHeights", dynlib: dllname.}
proc ValueListEditor_SetRowHeights*(AObj: pointer, Index: int32, AValue: int32) {.importc: "ValueListEditor_SetRowHeights", dynlib: dllname.}
proc ValueListEditor_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ValueListEditor_GetDockClients", dynlib: dllname.}
proc ValueListEditor_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ValueListEditor_GetControls", dynlib: dllname.}
proc ValueListEditor_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ValueListEditor_GetComponents", dynlib: dllname.}
proc ValueListEditor_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ValueListEditor_GetAnchorSide", dynlib: dllname.}
proc ValueListEditor_StaticClassType*(): TClass {.importc: "ValueListEditor_StaticClassType", dynlib: dllname.}
# ----------------- THeaderControl ----------------------
proc HeaderControl_Create*(AOwner: pointer): pointer {.importc: "HeaderControl_Create", dynlib: dllname.}
proc HeaderControl_Free*(AObj: pointer) {.importc: "HeaderControl_Free", dynlib: dllname.}
proc HeaderControl_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "HeaderControl_FlipChildren", dynlib: dllname.}
proc HeaderControl_CanFocus*(AObj: pointer): bool {.importc: "HeaderControl_CanFocus", dynlib: dllname.}
proc HeaderControl_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "HeaderControl_ContainsControl", dynlib: dllname.}
proc HeaderControl_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "HeaderControl_ControlAtPos", dynlib: dllname.}
proc HeaderControl_DisableAlign*(AObj: pointer) {.importc: "HeaderControl_DisableAlign", dynlib: dllname.}
proc HeaderControl_EnableAlign*(AObj: pointer) {.importc: "HeaderControl_EnableAlign", dynlib: dllname.}
proc HeaderControl_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "HeaderControl_FindChildControl", dynlib: dllname.}
proc HeaderControl_Focused*(AObj: pointer): bool {.importc: "HeaderControl_Focused", dynlib: dllname.}
proc HeaderControl_HandleAllocated*(AObj: pointer): bool {.importc: "HeaderControl_HandleAllocated", dynlib: dllname.}
proc HeaderControl_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "HeaderControl_InsertControl", dynlib: dllname.}
proc HeaderControl_Invalidate*(AObj: pointer) {.importc: "HeaderControl_Invalidate", dynlib: dllname.}
proc HeaderControl_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "HeaderControl_PaintTo", dynlib: dllname.}
proc HeaderControl_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "HeaderControl_RemoveControl", dynlib: dllname.}
proc HeaderControl_Realign*(AObj: pointer) {.importc: "HeaderControl_Realign", dynlib: dllname.}
proc HeaderControl_Repaint*(AObj: pointer) {.importc: "HeaderControl_Repaint", dynlib: dllname.}
proc HeaderControl_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "HeaderControl_ScaleBy", dynlib: dllname.}
proc HeaderControl_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "HeaderControl_ScrollBy", dynlib: dllname.}
proc HeaderControl_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "HeaderControl_SetBounds", dynlib: dllname.}
proc HeaderControl_SetFocus*(AObj: pointer) {.importc: "HeaderControl_SetFocus", dynlib: dllname.}
proc HeaderControl_Update*(AObj: pointer) {.importc: "HeaderControl_Update", dynlib: dllname.}
proc HeaderControl_BringToFront*(AObj: pointer) {.importc: "HeaderControl_BringToFront", dynlib: dllname.}
proc HeaderControl_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "HeaderControl_ClientToScreen", dynlib: dllname.}
proc HeaderControl_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "HeaderControl_ClientToParent", dynlib: dllname.}
proc HeaderControl_Dragging*(AObj: pointer): bool {.importc: "HeaderControl_Dragging", dynlib: dllname.}
proc HeaderControl_HasParent*(AObj: pointer): bool {.importc: "HeaderControl_HasParent", dynlib: dllname.}
proc HeaderControl_Hide*(AObj: pointer) {.importc: "HeaderControl_Hide", dynlib: dllname.}
proc HeaderControl_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "HeaderControl_Perform", dynlib: dllname.}
proc HeaderControl_Refresh*(AObj: pointer) {.importc: "HeaderControl_Refresh", dynlib: dllname.}
proc HeaderControl_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "HeaderControl_ScreenToClient", dynlib: dllname.}
proc HeaderControl_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "HeaderControl_ParentToClient", dynlib: dllname.}
proc HeaderControl_SendToBack*(AObj: pointer) {.importc: "HeaderControl_SendToBack", dynlib: dllname.}
proc HeaderControl_Show*(AObj: pointer) {.importc: "HeaderControl_Show", dynlib: dllname.}
proc HeaderControl_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "HeaderControl_GetTextBuf", dynlib: dllname.}
proc HeaderControl_GetTextLen*(AObj: pointer): int32 {.importc: "HeaderControl_GetTextLen", dynlib: dllname.}
proc HeaderControl_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "HeaderControl_SetTextBuf", dynlib: dllname.}
proc HeaderControl_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "HeaderControl_FindComponent", dynlib: dllname.}
proc HeaderControl_GetNamePath*(AObj: pointer): cstring {.importc: "HeaderControl_GetNamePath", dynlib: dllname.}
proc HeaderControl_Assign*(AObj: pointer, Source: pointer) {.importc: "HeaderControl_Assign", dynlib: dllname.}
proc HeaderControl_ClassType*(AObj: pointer): TClass {.importc: "HeaderControl_ClassType", dynlib: dllname.}
proc HeaderControl_ClassName*(AObj: pointer): cstring {.importc: "HeaderControl_ClassName", dynlib: dllname.}
proc HeaderControl_InstanceSize*(AObj: pointer): int32 {.importc: "HeaderControl_InstanceSize", dynlib: dllname.}
proc HeaderControl_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "HeaderControl_InheritsFrom", dynlib: dllname.}
proc HeaderControl_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "HeaderControl_Equals", dynlib: dllname.}
proc HeaderControl_GetHashCode*(AObj: pointer): int32 {.importc: "HeaderControl_GetHashCode", dynlib: dllname.}
proc HeaderControl_ToString*(AObj: pointer): cstring {.importc: "HeaderControl_ToString", dynlib: dllname.}
proc HeaderControl_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "HeaderControl_AnchorToNeighbour", dynlib: dllname.}
proc HeaderControl_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "HeaderControl_AnchorParallel", dynlib: dllname.}
proc HeaderControl_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "HeaderControl_AnchorHorizontalCenterTo", dynlib: dllname.}
proc HeaderControl_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "HeaderControl_AnchorVerticalCenterTo", dynlib: dllname.}
proc HeaderControl_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "HeaderControl_AnchorSame", dynlib: dllname.}
proc HeaderControl_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "HeaderControl_AnchorAsAlign", dynlib: dllname.}
proc HeaderControl_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "HeaderControl_AnchorClient", dynlib: dllname.}
proc HeaderControl_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_ScaleDesignToForm", dynlib: dllname.}
proc HeaderControl_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_ScaleFormToDesign", dynlib: dllname.}
proc HeaderControl_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_Scale96ToForm", dynlib: dllname.}
proc HeaderControl_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_ScaleFormTo96", dynlib: dllname.}
proc HeaderControl_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_Scale96ToFont", dynlib: dllname.}
proc HeaderControl_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_ScaleFontTo96", dynlib: dllname.}
proc HeaderControl_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_ScaleScreenToFont", dynlib: dllname.}
proc HeaderControl_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_ScaleFontToScreen", dynlib: dllname.}
proc HeaderControl_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_Scale96ToScreen", dynlib: dllname.}
proc HeaderControl_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "HeaderControl_ScaleScreenTo96", dynlib: dllname.}
proc HeaderControl_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "HeaderControl_AutoAdjustLayout", dynlib: dllname.}
proc HeaderControl_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "HeaderControl_FixDesignFontsPPI", dynlib: dllname.}
proc HeaderControl_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "HeaderControl_ScaleFontsPPI", dynlib: dllname.}
proc HeaderControl_GetAlign*(AObj: pointer): TAlign {.importc: "HeaderControl_GetAlign", dynlib: dllname.}
proc HeaderControl_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "HeaderControl_SetAlign", dynlib: dllname.}
proc HeaderControl_GetAnchors*(AObj: pointer): TAnchors {.importc: "HeaderControl_GetAnchors", dynlib: dllname.}
proc HeaderControl_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "HeaderControl_SetAnchors", dynlib: dllname.}
proc HeaderControl_GetBorderWidth*(AObj: pointer): int32 {.importc: "HeaderControl_GetBorderWidth", dynlib: dllname.}
proc HeaderControl_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetBorderWidth", dynlib: dllname.}
proc HeaderControl_GetDoubleBuffered*(AObj: pointer): bool {.importc: "HeaderControl_GetDoubleBuffered", dynlib: dllname.}
proc HeaderControl_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetDoubleBuffered", dynlib: dllname.}
proc HeaderControl_GetDragCursor*(AObj: pointer): TCursor {.importc: "HeaderControl_GetDragCursor", dynlib: dllname.}
proc HeaderControl_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "HeaderControl_SetDragCursor", dynlib: dllname.}
proc HeaderControl_GetDragKind*(AObj: pointer): TDragKind {.importc: "HeaderControl_GetDragKind", dynlib: dllname.}
proc HeaderControl_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "HeaderControl_SetDragKind", dynlib: dllname.}
proc HeaderControl_GetDragMode*(AObj: pointer): TDragMode {.importc: "HeaderControl_GetDragMode", dynlib: dllname.}
proc HeaderControl_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "HeaderControl_SetDragMode", dynlib: dllname.}
proc HeaderControl_GetEnabled*(AObj: pointer): bool {.importc: "HeaderControl_GetEnabled", dynlib: dllname.}
proc HeaderControl_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetEnabled", dynlib: dllname.}
proc HeaderControl_GetFont*(AObj: pointer): pointer {.importc: "HeaderControl_GetFont", dynlib: dllname.}
proc HeaderControl_SetFont*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetFont", dynlib: dllname.}
proc HeaderControl_GetImages*(AObj: pointer): pointer {.importc: "HeaderControl_GetImages", dynlib: dllname.}
proc HeaderControl_SetImages*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetImages", dynlib: dllname.}
proc HeaderControl_GetConstraints*(AObj: pointer): pointer {.importc: "HeaderControl_GetConstraints", dynlib: dllname.}
proc HeaderControl_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetConstraints", dynlib: dllname.}
proc HeaderControl_GetSections*(AObj: pointer): pointer {.importc: "HeaderControl_GetSections", dynlib: dllname.}
proc HeaderControl_SetSections*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetSections", dynlib: dllname.}
proc HeaderControl_GetShowHint*(AObj: pointer): bool {.importc: "HeaderControl_GetShowHint", dynlib: dllname.}
proc HeaderControl_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetShowHint", dynlib: dllname.}
proc HeaderControl_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "HeaderControl_GetParentDoubleBuffered", dynlib: dllname.}
proc HeaderControl_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetParentDoubleBuffered", dynlib: dllname.}
proc HeaderControl_GetParentFont*(AObj: pointer): bool {.importc: "HeaderControl_GetParentFont", dynlib: dllname.}
proc HeaderControl_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetParentFont", dynlib: dllname.}
proc HeaderControl_GetParentShowHint*(AObj: pointer): bool {.importc: "HeaderControl_GetParentShowHint", dynlib: dllname.}
proc HeaderControl_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetParentShowHint", dynlib: dllname.}
proc HeaderControl_GetPopupMenu*(AObj: pointer): pointer {.importc: "HeaderControl_GetPopupMenu", dynlib: dllname.}
proc HeaderControl_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetPopupMenu", dynlib: dllname.}
proc HeaderControl_GetVisible*(AObj: pointer): bool {.importc: "HeaderControl_GetVisible", dynlib: dllname.}
proc HeaderControl_SetVisible*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetVisible", dynlib: dllname.}
proc HeaderControl_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "HeaderControl_SetOnContextPopup", dynlib: dllname.}
proc HeaderControl_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "HeaderControl_SetOnDragDrop", dynlib: dllname.}
proc HeaderControl_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "HeaderControl_SetOnDragOver", dynlib: dllname.}
proc HeaderControl_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "HeaderControl_SetOnEndDock", dynlib: dllname.}
proc HeaderControl_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "HeaderControl_SetOnEndDrag", dynlib: dllname.}
proc HeaderControl_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "HeaderControl_SetOnMouseDown", dynlib: dllname.}
proc HeaderControl_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "HeaderControl_SetOnMouseEnter", dynlib: dllname.}
proc HeaderControl_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "HeaderControl_SetOnMouseLeave", dynlib: dllname.}
proc HeaderControl_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "HeaderControl_SetOnMouseMove", dynlib: dllname.}
proc HeaderControl_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "HeaderControl_SetOnMouseUp", dynlib: dllname.}
proc HeaderControl_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "HeaderControl_SetOnResize", dynlib: dllname.}
proc HeaderControl_SetOnSectionClick*(AObj: pointer, AEventId: TSectionNotifyEvent) {.importc: "HeaderControl_SetOnSectionClick", dynlib: dllname.}
proc HeaderControl_SetOnSectionResize*(AObj: pointer, AEventId: TSectionNotifyEvent) {.importc: "HeaderControl_SetOnSectionResize", dynlib: dllname.}
proc HeaderControl_SetOnSectionTrack*(AObj: pointer, AEventId: TSectionTrackEvent) {.importc: "HeaderControl_SetOnSectionTrack", dynlib: dllname.}
proc HeaderControl_SetOnSectionDrag*(AObj: pointer, AEventId: TSectionDragEvent) {.importc: "HeaderControl_SetOnSectionDrag", dynlib: dllname.}
proc HeaderControl_SetOnSectionEndDrag*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "HeaderControl_SetOnSectionEndDrag", dynlib: dllname.}
proc HeaderControl_GetCanvas*(AObj: pointer): pointer {.importc: "HeaderControl_GetCanvas", dynlib: dllname.}
proc HeaderControl_GetDockClientCount*(AObj: pointer): int32 {.importc: "HeaderControl_GetDockClientCount", dynlib: dllname.}
proc HeaderControl_GetDockSite*(AObj: pointer): bool {.importc: "HeaderControl_GetDockSite", dynlib: dllname.}
proc HeaderControl_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetDockSite", dynlib: dllname.}
proc HeaderControl_GetMouseInClient*(AObj: pointer): bool {.importc: "HeaderControl_GetMouseInClient", dynlib: dllname.}
proc HeaderControl_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "HeaderControl_GetVisibleDockClientCount", dynlib: dllname.}
proc HeaderControl_GetBrush*(AObj: pointer): pointer {.importc: "HeaderControl_GetBrush", dynlib: dllname.}
proc HeaderControl_GetControlCount*(AObj: pointer): int32 {.importc: "HeaderControl_GetControlCount", dynlib: dllname.}
proc HeaderControl_GetHandle*(AObj: pointer): HWND {.importc: "HeaderControl_GetHandle", dynlib: dllname.}
proc HeaderControl_GetParentWindow*(AObj: pointer): HWND {.importc: "HeaderControl_GetParentWindow", dynlib: dllname.}
proc HeaderControl_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "HeaderControl_SetParentWindow", dynlib: dllname.}
proc HeaderControl_GetShowing*(AObj: pointer): bool {.importc: "HeaderControl_GetShowing", dynlib: dllname.}
proc HeaderControl_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "HeaderControl_GetTabOrder", dynlib: dllname.}
proc HeaderControl_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "HeaderControl_SetTabOrder", dynlib: dllname.}
proc HeaderControl_GetTabStop*(AObj: pointer): bool {.importc: "HeaderControl_GetTabStop", dynlib: dllname.}
proc HeaderControl_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetTabStop", dynlib: dllname.}
proc HeaderControl_GetUseDockManager*(AObj: pointer): bool {.importc: "HeaderControl_GetUseDockManager", dynlib: dllname.}
proc HeaderControl_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "HeaderControl_SetUseDockManager", dynlib: dllname.}
proc HeaderControl_GetAction*(AObj: pointer): pointer {.importc: "HeaderControl_GetAction", dynlib: dllname.}
proc HeaderControl_SetAction*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetAction", dynlib: dllname.}
proc HeaderControl_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "HeaderControl_GetBoundsRect", dynlib: dllname.}
proc HeaderControl_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "HeaderControl_SetBoundsRect", dynlib: dllname.}
proc HeaderControl_GetClientHeight*(AObj: pointer): int32 {.importc: "HeaderControl_GetClientHeight", dynlib: dllname.}
proc HeaderControl_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetClientHeight", dynlib: dllname.}
proc HeaderControl_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "HeaderControl_GetClientOrigin", dynlib: dllname.}
proc HeaderControl_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "HeaderControl_GetClientRect", dynlib: dllname.}
proc HeaderControl_GetClientWidth*(AObj: pointer): int32 {.importc: "HeaderControl_GetClientWidth", dynlib: dllname.}
proc HeaderControl_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetClientWidth", dynlib: dllname.}
proc HeaderControl_GetControlState*(AObj: pointer): TControlState {.importc: "HeaderControl_GetControlState", dynlib: dllname.}
proc HeaderControl_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "HeaderControl_SetControlState", dynlib: dllname.}
proc HeaderControl_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "HeaderControl_GetControlStyle", dynlib: dllname.}
proc HeaderControl_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "HeaderControl_SetControlStyle", dynlib: dllname.}
proc HeaderControl_GetFloating*(AObj: pointer): bool {.importc: "HeaderControl_GetFloating", dynlib: dllname.}
proc HeaderControl_GetParent*(AObj: pointer): pointer {.importc: "HeaderControl_GetParent", dynlib: dllname.}
proc HeaderControl_SetParent*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetParent", dynlib: dllname.}
proc HeaderControl_GetLeft*(AObj: pointer): int32 {.importc: "HeaderControl_GetLeft", dynlib: dllname.}
proc HeaderControl_SetLeft*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetLeft", dynlib: dllname.}
proc HeaderControl_GetTop*(AObj: pointer): int32 {.importc: "HeaderControl_GetTop", dynlib: dllname.}
proc HeaderControl_SetTop*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetTop", dynlib: dllname.}
proc HeaderControl_GetWidth*(AObj: pointer): int32 {.importc: "HeaderControl_GetWidth", dynlib: dllname.}
proc HeaderControl_SetWidth*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetWidth", dynlib: dllname.}
proc HeaderControl_GetHeight*(AObj: pointer): int32 {.importc: "HeaderControl_GetHeight", dynlib: dllname.}
proc HeaderControl_SetHeight*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetHeight", dynlib: dllname.}
proc HeaderControl_GetCursor*(AObj: pointer): TCursor {.importc: "HeaderControl_GetCursor", dynlib: dllname.}
proc HeaderControl_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "HeaderControl_SetCursor", dynlib: dllname.}
proc HeaderControl_GetHint*(AObj: pointer): cstring {.importc: "HeaderControl_GetHint", dynlib: dllname.}
proc HeaderControl_SetHint*(AObj: pointer, AValue: cstring) {.importc: "HeaderControl_SetHint", dynlib: dllname.}
proc HeaderControl_GetComponentCount*(AObj: pointer): int32 {.importc: "HeaderControl_GetComponentCount", dynlib: dllname.}
proc HeaderControl_GetComponentIndex*(AObj: pointer): int32 {.importc: "HeaderControl_GetComponentIndex", dynlib: dllname.}
proc HeaderControl_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "HeaderControl_SetComponentIndex", dynlib: dllname.}
proc HeaderControl_GetOwner*(AObj: pointer): pointer {.importc: "HeaderControl_GetOwner", dynlib: dllname.}
proc HeaderControl_GetName*(AObj: pointer): cstring {.importc: "HeaderControl_GetName", dynlib: dllname.}
proc HeaderControl_SetName*(AObj: pointer, AValue: cstring) {.importc: "HeaderControl_SetName", dynlib: dllname.}
proc HeaderControl_GetTag*(AObj: pointer): int {.importc: "HeaderControl_GetTag", dynlib: dllname.}
proc HeaderControl_SetTag*(AObj: pointer, AValue: int) {.importc: "HeaderControl_SetTag", dynlib: dllname.}
proc HeaderControl_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "HeaderControl_GetAnchorSideLeft", dynlib: dllname.}
proc HeaderControl_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetAnchorSideLeft", dynlib: dllname.}
proc HeaderControl_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "HeaderControl_GetAnchorSideTop", dynlib: dllname.}
proc HeaderControl_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetAnchorSideTop", dynlib: dllname.}
proc HeaderControl_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "HeaderControl_GetAnchorSideRight", dynlib: dllname.}
proc HeaderControl_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetAnchorSideRight", dynlib: dllname.}
proc HeaderControl_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "HeaderControl_GetAnchorSideBottom", dynlib: dllname.}
proc HeaderControl_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetAnchorSideBottom", dynlib: dllname.}
proc HeaderControl_GetChildSizing*(AObj: pointer): pointer {.importc: "HeaderControl_GetChildSizing", dynlib: dllname.}
proc HeaderControl_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetChildSizing", dynlib: dllname.}
proc HeaderControl_GetBorderSpacing*(AObj: pointer): pointer {.importc: "HeaderControl_GetBorderSpacing", dynlib: dllname.}
proc HeaderControl_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "HeaderControl_SetBorderSpacing", dynlib: dllname.}
proc HeaderControl_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "HeaderControl_GetDockClients", dynlib: dllname.}
proc HeaderControl_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "HeaderControl_GetControls", dynlib: dllname.}
proc HeaderControl_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "HeaderControl_GetComponents", dynlib: dllname.}
proc HeaderControl_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "HeaderControl_GetAnchorSide", dynlib: dllname.}
proc HeaderControl_StaticClassType*(): TClass {.importc: "HeaderControl_StaticClassType", dynlib: dllname.}
# ----------------- THeaderSection ----------------------
proc HeaderSection_Create*(AOwner: pointer): pointer {.importc: "HeaderSection_Create", dynlib: dllname.}
proc HeaderSection_Free*(AObj: pointer) {.importc: "HeaderSection_Free", dynlib: dllname.}
proc HeaderSection_Assign*(AObj: pointer, Source: pointer) {.importc: "HeaderSection_Assign", dynlib: dllname.}
proc HeaderSection_GetNamePath*(AObj: pointer): cstring {.importc: "HeaderSection_GetNamePath", dynlib: dllname.}
proc HeaderSection_ClassType*(AObj: pointer): TClass {.importc: "HeaderSection_ClassType", dynlib: dllname.}
proc HeaderSection_ClassName*(AObj: pointer): cstring {.importc: "HeaderSection_ClassName", dynlib: dllname.}
proc HeaderSection_InstanceSize*(AObj: pointer): int32 {.importc: "HeaderSection_InstanceSize", dynlib: dllname.}
proc HeaderSection_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "HeaderSection_InheritsFrom", dynlib: dllname.}
proc HeaderSection_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "HeaderSection_Equals", dynlib: dllname.}
proc HeaderSection_GetHashCode*(AObj: pointer): int32 {.importc: "HeaderSection_GetHashCode", dynlib: dllname.}
proc HeaderSection_ToString*(AObj: pointer): cstring {.importc: "HeaderSection_ToString", dynlib: dllname.}
proc HeaderSection_GetLeft*(AObj: pointer): int32 {.importc: "HeaderSection_GetLeft", dynlib: dllname.}
proc HeaderSection_GetRight*(AObj: pointer): int32 {.importc: "HeaderSection_GetRight", dynlib: dllname.}
proc HeaderSection_GetAlignment*(AObj: pointer): TAlignment {.importc: "HeaderSection_GetAlignment", dynlib: dllname.}
proc HeaderSection_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "HeaderSection_SetAlignment", dynlib: dllname.}
proc HeaderSection_GetImageIndex*(AObj: pointer): int32 {.importc: "HeaderSection_GetImageIndex", dynlib: dllname.}
proc HeaderSection_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "HeaderSection_SetImageIndex", dynlib: dllname.}
proc HeaderSection_GetMaxWidth*(AObj: pointer): int32 {.importc: "HeaderSection_GetMaxWidth", dynlib: dllname.}
proc HeaderSection_SetMaxWidth*(AObj: pointer, AValue: int32) {.importc: "HeaderSection_SetMaxWidth", dynlib: dllname.}
proc HeaderSection_GetMinWidth*(AObj: pointer): int32 {.importc: "HeaderSection_GetMinWidth", dynlib: dllname.}
proc HeaderSection_SetMinWidth*(AObj: pointer, AValue: int32) {.importc: "HeaderSection_SetMinWidth", dynlib: dllname.}
proc HeaderSection_GetText*(AObj: pointer): cstring {.importc: "HeaderSection_GetText", dynlib: dllname.}
proc HeaderSection_SetText*(AObj: pointer, AValue: cstring) {.importc: "HeaderSection_SetText", dynlib: dllname.}
proc HeaderSection_GetWidth*(AObj: pointer): int32 {.importc: "HeaderSection_GetWidth", dynlib: dllname.}
proc HeaderSection_SetWidth*(AObj: pointer, AValue: int32) {.importc: "HeaderSection_SetWidth", dynlib: dllname.}
proc HeaderSection_GetCollection*(AObj: pointer): pointer {.importc: "HeaderSection_GetCollection", dynlib: dllname.}
proc HeaderSection_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "HeaderSection_SetCollection", dynlib: dllname.}
proc HeaderSection_GetIndex*(AObj: pointer): int32 {.importc: "HeaderSection_GetIndex", dynlib: dllname.}
proc HeaderSection_SetIndex*(AObj: pointer, AValue: int32) {.importc: "HeaderSection_SetIndex", dynlib: dllname.}
proc HeaderSection_GetDisplayName*(AObj: pointer): cstring {.importc: "HeaderSection_GetDisplayName", dynlib: dllname.}
proc HeaderSection_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "HeaderSection_SetDisplayName", dynlib: dllname.}
proc HeaderSection_StaticClassType*(): TClass {.importc: "HeaderSection_StaticClassType", dynlib: dllname.}
# ----------------- THeaderSections ----------------------
proc HeaderSections_Create*(AOwner: pointer): pointer {.importc: "HeaderSections_Create", dynlib: dllname.}
proc HeaderSections_Free*(AObj: pointer) {.importc: "HeaderSections_Free", dynlib: dllname.}
proc HeaderSections_Add*(AObj: pointer): pointer {.importc: "HeaderSections_Add", dynlib: dllname.}
proc HeaderSections_AddItem*(AObj: pointer, Item: pointer, Index: int32): pointer {.importc: "HeaderSections_AddItem", dynlib: dllname.}
proc HeaderSections_Insert*(AObj: pointer, Index: int32): pointer {.importc: "HeaderSections_Insert", dynlib: dllname.}
proc HeaderSections_Owner*(AObj: pointer): pointer {.importc: "HeaderSections_Owner", dynlib: dllname.}
proc HeaderSections_Assign*(AObj: pointer, Source: pointer) {.importc: "HeaderSections_Assign", dynlib: dllname.}
proc HeaderSections_BeginUpdate*(AObj: pointer) {.importc: "HeaderSections_BeginUpdate", dynlib: dllname.}
proc HeaderSections_Clear*(AObj: pointer) {.importc: "HeaderSections_Clear", dynlib: dllname.}
proc HeaderSections_Delete*(AObj: pointer, Index: int32) {.importc: "HeaderSections_Delete", dynlib: dllname.}
proc HeaderSections_EndUpdate*(AObj: pointer) {.importc: "HeaderSections_EndUpdate", dynlib: dllname.}
proc HeaderSections_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "HeaderSections_FindItemID", dynlib: dllname.}
proc HeaderSections_GetNamePath*(AObj: pointer): cstring {.importc: "HeaderSections_GetNamePath", dynlib: dllname.}
proc HeaderSections_ClassType*(AObj: pointer): TClass {.importc: "HeaderSections_ClassType", dynlib: dllname.}
proc HeaderSections_ClassName*(AObj: pointer): cstring {.importc: "HeaderSections_ClassName", dynlib: dllname.}
proc HeaderSections_InstanceSize*(AObj: pointer): int32 {.importc: "HeaderSections_InstanceSize", dynlib: dllname.}
proc HeaderSections_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "HeaderSections_InheritsFrom", dynlib: dllname.}
proc HeaderSections_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "HeaderSections_Equals", dynlib: dllname.}
proc HeaderSections_GetHashCode*(AObj: pointer): int32 {.importc: "HeaderSections_GetHashCode", dynlib: dllname.}
proc HeaderSections_ToString*(AObj: pointer): cstring {.importc: "HeaderSections_ToString", dynlib: dllname.}
proc HeaderSections_GetCount*(AObj: pointer): int32 {.importc: "HeaderSections_GetCount", dynlib: dllname.}
proc HeaderSections_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "HeaderSections_GetItems", dynlib: dllname.}
proc HeaderSections_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "HeaderSections_SetItems", dynlib: dllname.}
proc HeaderSections_StaticClassType*(): TClass {.importc: "HeaderSections_StaticClassType", dynlib: dllname.}
# ----------------- TLabeledEdit ----------------------
proc LabeledEdit_Create*(AOwner: pointer): pointer {.importc: "LabeledEdit_Create", dynlib: dllname.}
proc LabeledEdit_Free*(AObj: pointer) {.importc: "LabeledEdit_Free", dynlib: dllname.}
proc LabeledEdit_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "LabeledEdit_SetBounds", dynlib: dllname.}
proc LabeledEdit_Clear*(AObj: pointer) {.importc: "LabeledEdit_Clear", dynlib: dllname.}
proc LabeledEdit_ClearSelection*(AObj: pointer) {.importc: "LabeledEdit_ClearSelection", dynlib: dllname.}
proc LabeledEdit_CopyToClipboard*(AObj: pointer) {.importc: "LabeledEdit_CopyToClipboard", dynlib: dllname.}
proc LabeledEdit_CutToClipboard*(AObj: pointer) {.importc: "LabeledEdit_CutToClipboard", dynlib: dllname.}
proc LabeledEdit_PasteFromClipboard*(AObj: pointer) {.importc: "LabeledEdit_PasteFromClipboard", dynlib: dllname.}
proc LabeledEdit_Undo*(AObj: pointer) {.importc: "LabeledEdit_Undo", dynlib: dllname.}
proc LabeledEdit_SelectAll*(AObj: pointer) {.importc: "LabeledEdit_SelectAll", dynlib: dllname.}
proc LabeledEdit_CanFocus*(AObj: pointer): bool {.importc: "LabeledEdit_CanFocus", dynlib: dllname.}
proc LabeledEdit_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "LabeledEdit_ContainsControl", dynlib: dllname.}
proc LabeledEdit_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "LabeledEdit_ControlAtPos", dynlib: dllname.}
proc LabeledEdit_DisableAlign*(AObj: pointer) {.importc: "LabeledEdit_DisableAlign", dynlib: dllname.}
proc LabeledEdit_EnableAlign*(AObj: pointer) {.importc: "LabeledEdit_EnableAlign", dynlib: dllname.}
proc LabeledEdit_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "LabeledEdit_FindChildControl", dynlib: dllname.}
proc LabeledEdit_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "LabeledEdit_FlipChildren", dynlib: dllname.}
proc LabeledEdit_Focused*(AObj: pointer): bool {.importc: "LabeledEdit_Focused", dynlib: dllname.}
proc LabeledEdit_HandleAllocated*(AObj: pointer): bool {.importc: "LabeledEdit_HandleAllocated", dynlib: dllname.}
proc LabeledEdit_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "LabeledEdit_InsertControl", dynlib: dllname.}
proc LabeledEdit_Invalidate*(AObj: pointer) {.importc: "LabeledEdit_Invalidate", dynlib: dllname.}
proc LabeledEdit_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "LabeledEdit_PaintTo", dynlib: dllname.}
proc LabeledEdit_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "LabeledEdit_RemoveControl", dynlib: dllname.}
proc LabeledEdit_Realign*(AObj: pointer) {.importc: "LabeledEdit_Realign", dynlib: dllname.}
proc LabeledEdit_Repaint*(AObj: pointer) {.importc: "LabeledEdit_Repaint", dynlib: dllname.}
proc LabeledEdit_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "LabeledEdit_ScaleBy", dynlib: dllname.}
proc LabeledEdit_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "LabeledEdit_ScrollBy", dynlib: dllname.}
proc LabeledEdit_SetFocus*(AObj: pointer) {.importc: "LabeledEdit_SetFocus", dynlib: dllname.}
proc LabeledEdit_Update*(AObj: pointer) {.importc: "LabeledEdit_Update", dynlib: dllname.}
proc LabeledEdit_BringToFront*(AObj: pointer) {.importc: "LabeledEdit_BringToFront", dynlib: dllname.}
proc LabeledEdit_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "LabeledEdit_ClientToScreen", dynlib: dllname.}
proc LabeledEdit_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "LabeledEdit_ClientToParent", dynlib: dllname.}
proc LabeledEdit_Dragging*(AObj: pointer): bool {.importc: "LabeledEdit_Dragging", dynlib: dllname.}
proc LabeledEdit_HasParent*(AObj: pointer): bool {.importc: "LabeledEdit_HasParent", dynlib: dllname.}
proc LabeledEdit_Hide*(AObj: pointer) {.importc: "LabeledEdit_Hide", dynlib: dllname.}
proc LabeledEdit_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "LabeledEdit_Perform", dynlib: dllname.}
proc LabeledEdit_Refresh*(AObj: pointer) {.importc: "LabeledEdit_Refresh", dynlib: dllname.}
proc LabeledEdit_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "LabeledEdit_ScreenToClient", dynlib: dllname.}
proc LabeledEdit_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "LabeledEdit_ParentToClient", dynlib: dllname.}
proc LabeledEdit_SendToBack*(AObj: pointer) {.importc: "LabeledEdit_SendToBack", dynlib: dllname.}
proc LabeledEdit_Show*(AObj: pointer) {.importc: "LabeledEdit_Show", dynlib: dllname.}
proc LabeledEdit_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "LabeledEdit_GetTextBuf", dynlib: dllname.}
proc LabeledEdit_GetTextLen*(AObj: pointer): int32 {.importc: "LabeledEdit_GetTextLen", dynlib: dllname.}
proc LabeledEdit_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "LabeledEdit_SetTextBuf", dynlib: dllname.}
proc LabeledEdit_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "LabeledEdit_FindComponent", dynlib: dllname.}
proc LabeledEdit_GetNamePath*(AObj: pointer): cstring {.importc: "LabeledEdit_GetNamePath", dynlib: dllname.}
proc LabeledEdit_Assign*(AObj: pointer, Source: pointer) {.importc: "LabeledEdit_Assign", dynlib: dllname.}
proc LabeledEdit_ClassType*(AObj: pointer): TClass {.importc: "LabeledEdit_ClassType", dynlib: dllname.}
proc LabeledEdit_ClassName*(AObj: pointer): cstring {.importc: "LabeledEdit_ClassName", dynlib: dllname.}
proc LabeledEdit_InstanceSize*(AObj: pointer): int32 {.importc: "LabeledEdit_InstanceSize", dynlib: dllname.}
proc LabeledEdit_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "LabeledEdit_InheritsFrom", dynlib: dllname.}
proc LabeledEdit_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "LabeledEdit_Equals", dynlib: dllname.}
proc LabeledEdit_GetHashCode*(AObj: pointer): int32 {.importc: "LabeledEdit_GetHashCode", dynlib: dllname.}
proc LabeledEdit_ToString*(AObj: pointer): cstring {.importc: "LabeledEdit_ToString", dynlib: dllname.}
proc LabeledEdit_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "LabeledEdit_AnchorToNeighbour", dynlib: dllname.}
proc LabeledEdit_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "LabeledEdit_AnchorParallel", dynlib: dllname.}
proc LabeledEdit_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "LabeledEdit_AnchorHorizontalCenterTo", dynlib: dllname.}
proc LabeledEdit_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "LabeledEdit_AnchorVerticalCenterTo", dynlib: dllname.}
proc LabeledEdit_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "LabeledEdit_AnchorSame", dynlib: dllname.}
proc LabeledEdit_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "LabeledEdit_AnchorAsAlign", dynlib: dllname.}
proc LabeledEdit_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "LabeledEdit_AnchorClient", dynlib: dllname.}
proc LabeledEdit_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_ScaleDesignToForm", dynlib: dllname.}
proc LabeledEdit_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_ScaleFormToDesign", dynlib: dllname.}
proc LabeledEdit_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_Scale96ToForm", dynlib: dllname.}
proc LabeledEdit_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_ScaleFormTo96", dynlib: dllname.}
proc LabeledEdit_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_Scale96ToFont", dynlib: dllname.}
proc LabeledEdit_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_ScaleFontTo96", dynlib: dllname.}
proc LabeledEdit_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_ScaleScreenToFont", dynlib: dllname.}
proc LabeledEdit_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_ScaleFontToScreen", dynlib: dllname.}
proc LabeledEdit_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_Scale96ToScreen", dynlib: dllname.}
proc LabeledEdit_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "LabeledEdit_ScaleScreenTo96", dynlib: dllname.}
proc LabeledEdit_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "LabeledEdit_AutoAdjustLayout", dynlib: dllname.}
proc LabeledEdit_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "LabeledEdit_FixDesignFontsPPI", dynlib: dllname.}
proc LabeledEdit_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "LabeledEdit_ScaleFontsPPI", dynlib: dllname.}
proc LabeledEdit_GetAlignment*(AObj: pointer): TAlignment {.importc: "LabeledEdit_GetAlignment", dynlib: dllname.}
proc LabeledEdit_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "LabeledEdit_SetAlignment", dynlib: dllname.}
proc LabeledEdit_GetAnchors*(AObj: pointer): TAnchors {.importc: "LabeledEdit_GetAnchors", dynlib: dllname.}
proc LabeledEdit_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "LabeledEdit_SetAnchors", dynlib: dllname.}
proc LabeledEdit_GetAutoSelect*(AObj: pointer): bool {.importc: "LabeledEdit_GetAutoSelect", dynlib: dllname.}
proc LabeledEdit_SetAutoSelect*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetAutoSelect", dynlib: dllname.}
proc LabeledEdit_GetAutoSize*(AObj: pointer): bool {.importc: "LabeledEdit_GetAutoSize", dynlib: dllname.}
proc LabeledEdit_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetAutoSize", dynlib: dllname.}
proc LabeledEdit_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "LabeledEdit_GetBiDiMode", dynlib: dllname.}
proc LabeledEdit_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "LabeledEdit_SetBiDiMode", dynlib: dllname.}
proc LabeledEdit_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "LabeledEdit_GetBorderStyle", dynlib: dllname.}
proc LabeledEdit_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "LabeledEdit_SetBorderStyle", dynlib: dllname.}
proc LabeledEdit_GetCharCase*(AObj: pointer): TEditCharCase {.importc: "LabeledEdit_GetCharCase", dynlib: dllname.}
proc LabeledEdit_SetCharCase*(AObj: pointer, AValue: TEditCharCase) {.importc: "LabeledEdit_SetCharCase", dynlib: dllname.}
proc LabeledEdit_GetColor*(AObj: pointer): TColor {.importc: "LabeledEdit_GetColor", dynlib: dllname.}
proc LabeledEdit_SetColor*(AObj: pointer, AValue: TColor) {.importc: "LabeledEdit_SetColor", dynlib: dllname.}
proc LabeledEdit_GetConstraints*(AObj: pointer): pointer {.importc: "LabeledEdit_GetConstraints", dynlib: dllname.}
proc LabeledEdit_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetConstraints", dynlib: dllname.}
proc LabeledEdit_GetDoubleBuffered*(AObj: pointer): bool {.importc: "LabeledEdit_GetDoubleBuffered", dynlib: dllname.}
proc LabeledEdit_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetDoubleBuffered", dynlib: dllname.}
proc LabeledEdit_GetDragCursor*(AObj: pointer): TCursor {.importc: "LabeledEdit_GetDragCursor", dynlib: dllname.}
proc LabeledEdit_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "LabeledEdit_SetDragCursor", dynlib: dllname.}
proc LabeledEdit_GetDragMode*(AObj: pointer): TDragMode {.importc: "LabeledEdit_GetDragMode", dynlib: dllname.}
proc LabeledEdit_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "LabeledEdit_SetDragMode", dynlib: dllname.}
proc LabeledEdit_GetEditLabel*(AObj: pointer): pointer {.importc: "LabeledEdit_GetEditLabel", dynlib: dllname.}
proc LabeledEdit_GetEnabled*(AObj: pointer): bool {.importc: "LabeledEdit_GetEnabled", dynlib: dllname.}
proc LabeledEdit_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetEnabled", dynlib: dllname.}
proc LabeledEdit_GetFont*(AObj: pointer): pointer {.importc: "LabeledEdit_GetFont", dynlib: dllname.}
proc LabeledEdit_SetFont*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetFont", dynlib: dllname.}
proc LabeledEdit_GetHideSelection*(AObj: pointer): bool {.importc: "LabeledEdit_GetHideSelection", dynlib: dllname.}
proc LabeledEdit_SetHideSelection*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetHideSelection", dynlib: dllname.}
proc LabeledEdit_GetLabelPosition*(AObj: pointer): TLabelPosition {.importc: "LabeledEdit_GetLabelPosition", dynlib: dllname.}
proc LabeledEdit_SetLabelPosition*(AObj: pointer, AValue: TLabelPosition) {.importc: "LabeledEdit_SetLabelPosition", dynlib: dllname.}
proc LabeledEdit_GetLabelSpacing*(AObj: pointer): int32 {.importc: "LabeledEdit_GetLabelSpacing", dynlib: dllname.}
proc LabeledEdit_SetLabelSpacing*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetLabelSpacing", dynlib: dllname.}
proc LabeledEdit_GetMaxLength*(AObj: pointer): int32 {.importc: "LabeledEdit_GetMaxLength", dynlib: dllname.}
proc LabeledEdit_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetMaxLength", dynlib: dllname.}
proc LabeledEdit_GetNumbersOnly*(AObj: pointer): bool {.importc: "LabeledEdit_GetNumbersOnly", dynlib: dllname.}
proc LabeledEdit_SetNumbersOnly*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetNumbersOnly", dynlib: dllname.}
proc LabeledEdit_GetParentColor*(AObj: pointer): bool {.importc: "LabeledEdit_GetParentColor", dynlib: dllname.}
proc LabeledEdit_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetParentColor", dynlib: dllname.}
proc LabeledEdit_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "LabeledEdit_GetParentDoubleBuffered", dynlib: dllname.}
proc LabeledEdit_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetParentDoubleBuffered", dynlib: dllname.}
proc LabeledEdit_GetParentFont*(AObj: pointer): bool {.importc: "LabeledEdit_GetParentFont", dynlib: dllname.}
proc LabeledEdit_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetParentFont", dynlib: dllname.}
proc LabeledEdit_GetParentShowHint*(AObj: pointer): bool {.importc: "LabeledEdit_GetParentShowHint", dynlib: dllname.}
proc LabeledEdit_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetParentShowHint", dynlib: dllname.}
proc LabeledEdit_GetPasswordChar*(AObj: pointer): Char {.importc: "LabeledEdit_GetPasswordChar", dynlib: dllname.}
proc LabeledEdit_SetPasswordChar*(AObj: pointer, AValue: Char) {.importc: "LabeledEdit_SetPasswordChar", dynlib: dllname.}
proc LabeledEdit_GetPopupMenu*(AObj: pointer): pointer {.importc: "LabeledEdit_GetPopupMenu", dynlib: dllname.}
proc LabeledEdit_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetPopupMenu", dynlib: dllname.}
proc LabeledEdit_GetReadOnly*(AObj: pointer): bool {.importc: "LabeledEdit_GetReadOnly", dynlib: dllname.}
proc LabeledEdit_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetReadOnly", dynlib: dllname.}
proc LabeledEdit_GetShowHint*(AObj: pointer): bool {.importc: "LabeledEdit_GetShowHint", dynlib: dllname.}
proc LabeledEdit_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetShowHint", dynlib: dllname.}
proc LabeledEdit_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "LabeledEdit_GetTabOrder", dynlib: dllname.}
proc LabeledEdit_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "LabeledEdit_SetTabOrder", dynlib: dllname.}
proc LabeledEdit_GetTabStop*(AObj: pointer): bool {.importc: "LabeledEdit_GetTabStop", dynlib: dllname.}
proc LabeledEdit_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetTabStop", dynlib: dllname.}
proc LabeledEdit_GetText*(AObj: pointer): cstring {.importc: "LabeledEdit_GetText", dynlib: dllname.}
proc LabeledEdit_SetText*(AObj: pointer, AValue: cstring) {.importc: "LabeledEdit_SetText", dynlib: dllname.}
proc LabeledEdit_GetTextHint*(AObj: pointer): cstring {.importc: "LabeledEdit_GetTextHint", dynlib: dllname.}
proc LabeledEdit_SetTextHint*(AObj: pointer, AValue: cstring) {.importc: "LabeledEdit_SetTextHint", dynlib: dllname.}
proc LabeledEdit_GetVisible*(AObj: pointer): bool {.importc: "LabeledEdit_GetVisible", dynlib: dllname.}
proc LabeledEdit_SetVisible*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetVisible", dynlib: dllname.}
proc LabeledEdit_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LabeledEdit_SetOnChange", dynlib: dllname.}
proc LabeledEdit_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LabeledEdit_SetOnClick", dynlib: dllname.}
proc LabeledEdit_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LabeledEdit_SetOnDblClick", dynlib: dllname.}
proc LabeledEdit_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "LabeledEdit_SetOnDragDrop", dynlib: dllname.}
proc LabeledEdit_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "LabeledEdit_SetOnDragOver", dynlib: dllname.}
proc LabeledEdit_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "LabeledEdit_SetOnEndDrag", dynlib: dllname.}
proc LabeledEdit_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LabeledEdit_SetOnEnter", dynlib: dllname.}
proc LabeledEdit_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LabeledEdit_SetOnExit", dynlib: dllname.}
proc LabeledEdit_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "LabeledEdit_SetOnKeyDown", dynlib: dllname.}
proc LabeledEdit_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "LabeledEdit_SetOnKeyPress", dynlib: dllname.}
proc LabeledEdit_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "LabeledEdit_SetOnKeyUp", dynlib: dllname.}
proc LabeledEdit_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "LabeledEdit_SetOnMouseDown", dynlib: dllname.}
proc LabeledEdit_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LabeledEdit_SetOnMouseEnter", dynlib: dllname.}
proc LabeledEdit_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "LabeledEdit_SetOnMouseLeave", dynlib: dllname.}
proc LabeledEdit_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "LabeledEdit_SetOnMouseMove", dynlib: dllname.}
proc LabeledEdit_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "LabeledEdit_SetOnMouseUp", dynlib: dllname.}
proc LabeledEdit_GetCanUndo*(AObj: pointer): bool {.importc: "LabeledEdit_GetCanUndo", dynlib: dllname.}
proc LabeledEdit_GetModified*(AObj: pointer): bool {.importc: "LabeledEdit_GetModified", dynlib: dllname.}
proc LabeledEdit_SetModified*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetModified", dynlib: dllname.}
proc LabeledEdit_GetSelLength*(AObj: pointer): int32 {.importc: "LabeledEdit_GetSelLength", dynlib: dllname.}
proc LabeledEdit_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetSelLength", dynlib: dllname.}
proc LabeledEdit_GetSelStart*(AObj: pointer): int32 {.importc: "LabeledEdit_GetSelStart", dynlib: dllname.}
proc LabeledEdit_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetSelStart", dynlib: dllname.}
proc LabeledEdit_GetSelText*(AObj: pointer): cstring {.importc: "LabeledEdit_GetSelText", dynlib: dllname.}
proc LabeledEdit_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "LabeledEdit_SetSelText", dynlib: dllname.}
proc LabeledEdit_GetDockClientCount*(AObj: pointer): int32 {.importc: "LabeledEdit_GetDockClientCount", dynlib: dllname.}
proc LabeledEdit_GetDockSite*(AObj: pointer): bool {.importc: "LabeledEdit_GetDockSite", dynlib: dllname.}
proc LabeledEdit_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetDockSite", dynlib: dllname.}
proc LabeledEdit_GetMouseInClient*(AObj: pointer): bool {.importc: "LabeledEdit_GetMouseInClient", dynlib: dllname.}
proc LabeledEdit_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "LabeledEdit_GetVisibleDockClientCount", dynlib: dllname.}
proc LabeledEdit_GetBrush*(AObj: pointer): pointer {.importc: "LabeledEdit_GetBrush", dynlib: dllname.}
proc LabeledEdit_GetControlCount*(AObj: pointer): int32 {.importc: "LabeledEdit_GetControlCount", dynlib: dllname.}
proc LabeledEdit_GetHandle*(AObj: pointer): HWND {.importc: "LabeledEdit_GetHandle", dynlib: dllname.}
proc LabeledEdit_GetParentWindow*(AObj: pointer): HWND {.importc: "LabeledEdit_GetParentWindow", dynlib: dllname.}
proc LabeledEdit_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "LabeledEdit_SetParentWindow", dynlib: dllname.}
proc LabeledEdit_GetShowing*(AObj: pointer): bool {.importc: "LabeledEdit_GetShowing", dynlib: dllname.}
proc LabeledEdit_GetUseDockManager*(AObj: pointer): bool {.importc: "LabeledEdit_GetUseDockManager", dynlib: dllname.}
proc LabeledEdit_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "LabeledEdit_SetUseDockManager", dynlib: dllname.}
proc LabeledEdit_GetAction*(AObj: pointer): pointer {.importc: "LabeledEdit_GetAction", dynlib: dllname.}
proc LabeledEdit_SetAction*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetAction", dynlib: dllname.}
proc LabeledEdit_GetAlign*(AObj: pointer): TAlign {.importc: "LabeledEdit_GetAlign", dynlib: dllname.}
proc LabeledEdit_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "LabeledEdit_SetAlign", dynlib: dllname.}
proc LabeledEdit_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "LabeledEdit_GetBoundsRect", dynlib: dllname.}
proc LabeledEdit_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "LabeledEdit_SetBoundsRect", dynlib: dllname.}
proc LabeledEdit_GetClientHeight*(AObj: pointer): int32 {.importc: "LabeledEdit_GetClientHeight", dynlib: dllname.}
proc LabeledEdit_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetClientHeight", dynlib: dllname.}
proc LabeledEdit_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "LabeledEdit_GetClientOrigin", dynlib: dllname.}
proc LabeledEdit_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "LabeledEdit_GetClientRect", dynlib: dllname.}
proc LabeledEdit_GetClientWidth*(AObj: pointer): int32 {.importc: "LabeledEdit_GetClientWidth", dynlib: dllname.}
proc LabeledEdit_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetClientWidth", dynlib: dllname.}
proc LabeledEdit_GetControlState*(AObj: pointer): TControlState {.importc: "LabeledEdit_GetControlState", dynlib: dllname.}
proc LabeledEdit_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "LabeledEdit_SetControlState", dynlib: dllname.}
proc LabeledEdit_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "LabeledEdit_GetControlStyle", dynlib: dllname.}
proc LabeledEdit_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "LabeledEdit_SetControlStyle", dynlib: dllname.}
proc LabeledEdit_GetFloating*(AObj: pointer): bool {.importc: "LabeledEdit_GetFloating", dynlib: dllname.}
proc LabeledEdit_GetParent*(AObj: pointer): pointer {.importc: "LabeledEdit_GetParent", dynlib: dllname.}
proc LabeledEdit_SetParent*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetParent", dynlib: dllname.}
proc LabeledEdit_GetLeft*(AObj: pointer): int32 {.importc: "LabeledEdit_GetLeft", dynlib: dllname.}
proc LabeledEdit_SetLeft*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetLeft", dynlib: dllname.}
proc LabeledEdit_GetTop*(AObj: pointer): int32 {.importc: "LabeledEdit_GetTop", dynlib: dllname.}
proc LabeledEdit_SetTop*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetTop", dynlib: dllname.}
proc LabeledEdit_GetWidth*(AObj: pointer): int32 {.importc: "LabeledEdit_GetWidth", dynlib: dllname.}
proc LabeledEdit_SetWidth*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetWidth", dynlib: dllname.}
proc LabeledEdit_GetHeight*(AObj: pointer): int32 {.importc: "LabeledEdit_GetHeight", dynlib: dllname.}
proc LabeledEdit_SetHeight*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetHeight", dynlib: dllname.}
proc LabeledEdit_GetCursor*(AObj: pointer): TCursor {.importc: "LabeledEdit_GetCursor", dynlib: dllname.}
proc LabeledEdit_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "LabeledEdit_SetCursor", dynlib: dllname.}
proc LabeledEdit_GetHint*(AObj: pointer): cstring {.importc: "LabeledEdit_GetHint", dynlib: dllname.}
proc LabeledEdit_SetHint*(AObj: pointer, AValue: cstring) {.importc: "LabeledEdit_SetHint", dynlib: dllname.}
proc LabeledEdit_GetComponentCount*(AObj: pointer): int32 {.importc: "LabeledEdit_GetComponentCount", dynlib: dllname.}
proc LabeledEdit_GetComponentIndex*(AObj: pointer): int32 {.importc: "LabeledEdit_GetComponentIndex", dynlib: dllname.}
proc LabeledEdit_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "LabeledEdit_SetComponentIndex", dynlib: dllname.}
proc LabeledEdit_GetOwner*(AObj: pointer): pointer {.importc: "LabeledEdit_GetOwner", dynlib: dllname.}
proc LabeledEdit_GetName*(AObj: pointer): cstring {.importc: "LabeledEdit_GetName", dynlib: dllname.}
proc LabeledEdit_SetName*(AObj: pointer, AValue: cstring) {.importc: "LabeledEdit_SetName", dynlib: dllname.}
proc LabeledEdit_GetTag*(AObj: pointer): int {.importc: "LabeledEdit_GetTag", dynlib: dllname.}
proc LabeledEdit_SetTag*(AObj: pointer, AValue: int) {.importc: "LabeledEdit_SetTag", dynlib: dllname.}
proc LabeledEdit_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "LabeledEdit_GetAnchorSideLeft", dynlib: dllname.}
proc LabeledEdit_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetAnchorSideLeft", dynlib: dllname.}
proc LabeledEdit_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "LabeledEdit_GetAnchorSideTop", dynlib: dllname.}
proc LabeledEdit_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetAnchorSideTop", dynlib: dllname.}
proc LabeledEdit_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "LabeledEdit_GetAnchorSideRight", dynlib: dllname.}
proc LabeledEdit_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetAnchorSideRight", dynlib: dllname.}
proc LabeledEdit_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "LabeledEdit_GetAnchorSideBottom", dynlib: dllname.}
proc LabeledEdit_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetAnchorSideBottom", dynlib: dllname.}
proc LabeledEdit_GetChildSizing*(AObj: pointer): pointer {.importc: "LabeledEdit_GetChildSizing", dynlib: dllname.}
proc LabeledEdit_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetChildSizing", dynlib: dllname.}
proc LabeledEdit_GetBorderSpacing*(AObj: pointer): pointer {.importc: "LabeledEdit_GetBorderSpacing", dynlib: dllname.}
proc LabeledEdit_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "LabeledEdit_SetBorderSpacing", dynlib: dllname.}
proc LabeledEdit_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "LabeledEdit_GetDockClients", dynlib: dllname.}
proc LabeledEdit_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "LabeledEdit_GetControls", dynlib: dllname.}
proc LabeledEdit_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "LabeledEdit_GetComponents", dynlib: dllname.}
proc LabeledEdit_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "LabeledEdit_GetAnchorSide", dynlib: dllname.}
proc LabeledEdit_StaticClassType*(): TClass {.importc: "LabeledEdit_StaticClassType", dynlib: dllname.}
# ----------------- TBoundLabel ----------------------
proc BoundLabel_Create*(AOwner: pointer): pointer {.importc: "BoundLabel_Create", dynlib: dllname.}
proc BoundLabel_Free*(AObj: pointer) {.importc: "BoundLabel_Free", dynlib: dllname.}
proc BoundLabel_BringToFront*(AObj: pointer) {.importc: "BoundLabel_BringToFront", dynlib: dllname.}
proc BoundLabel_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "BoundLabel_ClientToScreen", dynlib: dllname.}
proc BoundLabel_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "BoundLabel_ClientToParent", dynlib: dllname.}
proc BoundLabel_Dragging*(AObj: pointer): bool {.importc: "BoundLabel_Dragging", dynlib: dllname.}
proc BoundLabel_HasParent*(AObj: pointer): bool {.importc: "BoundLabel_HasParent", dynlib: dllname.}
proc BoundLabel_Hide*(AObj: pointer) {.importc: "BoundLabel_Hide", dynlib: dllname.}
proc BoundLabel_Invalidate*(AObj: pointer) {.importc: "BoundLabel_Invalidate", dynlib: dllname.}
proc BoundLabel_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "BoundLabel_Perform", dynlib: dllname.}
proc BoundLabel_Refresh*(AObj: pointer) {.importc: "BoundLabel_Refresh", dynlib: dllname.}
proc BoundLabel_Repaint*(AObj: pointer) {.importc: "BoundLabel_Repaint", dynlib: dllname.}
proc BoundLabel_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "BoundLabel_ScreenToClient", dynlib: dllname.}
proc BoundLabel_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "BoundLabel_ParentToClient", dynlib: dllname.}
proc BoundLabel_SendToBack*(AObj: pointer) {.importc: "BoundLabel_SendToBack", dynlib: dllname.}
proc BoundLabel_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "BoundLabel_SetBounds", dynlib: dllname.}
proc BoundLabel_Show*(AObj: pointer) {.importc: "BoundLabel_Show", dynlib: dllname.}
proc BoundLabel_Update*(AObj: pointer) {.importc: "BoundLabel_Update", dynlib: dllname.}
proc BoundLabel_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "BoundLabel_GetTextBuf", dynlib: dllname.}
proc BoundLabel_GetTextLen*(AObj: pointer): int32 {.importc: "BoundLabel_GetTextLen", dynlib: dllname.}
proc BoundLabel_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "BoundLabel_SetTextBuf", dynlib: dllname.}
proc BoundLabel_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "BoundLabel_FindComponent", dynlib: dllname.}
proc BoundLabel_GetNamePath*(AObj: pointer): cstring {.importc: "BoundLabel_GetNamePath", dynlib: dllname.}
proc BoundLabel_Assign*(AObj: pointer, Source: pointer) {.importc: "BoundLabel_Assign", dynlib: dllname.}
proc BoundLabel_ClassType*(AObj: pointer): TClass {.importc: "BoundLabel_ClassType", dynlib: dllname.}
proc BoundLabel_ClassName*(AObj: pointer): cstring {.importc: "BoundLabel_ClassName", dynlib: dllname.}
proc BoundLabel_InstanceSize*(AObj: pointer): int32 {.importc: "BoundLabel_InstanceSize", dynlib: dllname.}
proc BoundLabel_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "BoundLabel_InheritsFrom", dynlib: dllname.}
proc BoundLabel_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "BoundLabel_Equals", dynlib: dllname.}
proc BoundLabel_GetHashCode*(AObj: pointer): int32 {.importc: "BoundLabel_GetHashCode", dynlib: dllname.}
proc BoundLabel_ToString*(AObj: pointer): cstring {.importc: "BoundLabel_ToString", dynlib: dllname.}
proc BoundLabel_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "BoundLabel_AnchorToNeighbour", dynlib: dllname.}
proc BoundLabel_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "BoundLabel_AnchorParallel", dynlib: dllname.}
proc BoundLabel_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "BoundLabel_AnchorHorizontalCenterTo", dynlib: dllname.}
proc BoundLabel_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "BoundLabel_AnchorVerticalCenterTo", dynlib: dllname.}
proc BoundLabel_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "BoundLabel_AnchorSame", dynlib: dllname.}
proc BoundLabel_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "BoundLabel_AnchorAsAlign", dynlib: dllname.}
proc BoundLabel_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "BoundLabel_AnchorClient", dynlib: dllname.}
proc BoundLabel_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_ScaleDesignToForm", dynlib: dllname.}
proc BoundLabel_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_ScaleFormToDesign", dynlib: dllname.}
proc BoundLabel_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_Scale96ToForm", dynlib: dllname.}
proc BoundLabel_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_ScaleFormTo96", dynlib: dllname.}
proc BoundLabel_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_Scale96ToFont", dynlib: dllname.}
proc BoundLabel_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_ScaleFontTo96", dynlib: dllname.}
proc BoundLabel_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_ScaleScreenToFont", dynlib: dllname.}
proc BoundLabel_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_ScaleFontToScreen", dynlib: dllname.}
proc BoundLabel_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_Scale96ToScreen", dynlib: dllname.}
proc BoundLabel_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "BoundLabel_ScaleScreenTo96", dynlib: dllname.}
proc BoundLabel_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "BoundLabel_AutoAdjustLayout", dynlib: dllname.}
proc BoundLabel_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "BoundLabel_FixDesignFontsPPI", dynlib: dllname.}
proc BoundLabel_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "BoundLabel_ScaleFontsPPI", dynlib: dllname.}
proc BoundLabel_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "BoundLabel_GetBiDiMode", dynlib: dllname.}
proc BoundLabel_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "BoundLabel_SetBiDiMode", dynlib: dllname.}
proc BoundLabel_GetCaption*(AObj: pointer): cstring {.importc: "BoundLabel_GetCaption", dynlib: dllname.}
proc BoundLabel_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "BoundLabel_SetCaption", dynlib: dllname.}
proc BoundLabel_GetColor*(AObj: pointer): TColor {.importc: "BoundLabel_GetColor", dynlib: dllname.}
proc BoundLabel_SetColor*(AObj: pointer, AValue: TColor) {.importc: "BoundLabel_SetColor", dynlib: dllname.}
proc BoundLabel_GetDragCursor*(AObj: pointer): TCursor {.importc: "BoundLabel_GetDragCursor", dynlib: dllname.}
proc BoundLabel_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "BoundLabel_SetDragCursor", dynlib: dllname.}
proc BoundLabel_GetDragMode*(AObj: pointer): TDragMode {.importc: "BoundLabel_GetDragMode", dynlib: dllname.}
proc BoundLabel_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "BoundLabel_SetDragMode", dynlib: dllname.}
proc BoundLabel_GetFont*(AObj: pointer): pointer {.importc: "BoundLabel_GetFont", dynlib: dllname.}
proc BoundLabel_SetFont*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetFont", dynlib: dllname.}
proc BoundLabel_GetHeight*(AObj: pointer): int32 {.importc: "BoundLabel_GetHeight", dynlib: dllname.}
proc BoundLabel_SetHeight*(AObj: pointer, AValue: int32) {.importc: "BoundLabel_SetHeight", dynlib: dllname.}
proc BoundLabel_GetLeft*(AObj: pointer): int32 {.importc: "BoundLabel_GetLeft", dynlib: dllname.}
proc BoundLabel_GetParentColor*(AObj: pointer): bool {.importc: "BoundLabel_GetParentColor", dynlib: dllname.}
proc BoundLabel_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetParentColor", dynlib: dllname.}
proc BoundLabel_GetParentFont*(AObj: pointer): bool {.importc: "BoundLabel_GetParentFont", dynlib: dllname.}
proc BoundLabel_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetParentFont", dynlib: dllname.}
proc BoundLabel_GetParentShowHint*(AObj: pointer): bool {.importc: "BoundLabel_GetParentShowHint", dynlib: dllname.}
proc BoundLabel_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetParentShowHint", dynlib: dllname.}
proc BoundLabel_GetPopupMenu*(AObj: pointer): pointer {.importc: "BoundLabel_GetPopupMenu", dynlib: dllname.}
proc BoundLabel_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetPopupMenu", dynlib: dllname.}
proc BoundLabel_GetShowAccelChar*(AObj: pointer): bool {.importc: "BoundLabel_GetShowAccelChar", dynlib: dllname.}
proc BoundLabel_SetShowAccelChar*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetShowAccelChar", dynlib: dllname.}
proc BoundLabel_GetShowHint*(AObj: pointer): bool {.importc: "BoundLabel_GetShowHint", dynlib: dllname.}
proc BoundLabel_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetShowHint", dynlib: dllname.}
proc BoundLabel_GetTop*(AObj: pointer): int32 {.importc: "BoundLabel_GetTop", dynlib: dllname.}
proc BoundLabel_GetLayout*(AObj: pointer): TTextLayout {.importc: "BoundLabel_GetLayout", dynlib: dllname.}
proc BoundLabel_SetLayout*(AObj: pointer, AValue: TTextLayout) {.importc: "BoundLabel_SetLayout", dynlib: dllname.}
proc BoundLabel_GetWordWrap*(AObj: pointer): bool {.importc: "BoundLabel_GetWordWrap", dynlib: dllname.}
proc BoundLabel_SetWordWrap*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetWordWrap", dynlib: dllname.}
proc BoundLabel_GetWidth*(AObj: pointer): int32 {.importc: "BoundLabel_GetWidth", dynlib: dllname.}
proc BoundLabel_SetWidth*(AObj: pointer, AValue: int32) {.importc: "BoundLabel_SetWidth", dynlib: dllname.}
proc BoundLabel_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "BoundLabel_SetOnClick", dynlib: dllname.}
proc BoundLabel_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "BoundLabel_SetOnDblClick", dynlib: dllname.}
proc BoundLabel_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "BoundLabel_SetOnDragDrop", dynlib: dllname.}
proc BoundLabel_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "BoundLabel_SetOnDragOver", dynlib: dllname.}
proc BoundLabel_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "BoundLabel_SetOnEndDrag", dynlib: dllname.}
proc BoundLabel_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "BoundLabel_SetOnMouseDown", dynlib: dllname.}
proc BoundLabel_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "BoundLabel_SetOnMouseMove", dynlib: dllname.}
proc BoundLabel_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "BoundLabel_SetOnMouseUp", dynlib: dllname.}
proc BoundLabel_GetCanvas*(AObj: pointer): pointer {.importc: "BoundLabel_GetCanvas", dynlib: dllname.}
proc BoundLabel_GetEnabled*(AObj: pointer): bool {.importc: "BoundLabel_GetEnabled", dynlib: dllname.}
proc BoundLabel_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetEnabled", dynlib: dllname.}
proc BoundLabel_GetAction*(AObj: pointer): pointer {.importc: "BoundLabel_GetAction", dynlib: dllname.}
proc BoundLabel_SetAction*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetAction", dynlib: dllname.}
proc BoundLabel_GetAlign*(AObj: pointer): TAlign {.importc: "BoundLabel_GetAlign", dynlib: dllname.}
proc BoundLabel_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "BoundLabel_SetAlign", dynlib: dllname.}
proc BoundLabel_GetAnchors*(AObj: pointer): TAnchors {.importc: "BoundLabel_GetAnchors", dynlib: dllname.}
proc BoundLabel_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "BoundLabel_SetAnchors", dynlib: dllname.}
proc BoundLabel_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "BoundLabel_GetBoundsRect", dynlib: dllname.}
proc BoundLabel_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "BoundLabel_SetBoundsRect", dynlib: dllname.}
proc BoundLabel_GetClientHeight*(AObj: pointer): int32 {.importc: "BoundLabel_GetClientHeight", dynlib: dllname.}
proc BoundLabel_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "BoundLabel_SetClientHeight", dynlib: dllname.}
proc BoundLabel_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "BoundLabel_GetClientOrigin", dynlib: dllname.}
proc BoundLabel_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "BoundLabel_GetClientRect", dynlib: dllname.}
proc BoundLabel_GetClientWidth*(AObj: pointer): int32 {.importc: "BoundLabel_GetClientWidth", dynlib: dllname.}
proc BoundLabel_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "BoundLabel_SetClientWidth", dynlib: dllname.}
proc BoundLabel_GetConstraints*(AObj: pointer): pointer {.importc: "BoundLabel_GetConstraints", dynlib: dllname.}
proc BoundLabel_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetConstraints", dynlib: dllname.}
proc BoundLabel_GetControlState*(AObj: pointer): TControlState {.importc: "BoundLabel_GetControlState", dynlib: dllname.}
proc BoundLabel_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "BoundLabel_SetControlState", dynlib: dllname.}
proc BoundLabel_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "BoundLabel_GetControlStyle", dynlib: dllname.}
proc BoundLabel_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "BoundLabel_SetControlStyle", dynlib: dllname.}
proc BoundLabel_GetFloating*(AObj: pointer): bool {.importc: "BoundLabel_GetFloating", dynlib: dllname.}
proc BoundLabel_GetVisible*(AObj: pointer): bool {.importc: "BoundLabel_GetVisible", dynlib: dllname.}
proc BoundLabel_SetVisible*(AObj: pointer, AValue: bool) {.importc: "BoundLabel_SetVisible", dynlib: dllname.}
proc BoundLabel_GetParent*(AObj: pointer): pointer {.importc: "BoundLabel_GetParent", dynlib: dllname.}
proc BoundLabel_SetParent*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetParent", dynlib: dllname.}
proc BoundLabel_GetCursor*(AObj: pointer): TCursor {.importc: "BoundLabel_GetCursor", dynlib: dllname.}
proc BoundLabel_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "BoundLabel_SetCursor", dynlib: dllname.}
proc BoundLabel_GetHint*(AObj: pointer): cstring {.importc: "BoundLabel_GetHint", dynlib: dllname.}
proc BoundLabel_SetHint*(AObj: pointer, AValue: cstring) {.importc: "BoundLabel_SetHint", dynlib: dllname.}
proc BoundLabel_GetComponentCount*(AObj: pointer): int32 {.importc: "BoundLabel_GetComponentCount", dynlib: dllname.}
proc BoundLabel_GetComponentIndex*(AObj: pointer): int32 {.importc: "BoundLabel_GetComponentIndex", dynlib: dllname.}
proc BoundLabel_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "BoundLabel_SetComponentIndex", dynlib: dllname.}
proc BoundLabel_GetOwner*(AObj: pointer): pointer {.importc: "BoundLabel_GetOwner", dynlib: dllname.}
proc BoundLabel_GetName*(AObj: pointer): cstring {.importc: "BoundLabel_GetName", dynlib: dllname.}
proc BoundLabel_SetName*(AObj: pointer, AValue: cstring) {.importc: "BoundLabel_SetName", dynlib: dllname.}
proc BoundLabel_GetTag*(AObj: pointer): int {.importc: "BoundLabel_GetTag", dynlib: dllname.}
proc BoundLabel_SetTag*(AObj: pointer, AValue: int) {.importc: "BoundLabel_SetTag", dynlib: dllname.}
proc BoundLabel_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "BoundLabel_GetAnchorSideLeft", dynlib: dllname.}
proc BoundLabel_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetAnchorSideLeft", dynlib: dllname.}
proc BoundLabel_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "BoundLabel_GetAnchorSideTop", dynlib: dllname.}
proc BoundLabel_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetAnchorSideTop", dynlib: dllname.}
proc BoundLabel_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "BoundLabel_GetAnchorSideRight", dynlib: dllname.}
proc BoundLabel_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetAnchorSideRight", dynlib: dllname.}
proc BoundLabel_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "BoundLabel_GetAnchorSideBottom", dynlib: dllname.}
proc BoundLabel_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetAnchorSideBottom", dynlib: dllname.}
proc BoundLabel_GetBorderSpacing*(AObj: pointer): pointer {.importc: "BoundLabel_GetBorderSpacing", dynlib: dllname.}
proc BoundLabel_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "BoundLabel_SetBorderSpacing", dynlib: dllname.}
proc BoundLabel_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "BoundLabel_GetComponents", dynlib: dllname.}
proc BoundLabel_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "BoundLabel_GetAnchorSide", dynlib: dllname.}
proc BoundLabel_StaticClassType*(): TClass {.importc: "BoundLabel_StaticClassType", dynlib: dllname.}
# ----------------- TFlowPanel ----------------------
proc FlowPanel_Create*(AOwner: pointer): pointer {.importc: "FlowPanel_Create", dynlib: dllname.}
proc FlowPanel_Free*(AObj: pointer) {.importc: "FlowPanel_Free", dynlib: dllname.}
proc FlowPanel_GetControlIndex*(AObj: pointer, AControl: pointer): int32 {.importc: "FlowPanel_GetControlIndex", dynlib: dllname.}
proc FlowPanel_SetControlIndex*(AObj: pointer, AControl: pointer, Index: int32) {.importc: "FlowPanel_SetControlIndex", dynlib: dllname.}
proc FlowPanel_CanFocus*(AObj: pointer): bool {.importc: "FlowPanel_CanFocus", dynlib: dllname.}
proc FlowPanel_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "FlowPanel_ContainsControl", dynlib: dllname.}
proc FlowPanel_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "FlowPanel_ControlAtPos", dynlib: dllname.}
proc FlowPanel_DisableAlign*(AObj: pointer) {.importc: "FlowPanel_DisableAlign", dynlib: dllname.}
proc FlowPanel_EnableAlign*(AObj: pointer) {.importc: "FlowPanel_EnableAlign", dynlib: dllname.}
proc FlowPanel_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "FlowPanel_FindChildControl", dynlib: dllname.}
proc FlowPanel_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "FlowPanel_FlipChildren", dynlib: dllname.}
proc FlowPanel_Focused*(AObj: pointer): bool {.importc: "FlowPanel_Focused", dynlib: dllname.}
proc FlowPanel_HandleAllocated*(AObj: pointer): bool {.importc: "FlowPanel_HandleAllocated", dynlib: dllname.}
proc FlowPanel_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "FlowPanel_InsertControl", dynlib: dllname.}
proc FlowPanel_Invalidate*(AObj: pointer) {.importc: "FlowPanel_Invalidate", dynlib: dllname.}
proc FlowPanel_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "FlowPanel_PaintTo", dynlib: dllname.}
proc FlowPanel_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "FlowPanel_RemoveControl", dynlib: dllname.}
proc FlowPanel_Realign*(AObj: pointer) {.importc: "FlowPanel_Realign", dynlib: dllname.}
proc FlowPanel_Repaint*(AObj: pointer) {.importc: "FlowPanel_Repaint", dynlib: dllname.}
proc FlowPanel_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "FlowPanel_ScaleBy", dynlib: dllname.}
proc FlowPanel_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "FlowPanel_ScrollBy", dynlib: dllname.}
proc FlowPanel_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "FlowPanel_SetBounds", dynlib: dllname.}
proc FlowPanel_SetFocus*(AObj: pointer) {.importc: "FlowPanel_SetFocus", dynlib: dllname.}
proc FlowPanel_Update*(AObj: pointer) {.importc: "FlowPanel_Update", dynlib: dllname.}
proc FlowPanel_BringToFront*(AObj: pointer) {.importc: "FlowPanel_BringToFront", dynlib: dllname.}
proc FlowPanel_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "FlowPanel_ClientToScreen", dynlib: dllname.}
proc FlowPanel_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "FlowPanel_ClientToParent", dynlib: dllname.}
proc FlowPanel_Dragging*(AObj: pointer): bool {.importc: "FlowPanel_Dragging", dynlib: dllname.}
proc FlowPanel_HasParent*(AObj: pointer): bool {.importc: "FlowPanel_HasParent", dynlib: dllname.}
proc FlowPanel_Hide*(AObj: pointer) {.importc: "FlowPanel_Hide", dynlib: dllname.}
proc FlowPanel_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "FlowPanel_Perform", dynlib: dllname.}
proc FlowPanel_Refresh*(AObj: pointer) {.importc: "FlowPanel_Refresh", dynlib: dllname.}
proc FlowPanel_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "FlowPanel_ScreenToClient", dynlib: dllname.}
proc FlowPanel_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "FlowPanel_ParentToClient", dynlib: dllname.}
proc FlowPanel_SendToBack*(AObj: pointer) {.importc: "FlowPanel_SendToBack", dynlib: dllname.}
proc FlowPanel_Show*(AObj: pointer) {.importc: "FlowPanel_Show", dynlib: dllname.}
proc FlowPanel_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "FlowPanel_GetTextBuf", dynlib: dllname.}
proc FlowPanel_GetTextLen*(AObj: pointer): int32 {.importc: "FlowPanel_GetTextLen", dynlib: dllname.}
proc FlowPanel_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "FlowPanel_SetTextBuf", dynlib: dllname.}
proc FlowPanel_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "FlowPanel_FindComponent", dynlib: dllname.}
proc FlowPanel_GetNamePath*(AObj: pointer): cstring {.importc: "FlowPanel_GetNamePath", dynlib: dllname.}
proc FlowPanel_Assign*(AObj: pointer, Source: pointer) {.importc: "FlowPanel_Assign", dynlib: dllname.}
proc FlowPanel_ClassType*(AObj: pointer): TClass {.importc: "FlowPanel_ClassType", dynlib: dllname.}
proc FlowPanel_ClassName*(AObj: pointer): cstring {.importc: "FlowPanel_ClassName", dynlib: dllname.}
proc FlowPanel_InstanceSize*(AObj: pointer): int32 {.importc: "FlowPanel_InstanceSize", dynlib: dllname.}
proc FlowPanel_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "FlowPanel_InheritsFrom", dynlib: dllname.}
proc FlowPanel_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "FlowPanel_Equals", dynlib: dllname.}
proc FlowPanel_GetHashCode*(AObj: pointer): int32 {.importc: "FlowPanel_GetHashCode", dynlib: dllname.}
proc FlowPanel_ToString*(AObj: pointer): cstring {.importc: "FlowPanel_ToString", dynlib: dllname.}
proc FlowPanel_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "FlowPanel_AnchorToNeighbour", dynlib: dllname.}
proc FlowPanel_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "FlowPanel_AnchorParallel", dynlib: dllname.}
proc FlowPanel_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "FlowPanel_AnchorHorizontalCenterTo", dynlib: dllname.}
proc FlowPanel_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "FlowPanel_AnchorVerticalCenterTo", dynlib: dllname.}
proc FlowPanel_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "FlowPanel_AnchorSame", dynlib: dllname.}
proc FlowPanel_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "FlowPanel_AnchorAsAlign", dynlib: dllname.}
proc FlowPanel_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "FlowPanel_AnchorClient", dynlib: dllname.}
proc FlowPanel_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_ScaleDesignToForm", dynlib: dllname.}
proc FlowPanel_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_ScaleFormToDesign", dynlib: dllname.}
proc FlowPanel_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_Scale96ToForm", dynlib: dllname.}
proc FlowPanel_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_ScaleFormTo96", dynlib: dllname.}
proc FlowPanel_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_Scale96ToFont", dynlib: dllname.}
proc FlowPanel_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_ScaleFontTo96", dynlib: dllname.}
proc FlowPanel_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_ScaleScreenToFont", dynlib: dllname.}
proc FlowPanel_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_ScaleFontToScreen", dynlib: dllname.}
proc FlowPanel_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_Scale96ToScreen", dynlib: dllname.}
proc FlowPanel_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "FlowPanel_ScaleScreenTo96", dynlib: dllname.}
proc FlowPanel_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "FlowPanel_AutoAdjustLayout", dynlib: dllname.}
proc FlowPanel_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "FlowPanel_FixDesignFontsPPI", dynlib: dllname.}
proc FlowPanel_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "FlowPanel_ScaleFontsPPI", dynlib: dllname.}
proc FlowPanel_GetAlign*(AObj: pointer): TAlign {.importc: "FlowPanel_GetAlign", dynlib: dllname.}
proc FlowPanel_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "FlowPanel_SetAlign", dynlib: dllname.}
proc FlowPanel_GetAlignment*(AObj: pointer): TAlignment {.importc: "FlowPanel_GetAlignment", dynlib: dllname.}
proc FlowPanel_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "FlowPanel_SetAlignment", dynlib: dllname.}
proc FlowPanel_GetAnchors*(AObj: pointer): TAnchors {.importc: "FlowPanel_GetAnchors", dynlib: dllname.}
proc FlowPanel_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "FlowPanel_SetAnchors", dynlib: dllname.}
proc FlowPanel_GetAutoSize*(AObj: pointer): bool {.importc: "FlowPanel_GetAutoSize", dynlib: dllname.}
proc FlowPanel_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetAutoSize", dynlib: dllname.}
proc FlowPanel_GetAutoWrap*(AObj: pointer): bool {.importc: "FlowPanel_GetAutoWrap", dynlib: dllname.}
proc FlowPanel_SetAutoWrap*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetAutoWrap", dynlib: dllname.}
proc FlowPanel_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "FlowPanel_GetBiDiMode", dynlib: dllname.}
proc FlowPanel_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "FlowPanel_SetBiDiMode", dynlib: dllname.}
proc FlowPanel_GetBorderWidth*(AObj: pointer): int32 {.importc: "FlowPanel_GetBorderWidth", dynlib: dllname.}
proc FlowPanel_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetBorderWidth", dynlib: dllname.}
proc FlowPanel_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "FlowPanel_GetBorderStyle", dynlib: dllname.}
proc FlowPanel_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "FlowPanel_SetBorderStyle", dynlib: dllname.}
proc FlowPanel_GetCaption*(AObj: pointer): cstring {.importc: "FlowPanel_GetCaption", dynlib: dllname.}
proc FlowPanel_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "FlowPanel_SetCaption", dynlib: dllname.}
proc FlowPanel_GetColor*(AObj: pointer): TColor {.importc: "FlowPanel_GetColor", dynlib: dllname.}
proc FlowPanel_SetColor*(AObj: pointer, AValue: TColor) {.importc: "FlowPanel_SetColor", dynlib: dllname.}
proc FlowPanel_GetConstraints*(AObj: pointer): pointer {.importc: "FlowPanel_GetConstraints", dynlib: dllname.}
proc FlowPanel_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetConstraints", dynlib: dllname.}
proc FlowPanel_GetUseDockManager*(AObj: pointer): bool {.importc: "FlowPanel_GetUseDockManager", dynlib: dllname.}
proc FlowPanel_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetUseDockManager", dynlib: dllname.}
proc FlowPanel_GetDockSite*(AObj: pointer): bool {.importc: "FlowPanel_GetDockSite", dynlib: dllname.}
proc FlowPanel_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetDockSite", dynlib: dllname.}
proc FlowPanel_GetDoubleBuffered*(AObj: pointer): bool {.importc: "FlowPanel_GetDoubleBuffered", dynlib: dllname.}
proc FlowPanel_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetDoubleBuffered", dynlib: dllname.}
proc FlowPanel_GetDragCursor*(AObj: pointer): TCursor {.importc: "FlowPanel_GetDragCursor", dynlib: dllname.}
proc FlowPanel_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "FlowPanel_SetDragCursor", dynlib: dllname.}
proc FlowPanel_GetDragKind*(AObj: pointer): TDragKind {.importc: "FlowPanel_GetDragKind", dynlib: dllname.}
proc FlowPanel_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "FlowPanel_SetDragKind", dynlib: dllname.}
proc FlowPanel_GetDragMode*(AObj: pointer): TDragMode {.importc: "FlowPanel_GetDragMode", dynlib: dllname.}
proc FlowPanel_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "FlowPanel_SetDragMode", dynlib: dllname.}
proc FlowPanel_GetEnabled*(AObj: pointer): bool {.importc: "FlowPanel_GetEnabled", dynlib: dllname.}
proc FlowPanel_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetEnabled", dynlib: dllname.}
proc FlowPanel_GetFlowStyle*(AObj: pointer): TFlowStyle {.importc: "FlowPanel_GetFlowStyle", dynlib: dllname.}
proc FlowPanel_SetFlowStyle*(AObj: pointer, AValue: TFlowStyle) {.importc: "FlowPanel_SetFlowStyle", dynlib: dllname.}
proc FlowPanel_GetFullRepaint*(AObj: pointer): bool {.importc: "FlowPanel_GetFullRepaint", dynlib: dllname.}
proc FlowPanel_SetFullRepaint*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetFullRepaint", dynlib: dllname.}
proc FlowPanel_GetFont*(AObj: pointer): pointer {.importc: "FlowPanel_GetFont", dynlib: dllname.}
proc FlowPanel_SetFont*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetFont", dynlib: dllname.}
proc FlowPanel_GetParentBackground*(AObj: pointer): bool {.importc: "FlowPanel_GetParentBackground", dynlib: dllname.}
proc FlowPanel_SetParentBackground*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetParentBackground", dynlib: dllname.}
proc FlowPanel_GetParentColor*(AObj: pointer): bool {.importc: "FlowPanel_GetParentColor", dynlib: dllname.}
proc FlowPanel_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetParentColor", dynlib: dllname.}
proc FlowPanel_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "FlowPanel_GetParentDoubleBuffered", dynlib: dllname.}
proc FlowPanel_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetParentDoubleBuffered", dynlib: dllname.}
proc FlowPanel_GetParentFont*(AObj: pointer): bool {.importc: "FlowPanel_GetParentFont", dynlib: dllname.}
proc FlowPanel_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetParentFont", dynlib: dllname.}
proc FlowPanel_GetParentShowHint*(AObj: pointer): bool {.importc: "FlowPanel_GetParentShowHint", dynlib: dllname.}
proc FlowPanel_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetParentShowHint", dynlib: dllname.}
proc FlowPanel_GetPopupMenu*(AObj: pointer): pointer {.importc: "FlowPanel_GetPopupMenu", dynlib: dllname.}
proc FlowPanel_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetPopupMenu", dynlib: dllname.}
proc FlowPanel_GetShowHint*(AObj: pointer): bool {.importc: "FlowPanel_GetShowHint", dynlib: dllname.}
proc FlowPanel_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetShowHint", dynlib: dllname.}
proc FlowPanel_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "FlowPanel_GetTabOrder", dynlib: dllname.}
proc FlowPanel_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "FlowPanel_SetTabOrder", dynlib: dllname.}
proc FlowPanel_GetTabStop*(AObj: pointer): bool {.importc: "FlowPanel_GetTabStop", dynlib: dllname.}
proc FlowPanel_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetTabStop", dynlib: dllname.}
proc FlowPanel_GetVisible*(AObj: pointer): bool {.importc: "FlowPanel_GetVisible", dynlib: dllname.}
proc FlowPanel_SetVisible*(AObj: pointer, AValue: bool) {.importc: "FlowPanel_SetVisible", dynlib: dllname.}
proc FlowPanel_SetOnAlignPosition*(AObj: pointer, AEventId: TAlignPositionEvent) {.importc: "FlowPanel_SetOnAlignPosition", dynlib: dllname.}
proc FlowPanel_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FlowPanel_SetOnClick", dynlib: dllname.}
proc FlowPanel_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "FlowPanel_SetOnContextPopup", dynlib: dllname.}
proc FlowPanel_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "FlowPanel_SetOnDockDrop", dynlib: dllname.}
proc FlowPanel_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FlowPanel_SetOnDblClick", dynlib: dllname.}
proc FlowPanel_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "FlowPanel_SetOnDragDrop", dynlib: dllname.}
proc FlowPanel_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "FlowPanel_SetOnDragOver", dynlib: dllname.}
proc FlowPanel_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "FlowPanel_SetOnEndDock", dynlib: dllname.}
proc FlowPanel_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "FlowPanel_SetOnEndDrag", dynlib: dllname.}
proc FlowPanel_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FlowPanel_SetOnEnter", dynlib: dllname.}
proc FlowPanel_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FlowPanel_SetOnExit", dynlib: dllname.}
proc FlowPanel_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "FlowPanel_SetOnGetSiteInfo", dynlib: dllname.}
proc FlowPanel_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "FlowPanel_SetOnMouseDown", dynlib: dllname.}
proc FlowPanel_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FlowPanel_SetOnMouseEnter", dynlib: dllname.}
proc FlowPanel_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FlowPanel_SetOnMouseLeave", dynlib: dllname.}
proc FlowPanel_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "FlowPanel_SetOnMouseMove", dynlib: dllname.}
proc FlowPanel_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "FlowPanel_SetOnMouseUp", dynlib: dllname.}
proc FlowPanel_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "FlowPanel_SetOnResize", dynlib: dllname.}
proc FlowPanel_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "FlowPanel_SetOnStartDock", dynlib: dllname.}
proc FlowPanel_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "FlowPanel_SetOnUnDock", dynlib: dllname.}
proc FlowPanel_GetDockClientCount*(AObj: pointer): int32 {.importc: "FlowPanel_GetDockClientCount", dynlib: dllname.}
proc FlowPanel_GetMouseInClient*(AObj: pointer): bool {.importc: "FlowPanel_GetMouseInClient", dynlib: dllname.}
proc FlowPanel_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "FlowPanel_GetVisibleDockClientCount", dynlib: dllname.}
proc FlowPanel_GetBrush*(AObj: pointer): pointer {.importc: "FlowPanel_GetBrush", dynlib: dllname.}
proc FlowPanel_GetControlCount*(AObj: pointer): int32 {.importc: "FlowPanel_GetControlCount", dynlib: dllname.}
proc FlowPanel_GetHandle*(AObj: pointer): HWND {.importc: "FlowPanel_GetHandle", dynlib: dllname.}
proc FlowPanel_GetParentWindow*(AObj: pointer): HWND {.importc: "FlowPanel_GetParentWindow", dynlib: dllname.}
proc FlowPanel_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "FlowPanel_SetParentWindow", dynlib: dllname.}
proc FlowPanel_GetShowing*(AObj: pointer): bool {.importc: "FlowPanel_GetShowing", dynlib: dllname.}
proc FlowPanel_GetAction*(AObj: pointer): pointer {.importc: "FlowPanel_GetAction", dynlib: dllname.}
proc FlowPanel_SetAction*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetAction", dynlib: dllname.}
proc FlowPanel_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "FlowPanel_GetBoundsRect", dynlib: dllname.}
proc FlowPanel_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "FlowPanel_SetBoundsRect", dynlib: dllname.}
proc FlowPanel_GetClientHeight*(AObj: pointer): int32 {.importc: "FlowPanel_GetClientHeight", dynlib: dllname.}
proc FlowPanel_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetClientHeight", dynlib: dllname.}
proc FlowPanel_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "FlowPanel_GetClientOrigin", dynlib: dllname.}
proc FlowPanel_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "FlowPanel_GetClientRect", dynlib: dllname.}
proc FlowPanel_GetClientWidth*(AObj: pointer): int32 {.importc: "FlowPanel_GetClientWidth", dynlib: dllname.}
proc FlowPanel_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetClientWidth", dynlib: dllname.}
proc FlowPanel_GetControlState*(AObj: pointer): TControlState {.importc: "FlowPanel_GetControlState", dynlib: dllname.}
proc FlowPanel_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "FlowPanel_SetControlState", dynlib: dllname.}
proc FlowPanel_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "FlowPanel_GetControlStyle", dynlib: dllname.}
proc FlowPanel_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "FlowPanel_SetControlStyle", dynlib: dllname.}
proc FlowPanel_GetFloating*(AObj: pointer): bool {.importc: "FlowPanel_GetFloating", dynlib: dllname.}
proc FlowPanel_GetParent*(AObj: pointer): pointer {.importc: "FlowPanel_GetParent", dynlib: dllname.}
proc FlowPanel_SetParent*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetParent", dynlib: dllname.}
proc FlowPanel_GetLeft*(AObj: pointer): int32 {.importc: "FlowPanel_GetLeft", dynlib: dllname.}
proc FlowPanel_SetLeft*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetLeft", dynlib: dllname.}
proc FlowPanel_GetTop*(AObj: pointer): int32 {.importc: "FlowPanel_GetTop", dynlib: dllname.}
proc FlowPanel_SetTop*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetTop", dynlib: dllname.}
proc FlowPanel_GetWidth*(AObj: pointer): int32 {.importc: "FlowPanel_GetWidth", dynlib: dllname.}
proc FlowPanel_SetWidth*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetWidth", dynlib: dllname.}
proc FlowPanel_GetHeight*(AObj: pointer): int32 {.importc: "FlowPanel_GetHeight", dynlib: dllname.}
proc FlowPanel_SetHeight*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetHeight", dynlib: dllname.}
proc FlowPanel_GetCursor*(AObj: pointer): TCursor {.importc: "FlowPanel_GetCursor", dynlib: dllname.}
proc FlowPanel_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "FlowPanel_SetCursor", dynlib: dllname.}
proc FlowPanel_GetHint*(AObj: pointer): cstring {.importc: "FlowPanel_GetHint", dynlib: dllname.}
proc FlowPanel_SetHint*(AObj: pointer, AValue: cstring) {.importc: "FlowPanel_SetHint", dynlib: dllname.}
proc FlowPanel_GetComponentCount*(AObj: pointer): int32 {.importc: "FlowPanel_GetComponentCount", dynlib: dllname.}
proc FlowPanel_GetComponentIndex*(AObj: pointer): int32 {.importc: "FlowPanel_GetComponentIndex", dynlib: dllname.}
proc FlowPanel_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "FlowPanel_SetComponentIndex", dynlib: dllname.}
proc FlowPanel_GetOwner*(AObj: pointer): pointer {.importc: "FlowPanel_GetOwner", dynlib: dllname.}
proc FlowPanel_GetName*(AObj: pointer): cstring {.importc: "FlowPanel_GetName", dynlib: dllname.}
proc FlowPanel_SetName*(AObj: pointer, AValue: cstring) {.importc: "FlowPanel_SetName", dynlib: dllname.}
proc FlowPanel_GetTag*(AObj: pointer): int {.importc: "FlowPanel_GetTag", dynlib: dllname.}
proc FlowPanel_SetTag*(AObj: pointer, AValue: int) {.importc: "FlowPanel_SetTag", dynlib: dllname.}
proc FlowPanel_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "FlowPanel_GetAnchorSideLeft", dynlib: dllname.}
proc FlowPanel_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetAnchorSideLeft", dynlib: dllname.}
proc FlowPanel_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "FlowPanel_GetAnchorSideTop", dynlib: dllname.}
proc FlowPanel_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetAnchorSideTop", dynlib: dllname.}
proc FlowPanel_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "FlowPanel_GetAnchorSideRight", dynlib: dllname.}
proc FlowPanel_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetAnchorSideRight", dynlib: dllname.}
proc FlowPanel_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "FlowPanel_GetAnchorSideBottom", dynlib: dllname.}
proc FlowPanel_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetAnchorSideBottom", dynlib: dllname.}
proc FlowPanel_GetChildSizing*(AObj: pointer): pointer {.importc: "FlowPanel_GetChildSizing", dynlib: dllname.}
proc FlowPanel_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetChildSizing", dynlib: dllname.}
proc FlowPanel_GetBorderSpacing*(AObj: pointer): pointer {.importc: "FlowPanel_GetBorderSpacing", dynlib: dllname.}
proc FlowPanel_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "FlowPanel_SetBorderSpacing", dynlib: dllname.}
proc FlowPanel_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "FlowPanel_GetDockClients", dynlib: dllname.}
proc FlowPanel_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "FlowPanel_GetControls", dynlib: dllname.}
proc FlowPanel_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "FlowPanel_GetComponents", dynlib: dllname.}
proc FlowPanel_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "FlowPanel_GetAnchorSide", dynlib: dllname.}
proc FlowPanel_StaticClassType*(): TClass {.importc: "FlowPanel_StaticClassType", dynlib: dllname.}
# ----------------- TCoolBar ----------------------
proc CoolBar_Create*(AOwner: pointer): pointer {.importc: "CoolBar_Create", dynlib: dllname.}
proc CoolBar_Free*(AObj: pointer) {.importc: "CoolBar_Free", dynlib: dllname.}
proc CoolBar_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "CoolBar_FlipChildren", dynlib: dllname.}
proc CoolBar_CanFocus*(AObj: pointer): bool {.importc: "CoolBar_CanFocus", dynlib: dllname.}
proc CoolBar_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "CoolBar_ContainsControl", dynlib: dllname.}
proc CoolBar_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "CoolBar_ControlAtPos", dynlib: dllname.}
proc CoolBar_DisableAlign*(AObj: pointer) {.importc: "CoolBar_DisableAlign", dynlib: dllname.}
proc CoolBar_EnableAlign*(AObj: pointer) {.importc: "CoolBar_EnableAlign", dynlib: dllname.}
proc CoolBar_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "CoolBar_FindChildControl", dynlib: dllname.}
proc CoolBar_Focused*(AObj: pointer): bool {.importc: "CoolBar_Focused", dynlib: dllname.}
proc CoolBar_HandleAllocated*(AObj: pointer): bool {.importc: "CoolBar_HandleAllocated", dynlib: dllname.}
proc CoolBar_Invalidate*(AObj: pointer) {.importc: "CoolBar_Invalidate", dynlib: dllname.}
proc CoolBar_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "CoolBar_PaintTo", dynlib: dllname.}
proc CoolBar_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "CoolBar_RemoveControl", dynlib: dllname.}
proc CoolBar_Realign*(AObj: pointer) {.importc: "CoolBar_Realign", dynlib: dllname.}
proc CoolBar_Repaint*(AObj: pointer) {.importc: "CoolBar_Repaint", dynlib: dllname.}
proc CoolBar_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "CoolBar_ScaleBy", dynlib: dllname.}
proc CoolBar_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "CoolBar_ScrollBy", dynlib: dllname.}
proc CoolBar_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "CoolBar_SetBounds", dynlib: dllname.}
proc CoolBar_SetFocus*(AObj: pointer) {.importc: "CoolBar_SetFocus", dynlib: dllname.}
proc CoolBar_Update*(AObj: pointer) {.importc: "CoolBar_Update", dynlib: dllname.}
proc CoolBar_BringToFront*(AObj: pointer) {.importc: "CoolBar_BringToFront", dynlib: dllname.}
proc CoolBar_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CoolBar_ClientToScreen", dynlib: dllname.}
proc CoolBar_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CoolBar_ClientToParent", dynlib: dllname.}
proc CoolBar_Dragging*(AObj: pointer): bool {.importc: "CoolBar_Dragging", dynlib: dllname.}
proc CoolBar_HasParent*(AObj: pointer): bool {.importc: "CoolBar_HasParent", dynlib: dllname.}
proc CoolBar_Hide*(AObj: pointer) {.importc: "CoolBar_Hide", dynlib: dllname.}
proc CoolBar_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "CoolBar_Perform", dynlib: dllname.}
proc CoolBar_Refresh*(AObj: pointer) {.importc: "CoolBar_Refresh", dynlib: dllname.}
proc CoolBar_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CoolBar_ScreenToClient", dynlib: dllname.}
proc CoolBar_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CoolBar_ParentToClient", dynlib: dllname.}
proc CoolBar_SendToBack*(AObj: pointer) {.importc: "CoolBar_SendToBack", dynlib: dllname.}
proc CoolBar_Show*(AObj: pointer) {.importc: "CoolBar_Show", dynlib: dllname.}
proc CoolBar_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "CoolBar_GetTextBuf", dynlib: dllname.}
proc CoolBar_GetTextLen*(AObj: pointer): int32 {.importc: "CoolBar_GetTextLen", dynlib: dllname.}
proc CoolBar_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "CoolBar_SetTextBuf", dynlib: dllname.}
proc CoolBar_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "CoolBar_FindComponent", dynlib: dllname.}
proc CoolBar_GetNamePath*(AObj: pointer): cstring {.importc: "CoolBar_GetNamePath", dynlib: dllname.}
proc CoolBar_Assign*(AObj: pointer, Source: pointer) {.importc: "CoolBar_Assign", dynlib: dllname.}
proc CoolBar_ClassType*(AObj: pointer): TClass {.importc: "CoolBar_ClassType", dynlib: dllname.}
proc CoolBar_ClassName*(AObj: pointer): cstring {.importc: "CoolBar_ClassName", dynlib: dllname.}
proc CoolBar_InstanceSize*(AObj: pointer): int32 {.importc: "CoolBar_InstanceSize", dynlib: dllname.}
proc CoolBar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "CoolBar_InheritsFrom", dynlib: dllname.}
proc CoolBar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "CoolBar_Equals", dynlib: dllname.}
proc CoolBar_GetHashCode*(AObj: pointer): int32 {.importc: "CoolBar_GetHashCode", dynlib: dllname.}
proc CoolBar_ToString*(AObj: pointer): cstring {.importc: "CoolBar_ToString", dynlib: dllname.}
proc CoolBar_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CoolBar_AnchorToNeighbour", dynlib: dllname.}
proc CoolBar_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CoolBar_AnchorParallel", dynlib: dllname.}
proc CoolBar_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CoolBar_AnchorHorizontalCenterTo", dynlib: dllname.}
proc CoolBar_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CoolBar_AnchorVerticalCenterTo", dynlib: dllname.}
proc CoolBar_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "CoolBar_AnchorSame", dynlib: dllname.}
proc CoolBar_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "CoolBar_AnchorAsAlign", dynlib: dllname.}
proc CoolBar_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "CoolBar_AnchorClient", dynlib: dllname.}
proc CoolBar_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_ScaleDesignToForm", dynlib: dllname.}
proc CoolBar_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_ScaleFormToDesign", dynlib: dllname.}
proc CoolBar_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_Scale96ToForm", dynlib: dllname.}
proc CoolBar_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_ScaleFormTo96", dynlib: dllname.}
proc CoolBar_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_Scale96ToFont", dynlib: dllname.}
proc CoolBar_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_ScaleFontTo96", dynlib: dllname.}
proc CoolBar_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_ScaleScreenToFont", dynlib: dllname.}
proc CoolBar_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_ScaleFontToScreen", dynlib: dllname.}
proc CoolBar_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_Scale96ToScreen", dynlib: dllname.}
proc CoolBar_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CoolBar_ScaleScreenTo96", dynlib: dllname.}
proc CoolBar_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "CoolBar_AutoAdjustLayout", dynlib: dllname.}
proc CoolBar_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "CoolBar_FixDesignFontsPPI", dynlib: dllname.}
proc CoolBar_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "CoolBar_ScaleFontsPPI", dynlib: dllname.}
proc CoolBar_GetAlign*(AObj: pointer): TAlign {.importc: "CoolBar_GetAlign", dynlib: dllname.}
proc CoolBar_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "CoolBar_SetAlign", dynlib: dllname.}
proc CoolBar_GetAnchors*(AObj: pointer): TAnchors {.importc: "CoolBar_GetAnchors", dynlib: dllname.}
proc CoolBar_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "CoolBar_SetAnchors", dynlib: dllname.}
proc CoolBar_GetAutoSize*(AObj: pointer): bool {.importc: "CoolBar_GetAutoSize", dynlib: dllname.}
proc CoolBar_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetAutoSize", dynlib: dllname.}
proc CoolBar_GetBandBorderStyle*(AObj: pointer): TBorderStyle {.importc: "CoolBar_GetBandBorderStyle", dynlib: dllname.}
proc CoolBar_SetBandBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "CoolBar_SetBandBorderStyle", dynlib: dllname.}
proc CoolBar_GetBandMaximize*(AObj: pointer): TCoolBandMaximize {.importc: "CoolBar_GetBandMaximize", dynlib: dllname.}
proc CoolBar_SetBandMaximize*(AObj: pointer, AValue: TCoolBandMaximize) {.importc: "CoolBar_SetBandMaximize", dynlib: dllname.}
proc CoolBar_GetBands*(AObj: pointer): pointer {.importc: "CoolBar_GetBands", dynlib: dllname.}
proc CoolBar_SetBands*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetBands", dynlib: dllname.}
proc CoolBar_GetBorderWidth*(AObj: pointer): int32 {.importc: "CoolBar_GetBorderWidth", dynlib: dllname.}
proc CoolBar_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetBorderWidth", dynlib: dllname.}
proc CoolBar_GetColor*(AObj: pointer): TColor {.importc: "CoolBar_GetColor", dynlib: dllname.}
proc CoolBar_SetColor*(AObj: pointer, AValue: TColor) {.importc: "CoolBar_SetColor", dynlib: dllname.}
proc CoolBar_GetConstraints*(AObj: pointer): pointer {.importc: "CoolBar_GetConstraints", dynlib: dllname.}
proc CoolBar_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetConstraints", dynlib: dllname.}
proc CoolBar_GetDockSite*(AObj: pointer): bool {.importc: "CoolBar_GetDockSite", dynlib: dllname.}
proc CoolBar_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetDockSite", dynlib: dllname.}
proc CoolBar_GetDoubleBuffered*(AObj: pointer): bool {.importc: "CoolBar_GetDoubleBuffered", dynlib: dllname.}
proc CoolBar_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetDoubleBuffered", dynlib: dllname.}
proc CoolBar_GetDragCursor*(AObj: pointer): TCursor {.importc: "CoolBar_GetDragCursor", dynlib: dllname.}
proc CoolBar_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "CoolBar_SetDragCursor", dynlib: dllname.}
proc CoolBar_GetDragKind*(AObj: pointer): TDragKind {.importc: "CoolBar_GetDragKind", dynlib: dllname.}
proc CoolBar_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "CoolBar_SetDragKind", dynlib: dllname.}
proc CoolBar_GetDragMode*(AObj: pointer): TDragMode {.importc: "CoolBar_GetDragMode", dynlib: dllname.}
proc CoolBar_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "CoolBar_SetDragMode", dynlib: dllname.}
proc CoolBar_GetEdgeBorders*(AObj: pointer): TEdgeBorders {.importc: "CoolBar_GetEdgeBorders", dynlib: dllname.}
proc CoolBar_SetEdgeBorders*(AObj: pointer, AValue: TEdgeBorders) {.importc: "CoolBar_SetEdgeBorders", dynlib: dllname.}
proc CoolBar_GetEdgeInner*(AObj: pointer): TEdgeStyle {.importc: "CoolBar_GetEdgeInner", dynlib: dllname.}
proc CoolBar_SetEdgeInner*(AObj: pointer, AValue: TEdgeStyle) {.importc: "CoolBar_SetEdgeInner", dynlib: dllname.}
proc CoolBar_GetEdgeOuter*(AObj: pointer): TEdgeStyle {.importc: "CoolBar_GetEdgeOuter", dynlib: dllname.}
proc CoolBar_SetEdgeOuter*(AObj: pointer, AValue: TEdgeStyle) {.importc: "CoolBar_SetEdgeOuter", dynlib: dllname.}
proc CoolBar_GetEnabled*(AObj: pointer): bool {.importc: "CoolBar_GetEnabled", dynlib: dllname.}
proc CoolBar_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetEnabled", dynlib: dllname.}
proc CoolBar_GetFixedSize*(AObj: pointer): bool {.importc: "CoolBar_GetFixedSize", dynlib: dllname.}
proc CoolBar_SetFixedSize*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetFixedSize", dynlib: dllname.}
proc CoolBar_GetFixedOrder*(AObj: pointer): bool {.importc: "CoolBar_GetFixedOrder", dynlib: dllname.}
proc CoolBar_SetFixedOrder*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetFixedOrder", dynlib: dllname.}
proc CoolBar_GetFont*(AObj: pointer): pointer {.importc: "CoolBar_GetFont", dynlib: dllname.}
proc CoolBar_SetFont*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetFont", dynlib: dllname.}
proc CoolBar_GetImages*(AObj: pointer): pointer {.importc: "CoolBar_GetImages", dynlib: dllname.}
proc CoolBar_SetImages*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetImages", dynlib: dllname.}
proc CoolBar_GetParentColor*(AObj: pointer): bool {.importc: "CoolBar_GetParentColor", dynlib: dllname.}
proc CoolBar_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetParentColor", dynlib: dllname.}
proc CoolBar_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "CoolBar_GetParentDoubleBuffered", dynlib: dllname.}
proc CoolBar_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetParentDoubleBuffered", dynlib: dllname.}
proc CoolBar_GetParentFont*(AObj: pointer): bool {.importc: "CoolBar_GetParentFont", dynlib: dllname.}
proc CoolBar_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetParentFont", dynlib: dllname.}
proc CoolBar_GetParentShowHint*(AObj: pointer): bool {.importc: "CoolBar_GetParentShowHint", dynlib: dllname.}
proc CoolBar_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetParentShowHint", dynlib: dllname.}
proc CoolBar_GetBitmap*(AObj: pointer): pointer {.importc: "CoolBar_GetBitmap", dynlib: dllname.}
proc CoolBar_SetBitmap*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetBitmap", dynlib: dllname.}
proc CoolBar_GetPopupMenu*(AObj: pointer): pointer {.importc: "CoolBar_GetPopupMenu", dynlib: dllname.}
proc CoolBar_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetPopupMenu", dynlib: dllname.}
proc CoolBar_GetShowHint*(AObj: pointer): bool {.importc: "CoolBar_GetShowHint", dynlib: dllname.}
proc CoolBar_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetShowHint", dynlib: dllname.}
proc CoolBar_GetShowText*(AObj: pointer): bool {.importc: "CoolBar_GetShowText", dynlib: dllname.}
proc CoolBar_SetShowText*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetShowText", dynlib: dllname.}
proc CoolBar_GetVertical*(AObj: pointer): bool {.importc: "CoolBar_GetVertical", dynlib: dllname.}
proc CoolBar_SetVertical*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetVertical", dynlib: dllname.}
proc CoolBar_GetVisible*(AObj: pointer): bool {.importc: "CoolBar_GetVisible", dynlib: dllname.}
proc CoolBar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetVisible", dynlib: dllname.}
proc CoolBar_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CoolBar_SetOnChange", dynlib: dllname.}
proc CoolBar_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CoolBar_SetOnClick", dynlib: dllname.}
proc CoolBar_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "CoolBar_SetOnContextPopup", dynlib: dllname.}
proc CoolBar_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CoolBar_SetOnDblClick", dynlib: dllname.}
proc CoolBar_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "CoolBar_SetOnDockDrop", dynlib: dllname.}
proc CoolBar_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "CoolBar_SetOnDragDrop", dynlib: dllname.}
proc CoolBar_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "CoolBar_SetOnDragOver", dynlib: dllname.}
proc CoolBar_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "CoolBar_SetOnEndDock", dynlib: dllname.}
proc CoolBar_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "CoolBar_SetOnEndDrag", dynlib: dllname.}
proc CoolBar_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "CoolBar_SetOnGetSiteInfo", dynlib: dllname.}
proc CoolBar_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CoolBar_SetOnMouseDown", dynlib: dllname.}
proc CoolBar_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CoolBar_SetOnMouseEnter", dynlib: dllname.}
proc CoolBar_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CoolBar_SetOnMouseLeave", dynlib: dllname.}
proc CoolBar_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "CoolBar_SetOnMouseMove", dynlib: dllname.}
proc CoolBar_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CoolBar_SetOnMouseUp", dynlib: dllname.}
proc CoolBar_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CoolBar_SetOnResize", dynlib: dllname.}
proc CoolBar_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "CoolBar_SetOnStartDock", dynlib: dllname.}
proc CoolBar_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "CoolBar_SetOnUnDock", dynlib: dllname.}
proc CoolBar_GetDockClientCount*(AObj: pointer): int32 {.importc: "CoolBar_GetDockClientCount", dynlib: dllname.}
proc CoolBar_GetMouseInClient*(AObj: pointer): bool {.importc: "CoolBar_GetMouseInClient", dynlib: dllname.}
proc CoolBar_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "CoolBar_GetVisibleDockClientCount", dynlib: dllname.}
proc CoolBar_GetBrush*(AObj: pointer): pointer {.importc: "CoolBar_GetBrush", dynlib: dllname.}
proc CoolBar_GetControlCount*(AObj: pointer): int32 {.importc: "CoolBar_GetControlCount", dynlib: dllname.}
proc CoolBar_GetHandle*(AObj: pointer): HWND {.importc: "CoolBar_GetHandle", dynlib: dllname.}
proc CoolBar_GetParentWindow*(AObj: pointer): HWND {.importc: "CoolBar_GetParentWindow", dynlib: dllname.}
proc CoolBar_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "CoolBar_SetParentWindow", dynlib: dllname.}
proc CoolBar_GetShowing*(AObj: pointer): bool {.importc: "CoolBar_GetShowing", dynlib: dllname.}
proc CoolBar_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "CoolBar_GetTabOrder", dynlib: dllname.}
proc CoolBar_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "CoolBar_SetTabOrder", dynlib: dllname.}
proc CoolBar_GetTabStop*(AObj: pointer): bool {.importc: "CoolBar_GetTabStop", dynlib: dllname.}
proc CoolBar_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetTabStop", dynlib: dllname.}
proc CoolBar_GetUseDockManager*(AObj: pointer): bool {.importc: "CoolBar_GetUseDockManager", dynlib: dllname.}
proc CoolBar_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "CoolBar_SetUseDockManager", dynlib: dllname.}
proc CoolBar_GetAction*(AObj: pointer): pointer {.importc: "CoolBar_GetAction", dynlib: dllname.}
proc CoolBar_SetAction*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetAction", dynlib: dllname.}
proc CoolBar_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "CoolBar_GetBiDiMode", dynlib: dllname.}
proc CoolBar_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "CoolBar_SetBiDiMode", dynlib: dllname.}
proc CoolBar_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "CoolBar_GetBoundsRect", dynlib: dllname.}
proc CoolBar_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "CoolBar_SetBoundsRect", dynlib: dllname.}
proc CoolBar_GetClientHeight*(AObj: pointer): int32 {.importc: "CoolBar_GetClientHeight", dynlib: dllname.}
proc CoolBar_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetClientHeight", dynlib: dllname.}
proc CoolBar_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "CoolBar_GetClientOrigin", dynlib: dllname.}
proc CoolBar_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "CoolBar_GetClientRect", dynlib: dllname.}
proc CoolBar_GetClientWidth*(AObj: pointer): int32 {.importc: "CoolBar_GetClientWidth", dynlib: dllname.}
proc CoolBar_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetClientWidth", dynlib: dllname.}
proc CoolBar_GetControlState*(AObj: pointer): TControlState {.importc: "CoolBar_GetControlState", dynlib: dllname.}
proc CoolBar_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "CoolBar_SetControlState", dynlib: dllname.}
proc CoolBar_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "CoolBar_GetControlStyle", dynlib: dllname.}
proc CoolBar_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "CoolBar_SetControlStyle", dynlib: dllname.}
proc CoolBar_GetFloating*(AObj: pointer): bool {.importc: "CoolBar_GetFloating", dynlib: dllname.}
proc CoolBar_GetParent*(AObj: pointer): pointer {.importc: "CoolBar_GetParent", dynlib: dllname.}
proc CoolBar_SetParent*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetParent", dynlib: dllname.}
proc CoolBar_GetLeft*(AObj: pointer): int32 {.importc: "CoolBar_GetLeft", dynlib: dllname.}
proc CoolBar_SetLeft*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetLeft", dynlib: dllname.}
proc CoolBar_GetTop*(AObj: pointer): int32 {.importc: "CoolBar_GetTop", dynlib: dllname.}
proc CoolBar_SetTop*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetTop", dynlib: dllname.}
proc CoolBar_GetWidth*(AObj: pointer): int32 {.importc: "CoolBar_GetWidth", dynlib: dllname.}
proc CoolBar_SetWidth*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetWidth", dynlib: dllname.}
proc CoolBar_GetHeight*(AObj: pointer): int32 {.importc: "CoolBar_GetHeight", dynlib: dllname.}
proc CoolBar_SetHeight*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetHeight", dynlib: dllname.}
proc CoolBar_GetCursor*(AObj: pointer): TCursor {.importc: "CoolBar_GetCursor", dynlib: dllname.}
proc CoolBar_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "CoolBar_SetCursor", dynlib: dllname.}
proc CoolBar_GetHint*(AObj: pointer): cstring {.importc: "CoolBar_GetHint", dynlib: dllname.}
proc CoolBar_SetHint*(AObj: pointer, AValue: cstring) {.importc: "CoolBar_SetHint", dynlib: dllname.}
proc CoolBar_GetComponentCount*(AObj: pointer): int32 {.importc: "CoolBar_GetComponentCount", dynlib: dllname.}
proc CoolBar_GetComponentIndex*(AObj: pointer): int32 {.importc: "CoolBar_GetComponentIndex", dynlib: dllname.}
proc CoolBar_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "CoolBar_SetComponentIndex", dynlib: dllname.}
proc CoolBar_GetOwner*(AObj: pointer): pointer {.importc: "CoolBar_GetOwner", dynlib: dllname.}
proc CoolBar_GetName*(AObj: pointer): cstring {.importc: "CoolBar_GetName", dynlib: dllname.}
proc CoolBar_SetName*(AObj: pointer, AValue: cstring) {.importc: "CoolBar_SetName", dynlib: dllname.}
proc CoolBar_GetTag*(AObj: pointer): int {.importc: "CoolBar_GetTag", dynlib: dllname.}
proc CoolBar_SetTag*(AObj: pointer, AValue: int) {.importc: "CoolBar_SetTag", dynlib: dllname.}
proc CoolBar_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "CoolBar_GetAnchorSideLeft", dynlib: dllname.}
proc CoolBar_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetAnchorSideLeft", dynlib: dllname.}
proc CoolBar_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "CoolBar_GetAnchorSideTop", dynlib: dllname.}
proc CoolBar_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetAnchorSideTop", dynlib: dllname.}
proc CoolBar_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "CoolBar_GetAnchorSideRight", dynlib: dllname.}
proc CoolBar_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetAnchorSideRight", dynlib: dllname.}
proc CoolBar_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "CoolBar_GetAnchorSideBottom", dynlib: dllname.}
proc CoolBar_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetAnchorSideBottom", dynlib: dllname.}
proc CoolBar_GetChildSizing*(AObj: pointer): pointer {.importc: "CoolBar_GetChildSizing", dynlib: dllname.}
proc CoolBar_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetChildSizing", dynlib: dllname.}
proc CoolBar_GetBorderSpacing*(AObj: pointer): pointer {.importc: "CoolBar_GetBorderSpacing", dynlib: dllname.}
proc CoolBar_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "CoolBar_SetBorderSpacing", dynlib: dllname.}
proc CoolBar_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "CoolBar_GetDockClients", dynlib: dllname.}
proc CoolBar_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "CoolBar_GetControls", dynlib: dllname.}
proc CoolBar_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "CoolBar_GetComponents", dynlib: dllname.}
proc CoolBar_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "CoolBar_GetAnchorSide", dynlib: dllname.}
proc CoolBar_StaticClassType*(): TClass {.importc: "CoolBar_StaticClassType", dynlib: dllname.}
# ----------------- TCoolBands ----------------------
proc CoolBands_Create*(AOwner: pointer): pointer {.importc: "CoolBands_Create", dynlib: dllname.}
proc CoolBands_Free*(AObj: pointer) {.importc: "CoolBands_Free", dynlib: dllname.}
proc CoolBands_Add*(AObj: pointer): pointer {.importc: "CoolBands_Add", dynlib: dllname.}
proc CoolBands_FindBand*(AObj: pointer, AControl: pointer): pointer {.importc: "CoolBands_FindBand", dynlib: dllname.}
proc CoolBands_Owner*(AObj: pointer): pointer {.importc: "CoolBands_Owner", dynlib: dllname.}
proc CoolBands_Assign*(AObj: pointer, Source: pointer) {.importc: "CoolBands_Assign", dynlib: dllname.}
proc CoolBands_BeginUpdate*(AObj: pointer) {.importc: "CoolBands_BeginUpdate", dynlib: dllname.}
proc CoolBands_Clear*(AObj: pointer) {.importc: "CoolBands_Clear", dynlib: dllname.}
proc CoolBands_Delete*(AObj: pointer, Index: int32) {.importc: "CoolBands_Delete", dynlib: dllname.}
proc CoolBands_EndUpdate*(AObj: pointer) {.importc: "CoolBands_EndUpdate", dynlib: dllname.}
proc CoolBands_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "CoolBands_FindItemID", dynlib: dllname.}
proc CoolBands_GetNamePath*(AObj: pointer): cstring {.importc: "CoolBands_GetNamePath", dynlib: dllname.}
proc CoolBands_Insert*(AObj: pointer, Index: int32): pointer {.importc: "CoolBands_Insert", dynlib: dllname.}
proc CoolBands_ClassType*(AObj: pointer): TClass {.importc: "CoolBands_ClassType", dynlib: dllname.}
proc CoolBands_ClassName*(AObj: pointer): cstring {.importc: "CoolBands_ClassName", dynlib: dllname.}
proc CoolBands_InstanceSize*(AObj: pointer): int32 {.importc: "CoolBands_InstanceSize", dynlib: dllname.}
proc CoolBands_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "CoolBands_InheritsFrom", dynlib: dllname.}
proc CoolBands_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "CoolBands_Equals", dynlib: dllname.}
proc CoolBands_GetHashCode*(AObj: pointer): int32 {.importc: "CoolBands_GetHashCode", dynlib: dllname.}
proc CoolBands_ToString*(AObj: pointer): cstring {.importc: "CoolBands_ToString", dynlib: dllname.}
proc CoolBands_GetCount*(AObj: pointer): int32 {.importc: "CoolBands_GetCount", dynlib: dllname.}
proc CoolBands_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "CoolBands_GetItems", dynlib: dllname.}
proc CoolBands_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "CoolBands_SetItems", dynlib: dllname.}
proc CoolBands_StaticClassType*(): TClass {.importc: "CoolBands_StaticClassType", dynlib: dllname.}
# ----------------- TCoolBand ----------------------
proc CoolBand_Create*(AOwner: pointer): pointer {.importc: "CoolBand_Create", dynlib: dllname.}
proc CoolBand_Free*(AObj: pointer) {.importc: "CoolBand_Free", dynlib: dllname.}
proc CoolBand_Assign*(AObj: pointer, Source: pointer) {.importc: "CoolBand_Assign", dynlib: dllname.}
proc CoolBand_GetNamePath*(AObj: pointer): cstring {.importc: "CoolBand_GetNamePath", dynlib: dllname.}
proc CoolBand_ClassType*(AObj: pointer): TClass {.importc: "CoolBand_ClassType", dynlib: dllname.}
proc CoolBand_ClassName*(AObj: pointer): cstring {.importc: "CoolBand_ClassName", dynlib: dllname.}
proc CoolBand_InstanceSize*(AObj: pointer): int32 {.importc: "CoolBand_InstanceSize", dynlib: dllname.}
proc CoolBand_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "CoolBand_InheritsFrom", dynlib: dllname.}
proc CoolBand_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "CoolBand_Equals", dynlib: dllname.}
proc CoolBand_GetHashCode*(AObj: pointer): int32 {.importc: "CoolBand_GetHashCode", dynlib: dllname.}
proc CoolBand_ToString*(AObj: pointer): cstring {.importc: "CoolBand_ToString", dynlib: dllname.}
proc CoolBand_GetHeight*(AObj: pointer): int32 {.importc: "CoolBand_GetHeight", dynlib: dllname.}
proc CoolBand_GetBitmap*(AObj: pointer): pointer {.importc: "CoolBand_GetBitmap", dynlib: dllname.}
proc CoolBand_SetBitmap*(AObj: pointer, AValue: pointer) {.importc: "CoolBand_SetBitmap", dynlib: dllname.}
proc CoolBand_GetBorderStyle*(AObj: pointer): TBorderStyle {.importc: "CoolBand_GetBorderStyle", dynlib: dllname.}
proc CoolBand_SetBorderStyle*(AObj: pointer, AValue: TBorderStyle) {.importc: "CoolBand_SetBorderStyle", dynlib: dllname.}
proc CoolBand_GetBreak*(AObj: pointer): bool {.importc: "CoolBand_GetBreak", dynlib: dllname.}
proc CoolBand_SetBreak*(AObj: pointer, AValue: bool) {.importc: "CoolBand_SetBreak", dynlib: dllname.}
proc CoolBand_GetColor*(AObj: pointer): TColor {.importc: "CoolBand_GetColor", dynlib: dllname.}
proc CoolBand_SetColor*(AObj: pointer, AValue: TColor) {.importc: "CoolBand_SetColor", dynlib: dllname.}
proc CoolBand_GetControl*(AObj: pointer): pointer {.importc: "CoolBand_GetControl", dynlib: dllname.}
proc CoolBand_SetControl*(AObj: pointer, AValue: pointer) {.importc: "CoolBand_SetControl", dynlib: dllname.}
proc CoolBand_GetFixedBackground*(AObj: pointer): bool {.importc: "CoolBand_GetFixedBackground", dynlib: dllname.}
proc CoolBand_SetFixedBackground*(AObj: pointer, AValue: bool) {.importc: "CoolBand_SetFixedBackground", dynlib: dllname.}
proc CoolBand_GetFixedSize*(AObj: pointer): bool {.importc: "CoolBand_GetFixedSize", dynlib: dllname.}
proc CoolBand_SetFixedSize*(AObj: pointer, AValue: bool) {.importc: "CoolBand_SetFixedSize", dynlib: dllname.}
proc CoolBand_GetHorizontalOnly*(AObj: pointer): bool {.importc: "CoolBand_GetHorizontalOnly", dynlib: dllname.}
proc CoolBand_SetHorizontalOnly*(AObj: pointer, AValue: bool) {.importc: "CoolBand_SetHorizontalOnly", dynlib: dllname.}
proc CoolBand_GetImageIndex*(AObj: pointer): int32 {.importc: "CoolBand_GetImageIndex", dynlib: dllname.}
proc CoolBand_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "CoolBand_SetImageIndex", dynlib: dllname.}
proc CoolBand_GetMinHeight*(AObj: pointer): int32 {.importc: "CoolBand_GetMinHeight", dynlib: dllname.}
proc CoolBand_SetMinHeight*(AObj: pointer, AValue: int32) {.importc: "CoolBand_SetMinHeight", dynlib: dllname.}
proc CoolBand_GetMinWidth*(AObj: pointer): int32 {.importc: "CoolBand_GetMinWidth", dynlib: dllname.}
proc CoolBand_SetMinWidth*(AObj: pointer, AValue: int32) {.importc: "CoolBand_SetMinWidth", dynlib: dllname.}
proc CoolBand_GetParentColor*(AObj: pointer): bool {.importc: "CoolBand_GetParentColor", dynlib: dllname.}
proc CoolBand_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "CoolBand_SetParentColor", dynlib: dllname.}
proc CoolBand_GetParentBitmap*(AObj: pointer): bool {.importc: "CoolBand_GetParentBitmap", dynlib: dllname.}
proc CoolBand_SetParentBitmap*(AObj: pointer, AValue: bool) {.importc: "CoolBand_SetParentBitmap", dynlib: dllname.}
proc CoolBand_GetText*(AObj: pointer): cstring {.importc: "CoolBand_GetText", dynlib: dllname.}
proc CoolBand_SetText*(AObj: pointer, AValue: cstring) {.importc: "CoolBand_SetText", dynlib: dllname.}
proc CoolBand_GetVisible*(AObj: pointer): bool {.importc: "CoolBand_GetVisible", dynlib: dllname.}
proc CoolBand_SetVisible*(AObj: pointer, AValue: bool) {.importc: "CoolBand_SetVisible", dynlib: dllname.}
proc CoolBand_GetWidth*(AObj: pointer): int32 {.importc: "CoolBand_GetWidth", dynlib: dllname.}
proc CoolBand_SetWidth*(AObj: pointer, AValue: int32) {.importc: "CoolBand_SetWidth", dynlib: dllname.}
proc CoolBand_GetCollection*(AObj: pointer): pointer {.importc: "CoolBand_GetCollection", dynlib: dllname.}
proc CoolBand_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "CoolBand_SetCollection", dynlib: dllname.}
proc CoolBand_GetIndex*(AObj: pointer): int32 {.importc: "CoolBand_GetIndex", dynlib: dllname.}
proc CoolBand_SetIndex*(AObj: pointer, AValue: int32) {.importc: "CoolBand_SetIndex", dynlib: dllname.}
proc CoolBand_GetDisplayName*(AObj: pointer): cstring {.importc: "CoolBand_GetDisplayName", dynlib: dllname.}
proc CoolBand_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "CoolBand_SetDisplayName", dynlib: dllname.}
proc CoolBand_StaticClassType*(): TClass {.importc: "CoolBand_StaticClassType", dynlib: dllname.}
# ----------------- TCollection ----------------------
proc Collection_Create*(AOwner: pointer): pointer {.importc: "Collection_Create", dynlib: dllname.}
proc Collection_Free*(AObj: pointer) {.importc: "Collection_Free", dynlib: dllname.}
proc Collection_Owner*(AObj: pointer): pointer {.importc: "Collection_Owner", dynlib: dllname.}
proc Collection_Add*(AObj: pointer): pointer {.importc: "Collection_Add", dynlib: dllname.}
proc Collection_Assign*(AObj: pointer, Source: pointer) {.importc: "Collection_Assign", dynlib: dllname.}
proc Collection_BeginUpdate*(AObj: pointer) {.importc: "Collection_BeginUpdate", dynlib: dllname.}
proc Collection_Clear*(AObj: pointer) {.importc: "Collection_Clear", dynlib: dllname.}
proc Collection_Delete*(AObj: pointer, Index: int32) {.importc: "Collection_Delete", dynlib: dllname.}
proc Collection_EndUpdate*(AObj: pointer) {.importc: "Collection_EndUpdate", dynlib: dllname.}
proc Collection_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "Collection_FindItemID", dynlib: dllname.}
proc Collection_GetNamePath*(AObj: pointer): cstring {.importc: "Collection_GetNamePath", dynlib: dllname.}
proc Collection_Insert*(AObj: pointer, Index: int32): pointer {.importc: "Collection_Insert", dynlib: dllname.}
proc Collection_ClassType*(AObj: pointer): TClass {.importc: "Collection_ClassType", dynlib: dllname.}
proc Collection_ClassName*(AObj: pointer): cstring {.importc: "Collection_ClassName", dynlib: dllname.}
proc Collection_InstanceSize*(AObj: pointer): int32 {.importc: "Collection_InstanceSize", dynlib: dllname.}
proc Collection_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Collection_InheritsFrom", dynlib: dllname.}
proc Collection_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Collection_Equals", dynlib: dllname.}
proc Collection_GetHashCode*(AObj: pointer): int32 {.importc: "Collection_GetHashCode", dynlib: dllname.}
proc Collection_ToString*(AObj: pointer): cstring {.importc: "Collection_ToString", dynlib: dllname.}
proc Collection_GetCount*(AObj: pointer): int32 {.importc: "Collection_GetCount", dynlib: dllname.}
proc Collection_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "Collection_GetItems", dynlib: dllname.}
proc Collection_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "Collection_SetItems", dynlib: dllname.}
proc Collection_StaticClassType*(): TClass {.importc: "Collection_StaticClassType", dynlib: dllname.}
# ----------------- TPrinter ----------------------
proc Printer_Create*(): pointer {.importc: "Printer_Create", dynlib: dllname.}
proc Printer_Free*(AObj: pointer) {.importc: "Printer_Free", dynlib: dllname.}
proc Printer_Abort*(AObj: pointer) {.importc: "Printer_Abort", dynlib: dllname.}
proc Printer_BeginDoc*(AObj: pointer) {.importc: "Printer_BeginDoc", dynlib: dllname.}
proc Printer_EndDoc*(AObj: pointer) {.importc: "Printer_EndDoc", dynlib: dllname.}
proc Printer_NewPage*(AObj: pointer) {.importc: "Printer_NewPage", dynlib: dllname.}
proc Printer_Refresh*(AObj: pointer) {.importc: "Printer_Refresh", dynlib: dllname.}
proc Printer_ClassType*(AObj: pointer): TClass {.importc: "Printer_ClassType", dynlib: dllname.}
proc Printer_ClassName*(AObj: pointer): cstring {.importc: "Printer_ClassName", dynlib: dllname.}
proc Printer_InstanceSize*(AObj: pointer): int32 {.importc: "Printer_InstanceSize", dynlib: dllname.}
proc Printer_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Printer_InheritsFrom", dynlib: dllname.}
proc Printer_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Printer_Equals", dynlib: dllname.}
proc Printer_GetHashCode*(AObj: pointer): int32 {.importc: "Printer_GetHashCode", dynlib: dllname.}
proc Printer_ToString*(AObj: pointer): cstring {.importc: "Printer_ToString", dynlib: dllname.}
proc Printer_GetAborted*(AObj: pointer): bool {.importc: "Printer_GetAborted", dynlib: dllname.}
proc Printer_GetCanvas*(AObj: pointer): pointer {.importc: "Printer_GetCanvas", dynlib: dllname.}
proc Printer_GetCopies*(AObj: pointer): int32 {.importc: "Printer_GetCopies", dynlib: dllname.}
proc Printer_SetCopies*(AObj: pointer, AValue: int32) {.importc: "Printer_SetCopies", dynlib: dllname.}
proc Printer_GetFonts*(AObj: pointer): pointer {.importc: "Printer_GetFonts", dynlib: dllname.}
proc Printer_GetOrientation*(AObj: pointer): TPrinterOrientation {.importc: "Printer_GetOrientation", dynlib: dllname.}
proc Printer_SetOrientation*(AObj: pointer, AValue: TPrinterOrientation) {.importc: "Printer_SetOrientation", dynlib: dllname.}
proc Printer_GetPageHeight*(AObj: pointer): int32 {.importc: "Printer_GetPageHeight", dynlib: dllname.}
proc Printer_GetPageWidth*(AObj: pointer): int32 {.importc: "Printer_GetPageWidth", dynlib: dllname.}
proc Printer_GetPageNumber*(AObj: pointer): int32 {.importc: "Printer_GetPageNumber", dynlib: dllname.}
proc Printer_GetPrinterIndex*(AObj: pointer): int32 {.importc: "Printer_GetPrinterIndex", dynlib: dllname.}
proc Printer_SetPrinterIndex*(AObj: pointer, AValue: int32) {.importc: "Printer_SetPrinterIndex", dynlib: dllname.}
proc Printer_GetPrinting*(AObj: pointer): bool {.importc: "Printer_GetPrinting", dynlib: dllname.}
proc Printer_GetPrinters*(AObj: pointer): pointer {.importc: "Printer_GetPrinters", dynlib: dllname.}
proc Printer_GetTitle*(AObj: pointer): cstring {.importc: "Printer_GetTitle", dynlib: dllname.}
proc Printer_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "Printer_SetTitle", dynlib: dllname.}
proc Printer_StaticClassType*(): TClass {.importc: "Printer_StaticClassType", dynlib: dllname.}
proc Printer_SetPrinter*(Obj: pointer, aName: cstring) {.importc: "Printer_SetPrinter", dynlib: dllname.}
# ----------------- TTaskDialog ----------------------
proc TaskDialog_Create*(AOwner: pointer): pointer {.importc: "TaskDialog_Create", dynlib: dllname.}
proc TaskDialog_Free*(AObj: pointer) {.importc: "TaskDialog_Free", dynlib: dllname.}
proc TaskDialog_Execute*(AObj: pointer): bool {.importc: "TaskDialog_Execute", dynlib: dllname.}
proc TaskDialog_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "TaskDialog_FindComponent", dynlib: dllname.}
proc TaskDialog_GetNamePath*(AObj: pointer): cstring {.importc: "TaskDialog_GetNamePath", dynlib: dllname.}
proc TaskDialog_HasParent*(AObj: pointer): bool {.importc: "TaskDialog_HasParent", dynlib: dllname.}
proc TaskDialog_Assign*(AObj: pointer, Source: pointer) {.importc: "TaskDialog_Assign", dynlib: dllname.}
proc TaskDialog_ClassType*(AObj: pointer): TClass {.importc: "TaskDialog_ClassType", dynlib: dllname.}
proc TaskDialog_ClassName*(AObj: pointer): cstring {.importc: "TaskDialog_ClassName", dynlib: dllname.}
proc TaskDialog_InstanceSize*(AObj: pointer): int32 {.importc: "TaskDialog_InstanceSize", dynlib: dllname.}
proc TaskDialog_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TaskDialog_InheritsFrom", dynlib: dllname.}
proc TaskDialog_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TaskDialog_Equals", dynlib: dllname.}
proc TaskDialog_GetHashCode*(AObj: pointer): int32 {.importc: "TaskDialog_GetHashCode", dynlib: dllname.}
proc TaskDialog_ToString*(AObj: pointer): cstring {.importc: "TaskDialog_ToString", dynlib: dllname.}
proc TaskDialog_GetButtons*(AObj: pointer): pointer {.importc: "TaskDialog_GetButtons", dynlib: dllname.}
proc TaskDialog_SetButtons*(AObj: pointer, AValue: pointer) {.importc: "TaskDialog_SetButtons", dynlib: dllname.}
proc TaskDialog_GetCaption*(AObj: pointer): cstring {.importc: "TaskDialog_GetCaption", dynlib: dllname.}
proc TaskDialog_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetCaption", dynlib: dllname.}
proc TaskDialog_GetCommonButtons*(AObj: pointer): TTaskDialogCommonButtons {.importc: "TaskDialog_GetCommonButtons", dynlib: dllname.}
proc TaskDialog_SetCommonButtons*(AObj: pointer, AValue: TTaskDialogCommonButtons) {.importc: "TaskDialog_SetCommonButtons", dynlib: dllname.}
proc TaskDialog_GetDefaultButton*(AObj: pointer): TTaskDialogCommonButton {.importc: "TaskDialog_GetDefaultButton", dynlib: dllname.}
proc TaskDialog_SetDefaultButton*(AObj: pointer, AValue: TTaskDialogCommonButton) {.importc: "TaskDialog_SetDefaultButton", dynlib: dllname.}
proc TaskDialog_GetExpandButtonCaption*(AObj: pointer): cstring {.importc: "TaskDialog_GetExpandButtonCaption", dynlib: dllname.}
proc TaskDialog_SetExpandButtonCaption*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetExpandButtonCaption", dynlib: dllname.}
proc TaskDialog_GetExpandedText*(AObj: pointer): cstring {.importc: "TaskDialog_GetExpandedText", dynlib: dllname.}
proc TaskDialog_SetExpandedText*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetExpandedText", dynlib: dllname.}
proc TaskDialog_GetFlags*(AObj: pointer): TTaskDialogFlags {.importc: "TaskDialog_GetFlags", dynlib: dllname.}
proc TaskDialog_SetFlags*(AObj: pointer, AValue: TTaskDialogFlags) {.importc: "TaskDialog_SetFlags", dynlib: dllname.}
proc TaskDialog_GetFooterIcon*(AObj: pointer): TTaskDialogIcon {.importc: "TaskDialog_GetFooterIcon", dynlib: dllname.}
proc TaskDialog_SetFooterIcon*(AObj: pointer, AValue: TTaskDialogIcon) {.importc: "TaskDialog_SetFooterIcon", dynlib: dllname.}
proc TaskDialog_GetFooterText*(AObj: pointer): cstring {.importc: "TaskDialog_GetFooterText", dynlib: dllname.}
proc TaskDialog_SetFooterText*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetFooterText", dynlib: dllname.}
proc TaskDialog_GetMainIcon*(AObj: pointer): TTaskDialogIcon {.importc: "TaskDialog_GetMainIcon", dynlib: dllname.}
proc TaskDialog_SetMainIcon*(AObj: pointer, AValue: TTaskDialogIcon) {.importc: "TaskDialog_SetMainIcon", dynlib: dllname.}
proc TaskDialog_GetRadioButtons*(AObj: pointer): pointer {.importc: "TaskDialog_GetRadioButtons", dynlib: dllname.}
proc TaskDialog_SetRadioButtons*(AObj: pointer, AValue: pointer) {.importc: "TaskDialog_SetRadioButtons", dynlib: dllname.}
proc TaskDialog_GetText*(AObj: pointer): cstring {.importc: "TaskDialog_GetText", dynlib: dllname.}
proc TaskDialog_SetText*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetText", dynlib: dllname.}
proc TaskDialog_GetTitle*(AObj: pointer): cstring {.importc: "TaskDialog_GetTitle", dynlib: dllname.}
proc TaskDialog_SetTitle*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetTitle", dynlib: dllname.}
proc TaskDialog_GetVerificationText*(AObj: pointer): cstring {.importc: "TaskDialog_GetVerificationText", dynlib: dllname.}
proc TaskDialog_SetVerificationText*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetVerificationText", dynlib: dllname.}
proc TaskDialog_SetOnButtonClicked*(AObj: pointer, AEventId: TTaskDlgClickEvent) {.importc: "TaskDialog_SetOnButtonClicked", dynlib: dllname.}
proc TaskDialog_GetButton*(AObj: pointer): pointer {.importc: "TaskDialog_GetButton", dynlib: dllname.}
proc TaskDialog_SetButton*(AObj: pointer, AValue: pointer) {.importc: "TaskDialog_SetButton", dynlib: dllname.}
proc TaskDialog_GetModalResult*(AObj: pointer): TModalResult {.importc: "TaskDialog_GetModalResult", dynlib: dllname.}
proc TaskDialog_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "TaskDialog_SetModalResult", dynlib: dllname.}
proc TaskDialog_GetRadioButton*(AObj: pointer): pointer {.importc: "TaskDialog_GetRadioButton", dynlib: dllname.}
proc TaskDialog_GetComponentCount*(AObj: pointer): int32 {.importc: "TaskDialog_GetComponentCount", dynlib: dllname.}
proc TaskDialog_GetComponentIndex*(AObj: pointer): int32 {.importc: "TaskDialog_GetComponentIndex", dynlib: dllname.}
proc TaskDialog_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "TaskDialog_SetComponentIndex", dynlib: dllname.}
proc TaskDialog_GetOwner*(AObj: pointer): pointer {.importc: "TaskDialog_GetOwner", dynlib: dllname.}
proc TaskDialog_GetName*(AObj: pointer): cstring {.importc: "TaskDialog_GetName", dynlib: dllname.}
proc TaskDialog_SetName*(AObj: pointer, AValue: cstring) {.importc: "TaskDialog_SetName", dynlib: dllname.}
proc TaskDialog_GetTag*(AObj: pointer): int {.importc: "TaskDialog_GetTag", dynlib: dllname.}
proc TaskDialog_SetTag*(AObj: pointer, AValue: int) {.importc: "TaskDialog_SetTag", dynlib: dllname.}
proc TaskDialog_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "TaskDialog_GetComponents", dynlib: dllname.}
proc TaskDialog_StaticClassType*(): TClass {.importc: "TaskDialog_StaticClassType", dynlib: dllname.}
# ----------------- TTaskDialogButtons ----------------------
proc TaskDialogButtons_Add*(AObj: pointer): pointer {.importc: "TaskDialogButtons_Add", dynlib: dllname.}
proc TaskDialogButtons_FindButton*(AObj: pointer, AModalResult: TModalResult): pointer {.importc: "TaskDialogButtons_FindButton", dynlib: dllname.}
proc TaskDialogButtons_Owner*(AObj: pointer): pointer {.importc: "TaskDialogButtons_Owner", dynlib: dllname.}
proc TaskDialogButtons_Assign*(AObj: pointer, Source: pointer) {.importc: "TaskDialogButtons_Assign", dynlib: dllname.}
proc TaskDialogButtons_BeginUpdate*(AObj: pointer) {.importc: "TaskDialogButtons_BeginUpdate", dynlib: dllname.}
proc TaskDialogButtons_Clear*(AObj: pointer) {.importc: "TaskDialogButtons_Clear", dynlib: dllname.}
proc TaskDialogButtons_Delete*(AObj: pointer, Index: int32) {.importc: "TaskDialogButtons_Delete", dynlib: dllname.}
proc TaskDialogButtons_EndUpdate*(AObj: pointer) {.importc: "TaskDialogButtons_EndUpdate", dynlib: dllname.}
proc TaskDialogButtons_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "TaskDialogButtons_FindItemID", dynlib: dllname.}
proc TaskDialogButtons_GetNamePath*(AObj: pointer): cstring {.importc: "TaskDialogButtons_GetNamePath", dynlib: dllname.}
proc TaskDialogButtons_Insert*(AObj: pointer, Index: int32): pointer {.importc: "TaskDialogButtons_Insert", dynlib: dllname.}
proc TaskDialogButtons_ClassType*(AObj: pointer): TClass {.importc: "TaskDialogButtons_ClassType", dynlib: dllname.}
proc TaskDialogButtons_ClassName*(AObj: pointer): cstring {.importc: "TaskDialogButtons_ClassName", dynlib: dllname.}
proc TaskDialogButtons_InstanceSize*(AObj: pointer): int32 {.importc: "TaskDialogButtons_InstanceSize", dynlib: dllname.}
proc TaskDialogButtons_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TaskDialogButtons_InheritsFrom", dynlib: dllname.}
proc TaskDialogButtons_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TaskDialogButtons_Equals", dynlib: dllname.}
proc TaskDialogButtons_GetHashCode*(AObj: pointer): int32 {.importc: "TaskDialogButtons_GetHashCode", dynlib: dllname.}
proc TaskDialogButtons_ToString*(AObj: pointer): cstring {.importc: "TaskDialogButtons_ToString", dynlib: dllname.}
proc TaskDialogButtons_GetDefaultButton*(AObj: pointer): pointer {.importc: "TaskDialogButtons_GetDefaultButton", dynlib: dllname.}
proc TaskDialogButtons_SetDefaultButton*(AObj: pointer, AValue: pointer) {.importc: "TaskDialogButtons_SetDefaultButton", dynlib: dllname.}
proc TaskDialogButtons_GetCount*(AObj: pointer): int32 {.importc: "TaskDialogButtons_GetCount", dynlib: dllname.}
proc TaskDialogButtons_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "TaskDialogButtons_GetItems", dynlib: dllname.}
proc TaskDialogButtons_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "TaskDialogButtons_SetItems", dynlib: dllname.}
proc TaskDialogButtons_StaticClassType*(): TClass {.importc: "TaskDialogButtons_StaticClassType", dynlib: dllname.}
# ----------------- TTaskDialogButtonItem ----------------------
proc TaskDialogButtonItem_Create*(AOwner: pointer): pointer {.importc: "TaskDialogButtonItem_Create", dynlib: dllname.}
proc TaskDialogButtonItem_Free*(AObj: pointer) {.importc: "TaskDialogButtonItem_Free", dynlib: dllname.}
proc TaskDialogButtonItem_GetNamePath*(AObj: pointer): cstring {.importc: "TaskDialogButtonItem_GetNamePath", dynlib: dllname.}
proc TaskDialogButtonItem_Assign*(AObj: pointer, Source: pointer) {.importc: "TaskDialogButtonItem_Assign", dynlib: dllname.}
proc TaskDialogButtonItem_ClassType*(AObj: pointer): TClass {.importc: "TaskDialogButtonItem_ClassType", dynlib: dllname.}
proc TaskDialogButtonItem_ClassName*(AObj: pointer): cstring {.importc: "TaskDialogButtonItem_ClassName", dynlib: dllname.}
proc TaskDialogButtonItem_InstanceSize*(AObj: pointer): int32 {.importc: "TaskDialogButtonItem_InstanceSize", dynlib: dllname.}
proc TaskDialogButtonItem_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TaskDialogButtonItem_InheritsFrom", dynlib: dllname.}
proc TaskDialogButtonItem_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TaskDialogButtonItem_Equals", dynlib: dllname.}
proc TaskDialogButtonItem_GetHashCode*(AObj: pointer): int32 {.importc: "TaskDialogButtonItem_GetHashCode", dynlib: dllname.}
proc TaskDialogButtonItem_ToString*(AObj: pointer): cstring {.importc: "TaskDialogButtonItem_ToString", dynlib: dllname.}
proc TaskDialogButtonItem_GetModalResult*(AObj: pointer): TModalResult {.importc: "TaskDialogButtonItem_GetModalResult", dynlib: dllname.}
proc TaskDialogButtonItem_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "TaskDialogButtonItem_SetModalResult", dynlib: dllname.}
proc TaskDialogButtonItem_GetCaption*(AObj: pointer): cstring {.importc: "TaskDialogButtonItem_GetCaption", dynlib: dllname.}
proc TaskDialogButtonItem_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "TaskDialogButtonItem_SetCaption", dynlib: dllname.}
proc TaskDialogButtonItem_GetDefault*(AObj: pointer): bool {.importc: "TaskDialogButtonItem_GetDefault", dynlib: dllname.}
proc TaskDialogButtonItem_SetDefault*(AObj: pointer, AValue: bool) {.importc: "TaskDialogButtonItem_SetDefault", dynlib: dllname.}
proc TaskDialogButtonItem_GetCollection*(AObj: pointer): pointer {.importc: "TaskDialogButtonItem_GetCollection", dynlib: dllname.}
proc TaskDialogButtonItem_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "TaskDialogButtonItem_SetCollection", dynlib: dllname.}
proc TaskDialogButtonItem_GetIndex*(AObj: pointer): int32 {.importc: "TaskDialogButtonItem_GetIndex", dynlib: dllname.}
proc TaskDialogButtonItem_SetIndex*(AObj: pointer, AValue: int32) {.importc: "TaskDialogButtonItem_SetIndex", dynlib: dllname.}
proc TaskDialogButtonItem_GetDisplayName*(AObj: pointer): cstring {.importc: "TaskDialogButtonItem_GetDisplayName", dynlib: dllname.}
proc TaskDialogButtonItem_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "TaskDialogButtonItem_SetDisplayName", dynlib: dllname.}
proc TaskDialogButtonItem_StaticClassType*(): TClass {.importc: "TaskDialogButtonItem_StaticClassType", dynlib: dllname.}
# ----------------- TTaskDialogRadioButtonItem ----------------------
proc TaskDialogRadioButtonItem_Create*(AOwner: pointer): pointer {.importc: "TaskDialogRadioButtonItem_Create", dynlib: dllname.}
proc TaskDialogRadioButtonItem_Free*(AObj: pointer) {.importc: "TaskDialogRadioButtonItem_Free", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetNamePath*(AObj: pointer): cstring {.importc: "TaskDialogRadioButtonItem_GetNamePath", dynlib: dllname.}
proc TaskDialogRadioButtonItem_Assign*(AObj: pointer, Source: pointer) {.importc: "TaskDialogRadioButtonItem_Assign", dynlib: dllname.}
proc TaskDialogRadioButtonItem_ClassType*(AObj: pointer): TClass {.importc: "TaskDialogRadioButtonItem_ClassType", dynlib: dllname.}
proc TaskDialogRadioButtonItem_ClassName*(AObj: pointer): cstring {.importc: "TaskDialogRadioButtonItem_ClassName", dynlib: dllname.}
proc TaskDialogRadioButtonItem_InstanceSize*(AObj: pointer): int32 {.importc: "TaskDialogRadioButtonItem_InstanceSize", dynlib: dllname.}
proc TaskDialogRadioButtonItem_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TaskDialogRadioButtonItem_InheritsFrom", dynlib: dllname.}
proc TaskDialogRadioButtonItem_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TaskDialogRadioButtonItem_Equals", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetHashCode*(AObj: pointer): int32 {.importc: "TaskDialogRadioButtonItem_GetHashCode", dynlib: dllname.}
proc TaskDialogRadioButtonItem_ToString*(AObj: pointer): cstring {.importc: "TaskDialogRadioButtonItem_ToString", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetModalResult*(AObj: pointer): TModalResult {.importc: "TaskDialogRadioButtonItem_GetModalResult", dynlib: dllname.}
proc TaskDialogRadioButtonItem_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "TaskDialogRadioButtonItem_SetModalResult", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetCaption*(AObj: pointer): cstring {.importc: "TaskDialogRadioButtonItem_GetCaption", dynlib: dllname.}
proc TaskDialogRadioButtonItem_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "TaskDialogRadioButtonItem_SetCaption", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetDefault*(AObj: pointer): bool {.importc: "TaskDialogRadioButtonItem_GetDefault", dynlib: dllname.}
proc TaskDialogRadioButtonItem_SetDefault*(AObj: pointer, AValue: bool) {.importc: "TaskDialogRadioButtonItem_SetDefault", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetCollection*(AObj: pointer): pointer {.importc: "TaskDialogRadioButtonItem_GetCollection", dynlib: dllname.}
proc TaskDialogRadioButtonItem_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "TaskDialogRadioButtonItem_SetCollection", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetIndex*(AObj: pointer): int32 {.importc: "TaskDialogRadioButtonItem_GetIndex", dynlib: dllname.}
proc TaskDialogRadioButtonItem_SetIndex*(AObj: pointer, AValue: int32) {.importc: "TaskDialogRadioButtonItem_SetIndex", dynlib: dllname.}
proc TaskDialogRadioButtonItem_GetDisplayName*(AObj: pointer): cstring {.importc: "TaskDialogRadioButtonItem_GetDisplayName", dynlib: dllname.}
proc TaskDialogRadioButtonItem_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "TaskDialogRadioButtonItem_SetDisplayName", dynlib: dllname.}
proc TaskDialogRadioButtonItem_StaticClassType*(): TClass {.importc: "TaskDialogRadioButtonItem_StaticClassType", dynlib: dllname.}
# ----------------- TTaskDialogBaseButtonItem ----------------------
proc TaskDialogBaseButtonItem_Create*(AOwner: pointer): pointer {.importc: "TaskDialogBaseButtonItem_Create", dynlib: dllname.}
proc TaskDialogBaseButtonItem_Free*(AObj: pointer) {.importc: "TaskDialogBaseButtonItem_Free", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetNamePath*(AObj: pointer): cstring {.importc: "TaskDialogBaseButtonItem_GetNamePath", dynlib: dllname.}
proc TaskDialogBaseButtonItem_Assign*(AObj: pointer, Source: pointer) {.importc: "TaskDialogBaseButtonItem_Assign", dynlib: dllname.}
proc TaskDialogBaseButtonItem_ClassType*(AObj: pointer): TClass {.importc: "TaskDialogBaseButtonItem_ClassType", dynlib: dllname.}
proc TaskDialogBaseButtonItem_ClassName*(AObj: pointer): cstring {.importc: "TaskDialogBaseButtonItem_ClassName", dynlib: dllname.}
proc TaskDialogBaseButtonItem_InstanceSize*(AObj: pointer): int32 {.importc: "TaskDialogBaseButtonItem_InstanceSize", dynlib: dllname.}
proc TaskDialogBaseButtonItem_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "TaskDialogBaseButtonItem_InheritsFrom", dynlib: dllname.}
proc TaskDialogBaseButtonItem_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "TaskDialogBaseButtonItem_Equals", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetHashCode*(AObj: pointer): int32 {.importc: "TaskDialogBaseButtonItem_GetHashCode", dynlib: dllname.}
proc TaskDialogBaseButtonItem_ToString*(AObj: pointer): cstring {.importc: "TaskDialogBaseButtonItem_ToString", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetModalResult*(AObj: pointer): TModalResult {.importc: "TaskDialogBaseButtonItem_GetModalResult", dynlib: dllname.}
proc TaskDialogBaseButtonItem_SetModalResult*(AObj: pointer, AValue: TModalResult) {.importc: "TaskDialogBaseButtonItem_SetModalResult", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetCaption*(AObj: pointer): cstring {.importc: "TaskDialogBaseButtonItem_GetCaption", dynlib: dllname.}
proc TaskDialogBaseButtonItem_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "TaskDialogBaseButtonItem_SetCaption", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetDefault*(AObj: pointer): bool {.importc: "TaskDialogBaseButtonItem_GetDefault", dynlib: dllname.}
proc TaskDialogBaseButtonItem_SetDefault*(AObj: pointer, AValue: bool) {.importc: "TaskDialogBaseButtonItem_SetDefault", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetCollection*(AObj: pointer): pointer {.importc: "TaskDialogBaseButtonItem_GetCollection", dynlib: dllname.}
proc TaskDialogBaseButtonItem_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "TaskDialogBaseButtonItem_SetCollection", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetIndex*(AObj: pointer): int32 {.importc: "TaskDialogBaseButtonItem_GetIndex", dynlib: dllname.}
proc TaskDialogBaseButtonItem_SetIndex*(AObj: pointer, AValue: int32) {.importc: "TaskDialogBaseButtonItem_SetIndex", dynlib: dllname.}
proc TaskDialogBaseButtonItem_GetDisplayName*(AObj: pointer): cstring {.importc: "TaskDialogBaseButtonItem_GetDisplayName", dynlib: dllname.}
proc TaskDialogBaseButtonItem_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "TaskDialogBaseButtonItem_SetDisplayName", dynlib: dllname.}
proc TaskDialogBaseButtonItem_StaticClassType*(): TClass {.importc: "TaskDialogBaseButtonItem_StaticClassType", dynlib: dllname.}
# ----------------- TComboBoxEx ----------------------
proc ComboBoxEx_Create*(AOwner: pointer): pointer {.importc: "ComboBoxEx_Create", dynlib: dllname.}
proc ComboBoxEx_Free*(AObj: pointer) {.importc: "ComboBoxEx_Free", dynlib: dllname.}
proc ComboBoxEx_Focused*(AObj: pointer): bool {.importc: "ComboBoxEx_Focused", dynlib: dllname.}
proc ComboBoxEx_AddItem*(AObj: pointer, Item: cstring, AObject: pointer) {.importc: "ComboBoxEx_AddItem", dynlib: dllname.}
proc ComboBoxEx_Clear*(AObj: pointer) {.importc: "ComboBoxEx_Clear", dynlib: dllname.}
proc ComboBoxEx_ClearSelection*(AObj: pointer) {.importc: "ComboBoxEx_ClearSelection", dynlib: dllname.}
proc ComboBoxEx_DeleteSelected*(AObj: pointer) {.importc: "ComboBoxEx_DeleteSelected", dynlib: dllname.}
proc ComboBoxEx_SelectAll*(AObj: pointer) {.importc: "ComboBoxEx_SelectAll", dynlib: dllname.}
proc ComboBoxEx_CanFocus*(AObj: pointer): bool {.importc: "ComboBoxEx_CanFocus", dynlib: dllname.}
proc ComboBoxEx_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ComboBoxEx_ContainsControl", dynlib: dllname.}
proc ComboBoxEx_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ComboBoxEx_ControlAtPos", dynlib: dllname.}
proc ComboBoxEx_DisableAlign*(AObj: pointer) {.importc: "ComboBoxEx_DisableAlign", dynlib: dllname.}
proc ComboBoxEx_EnableAlign*(AObj: pointer) {.importc: "ComboBoxEx_EnableAlign", dynlib: dllname.}
proc ComboBoxEx_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ComboBoxEx_FindChildControl", dynlib: dllname.}
proc ComboBoxEx_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ComboBoxEx_FlipChildren", dynlib: dllname.}
proc ComboBoxEx_HandleAllocated*(AObj: pointer): bool {.importc: "ComboBoxEx_HandleAllocated", dynlib: dllname.}
proc ComboBoxEx_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ComboBoxEx_InsertControl", dynlib: dllname.}
proc ComboBoxEx_Invalidate*(AObj: pointer) {.importc: "ComboBoxEx_Invalidate", dynlib: dllname.}
proc ComboBoxEx_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ComboBoxEx_PaintTo", dynlib: dllname.}
proc ComboBoxEx_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ComboBoxEx_RemoveControl", dynlib: dllname.}
proc ComboBoxEx_Realign*(AObj: pointer) {.importc: "ComboBoxEx_Realign", dynlib: dllname.}
proc ComboBoxEx_Repaint*(AObj: pointer) {.importc: "ComboBoxEx_Repaint", dynlib: dllname.}
proc ComboBoxEx_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ComboBoxEx_ScaleBy", dynlib: dllname.}
proc ComboBoxEx_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ComboBoxEx_ScrollBy", dynlib: dllname.}
proc ComboBoxEx_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ComboBoxEx_SetBounds", dynlib: dllname.}
proc ComboBoxEx_SetFocus*(AObj: pointer) {.importc: "ComboBoxEx_SetFocus", dynlib: dllname.}
proc ComboBoxEx_Update*(AObj: pointer) {.importc: "ComboBoxEx_Update", dynlib: dllname.}
proc ComboBoxEx_BringToFront*(AObj: pointer) {.importc: "ComboBoxEx_BringToFront", dynlib: dllname.}
proc ComboBoxEx_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ComboBoxEx_ClientToScreen", dynlib: dllname.}
proc ComboBoxEx_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ComboBoxEx_ClientToParent", dynlib: dllname.}
proc ComboBoxEx_Dragging*(AObj: pointer): bool {.importc: "ComboBoxEx_Dragging", dynlib: dllname.}
proc ComboBoxEx_HasParent*(AObj: pointer): bool {.importc: "ComboBoxEx_HasParent", dynlib: dllname.}
proc ComboBoxEx_Hide*(AObj: pointer) {.importc: "ComboBoxEx_Hide", dynlib: dllname.}
proc ComboBoxEx_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ComboBoxEx_Perform", dynlib: dllname.}
proc ComboBoxEx_Refresh*(AObj: pointer) {.importc: "ComboBoxEx_Refresh", dynlib: dllname.}
proc ComboBoxEx_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ComboBoxEx_ScreenToClient", dynlib: dllname.}
proc ComboBoxEx_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ComboBoxEx_ParentToClient", dynlib: dllname.}
proc ComboBoxEx_SendToBack*(AObj: pointer) {.importc: "ComboBoxEx_SendToBack", dynlib: dllname.}
proc ComboBoxEx_Show*(AObj: pointer) {.importc: "ComboBoxEx_Show", dynlib: dllname.}
proc ComboBoxEx_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ComboBoxEx_GetTextBuf", dynlib: dllname.}
proc ComboBoxEx_GetTextLen*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetTextLen", dynlib: dllname.}
proc ComboBoxEx_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ComboBoxEx_SetTextBuf", dynlib: dllname.}
proc ComboBoxEx_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ComboBoxEx_FindComponent", dynlib: dllname.}
proc ComboBoxEx_GetNamePath*(AObj: pointer): cstring {.importc: "ComboBoxEx_GetNamePath", dynlib: dllname.}
proc ComboBoxEx_Assign*(AObj: pointer, Source: pointer) {.importc: "ComboBoxEx_Assign", dynlib: dllname.}
proc ComboBoxEx_ClassType*(AObj: pointer): TClass {.importc: "ComboBoxEx_ClassType", dynlib: dllname.}
proc ComboBoxEx_ClassName*(AObj: pointer): cstring {.importc: "ComboBoxEx_ClassName", dynlib: dllname.}
proc ComboBoxEx_InstanceSize*(AObj: pointer): int32 {.importc: "ComboBoxEx_InstanceSize", dynlib: dllname.}
proc ComboBoxEx_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ComboBoxEx_InheritsFrom", dynlib: dllname.}
proc ComboBoxEx_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ComboBoxEx_Equals", dynlib: dllname.}
proc ComboBoxEx_GetHashCode*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetHashCode", dynlib: dllname.}
proc ComboBoxEx_ToString*(AObj: pointer): cstring {.importc: "ComboBoxEx_ToString", dynlib: dllname.}
proc ComboBoxEx_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ComboBoxEx_AnchorToNeighbour", dynlib: dllname.}
proc ComboBoxEx_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ComboBoxEx_AnchorParallel", dynlib: dllname.}
proc ComboBoxEx_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ComboBoxEx_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ComboBoxEx_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ComboBoxEx_AnchorVerticalCenterTo", dynlib: dllname.}
proc ComboBoxEx_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ComboBoxEx_AnchorSame", dynlib: dllname.}
proc ComboBoxEx_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ComboBoxEx_AnchorAsAlign", dynlib: dllname.}
proc ComboBoxEx_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ComboBoxEx_AnchorClient", dynlib: dllname.}
proc ComboBoxEx_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_ScaleDesignToForm", dynlib: dllname.}
proc ComboBoxEx_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_ScaleFormToDesign", dynlib: dllname.}
proc ComboBoxEx_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_Scale96ToForm", dynlib: dllname.}
proc ComboBoxEx_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_ScaleFormTo96", dynlib: dllname.}
proc ComboBoxEx_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_Scale96ToFont", dynlib: dllname.}
proc ComboBoxEx_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_ScaleFontTo96", dynlib: dllname.}
proc ComboBoxEx_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_ScaleScreenToFont", dynlib: dllname.}
proc ComboBoxEx_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_ScaleFontToScreen", dynlib: dllname.}
proc ComboBoxEx_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_Scale96ToScreen", dynlib: dllname.}
proc ComboBoxEx_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ComboBoxEx_ScaleScreenTo96", dynlib: dllname.}
proc ComboBoxEx_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ComboBoxEx_AutoAdjustLayout", dynlib: dllname.}
proc ComboBoxEx_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ComboBoxEx_FixDesignFontsPPI", dynlib: dllname.}
proc ComboBoxEx_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ComboBoxEx_ScaleFontsPPI", dynlib: dllname.}
proc ComboBoxEx_GetAlign*(AObj: pointer): TAlign {.importc: "ComboBoxEx_GetAlign", dynlib: dllname.}
proc ComboBoxEx_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ComboBoxEx_SetAlign", dynlib: dllname.}
proc ComboBoxEx_GetAutoCompleteOptions*(AObj: pointer): TAutoCompleteOptions {.importc: "ComboBoxEx_GetAutoCompleteOptions", dynlib: dllname.}
proc ComboBoxEx_SetAutoCompleteOptions*(AObj: pointer, AValue: TAutoCompleteOptions) {.importc: "ComboBoxEx_SetAutoCompleteOptions", dynlib: dllname.}
proc ComboBoxEx_GetItemsEx*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetItemsEx", dynlib: dllname.}
proc ComboBoxEx_SetItemsEx*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetItemsEx", dynlib: dllname.}
proc ComboBoxEx_GetStyle*(AObj: pointer): TComboBoxExStyle {.importc: "ComboBoxEx_GetStyle", dynlib: dllname.}
proc ComboBoxEx_SetStyle*(AObj: pointer, AValue: TComboBoxExStyle) {.importc: "ComboBoxEx_SetStyle", dynlib: dllname.}
proc ComboBoxEx_GetStyleEx*(AObj: pointer): TComboBoxExStyles {.importc: "ComboBoxEx_GetStyleEx", dynlib: dllname.}
proc ComboBoxEx_SetStyleEx*(AObj: pointer, AValue: TComboBoxExStyles) {.importc: "ComboBoxEx_SetStyleEx", dynlib: dllname.}
proc ComboBoxEx_GetAction*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetAction", dynlib: dllname.}
proc ComboBoxEx_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetAction", dynlib: dllname.}
proc ComboBoxEx_GetAnchors*(AObj: pointer): TAnchors {.importc: "ComboBoxEx_GetAnchors", dynlib: dllname.}
proc ComboBoxEx_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ComboBoxEx_SetAnchors", dynlib: dllname.}
proc ComboBoxEx_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ComboBoxEx_GetBiDiMode", dynlib: dllname.}
proc ComboBoxEx_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ComboBoxEx_SetBiDiMode", dynlib: dllname.}
proc ComboBoxEx_GetColor*(AObj: pointer): TColor {.importc: "ComboBoxEx_GetColor", dynlib: dllname.}
proc ComboBoxEx_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ComboBoxEx_SetColor", dynlib: dllname.}
proc ComboBoxEx_GetConstraints*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetConstraints", dynlib: dllname.}
proc ComboBoxEx_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetConstraints", dynlib: dllname.}
proc ComboBoxEx_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ComboBoxEx_GetDoubleBuffered", dynlib: dllname.}
proc ComboBoxEx_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetDoubleBuffered", dynlib: dllname.}
proc ComboBoxEx_GetDragCursor*(AObj: pointer): TCursor {.importc: "ComboBoxEx_GetDragCursor", dynlib: dllname.}
proc ComboBoxEx_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ComboBoxEx_SetDragCursor", dynlib: dllname.}
proc ComboBoxEx_GetDragKind*(AObj: pointer): TDragKind {.importc: "ComboBoxEx_GetDragKind", dynlib: dllname.}
proc ComboBoxEx_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ComboBoxEx_SetDragKind", dynlib: dllname.}
proc ComboBoxEx_GetDragMode*(AObj: pointer): TDragMode {.importc: "ComboBoxEx_GetDragMode", dynlib: dllname.}
proc ComboBoxEx_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ComboBoxEx_SetDragMode", dynlib: dllname.}
proc ComboBoxEx_GetEnabled*(AObj: pointer): bool {.importc: "ComboBoxEx_GetEnabled", dynlib: dllname.}
proc ComboBoxEx_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetEnabled", dynlib: dllname.}
proc ComboBoxEx_GetFont*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetFont", dynlib: dllname.}
proc ComboBoxEx_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetFont", dynlib: dllname.}
proc ComboBoxEx_GetItemHeight*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetItemHeight", dynlib: dllname.}
proc ComboBoxEx_SetItemHeight*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetItemHeight", dynlib: dllname.}
proc ComboBoxEx_GetMaxLength*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetMaxLength", dynlib: dllname.}
proc ComboBoxEx_SetMaxLength*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetMaxLength", dynlib: dllname.}
proc ComboBoxEx_GetParentColor*(AObj: pointer): bool {.importc: "ComboBoxEx_GetParentColor", dynlib: dllname.}
proc ComboBoxEx_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetParentColor", dynlib: dllname.}
proc ComboBoxEx_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ComboBoxEx_GetParentDoubleBuffered", dynlib: dllname.}
proc ComboBoxEx_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetParentDoubleBuffered", dynlib: dllname.}
proc ComboBoxEx_GetParentFont*(AObj: pointer): bool {.importc: "ComboBoxEx_GetParentFont", dynlib: dllname.}
proc ComboBoxEx_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetParentFont", dynlib: dllname.}
proc ComboBoxEx_GetParentShowHint*(AObj: pointer): bool {.importc: "ComboBoxEx_GetParentShowHint", dynlib: dllname.}
proc ComboBoxEx_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetParentShowHint", dynlib: dllname.}
proc ComboBoxEx_GetPopupMenu*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetPopupMenu", dynlib: dllname.}
proc ComboBoxEx_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetPopupMenu", dynlib: dllname.}
proc ComboBoxEx_GetShowHint*(AObj: pointer): bool {.importc: "ComboBoxEx_GetShowHint", dynlib: dllname.}
proc ComboBoxEx_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetShowHint", dynlib: dllname.}
proc ComboBoxEx_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ComboBoxEx_GetTabOrder", dynlib: dllname.}
proc ComboBoxEx_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ComboBoxEx_SetTabOrder", dynlib: dllname.}
proc ComboBoxEx_GetTabStop*(AObj: pointer): bool {.importc: "ComboBoxEx_GetTabStop", dynlib: dllname.}
proc ComboBoxEx_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetTabStop", dynlib: dllname.}
proc ComboBoxEx_GetText*(AObj: pointer): cstring {.importc: "ComboBoxEx_GetText", dynlib: dllname.}
proc ComboBoxEx_SetText*(AObj: pointer, AValue: cstring) {.importc: "ComboBoxEx_SetText", dynlib: dllname.}
proc ComboBoxEx_GetVisible*(AObj: pointer): bool {.importc: "ComboBoxEx_GetVisible", dynlib: dllname.}
proc ComboBoxEx_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetVisible", dynlib: dllname.}
proc ComboBoxEx_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBoxEx_SetOnChange", dynlib: dllname.}
proc ComboBoxEx_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBoxEx_SetOnClick", dynlib: dllname.}
proc ComboBoxEx_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "ComboBoxEx_SetOnContextPopup", dynlib: dllname.}
proc ComboBoxEx_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBoxEx_SetOnDblClick", dynlib: dllname.}
proc ComboBoxEx_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ComboBoxEx_SetOnDragDrop", dynlib: dllname.}
proc ComboBoxEx_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ComboBoxEx_SetOnDragOver", dynlib: dllname.}
proc ComboBoxEx_SetOnDropDown*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBoxEx_SetOnDropDown", dynlib: dllname.}
proc ComboBoxEx_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ComboBoxEx_SetOnEndDock", dynlib: dllname.}
proc ComboBoxEx_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ComboBoxEx_SetOnEndDrag", dynlib: dllname.}
proc ComboBoxEx_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBoxEx_SetOnEnter", dynlib: dllname.}
proc ComboBoxEx_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBoxEx_SetOnExit", dynlib: dllname.}
proc ComboBoxEx_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ComboBoxEx_SetOnKeyDown", dynlib: dllname.}
proc ComboBoxEx_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "ComboBoxEx_SetOnKeyPress", dynlib: dllname.}
proc ComboBoxEx_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "ComboBoxEx_SetOnKeyUp", dynlib: dllname.}
proc ComboBoxEx_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ComboBoxEx_SetOnMouseMove", dynlib: dllname.}
proc ComboBoxEx_SetOnSelect*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ComboBoxEx_SetOnSelect", dynlib: dllname.}
proc ComboBoxEx_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "ComboBoxEx_SetOnStartDock", dynlib: dllname.}
proc ComboBoxEx_GetImages*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetImages", dynlib: dllname.}
proc ComboBoxEx_SetImages*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetImages", dynlib: dllname.}
proc ComboBoxEx_GetDropDownCount*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetDropDownCount", dynlib: dllname.}
proc ComboBoxEx_SetDropDownCount*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetDropDownCount", dynlib: dllname.}
proc ComboBoxEx_GetSelText*(AObj: pointer): cstring {.importc: "ComboBoxEx_GetSelText", dynlib: dllname.}
proc ComboBoxEx_SetSelText*(AObj: pointer, AValue: cstring) {.importc: "ComboBoxEx_SetSelText", dynlib: dllname.}
proc ComboBoxEx_GetCanvas*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetCanvas", dynlib: dllname.}
proc ComboBoxEx_GetDroppedDown*(AObj: pointer): bool {.importc: "ComboBoxEx_GetDroppedDown", dynlib: dllname.}
proc ComboBoxEx_SetDroppedDown*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetDroppedDown", dynlib: dllname.}
proc ComboBoxEx_GetItems*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetItems", dynlib: dllname.}
proc ComboBoxEx_SetItems*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetItems", dynlib: dllname.}
proc ComboBoxEx_GetSelLength*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetSelLength", dynlib: dllname.}
proc ComboBoxEx_SetSelLength*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetSelLength", dynlib: dllname.}
proc ComboBoxEx_GetSelStart*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetSelStart", dynlib: dllname.}
proc ComboBoxEx_SetSelStart*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetSelStart", dynlib: dllname.}
proc ComboBoxEx_GetItemIndex*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetItemIndex", dynlib: dllname.}
proc ComboBoxEx_SetItemIndex*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetItemIndex", dynlib: dllname.}
proc ComboBoxEx_GetDockClientCount*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetDockClientCount", dynlib: dllname.}
proc ComboBoxEx_GetDockSite*(AObj: pointer): bool {.importc: "ComboBoxEx_GetDockSite", dynlib: dllname.}
proc ComboBoxEx_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetDockSite", dynlib: dllname.}
proc ComboBoxEx_GetMouseInClient*(AObj: pointer): bool {.importc: "ComboBoxEx_GetMouseInClient", dynlib: dllname.}
proc ComboBoxEx_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetVisibleDockClientCount", dynlib: dllname.}
proc ComboBoxEx_GetBrush*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetBrush", dynlib: dllname.}
proc ComboBoxEx_GetControlCount*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetControlCount", dynlib: dllname.}
proc ComboBoxEx_GetHandle*(AObj: pointer): HWND {.importc: "ComboBoxEx_GetHandle", dynlib: dllname.}
proc ComboBoxEx_GetParentWindow*(AObj: pointer): HWND {.importc: "ComboBoxEx_GetParentWindow", dynlib: dllname.}
proc ComboBoxEx_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ComboBoxEx_SetParentWindow", dynlib: dllname.}
proc ComboBoxEx_GetShowing*(AObj: pointer): bool {.importc: "ComboBoxEx_GetShowing", dynlib: dllname.}
proc ComboBoxEx_GetUseDockManager*(AObj: pointer): bool {.importc: "ComboBoxEx_GetUseDockManager", dynlib: dllname.}
proc ComboBoxEx_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ComboBoxEx_SetUseDockManager", dynlib: dllname.}
proc ComboBoxEx_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ComboBoxEx_GetBoundsRect", dynlib: dllname.}
proc ComboBoxEx_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ComboBoxEx_SetBoundsRect", dynlib: dllname.}
proc ComboBoxEx_GetClientHeight*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetClientHeight", dynlib: dllname.}
proc ComboBoxEx_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetClientHeight", dynlib: dllname.}
proc ComboBoxEx_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ComboBoxEx_GetClientOrigin", dynlib: dllname.}
proc ComboBoxEx_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ComboBoxEx_GetClientRect", dynlib: dllname.}
proc ComboBoxEx_GetClientWidth*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetClientWidth", dynlib: dllname.}
proc ComboBoxEx_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetClientWidth", dynlib: dllname.}
proc ComboBoxEx_GetControlState*(AObj: pointer): TControlState {.importc: "ComboBoxEx_GetControlState", dynlib: dllname.}
proc ComboBoxEx_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ComboBoxEx_SetControlState", dynlib: dllname.}
proc ComboBoxEx_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ComboBoxEx_GetControlStyle", dynlib: dllname.}
proc ComboBoxEx_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ComboBoxEx_SetControlStyle", dynlib: dllname.}
proc ComboBoxEx_GetFloating*(AObj: pointer): bool {.importc: "ComboBoxEx_GetFloating", dynlib: dllname.}
proc ComboBoxEx_GetParent*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetParent", dynlib: dllname.}
proc ComboBoxEx_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetParent", dynlib: dllname.}
proc ComboBoxEx_GetLeft*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetLeft", dynlib: dllname.}
proc ComboBoxEx_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetLeft", dynlib: dllname.}
proc ComboBoxEx_GetTop*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetTop", dynlib: dllname.}
proc ComboBoxEx_SetTop*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetTop", dynlib: dllname.}
proc ComboBoxEx_GetWidth*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetWidth", dynlib: dllname.}
proc ComboBoxEx_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetWidth", dynlib: dllname.}
proc ComboBoxEx_GetHeight*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetHeight", dynlib: dllname.}
proc ComboBoxEx_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetHeight", dynlib: dllname.}
proc ComboBoxEx_GetCursor*(AObj: pointer): TCursor {.importc: "ComboBoxEx_GetCursor", dynlib: dllname.}
proc ComboBoxEx_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ComboBoxEx_SetCursor", dynlib: dllname.}
proc ComboBoxEx_GetHint*(AObj: pointer): cstring {.importc: "ComboBoxEx_GetHint", dynlib: dllname.}
proc ComboBoxEx_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ComboBoxEx_SetHint", dynlib: dllname.}
proc ComboBoxEx_GetComponentCount*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetComponentCount", dynlib: dllname.}
proc ComboBoxEx_GetComponentIndex*(AObj: pointer): int32 {.importc: "ComboBoxEx_GetComponentIndex", dynlib: dllname.}
proc ComboBoxEx_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ComboBoxEx_SetComponentIndex", dynlib: dllname.}
proc ComboBoxEx_GetOwner*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetOwner", dynlib: dllname.}
proc ComboBoxEx_GetName*(AObj: pointer): cstring {.importc: "ComboBoxEx_GetName", dynlib: dllname.}
proc ComboBoxEx_SetName*(AObj: pointer, AValue: cstring) {.importc: "ComboBoxEx_SetName", dynlib: dllname.}
proc ComboBoxEx_GetTag*(AObj: pointer): int {.importc: "ComboBoxEx_GetTag", dynlib: dllname.}
proc ComboBoxEx_SetTag*(AObj: pointer, AValue: int) {.importc: "ComboBoxEx_SetTag", dynlib: dllname.}
proc ComboBoxEx_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetAnchorSideLeft", dynlib: dllname.}
proc ComboBoxEx_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetAnchorSideLeft", dynlib: dllname.}
proc ComboBoxEx_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetAnchorSideTop", dynlib: dllname.}
proc ComboBoxEx_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetAnchorSideTop", dynlib: dllname.}
proc ComboBoxEx_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetAnchorSideRight", dynlib: dllname.}
proc ComboBoxEx_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetAnchorSideRight", dynlib: dllname.}
proc ComboBoxEx_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetAnchorSideBottom", dynlib: dllname.}
proc ComboBoxEx_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetAnchorSideBottom", dynlib: dllname.}
proc ComboBoxEx_GetChildSizing*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetChildSizing", dynlib: dllname.}
proc ComboBoxEx_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetChildSizing", dynlib: dllname.}
proc ComboBoxEx_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ComboBoxEx_GetBorderSpacing", dynlib: dllname.}
proc ComboBoxEx_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ComboBoxEx_SetBorderSpacing", dynlib: dllname.}
proc ComboBoxEx_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ComboBoxEx_GetDockClients", dynlib: dllname.}
proc ComboBoxEx_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ComboBoxEx_GetControls", dynlib: dllname.}
proc ComboBoxEx_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ComboBoxEx_GetComponents", dynlib: dllname.}
proc ComboBoxEx_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ComboBoxEx_GetAnchorSide", dynlib: dllname.}
proc ComboBoxEx_StaticClassType*(): TClass {.importc: "ComboBoxEx_StaticClassType", dynlib: dllname.}
# ----------------- TComboExItems ----------------------
proc ComboExItems_Add*(AObj: pointer): pointer {.importc: "ComboExItems_Add", dynlib: dllname.}
proc ComboExItems_AddItem*(AObj: pointer, Caption: cstring, ImageIndex: int32, SelectedImageIndex: int32, OverlayImageIndex: int32, Indent: int32, Data: pointer): pointer {.importc: "ComboExItems_AddItem", dynlib: dllname.}
proc ComboExItems_Insert*(AObj: pointer, Index: int32): pointer {.importc: "ComboExItems_Insert", dynlib: dllname.}
proc ComboExItems_Owner*(AObj: pointer): pointer {.importc: "ComboExItems_Owner", dynlib: dllname.}
proc ComboExItems_Assign*(AObj: pointer, Source: pointer) {.importc: "ComboExItems_Assign", dynlib: dllname.}
proc ComboExItems_BeginUpdate*(AObj: pointer) {.importc: "ComboExItems_BeginUpdate", dynlib: dllname.}
proc ComboExItems_Clear*(AObj: pointer) {.importc: "ComboExItems_Clear", dynlib: dllname.}
proc ComboExItems_Delete*(AObj: pointer, Index: int32) {.importc: "ComboExItems_Delete", dynlib: dllname.}
proc ComboExItems_EndUpdate*(AObj: pointer) {.importc: "ComboExItems_EndUpdate", dynlib: dllname.}
proc ComboExItems_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "ComboExItems_FindItemID", dynlib: dllname.}
proc ComboExItems_GetNamePath*(AObj: pointer): cstring {.importc: "ComboExItems_GetNamePath", dynlib: dllname.}
proc ComboExItems_ClassType*(AObj: pointer): TClass {.importc: "ComboExItems_ClassType", dynlib: dllname.}
proc ComboExItems_ClassName*(AObj: pointer): cstring {.importc: "ComboExItems_ClassName", dynlib: dllname.}
proc ComboExItems_InstanceSize*(AObj: pointer): int32 {.importc: "ComboExItems_InstanceSize", dynlib: dllname.}
proc ComboExItems_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ComboExItems_InheritsFrom", dynlib: dllname.}
proc ComboExItems_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ComboExItems_Equals", dynlib: dllname.}
proc ComboExItems_GetHashCode*(AObj: pointer): int32 {.importc: "ComboExItems_GetHashCode", dynlib: dllname.}
proc ComboExItems_ToString*(AObj: pointer): cstring {.importc: "ComboExItems_ToString", dynlib: dllname.}
proc ComboExItems_GetCount*(AObj: pointer): int32 {.importc: "ComboExItems_GetCount", dynlib: dllname.}
proc ComboExItems_GetComboItems*(AObj: pointer, Index: int32): pointer {.importc: "ComboExItems_GetComboItems", dynlib: dllname.}
proc ComboExItems_StaticClassType*(): TClass {.importc: "ComboExItems_StaticClassType", dynlib: dllname.}
# ----------------- TComboExItem ----------------------
proc ComboExItem_Assign*(AObj: pointer, Source: pointer) {.importc: "ComboExItem_Assign", dynlib: dllname.}
proc ComboExItem_GetNamePath*(AObj: pointer): cstring {.importc: "ComboExItem_GetNamePath", dynlib: dllname.}
proc ComboExItem_ClassType*(AObj: pointer): TClass {.importc: "ComboExItem_ClassType", dynlib: dllname.}
proc ComboExItem_ClassName*(AObj: pointer): cstring {.importc: "ComboExItem_ClassName", dynlib: dllname.}
proc ComboExItem_InstanceSize*(AObj: pointer): int32 {.importc: "ComboExItem_InstanceSize", dynlib: dllname.}
proc ComboExItem_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ComboExItem_InheritsFrom", dynlib: dllname.}
proc ComboExItem_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ComboExItem_Equals", dynlib: dllname.}
proc ComboExItem_GetHashCode*(AObj: pointer): int32 {.importc: "ComboExItem_GetHashCode", dynlib: dllname.}
proc ComboExItem_ToString*(AObj: pointer): cstring {.importc: "ComboExItem_ToString", dynlib: dllname.}
proc ComboExItem_GetIndent*(AObj: pointer): int32 {.importc: "ComboExItem_GetIndent", dynlib: dllname.}
proc ComboExItem_SetIndent*(AObj: pointer, AValue: int32) {.importc: "ComboExItem_SetIndent", dynlib: dllname.}
proc ComboExItem_GetOverlayImageIndex*(AObj: pointer): int32 {.importc: "ComboExItem_GetOverlayImageIndex", dynlib: dllname.}
proc ComboExItem_SetOverlayImageIndex*(AObj: pointer, AValue: int32) {.importc: "ComboExItem_SetOverlayImageIndex", dynlib: dllname.}
proc ComboExItem_GetData*(AObj: pointer): pointer {.importc: "ComboExItem_GetData", dynlib: dllname.}
proc ComboExItem_SetData*(AObj: pointer, AValue: pointer) {.importc: "ComboExItem_SetData", dynlib: dllname.}
proc ComboExItem_GetCaption*(AObj: pointer): cstring {.importc: "ComboExItem_GetCaption", dynlib: dllname.}
proc ComboExItem_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "ComboExItem_SetCaption", dynlib: dllname.}
proc ComboExItem_GetImageIndex*(AObj: pointer): int32 {.importc: "ComboExItem_GetImageIndex", dynlib: dllname.}
proc ComboExItem_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "ComboExItem_SetImageIndex", dynlib: dllname.}
proc ComboExItem_GetCollection*(AObj: pointer): pointer {.importc: "ComboExItem_GetCollection", dynlib: dllname.}
proc ComboExItem_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "ComboExItem_SetCollection", dynlib: dllname.}
proc ComboExItem_GetIndex*(AObj: pointer): int32 {.importc: "ComboExItem_GetIndex", dynlib: dllname.}
proc ComboExItem_SetIndex*(AObj: pointer, AValue: int32) {.importc: "ComboExItem_SetIndex", dynlib: dllname.}
proc ComboExItem_GetDisplayName*(AObj: pointer): cstring {.importc: "ComboExItem_GetDisplayName", dynlib: dllname.}
proc ComboExItem_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "ComboExItem_SetDisplayName", dynlib: dllname.}
proc ComboExItem_StaticClassType*(): TClass {.importc: "ComboExItem_StaticClassType", dynlib: dllname.}
# ----------------- TFrame ----------------------
proc Frame_Create*(AOwner: pointer): pointer {.importc: "Frame_Create", dynlib: dllname.}
proc Frame_Free*(AObj: pointer) {.importc: "Frame_Free", dynlib: dllname.}
proc Frame_ScrollInView*(AObj: pointer, AControl: pointer) {.importc: "Frame_ScrollInView", dynlib: dllname.}
proc Frame_CanFocus*(AObj: pointer): bool {.importc: "Frame_CanFocus", dynlib: dllname.}
proc Frame_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "Frame_ContainsControl", dynlib: dllname.}
proc Frame_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "Frame_ControlAtPos", dynlib: dllname.}
proc Frame_DisableAlign*(AObj: pointer) {.importc: "Frame_DisableAlign", dynlib: dllname.}
proc Frame_EnableAlign*(AObj: pointer) {.importc: "Frame_EnableAlign", dynlib: dllname.}
proc Frame_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "Frame_FindChildControl", dynlib: dllname.}
proc Frame_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "Frame_FlipChildren", dynlib: dllname.}
proc Frame_Focused*(AObj: pointer): bool {.importc: "Frame_Focused", dynlib: dllname.}
proc Frame_HandleAllocated*(AObj: pointer): bool {.importc: "Frame_HandleAllocated", dynlib: dllname.}
proc Frame_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "Frame_InsertControl", dynlib: dllname.}
proc Frame_Invalidate*(AObj: pointer) {.importc: "Frame_Invalidate", dynlib: dllname.}
proc Frame_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "Frame_PaintTo", dynlib: dllname.}
proc Frame_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "Frame_RemoveControl", dynlib: dllname.}
proc Frame_Realign*(AObj: pointer) {.importc: "Frame_Realign", dynlib: dllname.}
proc Frame_Repaint*(AObj: pointer) {.importc: "Frame_Repaint", dynlib: dllname.}
proc Frame_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "Frame_ScaleBy", dynlib: dllname.}
proc Frame_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "Frame_ScrollBy", dynlib: dllname.}
proc Frame_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "Frame_SetBounds", dynlib: dllname.}
proc Frame_SetFocus*(AObj: pointer) {.importc: "Frame_SetFocus", dynlib: dllname.}
proc Frame_Update*(AObj: pointer) {.importc: "Frame_Update", dynlib: dllname.}
proc Frame_BringToFront*(AObj: pointer) {.importc: "Frame_BringToFront", dynlib: dllname.}
proc Frame_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Frame_ClientToScreen", dynlib: dllname.}
proc Frame_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Frame_ClientToParent", dynlib: dllname.}
proc Frame_Dragging*(AObj: pointer): bool {.importc: "Frame_Dragging", dynlib: dllname.}
proc Frame_HasParent*(AObj: pointer): bool {.importc: "Frame_HasParent", dynlib: dllname.}
proc Frame_Hide*(AObj: pointer) {.importc: "Frame_Hide", dynlib: dllname.}
proc Frame_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "Frame_Perform", dynlib: dllname.}
proc Frame_Refresh*(AObj: pointer) {.importc: "Frame_Refresh", dynlib: dllname.}
proc Frame_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "Frame_ScreenToClient", dynlib: dllname.}
proc Frame_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "Frame_ParentToClient", dynlib: dllname.}
proc Frame_SendToBack*(AObj: pointer) {.importc: "Frame_SendToBack", dynlib: dllname.}
proc Frame_Show*(AObj: pointer) {.importc: "Frame_Show", dynlib: dllname.}
proc Frame_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "Frame_GetTextBuf", dynlib: dllname.}
proc Frame_GetTextLen*(AObj: pointer): int32 {.importc: "Frame_GetTextLen", dynlib: dllname.}
proc Frame_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "Frame_SetTextBuf", dynlib: dllname.}
proc Frame_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "Frame_FindComponent", dynlib: dllname.}
proc Frame_GetNamePath*(AObj: pointer): cstring {.importc: "Frame_GetNamePath", dynlib: dllname.}
proc Frame_Assign*(AObj: pointer, Source: pointer) {.importc: "Frame_Assign", dynlib: dllname.}
proc Frame_ClassType*(AObj: pointer): TClass {.importc: "Frame_ClassType", dynlib: dllname.}
proc Frame_ClassName*(AObj: pointer): cstring {.importc: "Frame_ClassName", dynlib: dllname.}
proc Frame_InstanceSize*(AObj: pointer): int32 {.importc: "Frame_InstanceSize", dynlib: dllname.}
proc Frame_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "Frame_InheritsFrom", dynlib: dllname.}
proc Frame_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "Frame_Equals", dynlib: dllname.}
proc Frame_GetHashCode*(AObj: pointer): int32 {.importc: "Frame_GetHashCode", dynlib: dllname.}
proc Frame_ToString*(AObj: pointer): cstring {.importc: "Frame_ToString", dynlib: dllname.}
proc Frame_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Frame_AnchorToNeighbour", dynlib: dllname.}
proc Frame_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "Frame_AnchorParallel", dynlib: dllname.}
proc Frame_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Frame_AnchorHorizontalCenterTo", dynlib: dllname.}
proc Frame_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "Frame_AnchorVerticalCenterTo", dynlib: dllname.}
proc Frame_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "Frame_AnchorSame", dynlib: dllname.}
proc Frame_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "Frame_AnchorAsAlign", dynlib: dllname.}
proc Frame_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "Frame_AnchorClient", dynlib: dllname.}
proc Frame_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_ScaleDesignToForm", dynlib: dllname.}
proc Frame_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_ScaleFormToDesign", dynlib: dllname.}
proc Frame_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_Scale96ToForm", dynlib: dllname.}
proc Frame_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_ScaleFormTo96", dynlib: dllname.}
proc Frame_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_Scale96ToFont", dynlib: dllname.}
proc Frame_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_ScaleFontTo96", dynlib: dllname.}
proc Frame_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_ScaleScreenToFont", dynlib: dllname.}
proc Frame_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_ScaleFontToScreen", dynlib: dllname.}
proc Frame_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_Scale96ToScreen", dynlib: dllname.}
proc Frame_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "Frame_ScaleScreenTo96", dynlib: dllname.}
proc Frame_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "Frame_AutoAdjustLayout", dynlib: dllname.}
proc Frame_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "Frame_FixDesignFontsPPI", dynlib: dllname.}
proc Frame_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "Frame_ScaleFontsPPI", dynlib: dllname.}
proc Frame_GetDesignTimePPI*(AObj: pointer): int32 {.importc: "Frame_GetDesignTimePPI", dynlib: dllname.}
proc Frame_SetDesignTimePPI*(AObj: pointer, AValue: int32) {.importc: "Frame_SetDesignTimePPI", dynlib: dllname.}
proc Frame_GetAlign*(AObj: pointer): TAlign {.importc: "Frame_GetAlign", dynlib: dllname.}
proc Frame_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "Frame_SetAlign", dynlib: dllname.}
proc Frame_GetAnchors*(AObj: pointer): TAnchors {.importc: "Frame_GetAnchors", dynlib: dllname.}
proc Frame_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "Frame_SetAnchors", dynlib: dllname.}
proc Frame_GetAutoScroll*(AObj: pointer): bool {.importc: "Frame_GetAutoScroll", dynlib: dllname.}
proc Frame_SetAutoScroll*(AObj: pointer, AValue: bool) {.importc: "Frame_SetAutoScroll", dynlib: dllname.}
proc Frame_GetAutoSize*(AObj: pointer): bool {.importc: "Frame_GetAutoSize", dynlib: dllname.}
proc Frame_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "Frame_SetAutoSize", dynlib: dllname.}
proc Frame_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "Frame_GetBiDiMode", dynlib: dllname.}
proc Frame_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "Frame_SetBiDiMode", dynlib: dllname.}
proc Frame_GetConstraints*(AObj: pointer): pointer {.importc: "Frame_GetConstraints", dynlib: dllname.}
proc Frame_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetConstraints", dynlib: dllname.}
proc Frame_GetDockSite*(AObj: pointer): bool {.importc: "Frame_GetDockSite", dynlib: dllname.}
proc Frame_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "Frame_SetDockSite", dynlib: dllname.}
proc Frame_GetDoubleBuffered*(AObj: pointer): bool {.importc: "Frame_GetDoubleBuffered", dynlib: dllname.}
proc Frame_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Frame_SetDoubleBuffered", dynlib: dllname.}
proc Frame_GetDragCursor*(AObj: pointer): TCursor {.importc: "Frame_GetDragCursor", dynlib: dllname.}
proc Frame_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "Frame_SetDragCursor", dynlib: dllname.}
proc Frame_GetDragKind*(AObj: pointer): TDragKind {.importc: "Frame_GetDragKind", dynlib: dllname.}
proc Frame_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "Frame_SetDragKind", dynlib: dllname.}
proc Frame_GetDragMode*(AObj: pointer): TDragMode {.importc: "Frame_GetDragMode", dynlib: dllname.}
proc Frame_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "Frame_SetDragMode", dynlib: dllname.}
proc Frame_GetEnabled*(AObj: pointer): bool {.importc: "Frame_GetEnabled", dynlib: dllname.}
proc Frame_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "Frame_SetEnabled", dynlib: dllname.}
proc Frame_GetColor*(AObj: pointer): TColor {.importc: "Frame_GetColor", dynlib: dllname.}
proc Frame_SetColor*(AObj: pointer, AValue: TColor) {.importc: "Frame_SetColor", dynlib: dllname.}
proc Frame_GetFont*(AObj: pointer): pointer {.importc: "Frame_GetFont", dynlib: dllname.}
proc Frame_SetFont*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetFont", dynlib: dllname.}
proc Frame_GetParentColor*(AObj: pointer): bool {.importc: "Frame_GetParentColor", dynlib: dllname.}
proc Frame_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "Frame_SetParentColor", dynlib: dllname.}
proc Frame_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "Frame_GetParentDoubleBuffered", dynlib: dllname.}
proc Frame_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "Frame_SetParentDoubleBuffered", dynlib: dllname.}
proc Frame_GetParentFont*(AObj: pointer): bool {.importc: "Frame_GetParentFont", dynlib: dllname.}
proc Frame_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "Frame_SetParentFont", dynlib: dllname.}
proc Frame_GetParentShowHint*(AObj: pointer): bool {.importc: "Frame_GetParentShowHint", dynlib: dllname.}
proc Frame_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "Frame_SetParentShowHint", dynlib: dllname.}
proc Frame_GetPopupMenu*(AObj: pointer): pointer {.importc: "Frame_GetPopupMenu", dynlib: dllname.}
proc Frame_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetPopupMenu", dynlib: dllname.}
proc Frame_GetShowHint*(AObj: pointer): bool {.importc: "Frame_GetShowHint", dynlib: dllname.}
proc Frame_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "Frame_SetShowHint", dynlib: dllname.}
proc Frame_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "Frame_GetTabOrder", dynlib: dllname.}
proc Frame_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "Frame_SetTabOrder", dynlib: dllname.}
proc Frame_GetTabStop*(AObj: pointer): bool {.importc: "Frame_GetTabStop", dynlib: dllname.}
proc Frame_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "Frame_SetTabStop", dynlib: dllname.}
proc Frame_GetVisible*(AObj: pointer): bool {.importc: "Frame_GetVisible", dynlib: dllname.}
proc Frame_SetVisible*(AObj: pointer, AValue: bool) {.importc: "Frame_SetVisible", dynlib: dllname.}
proc Frame_SetOnAlignPosition*(AObj: pointer, AEventId: TAlignPositionEvent) {.importc: "Frame_SetOnAlignPosition", dynlib: dllname.}
proc Frame_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Frame_SetOnClick", dynlib: dllname.}
proc Frame_SetOnContextPopup*(AObj: pointer, AEventId: TContextPopupEvent) {.importc: "Frame_SetOnContextPopup", dynlib: dllname.}
proc Frame_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Frame_SetOnDblClick", dynlib: dllname.}
proc Frame_SetOnDockDrop*(AObj: pointer, AEventId: TDockDropEvent) {.importc: "Frame_SetOnDockDrop", dynlib: dllname.}
proc Frame_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "Frame_SetOnDragDrop", dynlib: dllname.}
proc Frame_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "Frame_SetOnDragOver", dynlib: dllname.}
proc Frame_SetOnEndDock*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Frame_SetOnEndDock", dynlib: dllname.}
proc Frame_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "Frame_SetOnEndDrag", dynlib: dllname.}
proc Frame_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Frame_SetOnEnter", dynlib: dllname.}
proc Frame_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Frame_SetOnExit", dynlib: dllname.}
proc Frame_SetOnGetSiteInfo*(AObj: pointer, AEventId: TGetSiteInfoEvent) {.importc: "Frame_SetOnGetSiteInfo", dynlib: dllname.}
proc Frame_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Frame_SetOnMouseDown", dynlib: dllname.}
proc Frame_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Frame_SetOnMouseEnter", dynlib: dllname.}
proc Frame_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Frame_SetOnMouseLeave", dynlib: dllname.}
proc Frame_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "Frame_SetOnMouseMove", dynlib: dllname.}
proc Frame_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "Frame_SetOnMouseUp", dynlib: dllname.}
proc Frame_SetOnMouseWheel*(AObj: pointer, AEventId: TMouseWheelEvent) {.importc: "Frame_SetOnMouseWheel", dynlib: dllname.}
proc Frame_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "Frame_SetOnMouseWheelDown", dynlib: dllname.}
proc Frame_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "Frame_SetOnMouseWheelUp", dynlib: dllname.}
proc Frame_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "Frame_SetOnResize", dynlib: dllname.}
proc Frame_SetOnStartDock*(AObj: pointer, AEventId: TStartDockEvent) {.importc: "Frame_SetOnStartDock", dynlib: dllname.}
proc Frame_SetOnUnDock*(AObj: pointer, AEventId: TUnDockEvent) {.importc: "Frame_SetOnUnDock", dynlib: dllname.}
proc Frame_GetHorzScrollBar*(AObj: pointer): pointer {.importc: "Frame_GetHorzScrollBar", dynlib: dllname.}
proc Frame_SetHorzScrollBar*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetHorzScrollBar", dynlib: dllname.}
proc Frame_GetVertScrollBar*(AObj: pointer): pointer {.importc: "Frame_GetVertScrollBar", dynlib: dllname.}
proc Frame_SetVertScrollBar*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetVertScrollBar", dynlib: dllname.}
proc Frame_GetDockClientCount*(AObj: pointer): int32 {.importc: "Frame_GetDockClientCount", dynlib: dllname.}
proc Frame_GetMouseInClient*(AObj: pointer): bool {.importc: "Frame_GetMouseInClient", dynlib: dllname.}
proc Frame_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "Frame_GetVisibleDockClientCount", dynlib: dllname.}
proc Frame_GetBrush*(AObj: pointer): pointer {.importc: "Frame_GetBrush", dynlib: dllname.}
proc Frame_GetControlCount*(AObj: pointer): int32 {.importc: "Frame_GetControlCount", dynlib: dllname.}
proc Frame_GetHandle*(AObj: pointer): HWND {.importc: "Frame_GetHandle", dynlib: dllname.}
proc Frame_GetParentWindow*(AObj: pointer): HWND {.importc: "Frame_GetParentWindow", dynlib: dllname.}
proc Frame_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "Frame_SetParentWindow", dynlib: dllname.}
proc Frame_GetShowing*(AObj: pointer): bool {.importc: "Frame_GetShowing", dynlib: dllname.}
proc Frame_GetUseDockManager*(AObj: pointer): bool {.importc: "Frame_GetUseDockManager", dynlib: dllname.}
proc Frame_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "Frame_SetUseDockManager", dynlib: dllname.}
proc Frame_GetAction*(AObj: pointer): pointer {.importc: "Frame_GetAction", dynlib: dllname.}
proc Frame_SetAction*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetAction", dynlib: dllname.}
proc Frame_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "Frame_GetBoundsRect", dynlib: dllname.}
proc Frame_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "Frame_SetBoundsRect", dynlib: dllname.}
proc Frame_GetClientHeight*(AObj: pointer): int32 {.importc: "Frame_GetClientHeight", dynlib: dllname.}
proc Frame_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "Frame_SetClientHeight", dynlib: dllname.}
proc Frame_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "Frame_GetClientOrigin", dynlib: dllname.}
proc Frame_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "Frame_GetClientRect", dynlib: dllname.}
proc Frame_GetClientWidth*(AObj: pointer): int32 {.importc: "Frame_GetClientWidth", dynlib: dllname.}
proc Frame_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "Frame_SetClientWidth", dynlib: dllname.}
proc Frame_GetControlState*(AObj: pointer): TControlState {.importc: "Frame_GetControlState", dynlib: dllname.}
proc Frame_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "Frame_SetControlState", dynlib: dllname.}
proc Frame_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "Frame_GetControlStyle", dynlib: dllname.}
proc Frame_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "Frame_SetControlStyle", dynlib: dllname.}
proc Frame_GetFloating*(AObj: pointer): bool {.importc: "Frame_GetFloating", dynlib: dllname.}
proc Frame_GetParent*(AObj: pointer): pointer {.importc: "Frame_GetParent", dynlib: dllname.}
proc Frame_SetParent*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetParent", dynlib: dllname.}
proc Frame_GetLeft*(AObj: pointer): int32 {.importc: "Frame_GetLeft", dynlib: dllname.}
proc Frame_SetLeft*(AObj: pointer, AValue: int32) {.importc: "Frame_SetLeft", dynlib: dllname.}
proc Frame_GetTop*(AObj: pointer): int32 {.importc: "Frame_GetTop", dynlib: dllname.}
proc Frame_SetTop*(AObj: pointer, AValue: int32) {.importc: "Frame_SetTop", dynlib: dllname.}
proc Frame_GetWidth*(AObj: pointer): int32 {.importc: "Frame_GetWidth", dynlib: dllname.}
proc Frame_SetWidth*(AObj: pointer, AValue: int32) {.importc: "Frame_SetWidth", dynlib: dllname.}
proc Frame_GetHeight*(AObj: pointer): int32 {.importc: "Frame_GetHeight", dynlib: dllname.}
proc Frame_SetHeight*(AObj: pointer, AValue: int32) {.importc: "Frame_SetHeight", dynlib: dllname.}
proc Frame_GetCursor*(AObj: pointer): TCursor {.importc: "Frame_GetCursor", dynlib: dllname.}
proc Frame_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "Frame_SetCursor", dynlib: dllname.}
proc Frame_GetHint*(AObj: pointer): cstring {.importc: "Frame_GetHint", dynlib: dllname.}
proc Frame_SetHint*(AObj: pointer, AValue: cstring) {.importc: "Frame_SetHint", dynlib: dllname.}
proc Frame_GetComponentCount*(AObj: pointer): int32 {.importc: "Frame_GetComponentCount", dynlib: dllname.}
proc Frame_GetComponentIndex*(AObj: pointer): int32 {.importc: "Frame_GetComponentIndex", dynlib: dllname.}
proc Frame_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "Frame_SetComponentIndex", dynlib: dllname.}
proc Frame_GetOwner*(AObj: pointer): pointer {.importc: "Frame_GetOwner", dynlib: dllname.}
proc Frame_GetName*(AObj: pointer): cstring {.importc: "Frame_GetName", dynlib: dllname.}
proc Frame_SetName*(AObj: pointer, AValue: cstring) {.importc: "Frame_SetName", dynlib: dllname.}
proc Frame_GetTag*(AObj: pointer): int {.importc: "Frame_GetTag", dynlib: dllname.}
proc Frame_SetTag*(AObj: pointer, AValue: int) {.importc: "Frame_SetTag", dynlib: dllname.}
proc Frame_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "Frame_GetAnchorSideLeft", dynlib: dllname.}
proc Frame_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetAnchorSideLeft", dynlib: dllname.}
proc Frame_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "Frame_GetAnchorSideTop", dynlib: dllname.}
proc Frame_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetAnchorSideTop", dynlib: dllname.}
proc Frame_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "Frame_GetAnchorSideRight", dynlib: dllname.}
proc Frame_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetAnchorSideRight", dynlib: dllname.}
proc Frame_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "Frame_GetAnchorSideBottom", dynlib: dllname.}
proc Frame_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetAnchorSideBottom", dynlib: dllname.}
proc Frame_GetChildSizing*(AObj: pointer): pointer {.importc: "Frame_GetChildSizing", dynlib: dllname.}
proc Frame_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetChildSizing", dynlib: dllname.}
proc Frame_GetBorderSpacing*(AObj: pointer): pointer {.importc: "Frame_GetBorderSpacing", dynlib: dllname.}
proc Frame_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "Frame_SetBorderSpacing", dynlib: dllname.}
proc Frame_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "Frame_GetDockClients", dynlib: dllname.}
proc Frame_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "Frame_GetControls", dynlib: dllname.}
proc Frame_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "Frame_GetComponents", dynlib: dllname.}
proc Frame_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "Frame_GetAnchorSide", dynlib: dllname.}
proc Frame_StaticClassType*(): TClass {.importc: "Frame_StaticClassType", dynlib: dllname.}
# ----------------- TControlScrollBar ----------------------
proc ControlScrollBar_Assign*(AObj: pointer, Source: pointer) {.importc: "ControlScrollBar_Assign", dynlib: dllname.}
proc ControlScrollBar_IsScrollBarVisible*(AObj: pointer): bool {.importc: "ControlScrollBar_IsScrollBarVisible", dynlib: dllname.}
proc ControlScrollBar_GetNamePath*(AObj: pointer): cstring {.importc: "ControlScrollBar_GetNamePath", dynlib: dllname.}
proc ControlScrollBar_ClassType*(AObj: pointer): TClass {.importc: "ControlScrollBar_ClassType", dynlib: dllname.}
proc ControlScrollBar_ClassName*(AObj: pointer): cstring {.importc: "ControlScrollBar_ClassName", dynlib: dllname.}
proc ControlScrollBar_InstanceSize*(AObj: pointer): int32 {.importc: "ControlScrollBar_InstanceSize", dynlib: dllname.}
proc ControlScrollBar_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ControlScrollBar_InheritsFrom", dynlib: dllname.}
proc ControlScrollBar_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ControlScrollBar_Equals", dynlib: dllname.}
proc ControlScrollBar_GetHashCode*(AObj: pointer): int32 {.importc: "ControlScrollBar_GetHashCode", dynlib: dllname.}
proc ControlScrollBar_ToString*(AObj: pointer): cstring {.importc: "ControlScrollBar_ToString", dynlib: dllname.}
proc ControlScrollBar_GetScrollPos*(AObj: pointer): int32 {.importc: "ControlScrollBar_GetScrollPos", dynlib: dllname.}
proc ControlScrollBar_GetIncrement*(AObj: pointer): TScrollBarInc {.importc: "ControlScrollBar_GetIncrement", dynlib: dllname.}
proc ControlScrollBar_SetIncrement*(AObj: pointer, AValue: TScrollBarInc) {.importc: "ControlScrollBar_SetIncrement", dynlib: dllname.}
proc ControlScrollBar_GetPosition*(AObj: pointer): int32 {.importc: "ControlScrollBar_GetPosition", dynlib: dllname.}
proc ControlScrollBar_SetPosition*(AObj: pointer, AValue: int32) {.importc: "ControlScrollBar_SetPosition", dynlib: dllname.}
proc ControlScrollBar_GetRange*(AObj: pointer): int32 {.importc: "ControlScrollBar_GetRange", dynlib: dllname.}
proc ControlScrollBar_SetRange*(AObj: pointer, AValue: int32) {.importc: "ControlScrollBar_SetRange", dynlib: dllname.}
proc ControlScrollBar_GetSmooth*(AObj: pointer): bool {.importc: "ControlScrollBar_GetSmooth", dynlib: dllname.}
proc ControlScrollBar_SetSmooth*(AObj: pointer, AValue: bool) {.importc: "ControlScrollBar_SetSmooth", dynlib: dllname.}
proc ControlScrollBar_GetTracking*(AObj: pointer): bool {.importc: "ControlScrollBar_GetTracking", dynlib: dllname.}
proc ControlScrollBar_SetTracking*(AObj: pointer, AValue: bool) {.importc: "ControlScrollBar_SetTracking", dynlib: dllname.}
proc ControlScrollBar_GetVisible*(AObj: pointer): bool {.importc: "ControlScrollBar_GetVisible", dynlib: dllname.}
proc ControlScrollBar_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ControlScrollBar_SetVisible", dynlib: dllname.}
proc ControlScrollBar_StaticClassType*(): TClass {.importc: "ControlScrollBar_StaticClassType", dynlib: dllname.}
# ----------------- TSizeConstraints ----------------------
proc SizeConstraints_Assign*(AObj: pointer, Source: pointer) {.importc: "SizeConstraints_Assign", dynlib: dllname.}
proc SizeConstraints_GetNamePath*(AObj: pointer): cstring {.importc: "SizeConstraints_GetNamePath", dynlib: dllname.}
proc SizeConstraints_ClassType*(AObj: pointer): TClass {.importc: "SizeConstraints_ClassType", dynlib: dllname.}
proc SizeConstraints_ClassName*(AObj: pointer): cstring {.importc: "SizeConstraints_ClassName", dynlib: dllname.}
proc SizeConstraints_InstanceSize*(AObj: pointer): int32 {.importc: "SizeConstraints_InstanceSize", dynlib: dllname.}
proc SizeConstraints_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "SizeConstraints_InheritsFrom", dynlib: dllname.}
proc SizeConstraints_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "SizeConstraints_Equals", dynlib: dllname.}
proc SizeConstraints_GetHashCode*(AObj: pointer): int32 {.importc: "SizeConstraints_GetHashCode", dynlib: dllname.}
proc SizeConstraints_ToString*(AObj: pointer): cstring {.importc: "SizeConstraints_ToString", dynlib: dllname.}
proc SizeConstraints_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "SizeConstraints_SetOnChange", dynlib: dllname.}
proc SizeConstraints_GetMaxHeight*(AObj: pointer): TConstraintSize {.importc: "SizeConstraints_GetMaxHeight", dynlib: dllname.}
proc SizeConstraints_SetMaxHeight*(AObj: pointer, AValue: TConstraintSize) {.importc: "SizeConstraints_SetMaxHeight", dynlib: dllname.}
proc SizeConstraints_GetMaxWidth*(AObj: pointer): TConstraintSize {.importc: "SizeConstraints_GetMaxWidth", dynlib: dllname.}
proc SizeConstraints_SetMaxWidth*(AObj: pointer, AValue: TConstraintSize) {.importc: "SizeConstraints_SetMaxWidth", dynlib: dllname.}
proc SizeConstraints_GetMinHeight*(AObj: pointer): TConstraintSize {.importc: "SizeConstraints_GetMinHeight", dynlib: dllname.}
proc SizeConstraints_SetMinHeight*(AObj: pointer, AValue: TConstraintSize) {.importc: "SizeConstraints_SetMinHeight", dynlib: dllname.}
proc SizeConstraints_GetMinWidth*(AObj: pointer): TConstraintSize {.importc: "SizeConstraints_GetMinWidth", dynlib: dllname.}
proc SizeConstraints_SetMinWidth*(AObj: pointer, AValue: TConstraintSize) {.importc: "SizeConstraints_SetMinWidth", dynlib: dllname.}
proc SizeConstraints_StaticClassType*(): TClass {.importc: "SizeConstraints_StaticClassType", dynlib: dllname.}
# ----------------- TXButton ----------------------
proc XButton_Create*(AOwner: pointer): pointer {.importc: "XButton_Create", dynlib: dllname.}
proc XButton_Free*(AObj: pointer) {.importc: "XButton_Free", dynlib: dllname.}
proc XButton_BringToFront*(AObj: pointer) {.importc: "XButton_BringToFront", dynlib: dllname.}
proc XButton_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "XButton_ClientToScreen", dynlib: dllname.}
proc XButton_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "XButton_ClientToParent", dynlib: dllname.}
proc XButton_Dragging*(AObj: pointer): bool {.importc: "XButton_Dragging", dynlib: dllname.}
proc XButton_HasParent*(AObj: pointer): bool {.importc: "XButton_HasParent", dynlib: dllname.}
proc XButton_Hide*(AObj: pointer) {.importc: "XButton_Hide", dynlib: dllname.}
proc XButton_Invalidate*(AObj: pointer) {.importc: "XButton_Invalidate", dynlib: dllname.}
proc XButton_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "XButton_Perform", dynlib: dllname.}
proc XButton_Refresh*(AObj: pointer) {.importc: "XButton_Refresh", dynlib: dllname.}
proc XButton_Repaint*(AObj: pointer) {.importc: "XButton_Repaint", dynlib: dllname.}
proc XButton_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "XButton_ScreenToClient", dynlib: dllname.}
proc XButton_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "XButton_ParentToClient", dynlib: dllname.}
proc XButton_SendToBack*(AObj: pointer) {.importc: "XButton_SendToBack", dynlib: dllname.}
proc XButton_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "XButton_SetBounds", dynlib: dllname.}
proc XButton_Show*(AObj: pointer) {.importc: "XButton_Show", dynlib: dllname.}
proc XButton_Update*(AObj: pointer) {.importc: "XButton_Update", dynlib: dllname.}
proc XButton_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "XButton_GetTextBuf", dynlib: dllname.}
proc XButton_GetTextLen*(AObj: pointer): int32 {.importc: "XButton_GetTextLen", dynlib: dllname.}
proc XButton_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "XButton_SetTextBuf", dynlib: dllname.}
proc XButton_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "XButton_FindComponent", dynlib: dllname.}
proc XButton_GetNamePath*(AObj: pointer): cstring {.importc: "XButton_GetNamePath", dynlib: dllname.}
proc XButton_Assign*(AObj: pointer, Source: pointer) {.importc: "XButton_Assign", dynlib: dllname.}
proc XButton_ClassType*(AObj: pointer): TClass {.importc: "XButton_ClassType", dynlib: dllname.}
proc XButton_ClassName*(AObj: pointer): cstring {.importc: "XButton_ClassName", dynlib: dllname.}
proc XButton_InstanceSize*(AObj: pointer): int32 {.importc: "XButton_InstanceSize", dynlib: dllname.}
proc XButton_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "XButton_InheritsFrom", dynlib: dllname.}
proc XButton_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "XButton_Equals", dynlib: dllname.}
proc XButton_GetHashCode*(AObj: pointer): int32 {.importc: "XButton_GetHashCode", dynlib: dllname.}
proc XButton_ToString*(AObj: pointer): cstring {.importc: "XButton_ToString", dynlib: dllname.}
proc XButton_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "XButton_AnchorToNeighbour", dynlib: dllname.}
proc XButton_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "XButton_AnchorParallel", dynlib: dllname.}
proc XButton_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "XButton_AnchorHorizontalCenterTo", dynlib: dllname.}
proc XButton_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "XButton_AnchorVerticalCenterTo", dynlib: dllname.}
proc XButton_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "XButton_AnchorSame", dynlib: dllname.}
proc XButton_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "XButton_AnchorAsAlign", dynlib: dllname.}
proc XButton_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "XButton_AnchorClient", dynlib: dllname.}
proc XButton_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_ScaleDesignToForm", dynlib: dllname.}
proc XButton_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_ScaleFormToDesign", dynlib: dllname.}
proc XButton_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_Scale96ToForm", dynlib: dllname.}
proc XButton_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_ScaleFormTo96", dynlib: dllname.}
proc XButton_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_Scale96ToFont", dynlib: dllname.}
proc XButton_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_ScaleFontTo96", dynlib: dllname.}
proc XButton_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_ScaleScreenToFont", dynlib: dllname.}
proc XButton_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_ScaleFontToScreen", dynlib: dllname.}
proc XButton_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_Scale96ToScreen", dynlib: dllname.}
proc XButton_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "XButton_ScaleScreenTo96", dynlib: dllname.}
proc XButton_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "XButton_AutoAdjustLayout", dynlib: dllname.}
proc XButton_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "XButton_FixDesignFontsPPI", dynlib: dllname.}
proc XButton_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "XButton_ScaleFontsPPI", dynlib: dllname.}
proc XButton_GetCaption*(AObj: pointer): cstring {.importc: "XButton_GetCaption", dynlib: dllname.}
proc XButton_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "XButton_SetCaption", dynlib: dllname.}
proc XButton_GetShowCaption*(AObj: pointer): bool {.importc: "XButton_GetShowCaption", dynlib: dllname.}
proc XButton_SetShowCaption*(AObj: pointer, AValue: bool) {.importc: "XButton_SetShowCaption", dynlib: dllname.}
proc XButton_GetBackColor*(AObj: pointer): TColor {.importc: "XButton_GetBackColor", dynlib: dllname.}
proc XButton_SetBackColor*(AObj: pointer, AValue: TColor) {.importc: "XButton_SetBackColor", dynlib: dllname.}
proc XButton_GetHoverColor*(AObj: pointer): TColor {.importc: "XButton_GetHoverColor", dynlib: dllname.}
proc XButton_SetHoverColor*(AObj: pointer, AValue: TColor) {.importc: "XButton_SetHoverColor", dynlib: dllname.}
proc XButton_GetDownColor*(AObj: pointer): TColor {.importc: "XButton_GetDownColor", dynlib: dllname.}
proc XButton_SetDownColor*(AObj: pointer, AValue: TColor) {.importc: "XButton_SetDownColor", dynlib: dllname.}
proc XButton_GetBorderWidth*(AObj: pointer): int32 {.importc: "XButton_GetBorderWidth", dynlib: dllname.}
proc XButton_SetBorderWidth*(AObj: pointer, AValue: int32) {.importc: "XButton_SetBorderWidth", dynlib: dllname.}
proc XButton_GetBorderColor*(AObj: pointer): TColor {.importc: "XButton_GetBorderColor", dynlib: dllname.}
proc XButton_SetBorderColor*(AObj: pointer, AValue: TColor) {.importc: "XButton_SetBorderColor", dynlib: dllname.}
proc XButton_GetPicture*(AObj: pointer): pointer {.importc: "XButton_GetPicture", dynlib: dllname.}
proc XButton_SetPicture*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetPicture", dynlib: dllname.}
proc XButton_GetDrawMode*(AObj: pointer): TDrawImageMode {.importc: "XButton_GetDrawMode", dynlib: dllname.}
proc XButton_SetDrawMode*(AObj: pointer, AValue: TDrawImageMode) {.importc: "XButton_SetDrawMode", dynlib: dllname.}
proc XButton_GetNormalFontColor*(AObj: pointer): TColor {.importc: "XButton_GetNormalFontColor", dynlib: dllname.}
proc XButton_SetNormalFontColor*(AObj: pointer, AValue: TColor) {.importc: "XButton_SetNormalFontColor", dynlib: dllname.}
proc XButton_GetDownFontColor*(AObj: pointer): TColor {.importc: "XButton_GetDownFontColor", dynlib: dllname.}
proc XButton_SetDownFontColor*(AObj: pointer, AValue: TColor) {.importc: "XButton_SetDownFontColor", dynlib: dllname.}
proc XButton_GetHoverFontColor*(AObj: pointer): TColor {.importc: "XButton_GetHoverFontColor", dynlib: dllname.}
proc XButton_SetHoverFontColor*(AObj: pointer, AValue: TColor) {.importc: "XButton_SetHoverFontColor", dynlib: dllname.}
proc XButton_GetAction*(AObj: pointer): pointer {.importc: "XButton_GetAction", dynlib: dllname.}
proc XButton_SetAction*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetAction", dynlib: dllname.}
proc XButton_GetAlign*(AObj: pointer): TAlign {.importc: "XButton_GetAlign", dynlib: dllname.}
proc XButton_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "XButton_SetAlign", dynlib: dllname.}
proc XButton_GetAnchors*(AObj: pointer): TAnchors {.importc: "XButton_GetAnchors", dynlib: dllname.}
proc XButton_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "XButton_SetAnchors", dynlib: dllname.}
proc XButton_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "XButton_GetBiDiMode", dynlib: dllname.}
proc XButton_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "XButton_SetBiDiMode", dynlib: dllname.}
proc XButton_GetConstraints*(AObj: pointer): pointer {.importc: "XButton_GetConstraints", dynlib: dllname.}
proc XButton_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetConstraints", dynlib: dllname.}
proc XButton_GetEnabled*(AObj: pointer): bool {.importc: "XButton_GetEnabled", dynlib: dllname.}
proc XButton_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "XButton_SetEnabled", dynlib: dllname.}
proc XButton_GetFont*(AObj: pointer): pointer {.importc: "XButton_GetFont", dynlib: dllname.}
proc XButton_SetFont*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetFont", dynlib: dllname.}
proc XButton_GetParentFont*(AObj: pointer): bool {.importc: "XButton_GetParentFont", dynlib: dllname.}
proc XButton_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "XButton_SetParentFont", dynlib: dllname.}
proc XButton_GetParentShowHint*(AObj: pointer): bool {.importc: "XButton_GetParentShowHint", dynlib: dllname.}
proc XButton_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "XButton_SetParentShowHint", dynlib: dllname.}
proc XButton_GetPopupMenu*(AObj: pointer): pointer {.importc: "XButton_GetPopupMenu", dynlib: dllname.}
proc XButton_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetPopupMenu", dynlib: dllname.}
proc XButton_GetShowHint*(AObj: pointer): bool {.importc: "XButton_GetShowHint", dynlib: dllname.}
proc XButton_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "XButton_SetShowHint", dynlib: dllname.}
proc XButton_GetVisible*(AObj: pointer): bool {.importc: "XButton_GetVisible", dynlib: dllname.}
proc XButton_SetVisible*(AObj: pointer, AValue: bool) {.importc: "XButton_SetVisible", dynlib: dllname.}
proc XButton_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "XButton_SetOnClick", dynlib: dllname.}
proc XButton_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "XButton_SetOnDblClick", dynlib: dllname.}
proc XButton_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "XButton_SetOnMouseDown", dynlib: dllname.}
proc XButton_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "XButton_SetOnMouseEnter", dynlib: dllname.}
proc XButton_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "XButton_SetOnMouseLeave", dynlib: dllname.}
proc XButton_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "XButton_SetOnMouseMove", dynlib: dllname.}
proc XButton_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "XButton_SetOnMouseUp", dynlib: dllname.}
proc XButton_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "XButton_GetBoundsRect", dynlib: dllname.}
proc XButton_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "XButton_SetBoundsRect", dynlib: dllname.}
proc XButton_GetClientHeight*(AObj: pointer): int32 {.importc: "XButton_GetClientHeight", dynlib: dllname.}
proc XButton_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "XButton_SetClientHeight", dynlib: dllname.}
proc XButton_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "XButton_GetClientOrigin", dynlib: dllname.}
proc XButton_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "XButton_GetClientRect", dynlib: dllname.}
proc XButton_GetClientWidth*(AObj: pointer): int32 {.importc: "XButton_GetClientWidth", dynlib: dllname.}
proc XButton_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "XButton_SetClientWidth", dynlib: dllname.}
proc XButton_GetControlState*(AObj: pointer): TControlState {.importc: "XButton_GetControlState", dynlib: dllname.}
proc XButton_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "XButton_SetControlState", dynlib: dllname.}
proc XButton_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "XButton_GetControlStyle", dynlib: dllname.}
proc XButton_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "XButton_SetControlStyle", dynlib: dllname.}
proc XButton_GetFloating*(AObj: pointer): bool {.importc: "XButton_GetFloating", dynlib: dllname.}
proc XButton_GetParent*(AObj: pointer): pointer {.importc: "XButton_GetParent", dynlib: dllname.}
proc XButton_SetParent*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetParent", dynlib: dllname.}
proc XButton_GetLeft*(AObj: pointer): int32 {.importc: "XButton_GetLeft", dynlib: dllname.}
proc XButton_SetLeft*(AObj: pointer, AValue: int32) {.importc: "XButton_SetLeft", dynlib: dllname.}
proc XButton_GetTop*(AObj: pointer): int32 {.importc: "XButton_GetTop", dynlib: dllname.}
proc XButton_SetTop*(AObj: pointer, AValue: int32) {.importc: "XButton_SetTop", dynlib: dllname.}
proc XButton_GetWidth*(AObj: pointer): int32 {.importc: "XButton_GetWidth", dynlib: dllname.}
proc XButton_SetWidth*(AObj: pointer, AValue: int32) {.importc: "XButton_SetWidth", dynlib: dllname.}
proc XButton_GetHeight*(AObj: pointer): int32 {.importc: "XButton_GetHeight", dynlib: dllname.}
proc XButton_SetHeight*(AObj: pointer, AValue: int32) {.importc: "XButton_SetHeight", dynlib: dllname.}
proc XButton_GetCursor*(AObj: pointer): TCursor {.importc: "XButton_GetCursor", dynlib: dllname.}
proc XButton_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "XButton_SetCursor", dynlib: dllname.}
proc XButton_GetHint*(AObj: pointer): cstring {.importc: "XButton_GetHint", dynlib: dllname.}
proc XButton_SetHint*(AObj: pointer, AValue: cstring) {.importc: "XButton_SetHint", dynlib: dllname.}
proc XButton_GetComponentCount*(AObj: pointer): int32 {.importc: "XButton_GetComponentCount", dynlib: dllname.}
proc XButton_GetComponentIndex*(AObj: pointer): int32 {.importc: "XButton_GetComponentIndex", dynlib: dllname.}
proc XButton_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "XButton_SetComponentIndex", dynlib: dllname.}
proc XButton_GetOwner*(AObj: pointer): pointer {.importc: "XButton_GetOwner", dynlib: dllname.}
proc XButton_GetName*(AObj: pointer): cstring {.importc: "XButton_GetName", dynlib: dllname.}
proc XButton_SetName*(AObj: pointer, AValue: cstring) {.importc: "XButton_SetName", dynlib: dllname.}
proc XButton_GetTag*(AObj: pointer): int {.importc: "XButton_GetTag", dynlib: dllname.}
proc XButton_SetTag*(AObj: pointer, AValue: int) {.importc: "XButton_SetTag", dynlib: dllname.}
proc XButton_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "XButton_GetAnchorSideLeft", dynlib: dllname.}
proc XButton_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetAnchorSideLeft", dynlib: dllname.}
proc XButton_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "XButton_GetAnchorSideTop", dynlib: dllname.}
proc XButton_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetAnchorSideTop", dynlib: dllname.}
proc XButton_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "XButton_GetAnchorSideRight", dynlib: dllname.}
proc XButton_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetAnchorSideRight", dynlib: dllname.}
proc XButton_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "XButton_GetAnchorSideBottom", dynlib: dllname.}
proc XButton_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetAnchorSideBottom", dynlib: dllname.}
proc XButton_GetBorderSpacing*(AObj: pointer): pointer {.importc: "XButton_GetBorderSpacing", dynlib: dllname.}
proc XButton_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "XButton_SetBorderSpacing", dynlib: dllname.}
proc XButton_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "XButton_GetComponents", dynlib: dllname.}
proc XButton_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "XButton_GetAnchorSide", dynlib: dllname.}
proc XButton_StaticClassType*(): TClass {.importc: "XButton_StaticClassType", dynlib: dllname.}
# ----------------- TAnchorSide ----------------------
proc AnchorSide_Assign*(AObj: pointer, Source: pointer) {.importc: "AnchorSide_Assign", dynlib: dllname.}
proc AnchorSide_GetNamePath*(AObj: pointer): cstring {.importc: "AnchorSide_GetNamePath", dynlib: dllname.}
proc AnchorSide_ClassType*(AObj: pointer): TClass {.importc: "AnchorSide_ClassType", dynlib: dllname.}
proc AnchorSide_ClassName*(AObj: pointer): cstring {.importc: "AnchorSide_ClassName", dynlib: dllname.}
proc AnchorSide_InstanceSize*(AObj: pointer): int32 {.importc: "AnchorSide_InstanceSize", dynlib: dllname.}
proc AnchorSide_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "AnchorSide_InheritsFrom", dynlib: dllname.}
proc AnchorSide_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "AnchorSide_Equals", dynlib: dllname.}
proc AnchorSide_GetHashCode*(AObj: pointer): int32 {.importc: "AnchorSide_GetHashCode", dynlib: dllname.}
proc AnchorSide_ToString*(AObj: pointer): cstring {.importc: "AnchorSide_ToString", dynlib: dllname.}
proc AnchorSide_GetOwner*(AObj: pointer): pointer {.importc: "AnchorSide_GetOwner", dynlib: dllname.}
proc AnchorSide_GetControl*(AObj: pointer): pointer {.importc: "AnchorSide_GetControl", dynlib: dllname.}
proc AnchorSide_SetControl*(AObj: pointer, AValue: pointer) {.importc: "AnchorSide_SetControl", dynlib: dllname.}
proc AnchorSide_GetSide*(AObj: pointer): TAnchorSideReference {.importc: "AnchorSide_GetSide", dynlib: dllname.}
proc AnchorSide_SetSide*(AObj: pointer, AValue: TAnchorSideReference) {.importc: "AnchorSide_SetSide", dynlib: dllname.}
proc AnchorSide_StaticClassType*(): TClass {.importc: "AnchorSide_StaticClassType", dynlib: dllname.}
# ----------------- TControlBorderSpacing ----------------------
proc ControlBorderSpacing_Assign*(AObj: pointer, Source: pointer) {.importc: "ControlBorderSpacing_Assign", dynlib: dllname.}
proc ControlBorderSpacing_GetNamePath*(AObj: pointer): cstring {.importc: "ControlBorderSpacing_GetNamePath", dynlib: dllname.}
proc ControlBorderSpacing_ClassType*(AObj: pointer): TClass {.importc: "ControlBorderSpacing_ClassType", dynlib: dllname.}
proc ControlBorderSpacing_ClassName*(AObj: pointer): cstring {.importc: "ControlBorderSpacing_ClassName", dynlib: dllname.}
proc ControlBorderSpacing_InstanceSize*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_InstanceSize", dynlib: dllname.}
proc ControlBorderSpacing_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ControlBorderSpacing_InheritsFrom", dynlib: dllname.}
proc ControlBorderSpacing_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ControlBorderSpacing_Equals", dynlib: dllname.}
proc ControlBorderSpacing_GetHashCode*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetHashCode", dynlib: dllname.}
proc ControlBorderSpacing_ToString*(AObj: pointer): cstring {.importc: "ControlBorderSpacing_ToString", dynlib: dllname.}
proc ControlBorderSpacing_GetControl*(AObj: pointer): pointer {.importc: "ControlBorderSpacing_GetControl", dynlib: dllname.}
proc ControlBorderSpacing_GetAroundLeft*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetAroundLeft", dynlib: dllname.}
proc ControlBorderSpacing_GetAroundTop*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetAroundTop", dynlib: dllname.}
proc ControlBorderSpacing_GetAroundRight*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetAroundRight", dynlib: dllname.}
proc ControlBorderSpacing_GetAroundBottom*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetAroundBottom", dynlib: dllname.}
proc ControlBorderSpacing_GetControlLeft*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetControlLeft", dynlib: dllname.}
proc ControlBorderSpacing_GetControlTop*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetControlTop", dynlib: dllname.}
proc ControlBorderSpacing_GetControlWidth*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetControlWidth", dynlib: dllname.}
proc ControlBorderSpacing_GetControlHeight*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetControlHeight", dynlib: dllname.}
proc ControlBorderSpacing_GetControlRight*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetControlRight", dynlib: dllname.}
proc ControlBorderSpacing_GetControlBottom*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetControlBottom", dynlib: dllname.}
proc ControlBorderSpacing_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ControlBorderSpacing_SetOnChange", dynlib: dllname.}
proc ControlBorderSpacing_GetLeft*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetLeft", dynlib: dllname.}
proc ControlBorderSpacing_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ControlBorderSpacing_SetLeft", dynlib: dllname.}
proc ControlBorderSpacing_GetTop*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetTop", dynlib: dllname.}
proc ControlBorderSpacing_SetTop*(AObj: pointer, AValue: int32) {.importc: "ControlBorderSpacing_SetTop", dynlib: dllname.}
proc ControlBorderSpacing_GetRight*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetRight", dynlib: dllname.}
proc ControlBorderSpacing_SetRight*(AObj: pointer, AValue: int32) {.importc: "ControlBorderSpacing_SetRight", dynlib: dllname.}
proc ControlBorderSpacing_GetBottom*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetBottom", dynlib: dllname.}
proc ControlBorderSpacing_SetBottom*(AObj: pointer, AValue: int32) {.importc: "ControlBorderSpacing_SetBottom", dynlib: dllname.}
proc ControlBorderSpacing_GetAround*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetAround", dynlib: dllname.}
proc ControlBorderSpacing_SetAround*(AObj: pointer, AValue: int32) {.importc: "ControlBorderSpacing_SetAround", dynlib: dllname.}
proc ControlBorderSpacing_GetInnerBorder*(AObj: pointer): int32 {.importc: "ControlBorderSpacing_GetInnerBorder", dynlib: dllname.}
proc ControlBorderSpacing_SetInnerBorder*(AObj: pointer, AValue: int32) {.importc: "ControlBorderSpacing_SetInnerBorder", dynlib: dllname.}
proc ControlBorderSpacing_GetCellAlignHorizontal*(AObj: pointer): TControlCellAlign {.importc: "ControlBorderSpacing_GetCellAlignHorizontal", dynlib: dllname.}
proc ControlBorderSpacing_SetCellAlignHorizontal*(AObj: pointer, AValue: TControlCellAlign) {.importc: "ControlBorderSpacing_SetCellAlignHorizontal", dynlib: dllname.}
proc ControlBorderSpacing_GetCellAlignVertical*(AObj: pointer): TControlCellAlign {.importc: "ControlBorderSpacing_GetCellAlignVertical", dynlib: dllname.}
proc ControlBorderSpacing_SetCellAlignVertical*(AObj: pointer, AValue: TControlCellAlign) {.importc: "ControlBorderSpacing_SetCellAlignVertical", dynlib: dllname.}
proc ControlBorderSpacing_GetSpace*(AObj: pointer, Kind: TAnchorKind): int32 {.importc: "ControlBorderSpacing_GetSpace", dynlib: dllname.}
proc ControlBorderSpacing_SetSpace*(AObj: pointer, Kind: TAnchorKind, AValue: int32) {.importc: "ControlBorderSpacing_SetSpace", dynlib: dllname.}
proc ControlBorderSpacing_StaticClassType*(): TClass {.importc: "ControlBorderSpacing_StaticClassType", dynlib: dllname.}
# ----------------- TControlChildSizing ----------------------
proc ControlChildSizing_Assign*(AObj: pointer, Source: pointer) {.importc: "ControlChildSizing_Assign", dynlib: dllname.}
proc ControlChildSizing_GetNamePath*(AObj: pointer): cstring {.importc: "ControlChildSizing_GetNamePath", dynlib: dllname.}
proc ControlChildSizing_ClassType*(AObj: pointer): TClass {.importc: "ControlChildSizing_ClassType", dynlib: dllname.}
proc ControlChildSizing_ClassName*(AObj: pointer): cstring {.importc: "ControlChildSizing_ClassName", dynlib: dllname.}
proc ControlChildSizing_InstanceSize*(AObj: pointer): int32 {.importc: "ControlChildSizing_InstanceSize", dynlib: dllname.}
proc ControlChildSizing_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ControlChildSizing_InheritsFrom", dynlib: dllname.}
proc ControlChildSizing_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ControlChildSizing_Equals", dynlib: dllname.}
proc ControlChildSizing_GetHashCode*(AObj: pointer): int32 {.importc: "ControlChildSizing_GetHashCode", dynlib: dllname.}
proc ControlChildSizing_ToString*(AObj: pointer): cstring {.importc: "ControlChildSizing_ToString", dynlib: dllname.}
proc ControlChildSizing_GetControl*(AObj: pointer): pointer {.importc: "ControlChildSizing_GetControl", dynlib: dllname.}
proc ControlChildSizing_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ControlChildSizing_SetOnChange", dynlib: dllname.}
proc ControlChildSizing_GetLeftRightSpacing*(AObj: pointer): int32 {.importc: "ControlChildSizing_GetLeftRightSpacing", dynlib: dllname.}
proc ControlChildSizing_SetLeftRightSpacing*(AObj: pointer, AValue: int32) {.importc: "ControlChildSizing_SetLeftRightSpacing", dynlib: dllname.}
proc ControlChildSizing_GetTopBottomSpacing*(AObj: pointer): int32 {.importc: "ControlChildSizing_GetTopBottomSpacing", dynlib: dllname.}
proc ControlChildSizing_SetTopBottomSpacing*(AObj: pointer, AValue: int32) {.importc: "ControlChildSizing_SetTopBottomSpacing", dynlib: dllname.}
proc ControlChildSizing_GetHorizontalSpacing*(AObj: pointer): int32 {.importc: "ControlChildSizing_GetHorizontalSpacing", dynlib: dllname.}
proc ControlChildSizing_SetHorizontalSpacing*(AObj: pointer, AValue: int32) {.importc: "ControlChildSizing_SetHorizontalSpacing", dynlib: dllname.}
proc ControlChildSizing_GetVerticalSpacing*(AObj: pointer): int32 {.importc: "ControlChildSizing_GetVerticalSpacing", dynlib: dllname.}
proc ControlChildSizing_SetVerticalSpacing*(AObj: pointer, AValue: int32) {.importc: "ControlChildSizing_SetVerticalSpacing", dynlib: dllname.}
proc ControlChildSizing_GetEnlargeHorizontal*(AObj: pointer): TChildControlResizeStyle {.importc: "ControlChildSizing_GetEnlargeHorizontal", dynlib: dllname.}
proc ControlChildSizing_SetEnlargeHorizontal*(AObj: pointer, AValue: TChildControlResizeStyle) {.importc: "ControlChildSizing_SetEnlargeHorizontal", dynlib: dllname.}
proc ControlChildSizing_GetEnlargeVertical*(AObj: pointer): TChildControlResizeStyle {.importc: "ControlChildSizing_GetEnlargeVertical", dynlib: dllname.}
proc ControlChildSizing_SetEnlargeVertical*(AObj: pointer, AValue: TChildControlResizeStyle) {.importc: "ControlChildSizing_SetEnlargeVertical", dynlib: dllname.}
proc ControlChildSizing_GetShrinkHorizontal*(AObj: pointer): TChildControlResizeStyle {.importc: "ControlChildSizing_GetShrinkHorizontal", dynlib: dllname.}
proc ControlChildSizing_SetShrinkHorizontal*(AObj: pointer, AValue: TChildControlResizeStyle) {.importc: "ControlChildSizing_SetShrinkHorizontal", dynlib: dllname.}
proc ControlChildSizing_GetShrinkVertical*(AObj: pointer): TChildControlResizeStyle {.importc: "ControlChildSizing_GetShrinkVertical", dynlib: dllname.}
proc ControlChildSizing_SetShrinkVertical*(AObj: pointer, AValue: TChildControlResizeStyle) {.importc: "ControlChildSizing_SetShrinkVertical", dynlib: dllname.}
proc ControlChildSizing_GetLayout*(AObj: pointer): TControlChildrenLayout {.importc: "ControlChildSizing_GetLayout", dynlib: dllname.}
proc ControlChildSizing_SetLayout*(AObj: pointer, AValue: TControlChildrenLayout) {.importc: "ControlChildSizing_SetLayout", dynlib: dllname.}
proc ControlChildSizing_GetControlsPerLine*(AObj: pointer): int32 {.importc: "ControlChildSizing_GetControlsPerLine", dynlib: dllname.}
proc ControlChildSizing_SetControlsPerLine*(AObj: pointer, AValue: int32) {.importc: "ControlChildSizing_SetControlsPerLine", dynlib: dllname.}
proc ControlChildSizing_StaticClassType*(): TClass {.importc: "ControlChildSizing_StaticClassType", dynlib: dllname.}
# ----------------- TCheckGroup ----------------------
proc CheckGroup_Create*(AOwner: pointer): pointer {.importc: "CheckGroup_Create", dynlib: dllname.}
proc CheckGroup_Free*(AObj: pointer) {.importc: "CheckGroup_Free", dynlib: dllname.}
proc CheckGroup_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "CheckGroup_FlipChildren", dynlib: dllname.}
proc CheckGroup_Rows*(AObj: pointer): int32 {.importc: "CheckGroup_Rows", dynlib: dllname.}
proc CheckGroup_CanFocus*(AObj: pointer): bool {.importc: "CheckGroup_CanFocus", dynlib: dllname.}
proc CheckGroup_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "CheckGroup_ContainsControl", dynlib: dllname.}
proc CheckGroup_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "CheckGroup_ControlAtPos", dynlib: dllname.}
proc CheckGroup_DisableAlign*(AObj: pointer) {.importc: "CheckGroup_DisableAlign", dynlib: dllname.}
proc CheckGroup_EnableAlign*(AObj: pointer) {.importc: "CheckGroup_EnableAlign", dynlib: dllname.}
proc CheckGroup_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "CheckGroup_FindChildControl", dynlib: dllname.}
proc CheckGroup_Focused*(AObj: pointer): bool {.importc: "CheckGroup_Focused", dynlib: dllname.}
proc CheckGroup_HandleAllocated*(AObj: pointer): bool {.importc: "CheckGroup_HandleAllocated", dynlib: dllname.}
proc CheckGroup_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "CheckGroup_InsertControl", dynlib: dllname.}
proc CheckGroup_Invalidate*(AObj: pointer) {.importc: "CheckGroup_Invalidate", dynlib: dllname.}
proc CheckGroup_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "CheckGroup_PaintTo", dynlib: dllname.}
proc CheckGroup_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "CheckGroup_RemoveControl", dynlib: dllname.}
proc CheckGroup_Realign*(AObj: pointer) {.importc: "CheckGroup_Realign", dynlib: dllname.}
proc CheckGroup_Repaint*(AObj: pointer) {.importc: "CheckGroup_Repaint", dynlib: dllname.}
proc CheckGroup_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "CheckGroup_ScaleBy", dynlib: dllname.}
proc CheckGroup_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "CheckGroup_ScrollBy", dynlib: dllname.}
proc CheckGroup_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "CheckGroup_SetBounds", dynlib: dllname.}
proc CheckGroup_SetFocus*(AObj: pointer) {.importc: "CheckGroup_SetFocus", dynlib: dllname.}
proc CheckGroup_Update*(AObj: pointer) {.importc: "CheckGroup_Update", dynlib: dllname.}
proc CheckGroup_BringToFront*(AObj: pointer) {.importc: "CheckGroup_BringToFront", dynlib: dllname.}
proc CheckGroup_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CheckGroup_ClientToScreen", dynlib: dllname.}
proc CheckGroup_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CheckGroup_ClientToParent", dynlib: dllname.}
proc CheckGroup_Dragging*(AObj: pointer): bool {.importc: "CheckGroup_Dragging", dynlib: dllname.}
proc CheckGroup_HasParent*(AObj: pointer): bool {.importc: "CheckGroup_HasParent", dynlib: dllname.}
proc CheckGroup_Hide*(AObj: pointer) {.importc: "CheckGroup_Hide", dynlib: dllname.}
proc CheckGroup_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "CheckGroup_Perform", dynlib: dllname.}
proc CheckGroup_Refresh*(AObj: pointer) {.importc: "CheckGroup_Refresh", dynlib: dllname.}
proc CheckGroup_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "CheckGroup_ScreenToClient", dynlib: dllname.}
proc CheckGroup_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "CheckGroup_ParentToClient", dynlib: dllname.}
proc CheckGroup_SendToBack*(AObj: pointer) {.importc: "CheckGroup_SendToBack", dynlib: dllname.}
proc CheckGroup_Show*(AObj: pointer) {.importc: "CheckGroup_Show", dynlib: dllname.}
proc CheckGroup_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "CheckGroup_GetTextBuf", dynlib: dllname.}
proc CheckGroup_GetTextLen*(AObj: pointer): int32 {.importc: "CheckGroup_GetTextLen", dynlib: dllname.}
proc CheckGroup_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "CheckGroup_SetTextBuf", dynlib: dllname.}
proc CheckGroup_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "CheckGroup_FindComponent", dynlib: dllname.}
proc CheckGroup_GetNamePath*(AObj: pointer): cstring {.importc: "CheckGroup_GetNamePath", dynlib: dllname.}
proc CheckGroup_Assign*(AObj: pointer, Source: pointer) {.importc: "CheckGroup_Assign", dynlib: dllname.}
proc CheckGroup_ClassType*(AObj: pointer): TClass {.importc: "CheckGroup_ClassType", dynlib: dllname.}
proc CheckGroup_ClassName*(AObj: pointer): cstring {.importc: "CheckGroup_ClassName", dynlib: dllname.}
proc CheckGroup_InstanceSize*(AObj: pointer): int32 {.importc: "CheckGroup_InstanceSize", dynlib: dllname.}
proc CheckGroup_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "CheckGroup_InheritsFrom", dynlib: dllname.}
proc CheckGroup_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "CheckGroup_Equals", dynlib: dllname.}
proc CheckGroup_GetHashCode*(AObj: pointer): int32 {.importc: "CheckGroup_GetHashCode", dynlib: dllname.}
proc CheckGroup_ToString*(AObj: pointer): cstring {.importc: "CheckGroup_ToString", dynlib: dllname.}
proc CheckGroup_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CheckGroup_AnchorToNeighbour", dynlib: dllname.}
proc CheckGroup_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "CheckGroup_AnchorParallel", dynlib: dllname.}
proc CheckGroup_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CheckGroup_AnchorHorizontalCenterTo", dynlib: dllname.}
proc CheckGroup_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "CheckGroup_AnchorVerticalCenterTo", dynlib: dllname.}
proc CheckGroup_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "CheckGroup_AnchorSame", dynlib: dllname.}
proc CheckGroup_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "CheckGroup_AnchorAsAlign", dynlib: dllname.}
proc CheckGroup_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "CheckGroup_AnchorClient", dynlib: dllname.}
proc CheckGroup_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_ScaleDesignToForm", dynlib: dllname.}
proc CheckGroup_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_ScaleFormToDesign", dynlib: dllname.}
proc CheckGroup_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_Scale96ToForm", dynlib: dllname.}
proc CheckGroup_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_ScaleFormTo96", dynlib: dllname.}
proc CheckGroup_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_Scale96ToFont", dynlib: dllname.}
proc CheckGroup_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_ScaleFontTo96", dynlib: dllname.}
proc CheckGroup_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_ScaleScreenToFont", dynlib: dllname.}
proc CheckGroup_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_ScaleFontToScreen", dynlib: dllname.}
proc CheckGroup_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_Scale96ToScreen", dynlib: dllname.}
proc CheckGroup_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "CheckGroup_ScaleScreenTo96", dynlib: dllname.}
proc CheckGroup_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "CheckGroup_AutoAdjustLayout", dynlib: dllname.}
proc CheckGroup_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "CheckGroup_FixDesignFontsPPI", dynlib: dllname.}
proc CheckGroup_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "CheckGroup_ScaleFontsPPI", dynlib: dllname.}
proc CheckGroup_GetAlign*(AObj: pointer): TAlign {.importc: "CheckGroup_GetAlign", dynlib: dllname.}
proc CheckGroup_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "CheckGroup_SetAlign", dynlib: dllname.}
proc CheckGroup_GetAnchors*(AObj: pointer): TAnchors {.importc: "CheckGroup_GetAnchors", dynlib: dllname.}
proc CheckGroup_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "CheckGroup_SetAnchors", dynlib: dllname.}
proc CheckGroup_GetAutoFill*(AObj: pointer): bool {.importc: "CheckGroup_GetAutoFill", dynlib: dllname.}
proc CheckGroup_SetAutoFill*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetAutoFill", dynlib: dllname.}
proc CheckGroup_GetAutoSize*(AObj: pointer): bool {.importc: "CheckGroup_GetAutoSize", dynlib: dllname.}
proc CheckGroup_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetAutoSize", dynlib: dllname.}
proc CheckGroup_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "CheckGroup_GetBiDiMode", dynlib: dllname.}
proc CheckGroup_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "CheckGroup_SetBiDiMode", dynlib: dllname.}
proc CheckGroup_GetCaption*(AObj: pointer): cstring {.importc: "CheckGroup_GetCaption", dynlib: dllname.}
proc CheckGroup_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "CheckGroup_SetCaption", dynlib: dllname.}
proc CheckGroup_GetClientHeight*(AObj: pointer): int32 {.importc: "CheckGroup_GetClientHeight", dynlib: dllname.}
proc CheckGroup_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetClientHeight", dynlib: dllname.}
proc CheckGroup_GetClientWidth*(AObj: pointer): int32 {.importc: "CheckGroup_GetClientWidth", dynlib: dllname.}
proc CheckGroup_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetClientWidth", dynlib: dllname.}
proc CheckGroup_GetColor*(AObj: pointer): TColor {.importc: "CheckGroup_GetColor", dynlib: dllname.}
proc CheckGroup_SetColor*(AObj: pointer, AValue: TColor) {.importc: "CheckGroup_SetColor", dynlib: dllname.}
proc CheckGroup_GetColumnLayout*(AObj: pointer): TColumnLayout {.importc: "CheckGroup_GetColumnLayout", dynlib: dllname.}
proc CheckGroup_SetColumnLayout*(AObj: pointer, AValue: TColumnLayout) {.importc: "CheckGroup_SetColumnLayout", dynlib: dllname.}
proc CheckGroup_GetColumns*(AObj: pointer): int32 {.importc: "CheckGroup_GetColumns", dynlib: dllname.}
proc CheckGroup_SetColumns*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetColumns", dynlib: dllname.}
proc CheckGroup_GetConstraints*(AObj: pointer): pointer {.importc: "CheckGroup_GetConstraints", dynlib: dllname.}
proc CheckGroup_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetConstraints", dynlib: dllname.}
proc CheckGroup_GetDoubleBuffered*(AObj: pointer): bool {.importc: "CheckGroup_GetDoubleBuffered", dynlib: dllname.}
proc CheckGroup_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetDoubleBuffered", dynlib: dllname.}
proc CheckGroup_GetDragCursor*(AObj: pointer): TCursor {.importc: "CheckGroup_GetDragCursor", dynlib: dllname.}
proc CheckGroup_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "CheckGroup_SetDragCursor", dynlib: dllname.}
proc CheckGroup_GetDragMode*(AObj: pointer): TDragMode {.importc: "CheckGroup_GetDragMode", dynlib: dllname.}
proc CheckGroup_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "CheckGroup_SetDragMode", dynlib: dllname.}
proc CheckGroup_GetEnabled*(AObj: pointer): bool {.importc: "CheckGroup_GetEnabled", dynlib: dllname.}
proc CheckGroup_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetEnabled", dynlib: dllname.}
proc CheckGroup_GetFont*(AObj: pointer): pointer {.importc: "CheckGroup_GetFont", dynlib: dllname.}
proc CheckGroup_SetFont*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetFont", dynlib: dllname.}
proc CheckGroup_GetItems*(AObj: pointer): pointer {.importc: "CheckGroup_GetItems", dynlib: dllname.}
proc CheckGroup_SetItems*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetItems", dynlib: dllname.}
proc CheckGroup_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckGroup_SetOnClick", dynlib: dllname.}
proc CheckGroup_SetOnDblClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckGroup_SetOnDblClick", dynlib: dllname.}
proc CheckGroup_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "CheckGroup_SetOnDragDrop", dynlib: dllname.}
proc CheckGroup_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "CheckGroup_SetOnDragOver", dynlib: dllname.}
proc CheckGroup_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "CheckGroup_SetOnEndDrag", dynlib: dllname.}
proc CheckGroup_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckGroup_SetOnEnter", dynlib: dllname.}
proc CheckGroup_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckGroup_SetOnExit", dynlib: dllname.}
proc CheckGroup_SetOnItemClick*(AObj: pointer, AEventId: TCheckGroupClicked) {.importc: "CheckGroup_SetOnItemClick", dynlib: dllname.}
proc CheckGroup_SetOnKeyDown*(AObj: pointer, AEventId: TKeyEvent) {.importc: "CheckGroup_SetOnKeyDown", dynlib: dllname.}
proc CheckGroup_SetOnKeyPress*(AObj: pointer, AEventId: TKeyPressEvent) {.importc: "CheckGroup_SetOnKeyPress", dynlib: dllname.}
proc CheckGroup_SetOnKeyUp*(AObj: pointer, AEventId: TKeyEvent) {.importc: "CheckGroup_SetOnKeyUp", dynlib: dllname.}
proc CheckGroup_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CheckGroup_SetOnMouseDown", dynlib: dllname.}
proc CheckGroup_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckGroup_SetOnMouseEnter", dynlib: dllname.}
proc CheckGroup_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckGroup_SetOnMouseLeave", dynlib: dllname.}
proc CheckGroup_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "CheckGroup_SetOnMouseMove", dynlib: dllname.}
proc CheckGroup_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "CheckGroup_SetOnMouseUp", dynlib: dllname.}
proc CheckGroup_SetOnMouseWheel*(AObj: pointer, AEventId: TMouseWheelEvent) {.importc: "CheckGroup_SetOnMouseWheel", dynlib: dllname.}
proc CheckGroup_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "CheckGroup_SetOnMouseWheelDown", dynlib: dllname.}
proc CheckGroup_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "CheckGroup_SetOnMouseWheelUp", dynlib: dllname.}
proc CheckGroup_SetOnResize*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "CheckGroup_SetOnResize", dynlib: dllname.}
proc CheckGroup_GetParentFont*(AObj: pointer): bool {.importc: "CheckGroup_GetParentFont", dynlib: dllname.}
proc CheckGroup_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetParentFont", dynlib: dllname.}
proc CheckGroup_GetParentColor*(AObj: pointer): bool {.importc: "CheckGroup_GetParentColor", dynlib: dllname.}
proc CheckGroup_SetParentColor*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetParentColor", dynlib: dllname.}
proc CheckGroup_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "CheckGroup_GetParentDoubleBuffered", dynlib: dllname.}
proc CheckGroup_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetParentDoubleBuffered", dynlib: dllname.}
proc CheckGroup_GetParentShowHint*(AObj: pointer): bool {.importc: "CheckGroup_GetParentShowHint", dynlib: dllname.}
proc CheckGroup_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetParentShowHint", dynlib: dllname.}
proc CheckGroup_GetPopupMenu*(AObj: pointer): pointer {.importc: "CheckGroup_GetPopupMenu", dynlib: dllname.}
proc CheckGroup_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetPopupMenu", dynlib: dllname.}
proc CheckGroup_GetShowHint*(AObj: pointer): bool {.importc: "CheckGroup_GetShowHint", dynlib: dllname.}
proc CheckGroup_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetShowHint", dynlib: dllname.}
proc CheckGroup_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "CheckGroup_GetTabOrder", dynlib: dllname.}
proc CheckGroup_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "CheckGroup_SetTabOrder", dynlib: dllname.}
proc CheckGroup_GetTabStop*(AObj: pointer): bool {.importc: "CheckGroup_GetTabStop", dynlib: dllname.}
proc CheckGroup_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetTabStop", dynlib: dllname.}
proc CheckGroup_GetVisible*(AObj: pointer): bool {.importc: "CheckGroup_GetVisible", dynlib: dllname.}
proc CheckGroup_SetVisible*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetVisible", dynlib: dllname.}
proc CheckGroup_GetDockClientCount*(AObj: pointer): int32 {.importc: "CheckGroup_GetDockClientCount", dynlib: dllname.}
proc CheckGroup_GetDockSite*(AObj: pointer): bool {.importc: "CheckGroup_GetDockSite", dynlib: dllname.}
proc CheckGroup_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetDockSite", dynlib: dllname.}
proc CheckGroup_GetMouseInClient*(AObj: pointer): bool {.importc: "CheckGroup_GetMouseInClient", dynlib: dllname.}
proc CheckGroup_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "CheckGroup_GetVisibleDockClientCount", dynlib: dllname.}
proc CheckGroup_GetBrush*(AObj: pointer): pointer {.importc: "CheckGroup_GetBrush", dynlib: dllname.}
proc CheckGroup_GetControlCount*(AObj: pointer): int32 {.importc: "CheckGroup_GetControlCount", dynlib: dllname.}
proc CheckGroup_GetHandle*(AObj: pointer): HWND {.importc: "CheckGroup_GetHandle", dynlib: dllname.}
proc CheckGroup_GetParentWindow*(AObj: pointer): HWND {.importc: "CheckGroup_GetParentWindow", dynlib: dllname.}
proc CheckGroup_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "CheckGroup_SetParentWindow", dynlib: dllname.}
proc CheckGroup_GetShowing*(AObj: pointer): bool {.importc: "CheckGroup_GetShowing", dynlib: dllname.}
proc CheckGroup_GetUseDockManager*(AObj: pointer): bool {.importc: "CheckGroup_GetUseDockManager", dynlib: dllname.}
proc CheckGroup_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "CheckGroup_SetUseDockManager", dynlib: dllname.}
proc CheckGroup_GetAction*(AObj: pointer): pointer {.importc: "CheckGroup_GetAction", dynlib: dllname.}
proc CheckGroup_SetAction*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetAction", dynlib: dllname.}
proc CheckGroup_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "CheckGroup_GetBoundsRect", dynlib: dllname.}
proc CheckGroup_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "CheckGroup_SetBoundsRect", dynlib: dllname.}
proc CheckGroup_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "CheckGroup_GetClientOrigin", dynlib: dllname.}
proc CheckGroup_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "CheckGroup_GetClientRect", dynlib: dllname.}
proc CheckGroup_GetControlState*(AObj: pointer): TControlState {.importc: "CheckGroup_GetControlState", dynlib: dllname.}
proc CheckGroup_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "CheckGroup_SetControlState", dynlib: dllname.}
proc CheckGroup_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "CheckGroup_GetControlStyle", dynlib: dllname.}
proc CheckGroup_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "CheckGroup_SetControlStyle", dynlib: dllname.}
proc CheckGroup_GetFloating*(AObj: pointer): bool {.importc: "CheckGroup_GetFloating", dynlib: dllname.}
proc CheckGroup_GetParent*(AObj: pointer): pointer {.importc: "CheckGroup_GetParent", dynlib: dllname.}
proc CheckGroup_SetParent*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetParent", dynlib: dllname.}
proc CheckGroup_GetLeft*(AObj: pointer): int32 {.importc: "CheckGroup_GetLeft", dynlib: dllname.}
proc CheckGroup_SetLeft*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetLeft", dynlib: dllname.}
proc CheckGroup_GetTop*(AObj: pointer): int32 {.importc: "CheckGroup_GetTop", dynlib: dllname.}
proc CheckGroup_SetTop*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetTop", dynlib: dllname.}
proc CheckGroup_GetWidth*(AObj: pointer): int32 {.importc: "CheckGroup_GetWidth", dynlib: dllname.}
proc CheckGroup_SetWidth*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetWidth", dynlib: dllname.}
proc CheckGroup_GetHeight*(AObj: pointer): int32 {.importc: "CheckGroup_GetHeight", dynlib: dllname.}
proc CheckGroup_SetHeight*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetHeight", dynlib: dllname.}
proc CheckGroup_GetCursor*(AObj: pointer): TCursor {.importc: "CheckGroup_GetCursor", dynlib: dllname.}
proc CheckGroup_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "CheckGroup_SetCursor", dynlib: dllname.}
proc CheckGroup_GetHint*(AObj: pointer): cstring {.importc: "CheckGroup_GetHint", dynlib: dllname.}
proc CheckGroup_SetHint*(AObj: pointer, AValue: cstring) {.importc: "CheckGroup_SetHint", dynlib: dllname.}
proc CheckGroup_GetComponentCount*(AObj: pointer): int32 {.importc: "CheckGroup_GetComponentCount", dynlib: dllname.}
proc CheckGroup_GetComponentIndex*(AObj: pointer): int32 {.importc: "CheckGroup_GetComponentIndex", dynlib: dllname.}
proc CheckGroup_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "CheckGroup_SetComponentIndex", dynlib: dllname.}
proc CheckGroup_GetOwner*(AObj: pointer): pointer {.importc: "CheckGroup_GetOwner", dynlib: dllname.}
proc CheckGroup_GetName*(AObj: pointer): cstring {.importc: "CheckGroup_GetName", dynlib: dllname.}
proc CheckGroup_SetName*(AObj: pointer, AValue: cstring) {.importc: "CheckGroup_SetName", dynlib: dllname.}
proc CheckGroup_GetTag*(AObj: pointer): int {.importc: "CheckGroup_GetTag", dynlib: dllname.}
proc CheckGroup_SetTag*(AObj: pointer, AValue: int) {.importc: "CheckGroup_SetTag", dynlib: dllname.}
proc CheckGroup_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "CheckGroup_GetAnchorSideLeft", dynlib: dllname.}
proc CheckGroup_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetAnchorSideLeft", dynlib: dllname.}
proc CheckGroup_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "CheckGroup_GetAnchorSideTop", dynlib: dllname.}
proc CheckGroup_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetAnchorSideTop", dynlib: dllname.}
proc CheckGroup_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "CheckGroup_GetAnchorSideRight", dynlib: dllname.}
proc CheckGroup_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetAnchorSideRight", dynlib: dllname.}
proc CheckGroup_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "CheckGroup_GetAnchorSideBottom", dynlib: dllname.}
proc CheckGroup_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetAnchorSideBottom", dynlib: dllname.}
proc CheckGroup_GetChildSizing*(AObj: pointer): pointer {.importc: "CheckGroup_GetChildSizing", dynlib: dllname.}
proc CheckGroup_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetChildSizing", dynlib: dllname.}
proc CheckGroup_GetBorderSpacing*(AObj: pointer): pointer {.importc: "CheckGroup_GetBorderSpacing", dynlib: dllname.}
proc CheckGroup_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "CheckGroup_SetBorderSpacing", dynlib: dllname.}
proc CheckGroup_GetChecked*(AObj: pointer, Index: int32): bool {.importc: "CheckGroup_GetChecked", dynlib: dllname.}
proc CheckGroup_SetChecked*(AObj: pointer, Index: int32, AValue: bool) {.importc: "CheckGroup_SetChecked", dynlib: dllname.}
proc CheckGroup_GetCheckEnabled*(AObj: pointer, Index: int32): bool {.importc: "CheckGroup_GetCheckEnabled", dynlib: dllname.}
proc CheckGroup_SetCheckEnabled*(AObj: pointer, Index: int32, AValue: bool) {.importc: "CheckGroup_SetCheckEnabled", dynlib: dllname.}
proc CheckGroup_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "CheckGroup_GetDockClients", dynlib: dllname.}
proc CheckGroup_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "CheckGroup_GetControls", dynlib: dllname.}
proc CheckGroup_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "CheckGroup_GetComponents", dynlib: dllname.}
proc CheckGroup_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "CheckGroup_GetAnchorSide", dynlib: dllname.}
proc CheckGroup_StaticClassType*(): TClass {.importc: "CheckGroup_StaticClassType", dynlib: dllname.}
# ----------------- TToggleBox ----------------------
proc ToggleBox_Create*(AOwner: pointer): pointer {.importc: "ToggleBox_Create", dynlib: dllname.}
proc ToggleBox_Free*(AObj: pointer) {.importc: "ToggleBox_Free", dynlib: dllname.}
proc ToggleBox_CanFocus*(AObj: pointer): bool {.importc: "ToggleBox_CanFocus", dynlib: dllname.}
proc ToggleBox_ContainsControl*(AObj: pointer, Control: pointer): bool {.importc: "ToggleBox_ContainsControl", dynlib: dllname.}
proc ToggleBox_ControlAtPos*(AObj: pointer, Pos: var TPoint, AllowDisabled: bool, AllowWinControls: bool): pointer {.importc: "ToggleBox_ControlAtPos", dynlib: dllname.}
proc ToggleBox_DisableAlign*(AObj: pointer) {.importc: "ToggleBox_DisableAlign", dynlib: dllname.}
proc ToggleBox_EnableAlign*(AObj: pointer) {.importc: "ToggleBox_EnableAlign", dynlib: dllname.}
proc ToggleBox_FindChildControl*(AObj: pointer, ControlName: cstring): pointer {.importc: "ToggleBox_FindChildControl", dynlib: dllname.}
proc ToggleBox_FlipChildren*(AObj: pointer, AllLevels: bool) {.importc: "ToggleBox_FlipChildren", dynlib: dllname.}
proc ToggleBox_Focused*(AObj: pointer): bool {.importc: "ToggleBox_Focused", dynlib: dllname.}
proc ToggleBox_HandleAllocated*(AObj: pointer): bool {.importc: "ToggleBox_HandleAllocated", dynlib: dllname.}
proc ToggleBox_InsertControl*(AObj: pointer, AControl: pointer) {.importc: "ToggleBox_InsertControl", dynlib: dllname.}
proc ToggleBox_Invalidate*(AObj: pointer) {.importc: "ToggleBox_Invalidate", dynlib: dllname.}
proc ToggleBox_PaintTo*(AObj: pointer, DC: HDC, X: int32, Y: int32) {.importc: "ToggleBox_PaintTo", dynlib: dllname.}
proc ToggleBox_RemoveControl*(AObj: pointer, AControl: pointer) {.importc: "ToggleBox_RemoveControl", dynlib: dllname.}
proc ToggleBox_Realign*(AObj: pointer) {.importc: "ToggleBox_Realign", dynlib: dllname.}
proc ToggleBox_Repaint*(AObj: pointer) {.importc: "ToggleBox_Repaint", dynlib: dllname.}
proc ToggleBox_ScaleBy*(AObj: pointer, M: int32, D: int32) {.importc: "ToggleBox_ScaleBy", dynlib: dllname.}
proc ToggleBox_ScrollBy*(AObj: pointer, DeltaX: int32, DeltaY: int32) {.importc: "ToggleBox_ScrollBy", dynlib: dllname.}
proc ToggleBox_SetBounds*(AObj: pointer, ALeft: int32, ATop: int32, AWidth: int32, AHeight: int32) {.importc: "ToggleBox_SetBounds", dynlib: dllname.}
proc ToggleBox_SetFocus*(AObj: pointer) {.importc: "ToggleBox_SetFocus", dynlib: dllname.}
proc ToggleBox_Update*(AObj: pointer) {.importc: "ToggleBox_Update", dynlib: dllname.}
proc ToggleBox_BringToFront*(AObj: pointer) {.importc: "ToggleBox_BringToFront", dynlib: dllname.}
proc ToggleBox_ClientToScreen*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ToggleBox_ClientToScreen", dynlib: dllname.}
proc ToggleBox_ClientToParent*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ToggleBox_ClientToParent", dynlib: dllname.}
proc ToggleBox_Dragging*(AObj: pointer): bool {.importc: "ToggleBox_Dragging", dynlib: dllname.}
proc ToggleBox_HasParent*(AObj: pointer): bool {.importc: "ToggleBox_HasParent", dynlib: dllname.}
proc ToggleBox_Hide*(AObj: pointer) {.importc: "ToggleBox_Hide", dynlib: dllname.}
proc ToggleBox_Perform*(AObj: pointer, Msg: uint32, WParam: uint, LParam: int): int {.importc: "ToggleBox_Perform", dynlib: dllname.}
proc ToggleBox_Refresh*(AObj: pointer) {.importc: "ToggleBox_Refresh", dynlib: dllname.}
proc ToggleBox_ScreenToClient*(AObj: pointer, Point: var TPoint, Result: var TPoint) {.importc: "ToggleBox_ScreenToClient", dynlib: dllname.}
proc ToggleBox_ParentToClient*(AObj: pointer, Point: var TPoint, AParent: pointer, Result: var TPoint) {.importc: "ToggleBox_ParentToClient", dynlib: dllname.}
proc ToggleBox_SendToBack*(AObj: pointer) {.importc: "ToggleBox_SendToBack", dynlib: dllname.}
proc ToggleBox_Show*(AObj: pointer) {.importc: "ToggleBox_Show", dynlib: dllname.}
proc ToggleBox_GetTextBuf*(AObj: pointer, Buffer: cstring, BufSize: int32): int32 {.importc: "ToggleBox_GetTextBuf", dynlib: dllname.}
proc ToggleBox_GetTextLen*(AObj: pointer): int32 {.importc: "ToggleBox_GetTextLen", dynlib: dllname.}
proc ToggleBox_SetTextBuf*(AObj: pointer, Buffer: cstring) {.importc: "ToggleBox_SetTextBuf", dynlib: dllname.}
proc ToggleBox_FindComponent*(AObj: pointer, AName: cstring): pointer {.importc: "ToggleBox_FindComponent", dynlib: dllname.}
proc ToggleBox_GetNamePath*(AObj: pointer): cstring {.importc: "ToggleBox_GetNamePath", dynlib: dllname.}
proc ToggleBox_Assign*(AObj: pointer, Source: pointer) {.importc: "ToggleBox_Assign", dynlib: dllname.}
proc ToggleBox_ClassType*(AObj: pointer): TClass {.importc: "ToggleBox_ClassType", dynlib: dllname.}
proc ToggleBox_ClassName*(AObj: pointer): cstring {.importc: "ToggleBox_ClassName", dynlib: dllname.}
proc ToggleBox_InstanceSize*(AObj: pointer): int32 {.importc: "ToggleBox_InstanceSize", dynlib: dllname.}
proc ToggleBox_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "ToggleBox_InheritsFrom", dynlib: dllname.}
proc ToggleBox_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "ToggleBox_Equals", dynlib: dllname.}
proc ToggleBox_GetHashCode*(AObj: pointer): int32 {.importc: "ToggleBox_GetHashCode", dynlib: dllname.}
proc ToggleBox_ToString*(AObj: pointer): cstring {.importc: "ToggleBox_ToString", dynlib: dllname.}
proc ToggleBox_AnchorToNeighbour*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ToggleBox_AnchorToNeighbour", dynlib: dllname.}
proc ToggleBox_AnchorParallel*(AObj: pointer, ASide: TAnchorKind, ASpace: int32, ASibling: pointer) {.importc: "ToggleBox_AnchorParallel", dynlib: dllname.}
proc ToggleBox_AnchorHorizontalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ToggleBox_AnchorHorizontalCenterTo", dynlib: dllname.}
proc ToggleBox_AnchorVerticalCenterTo*(AObj: pointer, ASibling: pointer) {.importc: "ToggleBox_AnchorVerticalCenterTo", dynlib: dllname.}
proc ToggleBox_AnchorSame*(AObj: pointer, ASide: TAnchorKind, ASibling: pointer) {.importc: "ToggleBox_AnchorSame", dynlib: dllname.}
proc ToggleBox_AnchorAsAlign*(AObj: pointer, ATheAlign: TAlign, ASpace: int32) {.importc: "ToggleBox_AnchorAsAlign", dynlib: dllname.}
proc ToggleBox_AnchorClient*(AObj: pointer, ASpace: int32) {.importc: "ToggleBox_AnchorClient", dynlib: dllname.}
proc ToggleBox_ScaleDesignToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_ScaleDesignToForm", dynlib: dllname.}
proc ToggleBox_ScaleFormToDesign*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_ScaleFormToDesign", dynlib: dllname.}
proc ToggleBox_Scale96ToForm*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_Scale96ToForm", dynlib: dllname.}
proc ToggleBox_ScaleFormTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_ScaleFormTo96", dynlib: dllname.}
proc ToggleBox_Scale96ToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_Scale96ToFont", dynlib: dllname.}
proc ToggleBox_ScaleFontTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_ScaleFontTo96", dynlib: dllname.}
proc ToggleBox_ScaleScreenToFont*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_ScaleScreenToFont", dynlib: dllname.}
proc ToggleBox_ScaleFontToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_ScaleFontToScreen", dynlib: dllname.}
proc ToggleBox_Scale96ToScreen*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_Scale96ToScreen", dynlib: dllname.}
proc ToggleBox_ScaleScreenTo96*(AObj: pointer, ASize: int32): int32 {.importc: "ToggleBox_ScaleScreenTo96", dynlib: dllname.}
proc ToggleBox_AutoAdjustLayout*(AObj: pointer, AMode: TLayoutAdjustmentPolicy, AFromPPI: int32, AToPPI: int32, AOldFormWidth: int32, ANewFormWidth: int32) {.importc: "ToggleBox_AutoAdjustLayout", dynlib: dllname.}
proc ToggleBox_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "ToggleBox_FixDesignFontsPPI", dynlib: dllname.}
proc ToggleBox_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "ToggleBox_ScaleFontsPPI", dynlib: dllname.}
proc ToggleBox_GetAllowGrayed*(AObj: pointer): bool {.importc: "ToggleBox_GetAllowGrayed", dynlib: dllname.}
proc ToggleBox_SetAllowGrayed*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetAllowGrayed", dynlib: dllname.}
proc ToggleBox_GetAlign*(AObj: pointer): TAlign {.importc: "ToggleBox_GetAlign", dynlib: dllname.}
proc ToggleBox_SetAlign*(AObj: pointer, AValue: TAlign) {.importc: "ToggleBox_SetAlign", dynlib: dllname.}
proc ToggleBox_GetAnchors*(AObj: pointer): TAnchors {.importc: "ToggleBox_GetAnchors", dynlib: dllname.}
proc ToggleBox_SetAnchors*(AObj: pointer, AValue: TAnchors) {.importc: "ToggleBox_SetAnchors", dynlib: dllname.}
proc ToggleBox_GetAutoSize*(AObj: pointer): bool {.importc: "ToggleBox_GetAutoSize", dynlib: dllname.}
proc ToggleBox_SetAutoSize*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetAutoSize", dynlib: dllname.}
proc ToggleBox_GetCaption*(AObj: pointer): cstring {.importc: "ToggleBox_GetCaption", dynlib: dllname.}
proc ToggleBox_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "ToggleBox_SetCaption", dynlib: dllname.}
proc ToggleBox_GetChecked*(AObj: pointer): bool {.importc: "ToggleBox_GetChecked", dynlib: dllname.}
proc ToggleBox_SetChecked*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetChecked", dynlib: dllname.}
proc ToggleBox_GetColor*(AObj: pointer): TColor {.importc: "ToggleBox_GetColor", dynlib: dllname.}
proc ToggleBox_SetColor*(AObj: pointer, AValue: TColor) {.importc: "ToggleBox_SetColor", dynlib: dllname.}
proc ToggleBox_GetConstraints*(AObj: pointer): pointer {.importc: "ToggleBox_GetConstraints", dynlib: dllname.}
proc ToggleBox_SetConstraints*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetConstraints", dynlib: dllname.}
proc ToggleBox_GetDoubleBuffered*(AObj: pointer): bool {.importc: "ToggleBox_GetDoubleBuffered", dynlib: dllname.}
proc ToggleBox_SetDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetDoubleBuffered", dynlib: dllname.}
proc ToggleBox_GetDragCursor*(AObj: pointer): TCursor {.importc: "ToggleBox_GetDragCursor", dynlib: dllname.}
proc ToggleBox_SetDragCursor*(AObj: pointer, AValue: TCursor) {.importc: "ToggleBox_SetDragCursor", dynlib: dllname.}
proc ToggleBox_GetDragKind*(AObj: pointer): TDragKind {.importc: "ToggleBox_GetDragKind", dynlib: dllname.}
proc ToggleBox_SetDragKind*(AObj: pointer, AValue: TDragKind) {.importc: "ToggleBox_SetDragKind", dynlib: dllname.}
proc ToggleBox_GetDragMode*(AObj: pointer): TDragMode {.importc: "ToggleBox_GetDragMode", dynlib: dllname.}
proc ToggleBox_SetDragMode*(AObj: pointer, AValue: TDragMode) {.importc: "ToggleBox_SetDragMode", dynlib: dllname.}
proc ToggleBox_GetEnabled*(AObj: pointer): bool {.importc: "ToggleBox_GetEnabled", dynlib: dllname.}
proc ToggleBox_SetEnabled*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetEnabled", dynlib: dllname.}
proc ToggleBox_GetFont*(AObj: pointer): pointer {.importc: "ToggleBox_GetFont", dynlib: dllname.}
proc ToggleBox_SetFont*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetFont", dynlib: dllname.}
proc ToggleBox_GetHint*(AObj: pointer): cstring {.importc: "ToggleBox_GetHint", dynlib: dllname.}
proc ToggleBox_SetHint*(AObj: pointer, AValue: cstring) {.importc: "ToggleBox_SetHint", dynlib: dllname.}
proc ToggleBox_SetOnChange*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToggleBox_SetOnChange", dynlib: dllname.}
proc ToggleBox_SetOnClick*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToggleBox_SetOnClick", dynlib: dllname.}
proc ToggleBox_SetOnDragDrop*(AObj: pointer, AEventId: TDragDropEvent) {.importc: "ToggleBox_SetOnDragDrop", dynlib: dllname.}
proc ToggleBox_SetOnDragOver*(AObj: pointer, AEventId: TDragOverEvent) {.importc: "ToggleBox_SetOnDragOver", dynlib: dllname.}
proc ToggleBox_SetOnEndDrag*(AObj: pointer, AEventId: TEndDragEvent) {.importc: "ToggleBox_SetOnEndDrag", dynlib: dllname.}
proc ToggleBox_SetOnEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToggleBox_SetOnEnter", dynlib: dllname.}
proc ToggleBox_SetOnExit*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToggleBox_SetOnExit", dynlib: dllname.}
proc ToggleBox_SetOnMouseDown*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ToggleBox_SetOnMouseDown", dynlib: dllname.}
proc ToggleBox_SetOnMouseEnter*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToggleBox_SetOnMouseEnter", dynlib: dllname.}
proc ToggleBox_SetOnMouseLeave*(AObj: pointer, AEventId: TNotifyEvent) {.importc: "ToggleBox_SetOnMouseLeave", dynlib: dllname.}
proc ToggleBox_SetOnMouseMove*(AObj: pointer, AEventId: TMouseMoveEvent) {.importc: "ToggleBox_SetOnMouseMove", dynlib: dllname.}
proc ToggleBox_SetOnMouseUp*(AObj: pointer, AEventId: TMouseEvent) {.importc: "ToggleBox_SetOnMouseUp", dynlib: dllname.}
proc ToggleBox_SetOnMouseWheel*(AObj: pointer, AEventId: TMouseWheelEvent) {.importc: "ToggleBox_SetOnMouseWheel", dynlib: dllname.}
proc ToggleBox_SetOnMouseWheelDown*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "ToggleBox_SetOnMouseWheelDown", dynlib: dllname.}
proc ToggleBox_SetOnMouseWheelUp*(AObj: pointer, AEventId: TMouseWheelUpDownEvent) {.importc: "ToggleBox_SetOnMouseWheelUp", dynlib: dllname.}
proc ToggleBox_GetParentDoubleBuffered*(AObj: pointer): bool {.importc: "ToggleBox_GetParentDoubleBuffered", dynlib: dllname.}
proc ToggleBox_SetParentDoubleBuffered*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetParentDoubleBuffered", dynlib: dllname.}
proc ToggleBox_GetParentFont*(AObj: pointer): bool {.importc: "ToggleBox_GetParentFont", dynlib: dllname.}
proc ToggleBox_SetParentFont*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetParentFont", dynlib: dllname.}
proc ToggleBox_GetParentShowHint*(AObj: pointer): bool {.importc: "ToggleBox_GetParentShowHint", dynlib: dllname.}
proc ToggleBox_SetParentShowHint*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetParentShowHint", dynlib: dllname.}
proc ToggleBox_GetPopupMenu*(AObj: pointer): pointer {.importc: "ToggleBox_GetPopupMenu", dynlib: dllname.}
proc ToggleBox_SetPopupMenu*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetPopupMenu", dynlib: dllname.}
proc ToggleBox_GetShowHint*(AObj: pointer): bool {.importc: "ToggleBox_GetShowHint", dynlib: dllname.}
proc ToggleBox_SetShowHint*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetShowHint", dynlib: dllname.}
proc ToggleBox_GetState*(AObj: pointer): TCheckBoxState {.importc: "ToggleBox_GetState", dynlib: dllname.}
proc ToggleBox_SetState*(AObj: pointer, AValue: TCheckBoxState) {.importc: "ToggleBox_SetState", dynlib: dllname.}
proc ToggleBox_GetTabOrder*(AObj: pointer): TTabOrder {.importc: "ToggleBox_GetTabOrder", dynlib: dllname.}
proc ToggleBox_SetTabOrder*(AObj: pointer, AValue: TTabOrder) {.importc: "ToggleBox_SetTabOrder", dynlib: dllname.}
proc ToggleBox_GetTabStop*(AObj: pointer): bool {.importc: "ToggleBox_GetTabStop", dynlib: dllname.}
proc ToggleBox_SetTabStop*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetTabStop", dynlib: dllname.}
proc ToggleBox_GetVisible*(AObj: pointer): bool {.importc: "ToggleBox_GetVisible", dynlib: dllname.}
proc ToggleBox_SetVisible*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetVisible", dynlib: dllname.}
proc ToggleBox_GetDockClientCount*(AObj: pointer): int32 {.importc: "ToggleBox_GetDockClientCount", dynlib: dllname.}
proc ToggleBox_GetDockSite*(AObj: pointer): bool {.importc: "ToggleBox_GetDockSite", dynlib: dllname.}
proc ToggleBox_SetDockSite*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetDockSite", dynlib: dllname.}
proc ToggleBox_GetMouseInClient*(AObj: pointer): bool {.importc: "ToggleBox_GetMouseInClient", dynlib: dllname.}
proc ToggleBox_GetVisibleDockClientCount*(AObj: pointer): int32 {.importc: "ToggleBox_GetVisibleDockClientCount", dynlib: dllname.}
proc ToggleBox_GetBrush*(AObj: pointer): pointer {.importc: "ToggleBox_GetBrush", dynlib: dllname.}
proc ToggleBox_GetControlCount*(AObj: pointer): int32 {.importc: "ToggleBox_GetControlCount", dynlib: dllname.}
proc ToggleBox_GetHandle*(AObj: pointer): HWND {.importc: "ToggleBox_GetHandle", dynlib: dllname.}
proc ToggleBox_GetParentWindow*(AObj: pointer): HWND {.importc: "ToggleBox_GetParentWindow", dynlib: dllname.}
proc ToggleBox_SetParentWindow*(AObj: pointer, AValue: HWND) {.importc: "ToggleBox_SetParentWindow", dynlib: dllname.}
proc ToggleBox_GetShowing*(AObj: pointer): bool {.importc: "ToggleBox_GetShowing", dynlib: dllname.}
proc ToggleBox_GetUseDockManager*(AObj: pointer): bool {.importc: "ToggleBox_GetUseDockManager", dynlib: dllname.}
proc ToggleBox_SetUseDockManager*(AObj: pointer, AValue: bool) {.importc: "ToggleBox_SetUseDockManager", dynlib: dllname.}
proc ToggleBox_GetAction*(AObj: pointer): pointer {.importc: "ToggleBox_GetAction", dynlib: dllname.}
proc ToggleBox_SetAction*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetAction", dynlib: dllname.}
proc ToggleBox_GetBiDiMode*(AObj: pointer): TBiDiMode {.importc: "ToggleBox_GetBiDiMode", dynlib: dllname.}
proc ToggleBox_SetBiDiMode*(AObj: pointer, AValue: TBiDiMode) {.importc: "ToggleBox_SetBiDiMode", dynlib: dllname.}
proc ToggleBox_GetBoundsRect*(AObj: pointer, Result: var TRect) {.importc: "ToggleBox_GetBoundsRect", dynlib: dllname.}
proc ToggleBox_SetBoundsRect*(AObj: pointer, AValue: var TRect) {.importc: "ToggleBox_SetBoundsRect", dynlib: dllname.}
proc ToggleBox_GetClientHeight*(AObj: pointer): int32 {.importc: "ToggleBox_GetClientHeight", dynlib: dllname.}
proc ToggleBox_SetClientHeight*(AObj: pointer, AValue: int32) {.importc: "ToggleBox_SetClientHeight", dynlib: dllname.}
proc ToggleBox_GetClientOrigin*(AObj: pointer, Result: var TPoint) {.importc: "ToggleBox_GetClientOrigin", dynlib: dllname.}
proc ToggleBox_GetClientRect*(AObj: pointer, Result: var TRect) {.importc: "ToggleBox_GetClientRect", dynlib: dllname.}
proc ToggleBox_GetClientWidth*(AObj: pointer): int32 {.importc: "ToggleBox_GetClientWidth", dynlib: dllname.}
proc ToggleBox_SetClientWidth*(AObj: pointer, AValue: int32) {.importc: "ToggleBox_SetClientWidth", dynlib: dllname.}
proc ToggleBox_GetControlState*(AObj: pointer): TControlState {.importc: "ToggleBox_GetControlState", dynlib: dllname.}
proc ToggleBox_SetControlState*(AObj: pointer, AValue: TControlState) {.importc: "ToggleBox_SetControlState", dynlib: dllname.}
proc ToggleBox_GetControlStyle*(AObj: pointer): TControlStyle {.importc: "ToggleBox_GetControlStyle", dynlib: dllname.}
proc ToggleBox_SetControlStyle*(AObj: pointer, AValue: TControlStyle) {.importc: "ToggleBox_SetControlStyle", dynlib: dllname.}
proc ToggleBox_GetFloating*(AObj: pointer): bool {.importc: "ToggleBox_GetFloating", dynlib: dllname.}
proc ToggleBox_GetParent*(AObj: pointer): pointer {.importc: "ToggleBox_GetParent", dynlib: dllname.}
proc ToggleBox_SetParent*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetParent", dynlib: dllname.}
proc ToggleBox_GetLeft*(AObj: pointer): int32 {.importc: "ToggleBox_GetLeft", dynlib: dllname.}
proc ToggleBox_SetLeft*(AObj: pointer, AValue: int32) {.importc: "ToggleBox_SetLeft", dynlib: dllname.}
proc ToggleBox_GetTop*(AObj: pointer): int32 {.importc: "ToggleBox_GetTop", dynlib: dllname.}
proc ToggleBox_SetTop*(AObj: pointer, AValue: int32) {.importc: "ToggleBox_SetTop", dynlib: dllname.}
proc ToggleBox_GetWidth*(AObj: pointer): int32 {.importc: "ToggleBox_GetWidth", dynlib: dllname.}
proc ToggleBox_SetWidth*(AObj: pointer, AValue: int32) {.importc: "ToggleBox_SetWidth", dynlib: dllname.}
proc ToggleBox_GetHeight*(AObj: pointer): int32 {.importc: "ToggleBox_GetHeight", dynlib: dllname.}
proc ToggleBox_SetHeight*(AObj: pointer, AValue: int32) {.importc: "ToggleBox_SetHeight", dynlib: dllname.}
proc ToggleBox_GetCursor*(AObj: pointer): TCursor {.importc: "ToggleBox_GetCursor", dynlib: dllname.}
proc ToggleBox_SetCursor*(AObj: pointer, AValue: TCursor) {.importc: "ToggleBox_SetCursor", dynlib: dllname.}
proc ToggleBox_GetComponentCount*(AObj: pointer): int32 {.importc: "ToggleBox_GetComponentCount", dynlib: dllname.}
proc ToggleBox_GetComponentIndex*(AObj: pointer): int32 {.importc: "ToggleBox_GetComponentIndex", dynlib: dllname.}
proc ToggleBox_SetComponentIndex*(AObj: pointer, AValue: int32) {.importc: "ToggleBox_SetComponentIndex", dynlib: dllname.}
proc ToggleBox_GetOwner*(AObj: pointer): pointer {.importc: "ToggleBox_GetOwner", dynlib: dllname.}
proc ToggleBox_GetName*(AObj: pointer): cstring {.importc: "ToggleBox_GetName", dynlib: dllname.}
proc ToggleBox_SetName*(AObj: pointer, AValue: cstring) {.importc: "ToggleBox_SetName", dynlib: dllname.}
proc ToggleBox_GetTag*(AObj: pointer): int {.importc: "ToggleBox_GetTag", dynlib: dllname.}
proc ToggleBox_SetTag*(AObj: pointer, AValue: int) {.importc: "ToggleBox_SetTag", dynlib: dllname.}
proc ToggleBox_GetAnchorSideLeft*(AObj: pointer): pointer {.importc: "ToggleBox_GetAnchorSideLeft", dynlib: dllname.}
proc ToggleBox_SetAnchorSideLeft*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetAnchorSideLeft", dynlib: dllname.}
proc ToggleBox_GetAnchorSideTop*(AObj: pointer): pointer {.importc: "ToggleBox_GetAnchorSideTop", dynlib: dllname.}
proc ToggleBox_SetAnchorSideTop*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetAnchorSideTop", dynlib: dllname.}
proc ToggleBox_GetAnchorSideRight*(AObj: pointer): pointer {.importc: "ToggleBox_GetAnchorSideRight", dynlib: dllname.}
proc ToggleBox_SetAnchorSideRight*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetAnchorSideRight", dynlib: dllname.}
proc ToggleBox_GetAnchorSideBottom*(AObj: pointer): pointer {.importc: "ToggleBox_GetAnchorSideBottom", dynlib: dllname.}
proc ToggleBox_SetAnchorSideBottom*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetAnchorSideBottom", dynlib: dllname.}
proc ToggleBox_GetChildSizing*(AObj: pointer): pointer {.importc: "ToggleBox_GetChildSizing", dynlib: dllname.}
proc ToggleBox_SetChildSizing*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetChildSizing", dynlib: dllname.}
proc ToggleBox_GetBorderSpacing*(AObj: pointer): pointer {.importc: "ToggleBox_GetBorderSpacing", dynlib: dllname.}
proc ToggleBox_SetBorderSpacing*(AObj: pointer, AValue: pointer) {.importc: "ToggleBox_SetBorderSpacing", dynlib: dllname.}
proc ToggleBox_GetDockClients*(AObj: pointer, Index: int32): pointer {.importc: "ToggleBox_GetDockClients", dynlib: dllname.}
proc ToggleBox_GetControls*(AObj: pointer, Index: int32): pointer {.importc: "ToggleBox_GetControls", dynlib: dllname.}
proc ToggleBox_GetComponents*(AObj: pointer, AIndex: int32): pointer {.importc: "ToggleBox_GetComponents", dynlib: dllname.}
proc ToggleBox_GetAnchorSide*(AObj: pointer, AKind: TAnchorKind): pointer {.importc: "ToggleBox_GetAnchorSide", dynlib: dllname.}
proc ToggleBox_StaticClassType*(): TClass {.importc: "ToggleBox_StaticClassType", dynlib: dllname.}
# ----------------- TGridColumnTitle ----------------------
proc GridColumnTitle_Assign*(AObj: pointer, Source: pointer) {.importc: "GridColumnTitle_Assign", dynlib: dllname.}
proc GridColumnTitle_FillTitleDefaultFont*(AObj: pointer) {.importc: "GridColumnTitle_FillTitleDefaultFont", dynlib: dllname.}
proc GridColumnTitle_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "GridColumnTitle_FixDesignFontsPPI", dynlib: dllname.}
proc GridColumnTitle_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "GridColumnTitle_ScaleFontsPPI", dynlib: dllname.}
proc GridColumnTitle_IsDefault*(AObj: pointer): bool {.importc: "GridColumnTitle_IsDefault", dynlib: dllname.}
proc GridColumnTitle_GetNamePath*(AObj: pointer): cstring {.importc: "GridColumnTitle_GetNamePath", dynlib: dllname.}
proc GridColumnTitle_ClassType*(AObj: pointer): TClass {.importc: "GridColumnTitle_ClassType", dynlib: dllname.}
proc GridColumnTitle_ClassName*(AObj: pointer): cstring {.importc: "GridColumnTitle_ClassName", dynlib: dllname.}
proc GridColumnTitle_InstanceSize*(AObj: pointer): int32 {.importc: "GridColumnTitle_InstanceSize", dynlib: dllname.}
proc GridColumnTitle_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "GridColumnTitle_InheritsFrom", dynlib: dllname.}
proc GridColumnTitle_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "GridColumnTitle_Equals", dynlib: dllname.}
proc GridColumnTitle_GetHashCode*(AObj: pointer): int32 {.importc: "GridColumnTitle_GetHashCode", dynlib: dllname.}
proc GridColumnTitle_ToString*(AObj: pointer): cstring {.importc: "GridColumnTitle_ToString", dynlib: dllname.}
proc GridColumnTitle_GetColumn*(AObj: pointer): pointer {.importc: "GridColumnTitle_GetColumn", dynlib: dllname.}
proc GridColumnTitle_GetAlignment*(AObj: pointer): TAlignment {.importc: "GridColumnTitle_GetAlignment", dynlib: dllname.}
proc GridColumnTitle_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "GridColumnTitle_SetAlignment", dynlib: dllname.}
proc GridColumnTitle_GetCaption*(AObj: pointer): cstring {.importc: "GridColumnTitle_GetCaption", dynlib: dllname.}
proc GridColumnTitle_SetCaption*(AObj: pointer, AValue: cstring) {.importc: "GridColumnTitle_SetCaption", dynlib: dllname.}
proc GridColumnTitle_GetColor*(AObj: pointer): TColor {.importc: "GridColumnTitle_GetColor", dynlib: dllname.}
proc GridColumnTitle_SetColor*(AObj: pointer, AValue: TColor) {.importc: "GridColumnTitle_SetColor", dynlib: dllname.}
proc GridColumnTitle_GetFont*(AObj: pointer): pointer {.importc: "GridColumnTitle_GetFont", dynlib: dllname.}
proc GridColumnTitle_SetFont*(AObj: pointer, AValue: pointer) {.importc: "GridColumnTitle_SetFont", dynlib: dllname.}
proc GridColumnTitle_GetImageIndex*(AObj: pointer): int32 {.importc: "GridColumnTitle_GetImageIndex", dynlib: dllname.}
proc GridColumnTitle_SetImageIndex*(AObj: pointer, AValue: int32) {.importc: "GridColumnTitle_SetImageIndex", dynlib: dllname.}
proc GridColumnTitle_GetImageLayout*(AObj: pointer): TButtonLayout {.importc: "GridColumnTitle_GetImageLayout", dynlib: dllname.}
proc GridColumnTitle_SetImageLayout*(AObj: pointer, AValue: TButtonLayout) {.importc: "GridColumnTitle_SetImageLayout", dynlib: dllname.}
proc GridColumnTitle_GetLayout*(AObj: pointer): TTextLayout {.importc: "GridColumnTitle_GetLayout", dynlib: dllname.}
proc GridColumnTitle_SetLayout*(AObj: pointer, AValue: TTextLayout) {.importc: "GridColumnTitle_SetLayout", dynlib: dllname.}
proc GridColumnTitle_GetMultiLine*(AObj: pointer): bool {.importc: "GridColumnTitle_GetMultiLine", dynlib: dllname.}
proc GridColumnTitle_SetMultiLine*(AObj: pointer, AValue: bool) {.importc: "GridColumnTitle_SetMultiLine", dynlib: dllname.}
proc GridColumnTitle_GetPrefixOption*(AObj: pointer): TPrefixOption {.importc: "GridColumnTitle_GetPrefixOption", dynlib: dllname.}
proc GridColumnTitle_SetPrefixOption*(AObj: pointer, AValue: TPrefixOption) {.importc: "GridColumnTitle_SetPrefixOption", dynlib: dllname.}
proc GridColumnTitle_StaticClassType*(): TClass {.importc: "GridColumnTitle_StaticClassType", dynlib: dllname.}
# ----------------- TGridColumn ----------------------
proc GridColumn_Assign*(AObj: pointer, Source: pointer) {.importc: "GridColumn_Assign", dynlib: dllname.}
proc GridColumn_FixDesignFontsPPI*(AObj: pointer, ADesignTimePPI: int32) {.importc: "GridColumn_FixDesignFontsPPI", dynlib: dllname.}
proc GridColumn_ScaleFontsPPI*(AObj: pointer, AToPPI: int32, AProportion: var float64) {.importc: "GridColumn_ScaleFontsPPI", dynlib: dllname.}
proc GridColumn_IsDefault*(AObj: pointer): bool {.importc: "GridColumn_IsDefault", dynlib: dllname.}
proc GridColumn_GetNamePath*(AObj: pointer): cstring {.importc: "GridColumn_GetNamePath", dynlib: dllname.}
proc GridColumn_ClassType*(AObj: pointer): TClass {.importc: "GridColumn_ClassType", dynlib: dllname.}
proc GridColumn_ClassName*(AObj: pointer): cstring {.importc: "GridColumn_ClassName", dynlib: dllname.}
proc GridColumn_InstanceSize*(AObj: pointer): int32 {.importc: "GridColumn_InstanceSize", dynlib: dllname.}
proc GridColumn_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "GridColumn_InheritsFrom", dynlib: dllname.}
proc GridColumn_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "GridColumn_Equals", dynlib: dllname.}
proc GridColumn_GetHashCode*(AObj: pointer): int32 {.importc: "GridColumn_GetHashCode", dynlib: dllname.}
proc GridColumn_ToString*(AObj: pointer): cstring {.importc: "GridColumn_ToString", dynlib: dllname.}
proc GridColumn_GetGrid*(AObj: pointer): pointer {.importc: "GridColumn_GetGrid", dynlib: dllname.}
proc GridColumn_GetDefaultWidth*(AObj: pointer): int32 {.importc: "GridColumn_GetDefaultWidth", dynlib: dllname.}
proc GridColumn_GetStoredWidth*(AObj: pointer): int32 {.importc: "GridColumn_GetStoredWidth", dynlib: dllname.}
proc GridColumn_GetWidthChanged*(AObj: pointer): bool {.importc: "GridColumn_GetWidthChanged", dynlib: dllname.}
proc GridColumn_GetAlignment*(AObj: pointer): TAlignment {.importc: "GridColumn_GetAlignment", dynlib: dllname.}
proc GridColumn_SetAlignment*(AObj: pointer, AValue: TAlignment) {.importc: "GridColumn_SetAlignment", dynlib: dllname.}
proc GridColumn_GetButtonStyle*(AObj: pointer): TColumnButtonStyle {.importc: "GridColumn_GetButtonStyle", dynlib: dllname.}
proc GridColumn_SetButtonStyle*(AObj: pointer, AValue: TColumnButtonStyle) {.importc: "GridColumn_SetButtonStyle", dynlib: dllname.}
proc GridColumn_GetColor*(AObj: pointer): TColor {.importc: "GridColumn_GetColor", dynlib: dllname.}
proc GridColumn_SetColor*(AObj: pointer, AValue: TColor) {.importc: "GridColumn_SetColor", dynlib: dllname.}
proc GridColumn_GetDropDownRows*(AObj: pointer): int32 {.importc: "GridColumn_GetDropDownRows", dynlib: dllname.}
proc GridColumn_SetDropDownRows*(AObj: pointer, AValue: int32) {.importc: "GridColumn_SetDropDownRows", dynlib: dllname.}
proc GridColumn_GetExpanded*(AObj: pointer): bool {.importc: "GridColumn_GetExpanded", dynlib: dllname.}
proc GridColumn_SetExpanded*(AObj: pointer, AValue: bool) {.importc: "GridColumn_SetExpanded", dynlib: dllname.}
proc GridColumn_GetFont*(AObj: pointer): pointer {.importc: "GridColumn_GetFont", dynlib: dllname.}
proc GridColumn_SetFont*(AObj: pointer, AValue: pointer) {.importc: "GridColumn_SetFont", dynlib: dllname.}
proc GridColumn_GetLayout*(AObj: pointer): TTextLayout {.importc: "GridColumn_GetLayout", dynlib: dllname.}
proc GridColumn_SetLayout*(AObj: pointer, AValue: TTextLayout) {.importc: "GridColumn_SetLayout", dynlib: dllname.}
proc GridColumn_GetMinSize*(AObj: pointer): int32 {.importc: "GridColumn_GetMinSize", dynlib: dllname.}
proc GridColumn_SetMinSize*(AObj: pointer, AValue: int32) {.importc: "GridColumn_SetMinSize", dynlib: dllname.}
proc GridColumn_GetMaxSize*(AObj: pointer): int32 {.importc: "GridColumn_GetMaxSize", dynlib: dllname.}
proc GridColumn_SetMaxSize*(AObj: pointer, AValue: int32) {.importc: "GridColumn_SetMaxSize", dynlib: dllname.}
proc GridColumn_GetPickList*(AObj: pointer): pointer {.importc: "GridColumn_GetPickList", dynlib: dllname.}
proc GridColumn_SetPickList*(AObj: pointer, AValue: pointer) {.importc: "GridColumn_SetPickList", dynlib: dllname.}
proc GridColumn_GetReadOnly*(AObj: pointer): bool {.importc: "GridColumn_GetReadOnly", dynlib: dllname.}
proc GridColumn_SetReadOnly*(AObj: pointer, AValue: bool) {.importc: "GridColumn_SetReadOnly", dynlib: dllname.}
proc GridColumn_GetSizePriority*(AObj: pointer): int32 {.importc: "GridColumn_GetSizePriority", dynlib: dllname.}
proc GridColumn_SetSizePriority*(AObj: pointer, AValue: int32) {.importc: "GridColumn_SetSizePriority", dynlib: dllname.}
proc GridColumn_GetTag*(AObj: pointer): int {.importc: "GridColumn_GetTag", dynlib: dllname.}
proc GridColumn_SetTag*(AObj: pointer, AValue: int) {.importc: "GridColumn_SetTag", dynlib: dllname.}
proc GridColumn_GetTitle*(AObj: pointer): pointer {.importc: "GridColumn_GetTitle", dynlib: dllname.}
proc GridColumn_SetTitle*(AObj: pointer, AValue: pointer) {.importc: "GridColumn_SetTitle", dynlib: dllname.}
proc GridColumn_GetWidth*(AObj: pointer): int32 {.importc: "GridColumn_GetWidth", dynlib: dllname.}
proc GridColumn_SetWidth*(AObj: pointer, AValue: int32) {.importc: "GridColumn_SetWidth", dynlib: dllname.}
proc GridColumn_GetVisible*(AObj: pointer): bool {.importc: "GridColumn_GetVisible", dynlib: dllname.}
proc GridColumn_SetVisible*(AObj: pointer, AValue: bool) {.importc: "GridColumn_SetVisible", dynlib: dllname.}
proc GridColumn_GetValueChecked*(AObj: pointer): cstring {.importc: "GridColumn_GetValueChecked", dynlib: dllname.}
proc GridColumn_SetValueChecked*(AObj: pointer, AValue: cstring) {.importc: "GridColumn_SetValueChecked", dynlib: dllname.}
proc GridColumn_GetValueUnchecked*(AObj: pointer): cstring {.importc: "GridColumn_GetValueUnchecked", dynlib: dllname.}
proc GridColumn_SetValueUnchecked*(AObj: pointer, AValue: cstring) {.importc: "GridColumn_SetValueUnchecked", dynlib: dllname.}
proc GridColumn_GetCollection*(AObj: pointer): pointer {.importc: "GridColumn_GetCollection", dynlib: dllname.}
proc GridColumn_SetCollection*(AObj: pointer, AValue: pointer) {.importc: "GridColumn_SetCollection", dynlib: dllname.}
proc GridColumn_GetIndex*(AObj: pointer): int32 {.importc: "GridColumn_GetIndex", dynlib: dllname.}
proc GridColumn_SetIndex*(AObj: pointer, AValue: int32) {.importc: "GridColumn_SetIndex", dynlib: dllname.}
proc GridColumn_GetDisplayName*(AObj: pointer): cstring {.importc: "GridColumn_GetDisplayName", dynlib: dllname.}
proc GridColumn_SetDisplayName*(AObj: pointer, AValue: cstring) {.importc: "GridColumn_SetDisplayName", dynlib: dllname.}
proc GridColumn_StaticClassType*(): TClass {.importc: "GridColumn_StaticClassType", dynlib: dllname.}
# ----------------- TGridColumns ----------------------
proc GridColumns_Add*(AObj: pointer): pointer {.importc: "GridColumns_Add", dynlib: dllname.}
proc GridColumns_Clear*(AObj: pointer) {.importc: "GridColumns_Clear", dynlib: dllname.}
proc GridColumns_RealIndex*(AObj: pointer, Index: int32): int32 {.importc: "GridColumns_RealIndex", dynlib: dllname.}
proc GridColumns_IndexOf*(AObj: pointer, Column: pointer): int32 {.importc: "GridColumns_IndexOf", dynlib: dllname.}
proc GridColumns_IsDefault*(AObj: pointer): bool {.importc: "GridColumns_IsDefault", dynlib: dllname.}
proc GridColumns_HasIndex*(AObj: pointer, Index: int32): bool {.importc: "GridColumns_HasIndex", dynlib: dllname.}
proc GridColumns_Owner*(AObj: pointer): pointer {.importc: "GridColumns_Owner", dynlib: dllname.}
proc GridColumns_Assign*(AObj: pointer, Source: pointer) {.importc: "GridColumns_Assign", dynlib: dllname.}
proc GridColumns_BeginUpdate*(AObj: pointer) {.importc: "GridColumns_BeginUpdate", dynlib: dllname.}
proc GridColumns_Delete*(AObj: pointer, Index: int32) {.importc: "GridColumns_Delete", dynlib: dllname.}
proc GridColumns_EndUpdate*(AObj: pointer) {.importc: "GridColumns_EndUpdate", dynlib: dllname.}
proc GridColumns_FindItemID*(AObj: pointer, ID: int32): pointer {.importc: "GridColumns_FindItemID", dynlib: dllname.}
proc GridColumns_GetNamePath*(AObj: pointer): cstring {.importc: "GridColumns_GetNamePath", dynlib: dllname.}
proc GridColumns_Insert*(AObj: pointer, Index: int32): pointer {.importc: "GridColumns_Insert", dynlib: dllname.}
proc GridColumns_ClassType*(AObj: pointer): TClass {.importc: "GridColumns_ClassType", dynlib: dllname.}
proc GridColumns_ClassName*(AObj: pointer): cstring {.importc: "GridColumns_ClassName", dynlib: dllname.}
proc GridColumns_InstanceSize*(AObj: pointer): int32 {.importc: "GridColumns_InstanceSize", dynlib: dllname.}
proc GridColumns_InheritsFrom*(AObj: pointer, AClass: TClass): bool {.importc: "GridColumns_InheritsFrom", dynlib: dllname.}
proc GridColumns_Equals*(AObj: pointer, Obj: pointer): bool {.importc: "GridColumns_Equals", dynlib: dllname.}
proc GridColumns_GetHashCode*(AObj: pointer): int32 {.importc: "GridColumns_GetHashCode", dynlib: dllname.}
proc GridColumns_ToString*(AObj: pointer): cstring {.importc: "GridColumns_ToString", dynlib: dllname.}
proc GridColumns_GetGrid*(AObj: pointer): pointer {.importc: "GridColumns_GetGrid", dynlib: dllname.}
proc GridColumns_GetVisibleCount*(AObj: pointer): int32 {.importc: "GridColumns_GetVisibleCount", dynlib: dllname.}
proc GridColumns_GetEnabled*(AObj: pointer): bool {.importc: "GridColumns_GetEnabled", dynlib: dllname.}
proc GridColumns_GetCount*(AObj: pointer): int32 {.importc: "GridColumns_GetCount", dynlib: dllname.}
proc GridColumns_GetItems*(AObj: pointer, Index: int32): pointer {.importc: "GridColumns_GetItems", dynlib: dllname.}
proc GridColumns_SetItems*(AObj: pointer, Index: int32, AValue: pointer) {.importc: "GridColumns_SetItems", dynlib: dllname.}
proc GridColumns_StaticClassType*(): TClass {.importc: "GridColumns_StaticClassType", dynlib: dllname.}

# 开始 

# 普通事件回调函数
proc doEventCallbackProc(f: pointer, args: pointer, argCount: int32): uint =

  # args为一个数组，长度为argCount, argCount最大为12
  var val = proc(index: int): pointer {.nimcall.} =
    return cast[pointer](cast[ptr uint](cast[uint](args) + cast[uint](index * sizeof(int)))[])

  # echo("doEventCallbackProc: f: ", cast[uint](f), ", args: ",cast[uint](args), ", count: ", argCount)

  case argCount
  of 0: 
    cast[proc(){.nimcall.}](f)()
  of 1:
    cast[proc(a1:pointer) {.nimcall.} ](f)(val(0))
  of 2:
    cast[proc(a1,a2:pointer) {.nimcall.} ](f)(val(0), val(1))
  of 3:
    cast[proc(a1,a2,a3:pointer) {.nimcall.} ](f)(val(0), val(1), val(2))
  of 4:
    cast[proc(a1,a2,a3,a4:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3))
  of 5:
    cast[proc(a1,a2,a3,a4,a5:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4))
  of 6:
    cast[proc(a1,a2,a3,a4,a5,a6:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4), val(5))
  of 7:
    cast[proc(a1,a2,a3,a4,a5,a6,a7:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4), val(5), val(6))
  of 8:
    cast[proc(a1,a2,a3,a4,a5,a6,a7,a8:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4), val(5), val(6), val(7))
  of 9:
    cast[proc(a1,a2,a3,a4,a5,a6,a7,a8,a9:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4), val(5), val(6), val(7), val(8))
  of 10:
    cast[proc(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4), val(5), val(6), val(7), val(8), val(9))
  of 11:
    cast[proc(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4), val(5), val(6), val(7), val(8), val(9), val(10))
  of 12:  
    cast[proc(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12:pointer) {.nimcall.} ](f)(val(0), val(1), val(2), val(3), val(4), val(5), val(6), val(7), val(8), val(9), val(10), val(11))
  else:
    echo("There are more than 12 parameters.")

  return 0

# 窗口消息专用回调
proc doMessageCallbackProc(f: pointer, msg: pointer): uint =
  # 这里要转发消息
  cast[proc(a1:pointer) {.nimcall.} ](f)(msg)
  return 0

# 线程同步专用回调
var
  threadSyncProc*: TThreadProc

proc doThreadSyncCallbackProc(): uint =
  if threadSyncProc != nil:
    threadSyncProc()
    threadSyncProc = nil
  return 0


var
  exceptionProc*: TExceptionEvent;

proc doHandlerExceptionCallbackProc(msg: cstring): uint =
  # 如果设置了全局的，则由全局的异常捕获，则不再直接抛出异常
  if exceptionProc != nil:
    exceptionProc(newException(Exception, $msg))
    return
  raise newException(Exception, $msg)

# set callback
SetEventCallback(cast[pointer](doEventCallbackProc))
SetMessageCallback(cast[pointer](doMessageCallbackProc))
SetThreadSyncCallback(cast[pointer](doThreadSyncCallbackProc))
SetExceptionHandlerCallback(cast[pointer](doHandlerExceptionCallbackProc))
